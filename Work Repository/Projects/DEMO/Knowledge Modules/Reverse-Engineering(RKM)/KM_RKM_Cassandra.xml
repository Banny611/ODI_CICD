<?xml version="1.0" encoding="UTF-8"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.09" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="IEL8mme6LkhBRYgHHUKIcVKykQDnt1WwXXPDI09HyRU=" keyVect="Y+BpwI68vNTVfrMxcEJq7Q==" exportKeySalt="155939e2-8fb4-4faa-a72e-7d8f6ba6bcdf" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String">null</Field>
	<Field name="DelegateClass" type="java.lang.String">null</Field>
	<Field name="DelegateScript" type="java.lang.String">null</Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:35.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3a93f959-4696-48e3-bc4f-c2c06a035b15]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String"><![CDATA[S]]></Field>
	<Field name="IndSuppSetBased" type="java.lang.String">null</Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String">null</Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[295]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[5902]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String">null</Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String"><![CDATA[CASSANDRA]]></Field>
	<Field name="KmTechno" type="java.lang.String">null</Field>
	<Field name="KmVersion" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:35.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String">null</Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[609719135]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String">null</Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String">null</Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[RKM Cassandra]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[KR]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f6fd1504-37b6-4338-814c-cc4e4a730063]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5902]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[COMPONENT NAME: RKM Cassandra
AUTHOR: Oracle

DESCRIPTION
	Reverse engineering Knowledge Module to retrieve the tables and columns from Cassandra. 

REQUIREMENTS
	- Cassandra JDBC driver (and required jars) must be installed into ODI Studio/ Agent 
	(Make sure that the connection test for the Cassandra DataServer works.)

BASIC CONFIGURATION
	- Import this knowledge module as global knowledge module or into one of your projects.
	- Create a model, and choose the reverse context as well as the knowledge module in the "reverse" tab.
	- Execute the reverse engineering and follow up the steps in the logs

LIMITATIONS
	The mask of tables to reverse must not be empty, and at least contain the '%' character.
	The tab Selective reverse cannot be used with this knowledge module.

]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Edit Command]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_TRT_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[HIVE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5903]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[GROOVY]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:35.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b6ada4d0-90c2-48de-bbf0-269f77718d16]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3272]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[295]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:35.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ab2bb506-b806-4291-b44e-3c9fd2c60802]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5903]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[/* Begin of RkmCassandra.java */

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintStream;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Formatter;
import java.util.Properties;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.util.logging.Level;

import com.sunopsis.dwg.snpreference.OdiRefLogger;


public class RkmCassandra {

    /**
     * class Log {
     * @return
     * Creates a log file and traces information
     */
    public static class Log {
        protected boolean printToScreen = false;
        protected boolean append = false;
        protected boolean useLog = true;
        protected FileOutputStream out; 
        protected PrintStream p;
        
        public Log( String pLogfilename, boolean pUselog, boolean pAppend, boolean pPrinttoscreen) throws FileNotFoundException {
            printToScreen = pPrinttoscreen;
            useLog = pUselog;

            out = new FileOutputStream(pLogfilename,pAppend);
            p = new PrintStream( out );
        }

        public void log (Level level, String rec) {
            if (useLog) {
                String l = (new SimpleDateFormat("yyyy/MM/dd HH:mm:ss")).format(new Date()) + " - " + rec;
                p.println( l );
                p.flush();
                try {
                    out.flush();
                } catch (IOException e) {
                    e.printStackTrace();
                }
                if (printToScreen) { System.out.println( l ); };
            }
        }
        public void format(String pFormat, Object... args) {
            //record( String.format( pFormat, args) );
        }
    }


    // Needed only for Eclipse execution
    /*
    public static class OdiKMException extends RuntimeException {
    	OdiKMException ( String s1, String s2 ) {
    	}
    }
    */
    

    // Hive data type driver constants
    protected static final String CQL_DATATYPE_ASCII    = "ascii";
    protected static final String CQL_DATATYPE_BIGINT   = "bigint";
    protected static final String CQL_DATATYPE_BLOB     = "blob";
    protected static final String CQL_DATATYPE_BOOLEAN  = "boolean";
    protected static final String CQL_DATATYPE_COUNTER  = "counter";   
    protected static final String CQL_DATATYPE_DECIMAL  = "decimal";
    protected static final String CQL_DATATYPE_DOUBLE   = "double";
    protected static final String CQL_DATATYPE_FLOAT    = "float";
    protected static final String CQL_DATATYPE_INET     = "inet";
    protected static final String CQL_DATATYPE_INT      = "int";
    protected static final String CQL_DATATYPE_TEXT     = "text";
    protected static final String CQL_DATATYPE_TIMESTAMP= "timestamp";
    protected static final String CQL_DATATYPE_TIMEUUID = "timeuuid";
    protected static final String CQL_DATATYPE_UUID     = "uuid";
    protected static final String CQL_DATATYPE_VARCHAR  = "varchar";
    protected static final String CQL_DATATYPE_VARINT   = "varint";

    protected static final String CQL_DATATYPE_LIST     = "list";
    protected static final String CQL_DATATYPE_SET      = "set";
    protected static final String CQL_DATATYPE_MAP      = "map";
    protected static final String CQL_DATATYPE_TUPLE    = "tuple";    
    
    // SQL commands
    protected static final String SQL_INSERT_TABLE     = "insert into SNP_REV_TABLE   (MOD_GUID,TABLE_NAME,RES_NAME,TABLE_ALIAS,TABLE_DESC_C,IND_SHOW,TABLE_TYPE) values (?,?,?,?,?,?,?)";
    protected static final String SQL_INSERT_PK        = "insert into SNP_REV_KEY     (MOD_GUID,TABLE_NAME,KEY_NAME,CONS_TYPE,IND_ACTIVE,CHECK_FLOW,CHECK_STAT) values (?,?,?,?,?,?,?)";
    protected static final String SQL_INSERT_PK_COL    = "insert into SNP_REV_KEY_COL (MOD_GUID,TABLE_NAME,KEY_NAME, COL_NAME, POS) values (?,?,?,?,?)";
    protected static final String SQL_INSERT_COLUMNS   = "insert into SNP_REV_COL     (MOD_GUID,TABLE_NAME,COL_NAME,COL_HEADING,COL_DESC_C,DT_DRIVER,POS,LONGC,SCALEC,BYTES,COL_MANDATORY,CHECK_FLOW,CHECK_STAT) values (?,?,?,?,?,?,?,?,?,?,?,?,?)";

    // Needed only for Eclipse execution
    //Log logger;
    OdiRefLogger logger;
    
    
    Connection srcCx, repoCx;
    String srcSchema;
    String srcTabFilter, aliasRemoveChars;
    String[] tabType;
    String iMod;
    private DatabaseMetaData metadata; 
    private ArrayList listOfPartitioningCols;
    private int numOfPartitionColumns;


    //Dummy constructor
    public RkmCassandra() {};

    /**
     * 
     *                     Constructor:
                            iMod:        I_MODEL/MODEL_GUID value for the current Model to be reversed
                            tabPattern:  Table pattern info [Filter, TableType, AliasRemoveChars]
                            srcConnect:  Source connection
                            repoConnect: Repository connection 

                    Example:
                            src     = odiRef.getJdbcConnection(SRC)
                            repo    = odiRef.getJdbcConnection(DEST)
                            imod    = 5111/"KLJoiu78hKFRAEJ8976"
                            tabpat  = ['%', 'T', 'TRG_']
                            rev     = SnpsReverse(imod, tabpat, src, repo, 1, logfile)
                            rev.startReverse(getcolumns=1, getkeys=1, getfks=1)
                            rev.endReverse()
     * @param iMod
     * @param tabPattern
     * @throws FileNotFoundException 
     */
    public void initialize(String piMod, String[] tabPattern, Connection pSrcConnect, String pSrcSchema, Connection pRepoConnect, Boolean pUseLog, String pLogFileName) throws FileNotFoundException {    
        logger = new Log(pLogFileName, pUseLog, false, true);
        initialize( piMod, tabPattern, pSrcConnect, pSrcSchema, pRepoConnect, logger );
    }

    public void initialize(String piMod, String[] tabPattern, Connection pSrcConnect, String pSrcSchema, Connection pRepoConnect, Object/*Logger*/ logger_in) throws FileNotFoundException {
        // Needed for Eclipse
        //logger = (Log)logger_in;
        logger = logger_in
        logger.log(Level.INFO, "Reverse Started.");
        iMod = piMod;

        // Do some basic tests
        if (pSrcConnect == null) 
            throw new OdiKMException("ODIKM-CASSANDRA-10000", "ODIKM-CASSANDRA-10000: Failure to open JDBC connection. Please test DataServer connection." );
        if (pRepoConnect == null) 
            throw new OdiKMException("ODIKM-CASSANDRA-10001", "ODIKM-CASSANDRA-10001: Failure to open Repository JDBC connection. Please test DataServer connection");

        // Connect to the source database:
        srcSchema  = (pSrcSchema.length() == 0)?null:pSrcSchema;
        srcCx = pSrcConnect;

        // Connect to the Repostory database:
        repoCx = pRepoConnect;

        // Table Pattern information:
        srcTabFilter = tabPattern[0];
        tabType = getTableType(tabPattern[1]);
        aliasRemoveChars = tabPattern[2];
        logger.log(Level.INFO, "Reverse Options: Model " + iMod);
        logger.log(Level.INFO, "                 Tabfilter " + srcTabFilter);
        logger.log(Level.INFO, "                 TabType " + tabType);

        // intialize source metadata
        try {
            metadata = srcCx.getMetaData();
            logger.log(Level.INFO, "Driver Name:    " + metadata.getDriverName().toString());
            logger.log(Level.INFO, "Driver Version: " + metadata.getDriverVersion());
        } catch (SQLException e) {
            logger.log(Level.INFO, "Exception when initializing source metadata");
            e.printStackTrace();
        }
    }

    /**
     * 
                    Public method to start a reverse
                    set getcolumns, getkeys and getfks flags according to
                    what you want to reverse
     * @param getcolumns
     * @param getpks
     * @throws SQLException 
     */
    public void startReverse() throws SQLException {
        getTables(true, true);
    }

    /**
     * 
                    Public Method that should be called to release all opened connections
     */
    public void endReverse(){
        /* Connection management is handled by ODI and should not be done inside RKM
                logger.log(Level.INFO, "Disconnecting from Source.");
                if (!srcCx.isClosed()) { srcCx.close() }
                logger.log(Level.INFO, "Disconnecting from Repository2");
                if (!self.repoCx.isClosed()) { repoCx.close() }
         */
        logger.log(Level.INFO, "Reverse End.");                
    }

    /*
     * Returns an empty string, if s is null;
     * Returns a string no longer than maxLen characters;
     */
    protected String restrictString( String s, int maxLen ) {
        String s2 = (s == null)?"":s;
        s2 = s2.substring(0, (s2.length()>maxLen)?maxLen:s2.length());
        return s2;
    }


    /**
     * 
                    Starts the Reverse of the Tables
                    retrieves columns, keys and fks according to the flags sent as parameters
     * @throws SQLException 
     */
    protected void getTables(boolean getcolumns, boolean getpks) throws SQLException {
        logger.log(Level.INFO, String.format("*** Getting %s List ***", tabType));
        ResultSet tlst = metadata.getTables(null, srcSchema, srcTabFilter, tabType);
        String sqltxt = SQL_INSERT_TABLE;
        PreparedStatement psTables = repoCx.prepareStatement(sqltxt);
        while (tlst.next()) {
            String tableCat   = tlst.getString("TABLE_CAT");
            String tableSchem = tlst.getString("TABLE_SCHEM");
            String tableName  = tlst.getString("TABLE_NAME");
            String remarks = tlst.getString("REMARKS");
            String ttype = tlst.getString("TABLE_TYPE");
            String tableType = getTableType2(ttype);
            String tableAlias = restrictString((aliasRemoveChars.length()>0)?tableName.replace(aliasRemoveChars, ""):tableName,128);

            logger.log(Level.INFO, String.format("Table: %s,%s,%s,%s,%s,%s,%s (%s)", iMod, tableName, tableName, tableAlias, remarks, "1", tableType,ttype));
            psTables.clearParameters();
            psTables.setString(1,iMod);
            psTables.setString(2,tableName);
            psTables.setString(3,tableName);
            psTables.setString(4,tableAlias);
            psTables.setString(5,remarks);
            psTables.setString(6,"1");
            psTables.setString(7,tableType);
            psTables.executeUpdate();

            // Get the columns
            if (getcolumns) getColumns(tableName);
            
            // Get PKs
            if (getpks) getPK(tableName);
        }

        psTables.close();
        tlst.close();
        repoCx.commit();
    }


    /**
     * Retrieves columns definition of a specified table
     * @throws SQLException 
     * @throws NumberFormatException 
     */
    protected void getColumns(String tableName) throws NumberFormatException, SQLException {
        logger.log(Level.INFO, "  *** Getting Columns for table: " + tableName);
        ResultSet clst = metadata.getColumns(null, srcSchema, tableName, "%");
        String sqltxt = SQL_INSERT_COLUMNS;
        PreparedStatement ps = repoCx.prepareStatement(sqltxt);

        while (clst.next()) {
            String colTable = clst.getString("TABLE_NAME");
            String colName  = clst.getString("COLUMN_NAME");
            int colPos      = clst.getInt("ORDINAL_POSITION");
            // coldt     = clst.getString("DATA_TYPE");
            String colTypeName = clst.getString("TYPE_NAME");
            colTypeName = (colTypeName.startsWith(CQL_DATATYPE_LIST))?CQL_DATATYPE_LIST:colTypeName; 
            colTypeName = (colTypeName.startsWith(CQL_DATATYPE_MAP))?CQL_DATATYPE_MAP:colTypeName; 
            colTypeName = (colTypeName.startsWith(CQL_DATATYPE_TUPLE))?CQL_DATATYPE_TUPLE:colTypeName; 
            colTypeName = (colTypeName.startsWith(CQL_DATATYPE_SET))?CQL_DATATYPE_SET:colTypeName;
            String colRemark = clst.getString("REMARKS");
            String colHeading = colName;
            int colSize = 0;
            int colDec  = 0;
            int colLen  = 0;
            int colNull = 0;
            String colIsnull = "0";

            logger.log(Level.INFO, String.format("   Column: %s, %s, %d, %s, %d, %d, %d, %s", colName, colTypeName, colPos, colSize, colDec, colLen, colNull, colIsnull));

            insertColumn(ps, colPos, colTable, colName, colTypeName, colRemark);
        }
        clst.close();
        ps.close();
        repoCx.commit();
    }

    private void insertColumn(PreparedStatement ps, int colPos,
            String colTable, String colName, String colTypeName,
            String colRemark) throws SQLException {

        // Insert column into SNP_REV_COLUMN
        ps.clearParameters();
        
        ps.setString(1, iMod);                                       // I_MOD
        ps.setString(2,restrictString(colTable,128));                // TABLE_NAME
        ps.setString(3,restrictString(colName,128));                 // COLUMN_NAME
        ps.setString(4,restrictString(colName,128));                 // COL_HEADING
        ps.setString(5,colRemark);                                   // COL_REMARK
        ps.setString(6,colTypeName);                                 // DT_DRIVER
        ps.setInt(7,colPos);                                         // POS
        if (colTypeName.toLowerCase().equals(CQL_DATATYPE_ASCII)) {        
            ps.setInt(8,Integer.MAX_VALUE);                          // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setInt(10,Integer.MAX_VALUE);                         // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_BIGINT)) {        
            ps.setInt(8,21);                                         // LONGC 
            ps.setInt(9, 0);                                         // SCALEC
            ps.setInt(10,8);                                         // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_BLOB)) {        
            ps.setInt(8,Integer.MAX_VALUE);                          // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setInt(10,Integer.MAX_VALUE);                         // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_BOOLEAN)) {        
            ps.setInt(8,1);                                          // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setInt(10,1);                                         // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_COUNTER)) {        
            ps.setInt(8,10);                                         // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setInt(10,8);                                         // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_DECIMAL)) {        
            ps.setInt(8,38);                                         // LONGC 
            ps.setInt(9,10);                                         // SCALEC
            ps.setInt(10,38);                                        // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_DOUBLE)) {        
            ps.setInt(8,10);                                         // LONGC 
            ps.setInt(9,10);                                         // SCALEC
            ps.setInt(10,8);                                         // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_FLOAT)) {        
            ps.setInt(8,10);                                         // LONGC 
            ps.setInt(9,10);                                         // SCALEC
            ps.setInt(10,4);                                         // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_INET)) {        
            ps.setInt(8,10);                                         // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setInt(10,10);                                        // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_INT)) {        
            ps.setInt(8,11);                                         // LONGC 
            ps.setInt(9, 0);                                         // SCALEC
            ps.setInt(10,4);                                         // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_TEXT)) {        
            ps.setInt(8,Integer.MAX_VALUE);                          // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setInt(10,Integer.MAX_VALUE);                         // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_TIMESTAMP)) {        
            ps.setInt(8,19);                                         // LONGC 
            ps.setInt(9,0);                                          // SCALEC
            ps.setInt(10,19);                                        // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_TIMEUUID)) {        
            ps.setInt(8,36);                                         // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setInt(10,36);                                        // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_UUID)) {        
            ps.setInt(8,36);                                         // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setInt(10,36);                                        // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_VARCHAR)) {        
            ps.setInt(8,Integer.MAX_VALUE);                          // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setInt(10,Integer.MAX_VALUE);                         // BYTES
        } else if (colTypeName.toLowerCase().equals(CQL_DATATYPE_VARINT)) {        
            ps.setInt(8,100);                                        // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setInt(10,100);                                       // BYTES
        } else { /* for complex data types (unsupported) */
            ps.setNull(8, java.sql.Types.INTEGER);                   // LONGC 
            ps.setNull(9, java.sql.Types.INTEGER);                   // SCALEC
            ps.setNull(10, java.sql.Types.INTEGER);                  // BYTES
        };
        ps.setString(11,"0");
        ps.setString(12,"0");
        ps.setString(13,"0");
        ps.executeUpdate();
    }

    /**
     * Retrieves PK definition of a specified table
     * @throws SQLException 
     * @throws NumberFormatException 
     */
    protected void getPK(String tableName) throws NumberFormatException, SQLException {
        logger.log(Level.INFO, "  *** Getting PK for table: " + tableName);
        ResultSet pklst = metadata.getPrimaryKeys(null, srcSchema, tableName);
        String keyName = "";
        String primaryKeyTable = "";
    
        // Insert PK columns
        String sqltxt = SQL_INSERT_PK_COL;
        PreparedStatement ps = repoCx.prepareStatement(sqltxt);
        while (pklst.next()) {
        	       keyName         = "PK_"+pklst.getString("TABLE_NAME");
                   primaryKeyTable = pklst.getString("TABLE_NAME");
            String primaryKeyCol   = pklst.getString("COLUMN_NAME");
            int    primaryKeySeq   = pklst.getInt("KEY_SEQ");
            logger.log(Level.INFO, String.format("   PK Col : %s, %s, %s, %d", primaryKeyTable, keyName, primaryKeyCol, primaryKeySeq));

            insertPKColumn(ps, primaryKeyTable, keyName, primaryKeyCol, primaryKeySeq);
        }
        pklst.close();
        ps.close();
        
        // Insert PK itself
        if (keyName.length()>0) {
            sqltxt = SQL_INSERT_PK;
            ps = repoCx.prepareStatement(sqltxt);        
            insertPK(ps, primaryKeyTable, keyName);
            ps.close();
        }
        
        repoCx.commit();    
    }

    
    private void insertPK(PreparedStatement ps, 
            String tableName, String keyName ) throws SQLException {
        // Insert column into SNP_REV_KEY
        ps.clearParameters();
        ps.setString(1, iMod);     // I_MOD
        ps.setString(2,restrictString(tableName,128));               // TABLE_NAME
        ps.setString(3,restrictString(keyName,128));                 // KEY_NAME
        ps.setString(4,"PK");
        ps.setString(5,"1");
        ps.setString(6,"1");
        ps.setString(7,"1");
        ps.executeUpdate();
    }


    private void insertPKColumn(PreparedStatement ps,
            String pkTable, String pkKey, String pkCol,
            int pos) throws SQLException {

        // Insert column into SNP_REV_PK_COL
        ps.clearParameters();

        ps.setString(1, iMod);     // I_MOD
        ps.setString(2,restrictString(pkTable,128));                // TABLE_NAME
        ps.setString(3,restrictString(pkKey,128));                  // KEY_NAME
        ps.setString(4,restrictString(pkCol,128));                  // COLUMN_NAME
        ps.setInt(5,pos);                                           // POS
        ps.executeUpdate();
    }


    /**
     * Returns the JDBC table Type according to the Sunopsis TYpe
     * @return
     */
    protected String[] getTableType(String tabPattern) {
        ArrayList<String> tableTypes = new ArrayList<String>();

        for (String snpstype : tabPattern.split(";")) {
            if (snpstype.equals("T"))       { tableTypes.add("TABLE"); 
                                              tableTypes.add("MANAGED_TABLE"); 
                                              tableTypes.add("EXTERNAL TABLE"); 
                                              tableTypes.add("EXTERNAL_TABLE"); 
                                            }
            else if (snpstype.equals("V"))  { tableTypes.add("VIEW");
                                              tableTypes.add("VIRTUAL_VIEW");
                                            }
            else if (snpstype.equals("ST")) tableTypes.add("SYSTEM TABLE");
            else if (snpstype.equals("AT")) tableTypes.add("ALIAS");
            else if (snpstype.equals("SY")) tableTypes.add("SYNONYM");
            else if (snpstype.equals("QE")) tableTypes.add("QUEUE");
            else if (snpstype.equals("GT")) tableTypes.add("GLOBAL TEMPORARY");
            else if (snpstype.equals("LT")) tableTypes.add("LOCAL TEMPORARY");
            else tableTypes.add("X");
        }
        String []strArray = new String[tableTypes.size()];
        int n = 0;
        for ( String t : tableTypes) {
        	strArray[n] = t;
        	n++;
        }
        return strArray;
        //return (String[]) tableType.toArray();
    }

    /**
     * Returns the ODI table Type according to the JDBC TYpe
     * @return
     */
    protected String getTableType2(String tableType) {
        if (tableType.equals("TABLE"))            return("T");
        if (tableType.equals("VIEW"))             return("V");
        if (tableType.equals("SYSTEM TABLE"))     return("ST");
        if (tableType.equals("ALIAS"))            return("AT");
        if (tableType.equals("SYNONYM"))          return("SY");
        if (tableType.equals("QUEUE"))            return("QE");
        if (tableType.equals("GLOBAL TEMPORARY")) return("GT");
        if (tableType.equals("LOCAL TEMPORARY"))  return("LT");
        return("X");
    }

    
    public static void main(String[] args) throws SQLException, InstantiationException, IllegalAccessException, ClassNotFoundException, FileNotFoundException {
    	if ( args == null || args.length == 0 ) {
    		System.out.println( "Invocation Syntax:" );
    		System.out.println( "  <repo JDBC driver class> <repo JDBC url> <repo user id> <repo password> \\" );
    		System.out.println( "  <cassandra JDBC driver class> <cassandra JDBC url> <cassandra user id> <cassandra password> \\" );
    		System.out.println( "  modelGUID objectNamePattern objectType objectNamePrefix keySpace logFileName" );
    		System.out.println();
    		System.out.println( "  Example:" );    		
    		System.out.println( "    oracle.jdbc.driver.OracleDriver          jdbc:oracle:thin:@myhost:1521:mysid myRepoSchema myRepoPw \\");
    		System.out.println( "    com.ddtek.jdbc.cassandra.CassandraDriver jdbc:datadirect:cassandra://myhost:9160 myCasUser myCasPw \\");
    		System.out.println( "    myModelGUID odi_% T odi_ MY_KEYSPACE c:/tmp/RKM_Cassandra.log");
    	}
    	
    	// Create repo connection
    	System.out.println("Connecting to repo...");
        Class.forName( args[0] ).newInstance();
        String repoUrl      = args[1];
        String repoUser     = args[2];
        String repoPassword = args[3];
        Connection repoCon = DriverManager.getConnection(repoUrl, repoUser, repoPassword);
        repoCon.setAutoCommit(false);
        
        // Create cassandra connection
    	System.out.println("Connecting to Cassandra...");
        Class.forName( args[4] ).newInstance();
        String srcUrl      = args[5];
        String srcUser     = args[6];
        String srcPassword = args[7];
        Properties props   = new Properties();
        props.setProperty( "user", "cassandra" );
        props.setProperty( "password", "cassandra" );
        props.setProperty( "configoptions", "(uppercaseIdentifiers=false)" );
        props.setProperty( "schemadefinition", "C:\\tmp\\progress_cassandra\\eclipse_");
        props.setProperty( "createdb", "ForceNew" );
        Connection cassandraCon = DriverManager.getConnection(srcUrl, props);
        		
    	System.out.println("Starting reverse...");
    	String modelGUID =  args[8];
        // For eclipse
        //String[] tabPattern = { args[9],args[10],args[11] };
        String[] tabPattern = [ args[9],args[10],args[11] ];
    	String pSrcSchema = args[12];
    	String logFile =    args[13];
    	RkmCassandra rev = new RkmCassandra();
    	rev.initialize( modelGUID , tabPattern, cassandraCon, pSrcSchema, repoCon, true, logFile );
    	rev.startReverse();
    	rev.endReverse();
    	
        cassandraCon.close();
        repoCon.close();    	
    }
    
    
}

/* End of RkmCassandra.java */


rev     = new RkmCassandra()]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Target Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[DEF_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[HIVE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5904]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[GROOVY]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:35.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7c1e6bbe-f736-42e3-b543-b90b20799175]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3273]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[295]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:35.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[71]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Start the Reverse]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[00ed74a6-adf5-4c67-9844-8d48bee5e476]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5904]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[srcCx = odiRef.getJDBCConnection("SRC")
srcSchema ='''<%=odiRef.getInfo("SRC_SCHEMA")%>'''

trgCx = odiRef.getJDBCConnection("DEST")
imod    =  '''<%=odiRef.getModel("GLOBAL_ID")%>'''
tabpat  = [ 	'''<%=odiRef.getModel("REV_OBJ_PATT")%>''',  '''<%=odiRef.getModel("REV_OBJ_TYPE")%>''',  '''<%=odiRef.getModel("REV_ALIAS_LTRIM")%>''' ] 

 
// START THE REVERSE 
logger = odiRef.getLogger();
rev.initialize(imod, (String[])tabpat.toArray(), srcCx, srcSchema, trgCx, logger) 
rev.startReverse() 
rev.endReverse() 

srcCx.close()
trgCx.close()]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[HIVE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5905]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:35.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a2cc05cf-2a77-4c4b-8c2c-61ae1858f6bf]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3274]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[295]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:35.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[81]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Set MetaData]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a1f78714-b578-4f21-8b38-d8d100287507]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5905]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[OdiReverseSetMetaData "-MODEL=<%=odiRef.getModel("GLOBAL_ID")%>" -USE_TABLE_NAME_FOR_UPDATE=true]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[HIVE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5906]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:35.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1fafb321-e5b8-4d89-8f7c-545a499f2a8c]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3275]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[295]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:35.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[51]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Reset MetaData]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c8ee81ef-f5cc-4345-96a4-4eb86ba3be14]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5906]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[OdiReverseResetTable -MODEL=<%=odiRef.getModel("GLOBAL_ID")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_PROJECT.1]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[236fd394-6f34-48ff-9081-6e4dd9bea0f8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5902]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f6fd1504-37b6-4338-814c-cc4e4a730063]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5903]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ab2bb506-b806-4291-b44e-3c9fd2c60802]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.295]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3a93f959-4696-48e3-bc4f-c2c06a035b15]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM Cassandra]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.13]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5904]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[00ed74a6-adf5-4c67-9844-8d48bee5e476]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.102]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5905]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a1f78714-b578-4f21-8b38-d8d100287507]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5906]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c8ee81ef-f5cc-4345-96a4-4eb86ba3be14]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[5]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[5]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[5]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[11]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.09]]></Field>
</Object>
</SunopsisExport>
