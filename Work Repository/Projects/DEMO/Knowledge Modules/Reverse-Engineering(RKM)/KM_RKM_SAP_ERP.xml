<?xml version="1.0" encoding="UTF-8"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.09" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="HArRKdmuwzXDaSqiC/Bxi/4HKKWZdZinqfWodlCezoU=" keyVect="vSS9lC4lnV/y4ImzNfF45A==" exportKeySalt="cc69f961-e9dd-4141-880e-daba2a1e0ee3" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String">null</Field>
	<Field name="DelegateClass" type="java.lang.String">null</Field>
	<Field name="DelegateScript" type="java.lang.String">null</Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[87612e7e-0b22-4bbe-b490-dbc083a38497]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String"><![CDATA[S]]></Field>
	<Field name="IndSuppSetBased" type="java.lang.String">null</Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String">null</Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[6382]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String">null</Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="KmTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="KmVersion" type="java.lang.String"><![CDATA[42]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:43.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String">null</Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[-873510362]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String">null</Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String">null</Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[RKM SAP ERP]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[KR]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0ae95189-6a0d-47e8-8341-158e2d7bdb52]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6382]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Component: RKM SAP ERP
Author: Oracle


Description :
- Reverse engineering Knowledge Module to retrieve the tables, columns and constraints from SAP System.
- Reverse engineering Knowledge Module provides a Tree Browser UI for selecting tables and columns

For first-time users please follow the Getting-Started-Guide for ODI SAP ERP on the ODI OTN documentation page for pre-requisites, detailed installation instructions and examples.

Please also see ODI Application Adapter documentation for ODI AA for SAP ERP.

The list of supported SAP versions can be found in the ODI Certification matrix on OTN.

This KM requires ODI SAP Open Tool version 10.1.3.22 (odi-sap.jar) or higher.

Restrictions:
- The mask of tables to reverse must not be empty, and at least contain the '%' character.
- The tab Selective reverse cannot be used with this knowledge module.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Edit Command]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_TRT_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[118c2917-bcde-46af-9ad3-f2188fe2e696]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6383]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1791]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[USE_GUI]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to display GUI]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9622e612-c5db-4841-8620-3f421fc8a212]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6383]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Set to Yes to show UI browser for search and reverse sap tables into ODI Model. Set to No, and provide the table name, module name, or application component name in the KM option, that particular table or whole module, or whole application module will be reversed. ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[User Exit help]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_UE_HELP]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c2bba24e-80e1-4368-9a42-9a243de73b8d]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6385]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[6384]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1792]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[200]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[%]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_MODULE_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Sap Module Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[deb9819c-ccec-4ec3-b2f3-73bf33df4a1d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6384]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[%]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Text value]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_VALUE]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7290d65f-5d63-4559-a657-245b66a290e5]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6385]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[For Wild Card Search Please use  "%" as the wild card search characters. RKM will convert to SAP's standard wild card search character which "*"]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9c9e4fbc-e684-4b31-b6fa-0307f3715dff]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6387]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[6386]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1793]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[210]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[%]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_APP_COMP_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Application Component Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[30204ac7-5bdd-43ba-bc29-6adbc902582a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6386]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[%]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[118de094-01ef-4acc-9fe7-e5ab6f006fd5]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6387]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[For Wild Card Search Please use "%" as the wild card search characters. RKM will convert to SAP's standard wild card search character which "*"]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0d69d132-a083-4df8-b73a-4733f57a0ed3]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6388]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1794]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[220]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[%]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_PACKAGE_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Sap Package Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a5ddee7b-d494-4589-82e0-341fd430b298]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6388]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[For Wild Card Search Please use "%" as the wild card search characters. RKM will convert to SAP's standard wild card search character which "*"]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ad278f5b-191e-406b-8093-be657f948279]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6389]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1795]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[230]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[%]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_TABLE_DESC]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Description text of the SAP table]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7cfe74dc-b537-4c3d-9e90-7f8554615dea]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6389]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[For Wild Card Search Please use "%" as the wild card search characters. RKM will convert to SAP's standard wild card search character which "*"]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[15e7b3f5-ff54-4257-8e34-a158077be444]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6390]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1796]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[240]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[%]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_TABLES_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[One or multiple tables name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b0390553-4fd7-4374-a9e9-6f1c98cd07e6]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6390]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[For multiple table Search Please use "," (comma)  as separator after every complete table name e.g:MARA,BSEG,HRP1270. For single table, just provide SAP ERP tableName]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3cb230c5-a716-4c86-bc3b-039a12b88940]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6391]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1797]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[250]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[SAP_ODI_ERP_POOL_<%=odiRef.getInfo("SRC_DSERV_NAME")%>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_CONNECTION_POOL]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Name of SAP connection pool]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[04329f99-b571-40ec-ba25-5f17a0b4f148]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6391]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SAP Connection Pool name]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7dd6b47e-e996-4a18-9491-466c5c653637]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6392]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1798]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[260]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_CONNECTION_POOL_SIZE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[No of SAP connections in pool]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[712333aa-2359-434d-8272-7e954011df77]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6392]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Number of SAP connections to be maintained as a pool.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6939586d-8d0a-444b-95de-c2f67c788601]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6393]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1799]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[300]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[GET_FOREIGN_KEYS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to get foreign keys]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7aee88d8-3379-4ab4-a927-f037cb7d4d98]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6393]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Set to Yes to reverse foreign keys of SAP table.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c767e4d8-f183-4590-b5e4-9b2ae8f163ee]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6394]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1800]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[310]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[GET_INDEXES]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to get Indexes]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7a7881a3-e253-4127-ad01-b04c4122fbf8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6394]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Set to Yes to reverse indexes of a SAP table.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b7d7df4a-893f-4631-af4b-b238d9a56dd4]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6395]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1801]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[320]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[GET_PRIMARY_KEYS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to get the primary keys]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fdf527b0-87d9-492a-95c9-343f7007e938]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6395]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Set to Yes to reverse the primary keys of a SAP table.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[220cefaa-41a1-4db1-8f9b-f7ae98afd1fa]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6396]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[450]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[UPLOAD_ABAP_CODE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Indicator for RKM RFC upload]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[53338555-80d3-4b36-a6b2-3ddec9d562bc]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6396]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Deprecated: Flag to upload RKM RFCs]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ca295e60-cdff-414d-8ef0-24a2083692d9]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6397]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1803]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[460]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[UPLOAD_ABAP_BASE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to install SAP base structures]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[dbca511d-b717-45e0-bd36-7ca0bf87e0f3]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6397]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Deprecated: Flag to install SAP base structures]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[138427f0-c4a9-40eb-9546-577648217bb5]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6398]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1804]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[600]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_FGR]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_FUNCTION_GROUP_ODI_DEV]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Development SAP FG Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0a99a93e-18b4-4b71-97b3-1b9b3b6c68c8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6398]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[The name of the Development SAP function group where all generated ABAP programs will be uploaded.

If non-default value has to be used, the specified function group must not exist prior to RKM installation. It will be created automatically during the RKM installation."

Only applies if KM option BACKGROUND is set to "No". Please see KM option SAP_REPORT_NAME_PREFIX]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ea34f7d9-d602-4710-812c-0a7cdc523cb0]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6399]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1805]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[650]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_FGR_PROD]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_FUNCTION_GROUP_ODI_PROD]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Production SAP FG Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e0c78aae-4431-459d-a1b8-cedf9ce61c12]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6399]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[The name of the Production SAP function group where all generated ABAP programs will be uploaded.

If non-default value has to be used, the specified function group must not exist prior to RKM installation. It will be created automatically during the RKM installation."

Only applies if KM option BACKGROUND is set to "No". Please see KM option SAP_REPORT_NAME_PREFIX]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[062f1ae9-4e11-49e5-a745-f1c943e77ea4]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1806]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[700]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[SAP]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_TRANSPORT_LAYER_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Transport Layer]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d16d217c-c93c-4948-afa3-105981b46f7e]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6400]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1807]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[750]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_RKM_PCKG]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_PACKAGE_NAME_ODI_DEV]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[ODI SAP dev package name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[31cd747f-510d-446d-9639-49e1e1808489]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6400]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines the SAP package name used for all ODI objects required during ODI SAP development.

This SAP package name must not exist prior to first-time installation of this RKM.

Only change if requested by SAP administrator and checked with ODI product support or for backwards compatibility:

For compatibility with ODI SAP ERP|BW Adapter installations prior to Build 32|23 please set to ZODI_DEVCLASS | ZODIBW_PCKG

Default values: ZODI_RKM_PCKG]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[bd239215-3adc-4e65-aff4-17597e8d3982]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6401]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1808]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[760]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_LKM_PCKG]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_PACKAGE_NAME_ODI_PROD]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[ODI SAP prod package name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4c1f1e1c-48d2-477b-a8a0-7414930cdf87]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6401]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines the SAP package name used for all ODI objects required during ODI SAP production use.

This SAP package name must not exist prior to first-time installation of this RKM.

Only change if requested by SAP administrator and checked with ODI product support or for backwards compatibility:

For compatibility with ODI SAP ERP|BW Adapter installations prior to Build 32|23 please set to ZODI_DEVCLASS | ZODIBW_PCKG

Default values: ZODI_LKM_PCKG]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[549aba2c-39e6-4ec5-93e8-48eeea237784]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6402]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1809]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[770]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_APPOBJ]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_APPLICATION_OBJECT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Application object name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[83a2576b-1a69-46a5-98ef-ee3140009c72]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6402]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SAP Background job application object name.

Default : ZODI_APPOBJ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b2c72569-44c4-409a-b17f-2549a4f8ba36]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6403]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1810]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[780]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_SUBOBJ]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_APPLICATION_SUB_OBJECT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Application sub object name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2691b05b-7bf0-4a43-929f-cea69c651066]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6403]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SAP Background job application sub object name.

Default : ZODI_SUBOBJ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6404]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cd1550ff-1e3f-47bc-bba7-54a327f5b1fc]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3525]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[320]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Retrieve Foreign Keys]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3ae9e844-2832-4740-9aa8-7238fce5d67f]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6404]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Retrieve Foreign Keys
import java.sql.BatchUpdateException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Iterator;

PreparedStatement batchInsert = null;
PreparedStatement batchInsert2 = null;

<% if(odiRef.getOption("GET_FOREIGN_KEYS").equals("1")) { %>
	
	try {
		<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
		batchInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_JOIN(I_MOD, FK_NAME, TABLE_NAME, FK_TYPE, PK_CATALOG, PK_SCHEMA, PK_TABLE_NAME, CHECK_STAT, CHECK_FLOW, IND_ACTIVE, DEFER, UPD_RULE, DEL_RULE) values (?,?,?,?,?,?,?,?,?,?,?,?,?)");
		batchInsert2 = repoConnection.prepareStatement("INSERT INTO SNP_REV_JOIN_COL (I_MOD, FK_NAME, FK_COL_NAME, FK_TABLE_NAME, PK_COL_NAME, PK_TABLE_NAME, POS) values (?,?,?,?,?,?,?)");
		<%}else { /*else if ODI 12C*/%>
		batchInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_JOIN(MOD_GUID, FK_NAME, TABLE_NAME, FK_TYPE, PK_CATALOG, PK_SCHEMA, PK_TABLE_NAME, CHECK_STAT, CHECK_FLOW, IND_ACTIVE, DEFER, UPD_RULE, DEL_RULE) values (?,?,?,?,?,?,?,?,?,?,?,?,?)");
		batchInsert2 = repoConnection.prepareStatement("INSERT INTO SNP_REV_JOIN_COL (MOD_GUID, FK_NAME, FK_COL_NAME, FK_TABLE_NAME, PK_COL_NAME, PK_TABLE_NAME, POS) values (?,?,?,?,?,?,?)");
		<%}%>
		Hashtable sFK = odiSAPERPMetadataHelper.sSAPFKFields;
		sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Foreign Keys - Number of table: "+sFK.size()} );
		if(sFK != null && sFK.size() > 0) {
			sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Inserting Data into FOREIGN KEY TABLES started....."} );
			Iterator tableItr =  sT.iterator();
			SAPSearchDetail sapTable = null;
			int i = 1;
			while(tableItr.hasNext()) {
				sapTable = new SAPSearchDetail();
				sapTable = (SAPSearchDetail)tableItr.next(); 
				String tableName = sapTable.name + "  "+sapTable.desc;
				if(tableName.length() > 100) {
					tableName = tableName.substring(0, 99);
				}
				ArrayList fkList = (ArrayList) sFK.get(tableName.substring(0,tableName.indexOf(" ")).trim());
				if(fkList == null || fkList.size() == 0) {
					sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"............. foreign key List is null or size is 0..........."} );
					return;
				}

				Iterator fkItr = fkList.iterator();
				sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Foreign key size :"+fkList.size()} );
		
				SAPTableForeignKey sFKField = null;				
				while(fkItr.hasNext()) {
					sFKField = new SAPTableForeignKey();
					sFKField = (SAPTableForeignKey)fkItr.next();
					//sapLogger.log(sapLogger.INFO, ">>>sFKField.foreignKeyTabName:  "+sFKField.foreignKeyTabName);
							
					if(!(sFKField.foreignKeyTabName.equals("")) && (!(sFKField.foreignKeyField.equals("")))) {
						
						<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>	
							batchInsert.setInt(1, <%=odiRef.getModel("ID")%>);//I_MOD
						<%}else { /*else if ODI 12C*/%>
							batchInsert.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
						<%}%>
						batchInsert.setString(2, "FK_" + sFKField.primaryKeyField+"_"+sFKField.primaryKeyTabName);//FK_NAME
						batchInsert.setString(3, tableName.trim());//TABLE_NAME
						batchInsert.setString(4, "D");//FK_TYPE
						batchInsert.setString(5, "");//PK_CATALOG
						batchInsert.setString(6, "");//PK_SCHEMA
						String fkTableName = sFKField.foreignKeyTabName + "  "+sFKField.foreignKeyTableDesc;
						if(fkTableName.length() > 100) {
							fkTableName = fkTableName.substring(0, 99);
						}
						//sapLogger.log(sapLogger.INFO, "Retrieve Foreign Key - fkTableName: "+fkTableName);
						batchInsert.setString(7, fkTableName);//PK_TABLE_NAME
						//batchInsert.setString(7, sFKField.foreignKeyTabName);//PK_TABLE_NAME
						batchInsert.setString(8, "1");//CHECK_STAT
						batchInsert.setString(9, "1");//CHECK_FLOW
						batchInsert.setString(10, "1");//IND_ACTIVE
						batchInsert.setString(11, "");//DEFER
						batchInsert.setString(12, "");//UPD_RULE
						batchInsert.setString(13, "");//DEL_RULE

						batchInsert.addBatch();
						
						//Inserting data into 2nd foreign key table SNP_REV_JOIN_COL	
						<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
							batchInsert2.setInt(1, <%=odiRef.getModel("ID")%>);//I_MOD
						<%}else { /*else if ODI 12C*/%>
							batchInsert2.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
						<%}%>
						//sapLogger.log(sapLogger.INFO, "odiRef.getModel(ID): "+< %=odiRef.getModel("ID")% >+", FK_NAME: FK_"+sFKField.primaryKeyField+", FK_COL_NAME: "+sFKField.primaryKeyField+" ["+i+"]");
						batchInsert2.setString(2, "FK_" + sFKField.primaryKeyField+"_"+sFKField.primaryKeyTabName);//FK_NAME
						batchInsert2.setString(3, sFKField.primaryKeyField);//FK_COL_NAME
						batchInsert2.setString(4, tableName.trim());//FK_TABLE_NAME
						batchInsert2.setString(5, sFKField.foreignKeyField);//PK_COL_NAME
						batchInsert2.setString(6, fkTableName);//PK_TABLE_NAME
						//batchInsert2.setString(6, sFKField.foreignKeyTabName);//PK_TABLE_NAME
						batchInsert2.setInt(7, new Integer(i).intValue());//POS

						batchInsert2.addBatch();
						i++;
					}//end of if condition
				}//end of inner while(fkItr.hasNext()) 
			} //end of while(tableItr.hasNext()) --
			int []counts2 = batchInsert2.executeBatch();
			int []counts = batchInsert.executeBatch();
			repoConnection.commit();
			batchInsert2.close();
			batchInsert.close();
			sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Data inserted into SNP_REV_JOIN & SNP_REV_JOIN_COL tables successfully!!!"} );
		}//end of if(sFK != null && sFK.size() > 0) --
	} catch (BatchUpdateException buexp) {
		sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[] {"Exception: Retrieve Foreign Keys - BatchUpdate Count: "+buexp.getMessage()} );
		OdiSapUtil.throwODIException(buexp.getMessage());
	} catch(Exception e) {
		sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[] {"Exception: - Retrieve Foreign Keys --  "+e.getMessage()} );
		OdiSapUtil.throwODIException(e.getMessage());
	} finally {
		batchInsert2 = null;
		batchInsert = null;
	} //end of finally
<%}; %>//end of if(odiRef.getOption("GET_FOREIGN_KEYS").equals("1")) --]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Source Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[COL_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6405]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[75c02f4c-f951-455c-8f95-1c90dfa26681]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3526]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[330]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Retrieve Primary Keys]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b6de7ee9-f3fa-4d90-8fb2-dd3014d2ecce]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6405]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Retrieve Primary Keys
import java.sql.BatchUpdateException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Iterator;

PreparedStatement batchInsert = null;
PreparedStatement batchInsert2 = null;
<% if(odiRef.getOption("GET_PRIMARY_KEYS").equals("1")) { %>
	try {
		sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"inserting data into Primary key table SNP_REV_KEY  started...."} );
		<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
			batchInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_KEY(I_MOD, TABLE_NAME, KEY_NAME, CONS_TYPE, IND_ACTIVE, CHECK_FLOW, CHECK_STAT) values (?, ?,?,'PK', '1','1','1')");
			batchInsert2 = repoConnection.prepareStatement("INSERT INTO SNP_REV_KEY_COL (I_MOD, TABLE_NAME, KEY_NAME, COL_NAME, POS) values (?,?,?,?,?)");
		<%}else { /*else if ODI 12C*/%>
			batchInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_KEY(MOD_GUID, TABLE_NAME, KEY_NAME, CONS_TYPE, IND_ACTIVE, CHECK_FLOW, CHECK_STAT) values (?, ?,?,'PK', '1','1','1')");
			batchInsert2 = repoConnection.prepareStatement("INSERT INTO SNP_REV_KEY_COL (MOD_GUID, TABLE_NAME, KEY_NAME, COL_NAME, POS) values (?,?,?,?,?)");
		<%}%>
		Hashtable sPK = odiSAPERPMetadataHelper.sSAPPKFields;
		if(sPK != null && sPK.size() > 0) {
			Iterator itr =  sT.iterator();
			SAPSearchDetail sapTable = null;
			while(itr.hasNext()) {
				sapTable = new SAPSearchDetail();
				sapTable = (SAPSearchDetail)itr.next();

				String tableName = sapTable.name + "  "+sapTable.desc;
				if(tableName.length() > 100) {
					tableName = tableName.substring(0, 99);
				}
				ArrayList pkList = (ArrayList) sPK.get(tableName.substring(0,tableName.indexOf(" ")).trim());
				if(pkList == null || pkList.size() == 0) {
					sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"............. pkList is null or size is 0..........."} );
					return;
				}
				<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
					batchInsert.setInt(1,<%=odiRef.getModel("ID")%>);//I_MOD
				<%}else { /*else if ODI 12C*/%>
					batchInsert.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
				<%}%>
				batchInsert.setString(2, tableName.trim());//TABLE_NAME
				batchInsert.setString(3,"PK_" + tableName.substring(0,tableName.indexOf(" ")).trim());//KEY_NAME
						
				batchInsert.addBatch();
			
				Iterator pkItr = pkList.iterator();
				int i = 0;
				SAPTablePrimaryKey sPKField = null;
				while(pkItr.hasNext()) {
					sPKField = new SAPTablePrimaryKey();
					sPKField = (SAPTablePrimaryKey) pkItr.next();
					if(!(sPKField.primaryKeyFieldName.equals(""))) {
						<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>		
							batchInsert2.setInt(1,<%=odiRef.getModel("ID")%>);//I_MOD
						<%}else { /*else if ODI 12C*/%>
							batchInsert2.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
						<%}%>
						batchInsert2.setString(2, tableName.trim());//TABLE_NAME
						batchInsert2.setString(3, "PK_" + tableName.substring(0,tableName.indexOf(" ")).trim());//KEY_NAME
						//sapLogger.log(sapLogger.INFO, "Primary Key Field Name: "+ sPKField.primaryKeyFieldName);
						batchInsert2.setString(4, sPKField.primaryKeyFieldName);//COL_NAME
						batchInsert2.setInt(5, new Integer(i).intValue());//POS

						batchInsert2.addBatch();
						i++;
					}//end of if
				}//end of inner while(pkItr.hasNext()) 
			} //end of while(itr.hasNext()) {
			//execute the insert statement
			batchInsert2.executeBatch();
			batchInsert.executeBatch();
			repoConnection.commit();
			batchInsert2.close();
			batchInsert.close();
			sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Data inserted Successfully into both primary key tables SNP_REV_KEY & SNP_REV_KEY_COL!!!"} );
		}// end of - if(sPK != null && sPK.size() > 0)
	} catch (BatchUpdateException buexp) {
		sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[]{"Batchupdate Exception: Retrieve Primary key - BatchUpdate Count: "+buexp.getMessage()} );
		OdiSapUtil.throwODIException(buexp.getMessage());
	} catch(Exception e) {
		sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[]{"Exception - Retrieve Primary Keys: "+e.getMessage()} );
		OdiSapUtil.throwODIException(e.getMessage());
	} finally {
		batchInsert2 = null;
		batchInsert = null;
	}//end of finally
<% }; %>//end of if(odiRef.getOption("GET_PRIMARY_KEYS").equals("1")) --]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6406]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f0be91e7-16de-4d04-b616-ed02d7b42ab6]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3527]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[340]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Retrieve Indexes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7eb21585-6a16-4bd0-a978-246f6b311d5e]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6406]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Retrieve Indexes
import java.sql.BatchUpdateException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Iterator;

PreparedStatement batchInsert = null;
PreparedStatement batchInsert2 = null;

<% if(odiRef.getOption("GET_INDEXES").equals("1")) { %>
	try {
		<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
			batchInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_KEY(I_MOD, TABLE_NAME, KEY_NAME, CONS_TYPE, IND_ACTIVE, CHECK_FLOW, CHECK_STAT) values (?,?,?, 'I', '1','1','1')");
			batchInsert2 = repoConnection.prepareStatement("INSERT INTO SNP_REV_KEY_COL (I_MOD, TABLE_NAME, KEY_NAME, COL_NAME, POS) values (?,?,?,?,?)");
		<%}else { /*else if ODI 12C*/%>
			batchInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_KEY(MOD_GUID, TABLE_NAME, KEY_NAME, CONS_TYPE, IND_ACTIVE, CHECK_FLOW, CHECK_STAT) values (?,?,?, 'I', '1','1','1')");
			batchInsert2 = repoConnection.prepareStatement("INSERT INTO SNP_REV_KEY_COL (MOD_GUID, TABLE_NAME, KEY_NAME, COL_NAME, POS) values (?,?,?,?,?)");
		<%}%>
		Hashtable sIndexes = odiSAPERPMetadataHelper.sSAPIndexes;
		sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Indexes -  sIndexes.size(): "+sIndexes.size()} );
		
		if(sIndexes != null && sIndexes.size() > 0) {
			Iterator itr =  sT.iterator();
			SAPSearchDetail sapTable = null;
			int tableCount = 1;
			while(itr.hasNext()) {
				sapTable = new SAPSearchDetail();
				sapTable = (SAPSearchDetail) itr.next(); 
				String tableName = sapTable.name + "  "+sapTable.desc;
				sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Indexes - tableName: "+tableName} );
				if(tableName.length() > 100) {
					tableName = tableName.substring(0, 99);
				}
				sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"inserting data into first index table SNP_REV_KEY started..."} );
				ArrayList idxList = (ArrayList) sIndexes.get(tableName.substring(0,tableName.indexOf(" ")).trim());
				if(idxList == null || idxList.size() == 0) {
					sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"............. idxList is null or size is 0..........."} );
					return;
				}
				Iterator idxItr = idxList.iterator();
				SAPTableIndexes sTableIndex = null;
				while(idxItr.hasNext()) {
					sTableIndex = new SAPTableIndexes();
					sTableIndex = (SAPTableIndexes) idxItr.next();

					if(!(sTableIndex.indexName.equals("")) && (!(sTableIndex.indexField.equals("")))) {
						<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
							batchInsert.setInt(1,<%=odiRef.getModel("ID")%>);//I_MOD
						<%}else { /*if ODI 12C*/%>
							batchInsert.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
						<%}%>
						batchInsert.setString(2, tableName.trim());//TABLE_NAME
						batchInsert.setString(3,"I_" + sTableIndex.indexName);//KEY_NAME
			
						batchInsert.addBatch();
										
						String []indexField = sTableIndex.indexField.split(";");
						int i = 1;
						for(int x = 0; x < indexField.length; x++) {
							sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {new Date(), "inserting data into 2nd index table SNP_REV_KEY_COL started.."} );
							<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
								batchInsert2.setInt(1,<%=odiRef.getModel("ID")%>);//I_MOD
							<%}else { /*else if ODI 12C*/%>
								batchInsert2.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
							<%}%>
							batchInsert2.setString(2, tableName.trim());//TABLE_NAME
							batchInsert2.setString(3,"I_" + sTableIndex.indexName);//KEY_NAME
							String iField = indexField[x];
							batchInsert2.setString(4, iField);//COL_NAME
							batchInsert2.setInt(5, new Integer(i).intValue());//POS
							batchInsert2.addBatch();
							i++;
			    		} //end of for loop
					} //end of if(!(sTableIndex.indexName.equals("") ....
				}//end of inner while(idxItr.hasNext()) 
			
		} //end of while(itr.hasNext()) ---
		//execute the insert statement
		int []counts2 = batchInsert2.executeBatch();
		int []counts = batchInsert.executeBatch();
		
		repoConnection.commit();
		batchInsert2.close();
		batchInsert.close();
		sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Data inserted into index key tables SNP_REV_KEY &  SNP_REV_KEY_COL successfully!!!"} );
		}//end of if(sIndexes != null && sIndexes.size() > 0) ---
	} catch (BatchUpdateException buexp) {
		sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[] {"Batchupdate Exception: Retrieve Indexes - BatchUpdate Count: "+buexp.getMessage()} );
		OdiSapUtil.throwODIException(buexp.getMessage());
	} catch(Exception e) {
		sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[]{"Exception: - Retrieve Indexes --  "+e.printStackTrace()} );
		OdiSapUtil.throwODIException(e.getMessage());
	} finally {
		batchInsert2 = null;
		batchInsert = null;
	}//end of finally
<% }; %>//end of if(odiRef.getOption("GET_INDEXES").equals("1")) --
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6407]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[abbf1ef3-6a1f-4458-9cf6-65a692cd6c5d]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3528]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[350]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Remove Incomplete Constraints]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8e4db2c8-19d2-496f-a26d-319d1b1ac209]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6407]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Command Name: Remove Incomplete Constraints
import java.sql.Statement;

Statement stmt1 = null;
Statement stmt2 = null;

try {
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Incomplete Constraint Deletion started... from SNP_REV_JOIN & SNP_REV_JOIN_COLS tables"} );
	//Removing incomplete constraints from SNP_REV_JOIN table
	<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
		String firstQuery = "DELETE from SNP_REV_JOIN where I_MOD = <%=odiRef.getModel("ID")%>"+
				"and (table_name not in  (select table_name from snp_table where i_mod=<%=odiRef.getModel("ID")%>"+
					"union all select table_name from snp_rev_table where i_mod=<%=odiRef.getModel("ID")%>)"+
				 "or pk_table_name not in  ("+
						"select table_name from snp_table where i_mod=<%=odiRef.getModel("ID")%>"+
						"union all select table_name from snp_rev_table where i_mod=<%=odiRef.getModel("ID")%>))";
	<%} else { /*if ODI 12C*/%>
		String firstQuery = "DELETE from SNP_REV_JOIN where MOD_GUID = '<%=odiRef.getModel("GLOBAL_ID")%>'"+
				"and (table_name not in  (select table_name from snp_table where MOD_GUID='<%=odiRef.getModel("GLOBAL_ID")%>'"+
					"union all select table_name from snp_rev_table where MOD_GUID='<%=odiRef.getModel("GLOBAL_ID")%>')"+
				 "or pk_table_name not in  ("+
						"select table_name from snp_table where MOD_GUID='<%=odiRef.getModel("GLOBAL_ID")%>'"+
						"union all select table_name from snp_rev_table where MOD_GUID='<%=odiRef.getModel("GLOBAL_ID")%>'))";
	<%}%>
	
	stmt1 = repoConnection.createStatement();
	stmt1.executeUpdate(firstQuery);
			
	//Removing incomplete constraints from SNP_REV_JOIN_COL table
	<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
		String secondQuery = "DELETE from SNP_REV_JOIN_COL where I_MOD = <%=odiRef.getModel("ID")%>"+
				"and (fk_table_name not in  (select table_name from snp_table where i_mod=<%=odiRef.getModel("ID")%>"+
					"union all select table_name from snp_rev_table where i_mod=<%=odiRef.getModel("ID")%>)"+
				"or pk_table_name not in  ("+
						"select table_name from snp_table where i_mod=<%=odiRef.getModel("ID")%>"+
						"union all select table_name from snp_rev_table where i_mod=<%=odiRef.getModel("ID")%>))";
	<%} else { /*if ODI 12C*/%>
		String secondQuery = "DELETE from SNP_REV_JOIN_COL where MOD_GUID ='<%=odiRef.getModel("GLOBAL_ID")%>'"+
				"and (fk_table_name not in  (select table_name from snp_table where MOD_GUID='<%=odiRef.getModel("GLOBAL_ID")%>'"+
					"union all select table_name from snp_rev_table where MOD_GUID='<%=odiRef.getModel("GLOBAL_ID")%>')"+
				"or pk_table_name not in  ("+
						"select table_name from snp_table where MOD_GUID='<%=odiRef.getModel("GLOBAL_ID")%>'"+
						"union all select table_name from snp_rev_table where MOD_GUID='<%=odiRef.getModel("GLOBAL_ID")%>'))";
	<%}%>
	stmt2 = repoConnection.createStatement();
	stmt2.executeUpdate(secondQuery);
	repoConnection.commit();
	stmt1.close();
	stmt2.close();
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Incomplete Constraint Successfully Deleted from SNP_REV_JOIN & SNP_REV_JOIN_COLS tables"} );
} catch(Exception ex) {
	sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[] {"Remove Incomplete Constraints - Exception: "+ex.getMessage()} );
	OdiSapUtil.throwODIException(e.getMessage());
} finally {
	stmt1 = null;
	stmt2 = null;
}//end of finally]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6408]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f3979c99-cd76-4a5d-b56c-dd2264b7be7a]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3529]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[360]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Set Metadata]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[839c8a44-7b7e-45db-bb85-040d098f4245]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6408]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
OdiReverseSetMetaData -MODEL=<%=odiRef.getModel("ID")%> -USE_TABLE_NAME_FOR_UPDATE=true
<%} else { /*if ODI 12C*/%>
OdiReverseSetMetaData "-MODEL=<%=odiRef.getModel("GLOBAL_ID")%>" -USE_TABLE_NAME_FOR_UPDATE=true
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Target Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[DEF_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6409]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1b879fff-05b8-47f5-85c6-6d1df618d50b]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3530]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[370]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Set Flex Fields]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7d8da610-bf8f-434a-966e-927d034803e8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6409]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Command Name: SetFlexFields
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.BatchUpdateException;
import java.util.ArrayList;
import java.util.Iterator;

<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
PreparedStatement ffInsert = null;
Statement stmt = null;
ResultSet resultSet = null;		

try {
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Inserting data in SNP_FF_VALUEW table started....."} );
	ffInsert = repoConnection.prepareStatement("INSERT INTO SNP_FF_VALUEW(FF_CODE, I_INSTANCE, I_OBJECTS, SHORT_TXT_VALUE) values(?, ?, ?, ?)");
	stmt = repoConnection.createStatement();
	//Get all tables of the model with no SAP_TABLE_TYPE defined
	String query = "select I_TABLE, TABLE_NAME from SNP_TABLE T "+
	   			"where T.I_MOD = <%=odiRef.getModel("ID")%> AND not exists (select * from SNP_FF_VALUEW FF where "+
	   			"FF.I_INSTANCE = T.I_TABLE and FF.I_OBJECTS = 2400 and FF.FF_CODE = 'SAP_TABLE_TYPE')";
    
	resultSet = stmt.executeQuery(query);

	ArrayList sapTableList = new ArrayList();
	while(resultSet.next()) {
		String tabNameWithoutFF = resultSet.getString("TABLE_NAME").trim();
				
		String tableInstance = resultSet.getString("I_TABLE");
		sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Set Flex Fields -- tableInstance: "+tableInstance} );
				
		ArrayList tabList = odiSAPERPMetadataHelper.sSAPTables;
		if(tabList.size() == 0 || tabList == null) {
			sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SetFlexFields - tabList is null or size is zero"} );
			return;
		}		
		Iterator itr =  tabList.iterator();
		SAPSearchDetail sapSearchedTable = null;
		
		while(itr.hasNext()) {
			sapSearchedTable = new SAPSearchDetail();
			sapSearchedTable = (SAPSearchDetail)itr.next(); 
			String tableName = (sapSearchedTable.name + "  "+sapSearchedTable.desc).trim();
			String tableType = sapSearchedTable.tableClass;
					
			if(tableType == null || tableType.equalsIgnoreCase("")) {
				throw new Exception("No table information retrieved from SAP for table ...!");
			}
			if(tabNameWithoutFF.equalsIgnoreCase(tableName)) {
				ffInsert.setString(1, "SAP_TABLE_TYPE");//FF_CODE
				ffInsert.setInt(2, new Integer(tableInstance).intValue());//I_INSTANCE
				ffInsert.setInt(3, 2400);//I_OBJECTS
				ffInsert.setString(4, tableType);//SHORT_TXT_VALUE
				ffInsert.addBatch();
				break;
			}
		}//end of while(itr.hasNext()) --
	}//end of while(resultSet.next()) --
	int []counts = ffInsert.executeBatch();
	repoConnection.commit();
	ffInsert.close();
	stmt.close();
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Data inserted into SNP_FF_VALUEW tables successfully!!!"} );
} catch (BatchUpdateException buexp) {
	sapLogger.severe("",new Object[] {new Date(), "BatchException: Set Flex Fields: "+buexp.getMessage()} );
	OdiSapUtil.throwODIException(buexp.getMessage());
} catch(Exception e) {
	sapLogger.severe("",new Object[] {new Date(), "SQLException: SetFlexFields - "+e.getMessage()} );
	OdiSapUtil.throwODIException(e.getMessage());
} finally {
	ffInsert = null;
} //end of finally
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6410]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[64f946ed-dd9c-409f-89ad-d4fd5f43dcc3]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3531]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[380]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Release Resources]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c6b257ab-a09d-4475-8081-1d2eb595186f]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6410]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Command Name: Release Resources

if(!OdiSapUtil.isOdi10gOr11g())
{ 
repoConnection.close();
}

//Resource Bundle objects
resourceName = null;
messages = null;

//ArrayList of SAPSubModels objects
sSAPSubModels = null;

//ArrayList of SAPTable objects
sSAPTables = null;
	
//Hashtable of SAP Table Name & SAPField Objects
sSAPFields = null;
	
//Hashtable of SAP Table Names & Primary key SAPPKField Objects
sSAPPKFields = null;
	
//Hashtable -- contains key as SAP Table Name --> Value array list with SAPFKField Objects
sSAPFKFields = null;
	
//Hashtable - contains key as SAP Table Name --> Value array list with SAPIndField Objects
sSAPIndexes = null; 


//Hashtable of Module Name & Description
mModuleName = null; 

//List of Application Component & Tables
mAppCompList = null;

//HashMap of keys as selected tables name & values as their list of fields name
mSelectedTables = null;
	
//ArrayList of deleselected nodes
mUncheckedTable = null;

//local collection object 
tableFieldList			= null;
tableMetadata			= null;
subModels				= null;
listOfPK				= null;
listOfFK				= null;
listOfIndex				= null;
subModelsList			= null;
primaryKeyList			= null;
pkList					= null;
foreignKeyList			= null;
fkList					= null;
indexList				= null;
tableIndexList			= null;
sortedTableList			= null;
sapFieldsObjs			= null;
sapTablesPrimaryKeyList = null;

indexHashTable			= null;
moduleNode              = null; 

// Local Collection objects

	
sapModList				= null;
sapTablesObjs		    = null;
sapTablesIndexesList	= null;
sapSearchDetailObjs	    = null;

tableInfoList           = null;
rowData                 = null;
rowDataTemp             = null;
columnHeader            = null;
filteredList		    = null;
sapSubModelsObj			= null;
sortedAppCompList		= null;   
testTreeMap				= null;
tempList				= null;

hs						= null;

tableName				= null;
sapSearchDtlObj			= null;

subModelDetails			= null;
primaryKeysList			= null;

// ***OdiSAPERPAdapter ****//

//static String variables
GET_SAP_TABLES_RFC_FUNCTION_NAME = null;
GET_SAP_FIELDS_FUNCTION_NAME	 = null;
GET_SAP_TABLES_PK_FK_RFC_NAME	 = null;
GET_SAP_TABLES_INDEXES_RFC_NAME  = null;
logFileName						 = null;
SID								 = null;
SRC_SCHEMA						 = null;
SRC_USER_NAME					 = null;
SRC_PWD							 = null;
SRC_LANGUAGE					 = null;
SRC_HOST_NAME					 = null;
SRC_CATALOG						 = null;
SRC_SYSTEM_ID					 = null;
SRC_ROUTER_STRING				 = null;
Client							 = null;
repository              = null;
ftemplate               = null;
 sapTableObjFilter      = null;
 
 tableListArray         = null;
 sTable1                = null;
 sTable2                = null;
 r                      = null; 
 sPrimaryKeyObj         = null;
  sForeignKeyObj        = null;
  sTableIndexObj        = null;
command	                = null;
strBuffer               = null;
echoProcess             = null;
isFinished              = null;
envIn                   = null;
envLine                 = null;
index                   = null;
tempHome                = null;
name                    = null;
desc                    = null;
type                    = null;
appComp                 = null;
tableClass              = null;  
devClass               = null; 
moduleName             = null;
primaryKeyFieldName    = null;
primaryKeyTabName      = null;
foreignKeyTabName      = null;   
foreignKeyField        = null;
indexName			   = null;
indexField             = null;

// *** OdiSAPLogger ******
//static Variables for all the supported log levels
FATAL		= null;
ERROR		= null;
WARNING		= null;
INFO		= null;
CONFIG		= null;
FINE		= null;
FINER		= null;
FINEST		= null;




// *****OdiSapMetaDataBrowser instance variable  ***********

sWIDTH			        = null;
sHEIGHT			        = null;
jPanelTop		        = null;
jPanelSearch		    = null;
jPanelTree		        = null;
jBottomPanel		    = null;
jPanelGap2		        = null;
jLabelTName		        = null;
jLabelSDesc		        = null;
jLabelAppComp		    = null;
jLabelPkg		        = null;
jTxtFieldTName		    = null;
jTxtFieldSDesc		    = null;
jTxtFieldAppComp	    = null;
jTxtFieldPkg		    = null;
jButtonSearch		    = null;
jButtonCancle		    = null;
jButtonReverse		    = null;
BORDER			        = null;
mModuleName		        = null;


moduleKey		    = null;
moduleDesc		    = null;
tree			    = null;
ivTable			    = null;
ivDesc			    = null;
ivPackg			    = null;
ivAPComp		    = null;
jButtonTLookup		    = null;
jButtonSDescLookup	    = null;
jButtonACompLookup    	    = null;
jButtonPckgLookup	    = null;
isTableNodeSelected	    = null;
mDeleselectedNodeList	    = null;
frame			    = null;
jTreeRootNode		    = null;
jTreeSelectedNode	    = null;
isCancle                    = null;
lookupFrameIcon             = null;
odi_java_home               = null;


//local Variable
fieldList		    = null;
filteredArrayList	    = null;
subMod			    = null;
searchResult		    = null;
al1			    = null;
listener                    = null;
alist2			    = null;
lookupResultList	    = null;




screenHeight            = null;
screenWidth            = null;
iconRoot               = null;

mouseListener         = null;
selectedNodeName     = null;
   
	prevItem            = null;
	sTable              = null;
	iterator            = null;
	tr                  = null;
	fieldNode           = null;
	selectedTable       = null;
	srollpane           = null;
	frameVisible        = null;
	tempSelectedName    = null;
	tempModuleKey       = null;
	result              = null;
	iter                = null;
	countSelectedNodeHyphen = null;
	tempIterator        = null;
	
	filterItr           = null;
	flag                = null;
	checkParent         = null;
	tempHyphen          = null;
	temp                = null;
	len                 = null;
	count               = null;  
    row                 = null; 
	rootObject          = null;
	model               = null;
	 children           = null;
    SearchMod           = null;
	tempModName         = null;
	searchIterator      = null;
  tabNm                 = null;
  modName               = null;
  selectTreePath        = null;
paranetAPPCompName      = null;
subNode                 = null;
prevNode                = null;
appCompName             = null;
child                   = null;
subNode1                = null;
itr2                    = null;
node1                   = null;
percentage              = null;
asterisk                = null;
 searchDetails          = null;

 shortDesc              = null;

	pckg                = null;

		lookupItr       = null;
		jTableLookup    = null;
	cellSelectionModel  = null;
	selectedData        = null;
	selectedRow         = null;
	 selectedColumn     = null;
	 tk                 = null;
	 screenSize         = null;
	
	  parentSubModel    = null;
	  
	  appComponentName  = null;
	  countHyphen       = null;

	        path        = null;
			check       = null;
			label       = null;
	         jPan       = null;
			
 iconModule             = null;
	 iconField          = null;
	 iconTable          = null;
 iconComponent          = null;
	
 iconRootLoc            = null;
	 iconFieldLoc       = null;
 iconTableLoc           = null;
 iconModuleLoc          = null;
checkboxLabel1          = null;
checkboxLabel2          = null;
checkboxLabel3          = null;
tableField              = null;

 

tnode                   = null;
tableField              = null;
imgSrc                  = null;
cusLabel                = null;
stringValue             = null;

isSelected              = null;
hasFocus                = null;
str                     = null;
imageOffset             = null;
currentI                = null;
d_check                 = null;
d_label                 = null;
y_check                 = null;
y_label                 = null;


// ***OdiSAPERPMetadataPopulator *****
 
searchedDataList	    = null;

maskTableName           = null;
sapTableDesc            = null;
sapPackage              = null;
sapModule               = null;
sapAppComp              = null;
tableDesc               = null; 
tableType               = null;
tableInfo               = null;


// *** supporting class objects ****

sField					= null; 
searchDetail			= null;
sTableIndexObj			= null;
sapSearchDetailObj		= null;
sapTableForeignKeyObj	= null;
primaryKeyObj			= null;
sapTablePrimaryKeyObj	= null;
indexKeyObj				= null;
sapTableIndexKeyObj		= null;
searchItr				= null;

//repository connection
repoConnection			= null;


//OdiSAPERPMetadataHelper, odiSapERPAdapter, OdiSAPLogger, OdiSAPERPMetadataPopulator &  OdiSAPERPMetadataPopulator class object
odiSAPERPMetadataHelper		= null;
odiSapERPAdapter		    = null;
odiSAPERPMetadataPopulator	= null;
odiSAPERPMetadataPopulator	= null;
sapLogger			        = null;

sT 			                = null;
show_ui			            = null;
browserFrame		        = null;
odiSAPERPMetadataBrowser 	= null;

/// OdiSAPERPMetadataHelper///




 sSAPIndexes				= null;
selectedTableKeys			= null;
tableInfoItr				= null;
tableMetadataArray			= null;
searchIterator				= null;
keys						= null;
tableNm						= null;
subModelObj					= null;
it							= null;
pkTableKeys					= null;
tableNameKey				= null;
fkTableKeys					= null;
itrFKey						= null;
foreignKeyObj				= null;
indexTableKeys				= null;
itrIndex					= null;

fieldName					= null;
fieldDesc					= null;
fieldDataType				= null;
fieldOffset					= null;
fieldLength					= null;
parentSubModel				= null;
pkItr						= null;
fkItr						= null;
indexItr					= null;
len							= null;
start						= null;

/// OdiSAPERPNode
selected					= null;
node						= null;

/// Get SAP MetaData
plzWait						= null;
contentPane					= null;
emptyLabel					= null;
theLabel					= null;


//Command Name: Retrieve Columns

batchInsert					= null;
sF							= null;
itr							=  null;
sapTable					= null;
tableName					= null;
fieldsList					= null;
fieldItr					= null;
    
sField						= null;
fieldName					= null;
shortDesc					= null;

//Retrieve Foreign Keys
batchInsert2				= null;
getForeignKey				= null;
sFK							= null;
tableItr					= null;
     
fkItr						= null;
counts2						= null;
counts						= null;
//Retrieve Indexes
getIndexes					= null;
sIndexes					= null;
tableCount					= null;
idxList						= null;
idxItr						= null;
sTableIndex					= null;
indexField					= null;

//Retrieve Primary Keys
getPrimaryKey				=  null;
sPK							= null;
pkItr						= null;

//Retrieve Sub Models
sSubModel					= null;
hst							= null;
query						= null;
stmt						= null;
rs							= null;
subModel					= null;
subModelKeys				= null;
subModelList				= null;
sapSubModel					= null;

//Retrieve Tables
tableInsertCount = null;


]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6411]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e536d1dd-5dee-4195-a2dc-c15dd77d69b0]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3532]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[140]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_APPLOG]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[376fecc2-3996-4501-805d-d0c161ef420d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6411]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0"  "-ABAP_PROGRAM_NAME=ZODI_APPLOG" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT ZODI_APPLOG.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp             TYPE rsimp, 
  wa_exp             TYPE rsexp, 
  wa_tables          TYPE rstbl, 
  cg_rep_tab         LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 


 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'IV_ACTION'. 
 wa_imp-TYP = 'CHAR10'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_APPOBJ_NAME'. 
 wa_imp-TYP = 'BALHDR-OBJECT'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_SUBOBJ_NAME'. 
 wa_imp-TYP = 'BALHDR-SUBOBJECT'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'IV_EXT_ID'. 
 wa_imp-TYP = 'BALHDR-EXTNUMBER'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_APPLOG' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string .
INSERT 'DATA : E_S_MSG   TYPE  BAL_S_MSG,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   lv_lognumber type balognr,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   lv_loghandle type balloghndl,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   messages   type table of  balm,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   wa_messages type balm,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   header_data type table of balhdr,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   wa_header type balhdr,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   dateto type baldate,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   timeto type baltime.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT SINGLE lognumber FROM BALHDR INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_lognumber WHERE OBJECT = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND SUBOBJECT = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND EXTNUMBER = IV_EXT_ID.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT SINGLE LOG_HANDLE FROM BALHDR INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_loghandle WHERE OBJECT = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND SUBOBJECT = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND EXTNUMBER = IV_EXT_ID.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF IV_ACTION = ''LOG_DISP''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_header-lognumber = lv_lognumber.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'append wa_header to header_data.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''APPL_LOG_READ_DB'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  OBJECT                   = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  SUBOBJECT                = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXTERNAL_NUMBER          = IV_EXT_ID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   HEADER_DATA              = header_data'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  MESSAGES                 =  messages.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  if sy-subrc is initial.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    clear et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    loop at messages into wa_messages.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-type =  wa_messages-msgty.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-id =   wa_messages-msgid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-number = wa_messages-msgnumber.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message_v1 = wa_messages-msgv1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message_v2 = wa_messages-msgv2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message_v3 = wa_messages-msgv3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message_v4 = wa_messages-msgv4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      append et_file_return .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    endloop.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  endif.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF IV_ACTION = ''LOG_DEL''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''APPL_LOG_DELETE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OBJECT                          = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    SUBOBJECT                        =  IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    EXTERNAL_NUMBER                  =  IV_EXT_ID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    DATE_TO                         =  dateto'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   TIME_TO                          =  timeto'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   LOG_CLASS                        = ''1'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   I_WITH_COMMIT_WORK               = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   I_PACKAGE_SIZE                   = 100'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   NO_AUTHORITY                     = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   OTHERS                           = 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF SY-SUBRC <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-MESSAGE = ''Application Log Deleted''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6412]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8f6043d7-8700-4a53-a128-aa665caa4a20]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3533]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[150]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_LOGMSG_ADD_TASK]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[12c40a1d-a6d9-49c3-808f-b2fc8825aaa6]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6412]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0"  "-ABAP_PROGRAM_NAME=ZODI_LOGMSG_ADD_TASK" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT ZODI_LOGMSG_ADD_TASK.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp             TYPE rsimp, 
  wa_exp             TYPE rsexp,
  wa_tables          TYPE rstbl, 
  cg_rep_tab         LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 

 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'ET_FILE_RETURN'. 
 wa_imp-TYP = 'BAPIRET2'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'I_LOG_HANDLE'. 
 wa_imp-TYP = 'BALLOGHNDL'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'LS_LOG'. 
 wa_imp-TYP = 'BAL_S_LOG'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 
 wa_tables-parameter = 'ET_HANDLE'. 
 wa_tables-TYP = 'BAPIRET2_T'. 
 wa_tables-optional = 'X'. 
 APPEND wa_tables TO  tables_parameter.
 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_LOGMSG_ADD_TASK' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter.
*CHANGING_PARAMETER = changing_parameter.
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
  DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string .
INSERT 'DATA : I_S_MSG TYPE BAL_S_MSG ,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '       E_S_MSG_HANDLE TYPE BALMSGHNDL,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '       es_file_return TYPE BAPIRET2,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '       T1 TYPE CHAR10,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '       ls_handle TYPE bapiret2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lt_handle TYPE BAL_T_LOGH.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF i_log_handle IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''BAL_LOG_CREATE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' I_S_LOG                 = ls_log'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' E_LOG_HANDLE            = i_log_handle'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' LOG_HEADER_INCONSISTENT = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'OTHERS                  = 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF SY-SUBRC <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ls_handle-message = i_log_handle.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND ls_handle TO et_handle.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ls_handle.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF et_file_return-ID IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-ID = ''CL''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF et_file_return-NUMBER IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  et_file_return-NUMBER = ''000''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGTY = et_file_return-TYPE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGID = et_file_return-ID.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGNO = et_file_return-NUMBER.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGV1 = et_file_return-MESSAGE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGV2 = et_file_return-MESSAGE_V1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGV3 = et_file_return-MESSAGE_V2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGV4 = et_file_return-MESSAGE_V3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-PROBCLASS = ''1''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''BAL_LOG_MSG_ADD'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    I_S_MSG                  = I_S_MSG'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   LOG_NOT_FOUND             = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   MSG_INCONSISTENT          = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   LOG_IS_FULL               = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   OTHERS                    = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '          .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF SY-SUBRC <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR lt_handle.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'append I_LOG_handle TO lt_handle.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''BAL_DB_SAVE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   I_CLIENT               = SY-MANDT'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   I_SAVE_ALL             = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   I_T_LOG_HANDLE         = lt_handle'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   LOG_NOT_FOUND          = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SAVE_NOT_ALLOWED       = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   NUMBERING_ERROR        = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   OTHERS                 = 4 .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF SY-SUBRC <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6413]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a69eda9b-a7d6-4086-8560-0064f56e03c9]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3534]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[170]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_LOGMSG_ADD]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[81fea430-9dd4-458b-aeae-de5d9ddb823a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6413]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0"  "-ABAP_PROGRAM_NAME=ZODI_LOGMSG_ADD" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT ZODI_LOGMSG_ADD.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp             TYPE rsimp, 
  wa_exp             TYPE rsexp, 
  wa_tables          TYPE rstbl, 
  cg_rep_tab         LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 

 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'ET_FILE_RETURN'. 
 wa_imp-TYP = 'BAPIRET2'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'I_LOG_HANDLE'. 
 wa_imp-TYP = 'BALLOGHNDL'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'LS_LOG'. 
 wa_imp-TYP = 'BAL_S_LOG'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 
 wa_tables-parameter = 'ET_HANDLE'. 
 wa_tables-TYP = 'BAPIRET2_T'. 
 wa_tables-optional = 'X'. 
 APPEND wa_tables TO  tables_parameter.
 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_LOGMSG_ADD' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter.
*CHANGING_PARAMETER = changing_parameter.
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
  DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
INSERT 'CALL FUNCTION ''ZODI_LOGMSG_ADD_TASK'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ET_FILE_RETURN       = et_file_return'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    I_LOG_HANDLE         = i_log_handle'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    LS_LOG               = ls_log'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   et_HANDLE        = et_HANDLE .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6414]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[351ba23e-c540-4902-8577-579728bc3def]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3535]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[180]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_BG_CONTROLLER]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0294b684-38ee-454a-bd79-8d304ef9ace4]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6414]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_BG_CONTROLLER" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT ZODI_BG_CONTROLLER.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    	  TYPE STANDARD TABLE OF rsexp, 
 import_parameter         TYPE STANDARD TABLE OF rsimp, 
 parameter_docu           TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter         TYPE STANDARD TABLE OF rstbl, 
 changing_parameter       TYPE STANDARD TABLE OF rscha,
  wa_imp                  TYPE rsimp, 
  wa_exp                  TYPE rsexp, 
  wa_tables               TYPE rstbl, 
  cg_rep_tab              LIKE abaptext OCCURS 20, 
 include_name             TYPE rs38l-include, 
 cg_tabix                 LIKE sy-tabix,
 t_version                TYPE cvers. 

 CLEAR: wa_imp, 
        wa_exp, 
        wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'IV_ACTION'. 
 wa_imp-TYP = 'CHAR10'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_JOBNAME'. 
 wa_imp-TYP = 'TBTCJOB-JOBNAME'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_JOBCLASS'. 
 wa_imp-TYP = 'BTCJOBCLAS'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_JOBCOUNT'. 
 wa_imp-TYP = 'TBTCJOB-JOBCOUNT'. 
 wa_imp-optional = 'X'.  
 APPEND wa_imp TO  import_parameter.  
 wa_imp-parameter = 'IV_APPOBJ_NAME'. 
 wa_imp-TYP = 'CHAR20'. 
 wa_imp-optional = 'X'.  
 APPEND wa_imp TO  import_parameter.  
 wa_imp-parameter = 'IV_SUBOBJ_NAME'. 
 wa_imp-TYP = 'CHAR20'. 
 wa_imp-optional = 'X'.  
 APPEND wa_imp TO  import_parameter.  
 wa_imp-parameter = 'IV_DELIMITER'. 
 wa_imp-TYP = 'CHAR3'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_FILENAME'. 
 wa_imp-TYP = 'CHAR255'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_USER'. 
 wa_imp-TYP = 'CHAR35'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_PWD'. 
 wa_imp-TYP = 'CHAR35'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
  wa_imp-parameter = 'IV_HOST'. 
 wa_imp-TYP = 'CHAR35'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_HASHVALUE'. 
 wa_imp-TYP = 'CHAR35'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_PATH'. 
 wa_imp-TYP = 'CHAR255'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_MAX_ROW_CNT'. 
 wa_imp-TYP = 'SYTABIX'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_FETCH_BATCH_SIZE'. 
 wa_imp-TYP = 'SYTABIX'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IT_ODIVAR'. 
 wa_imp-TYP = 'ZODI_COND'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_PROGNAME'. 
 wa_imp-TYP = 'CPROG'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
   wa_imp-parameter = 'IV_EXT_ID'. 
 wa_imp-TYP = 'BALHDR-EXTNUMBER'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
    wa_imp-parameter = 'IV_TMP_DIR_PATH'. 
 wa_imp-TYP = 'CHAR255'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'IV_LOG_DIR_PATH'. 
 wa_imp-TYP = 'CHAR255'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_exp-parameter = 'EV_JOBCOUNT'. 
 wa_exp-types  = 'X'. 
 wa_exp-dbfield  = 'TBTCJOB-JOBCOUNT'. 
 APPEND wa_exp TO  export_parameter. 
  wa_exp-parameter = 'EV_JOBSTATE'. 
 wa_exp-types  = 'X '. 
 wa_exp-dbfield  = 'TBTCO-JOBGROUP'. 
 APPEND wa_exp TO  export_parameter. 
  wa_exp-parameter = 'EV_APIVERSION'. 
 wa_exp-types  = 'X '. 
 wa_exp-dbfield  = 'TBTCJOB-JOBCOUNT'. 
 APPEND wa_exp TO  export_parameter. 
   wa_exp-parameter = 'EV_EXT_ID'. 
 wa_exp-types  = 'X '. 
 wa_exp-dbfield  = 'BALHDR-EXTNUMBER'. 
 APPEND wa_exp TO  export_parameter. 
 wa_tables-parameter = 'ET_JOBLOGTBL'. 
 wa_tables-dbstruct  = 'TBTC5'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_BG_CONTROLLER' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3.  
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
INSERT 'DATA: release_status,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IV_HANDLE TYPE BALMSGHNDL,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' E_S_MSG   TYPE  BAL_S_MSG.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA:'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_aborted     TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_finished    TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_preliminary TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_ready       TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_running     TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_scheduled   TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cond1       TYPE line,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cond2       TYPE line,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cond3       TYPE line,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cond4       TYPE line,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cond5       TYPE line,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_guid        TYPE guid_32.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'FIELD-SYMBOLS: <ls_cond> TYPE line.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA gt_message TYPE bapiret2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TYPES: BEGIN OF lty_spool,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '         name TYPE rqident,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '       END OF lty_spool.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: wa_spool TYPE lty_spool,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lt_spool TYPE TABLE OF lty_spool,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lt_tbtcp TYPE TABLE OF tbtcp,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lv_subrc TYPE sysubrc,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lv_error TYPE rspoemsg.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'FIELD-SYMBOLS: <ls_tbtcp> TYPE tbtcp.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WRITE :''Operation Selected :'',iv_action,sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NEW-LINE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF iv_action = ''JOB_SUBMIT''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''JOB_OPEN'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname          = iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobclass         = iv_jobclass'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount         = ev_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    cant_create_job  = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    invalid_job_data = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname_missing  = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OTHERS           = 4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WRITE :''Job ID is created:'',ev_jobcount,sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NEW-LINE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA:rspar_tab  TYPE TABLE OF rsparams,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     rspar_line LIKE LINE OF rspar_tab,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     wa_odivar    TYPE zodi_cond_str.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'RANGES: it_cond FOR line .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'LOOP AT it_odivar INTO wa_odivar.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-sign = ''I''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-option = ''EQ''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-low = wa_odivar-field.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  APPEND it_cond.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-sign = ''I''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-option = ''EQ''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-low = wa_odivar-val.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  APPEND it_cond.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CLEAR : wa_odivar,it_cond.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDLOOP.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''GUID_CREATE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EV_GUID_32       =   lv_guid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EV_EXT_ID = lv_guid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*********************************'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*****Version control code********'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*********************************'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF NOT IV_TMP_DIR_PATH IS INITIAL'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'OR NOT IV_LOG_DIR_PATH IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '**submit report with IV_TMP_DIR_PATH field****'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SUBMIT (iv_progname)'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND RETURN'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_deli = iv_delimiter'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_file = iv_filename'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_user  = iv_user'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_pwd   = iv_pwd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_host  = iv_host'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_hash = iv_hashvalue'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_path  = iv_path'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_maxc = iv_max_row_cnt'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_fetc = iv_fetch_batch_size'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_app = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_SUb = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_EXTID        = EV_EXT_ID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_TMDIR = IV_TMP_DIR_PATH'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_LODIR = IV_LOG_DIR_PATH'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH it_cond IN it_cond'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'USER sy-uname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VIA JOB iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NUMBER ev_jobcount.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '**submit report without IV_TMP_DIR_PATH field****'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  SUBMIT (iv_progname)'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND RETURN'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_deli = iv_delimiter'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_file = iv_filename'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_user  = iv_user'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_pwd   = iv_pwd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_host  = iv_host'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_hash = iv_hashvalue'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_path  = iv_path'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_maxc = iv_max_row_cnt'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_fetc = iv_fetch_batch_size'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_app = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_SUb = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_EXTID        = EV_EXT_ID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH it_cond IN it_cond'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'USER sy-uname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VIA JOB iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NUMBER ev_jobcount.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WRITE: ''Job Submitted'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NEW-LINE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''JOB_CLOSE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount             = ev_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname              = iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    strtimmed            = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_was_released     = release_status'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    cant_start_immediate = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    invalid_startdate    = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname_missing      = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_close_failed     = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_nosteps          = 5'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_notex            = 6'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    lock_failed          = 7'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    invalid_target       = 8'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OTHERS               = 9.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WRITE :''Job Close with release status'',release_status.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NEW-LINE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF iv_action = ''JOB_STATE''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''SHOW_JOBSTATE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount         = iv_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname          = iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    aborted          = lv_aborted'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    finished         = lv_finished'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    preliminary      = lv_preliminary'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ready            = lv_ready'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    running          = lv_running'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    scheduled        = lv_scheduled'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount_missing = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname_missing  = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_notex        = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OTHERS           = 4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc = 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF lv_aborted  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''ABORTED''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is aborted'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSEIF lv_finished  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''FINISHED''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is Finished'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSEIF lv_preliminary  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''PRELIMINARY''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is Preliminary'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSEIF lv_ready  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''READY''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is ready'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSEIF lv_running  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''RUNNING''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is running'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSEIF lv_scheduled  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''SCHEDULED''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is scheduled'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF iv_action = ''JOB_LOG''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''BP_JOBLOG_READ'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    client                = sy-mandt'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount              = iv_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    joblog                = '' '''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname               = iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    joblogtbl             = et_joblogtbl'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    cant_read_joblog      = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount_missing      = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    joblog_does_not_exist = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    joblog_is_empty       = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    joblog_name_missing   = 5'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname_missing       = 6'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_does_not_exist    = 7'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OTHERS                = 8.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  et_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CASE sy-subrc.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Cannot Read the Job log''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job Count Missing''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job Log does not exist''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job Log is empty''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 5.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job Log name is missing''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 6.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job name is missing''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 7.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job does not exist''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDCASE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'LOOP AT et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  WRITE :et_file_return-message.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  NEW-LINE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDLOOP.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF  iv_action = ''API_VERSION''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ev_apiversion = ''1.0''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF iv_action = ''JOB_ABORT''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: ls_tbtco TYPE tbtco,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lv_procid TYPE WPPID.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''BP_JOB_ABORT'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount                   = iv_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname                    = iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    checking_of_job_has_failed = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_abort_has_failed       = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_does_not_exist         = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_is_not_active          = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    no_abort_privilege_given   = 5'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OTHERS                     = 6.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*New Logic'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' DO 5 TIMES.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' SELECT SINGLE * from tbtco'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ls_tbtco'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WHERE jobname eq iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' AND jobcount eq iv_jobcount.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF sy-subrc IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF ls_tbtco-status = ''A''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WRITE :''Job is forcefully aborted'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lv_procid = ls_tbtco-wpprocid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    CALL FUNCTION ''TH_STOP_WP'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '        WP_PID             = lv_procid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDDO.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF iv_action = ''JOB_SPOOL''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  DATA: lv_spool_num TYPE btclistid,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '        lv_spool TYPE rspoid,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '        it_spool_xls TYPE TABLE OF LINE,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '        wa_spool_xls TYPE line.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  SELECT SINGLE listident'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  FROM tbtcp'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  INTO lv_spool_num'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  WHERE jobname EQ iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  AND jobcount  EQ iv_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  AND stepcount EQ 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF sy-subrc EQ 0 AND NOT lv_spool_num IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lv_spool = lv_spool_num.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CALL FUNCTION ''RSPO_RETURN_ABAP_SPOOLJOB'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      rqident                    = lv_spool'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*  FIRST_LINE                 = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*  LAST_LINE                  ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      buffer                     = it_spool_xls'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     no_such_job                = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     not_abap_list              = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     job_contains_no_data       = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     selection_empty            = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     no_permission              = 5'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     can_not_access             = 6'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     read_error                 = 7'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     OTHERS                     = 8.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'LOOP AT it_spool_xls INTO wa_spool_xls.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  et_file_return-message = wa_spool_xls.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CLEAR : wa_spool_xls.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDLOOP.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF iv_action = ''SPOOL_CLR''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT * FROM tbtcp'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'INTO TABLE lt_tbtcp'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WHERE jobname EQ iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND JOBCOUNT eq IV_JOBCOUNT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc EQ 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  LOOP AT lt_tbtcp ASSIGNING <ls_tbtcp>.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    wa_spool-name = <ls_tbtcp>-listident.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    APPEND wa_spool TO lt_spool.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    CLEAR wa_spool.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDLOOP.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DELETE lt_spool WHERE name IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'LOOP AT lt_spool INTO wa_spool.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CALL FUNCTION ''RSPO_R_RDELETE_SPOOLREQ'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      spoolid             = wa_spool-name'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     status              = lv_subrc.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF lv_subrc NE 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO et_file_return-message'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-message = ''Spool is deleted''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-message_v1 = wa_spool-name.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDLOOP.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF IV_ACTION = ''LOG_DISP'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OR IV_ACTION = ''LOG_DEL''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''ZODI_APPLOG'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IV_ACTION            = IV_ACTION'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IV_APPOBJ_NAME       = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IV_SUBOBJ_NAME       = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IV_EXT_ID            = IV_EXT_ID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ET_FILE_RETURN       = ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6415]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9e790840-e27e-423e-b1a3-ef803f0b8b29]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3536]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[190]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_BG_REPORT_SAVE_ACT]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[18768573-ff7a-476c-980d-7f801c4d300a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6415]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_BG_REPORT_SAVE_ACTV" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT Z_CODE_PACKAGE_ACTIVATE_BG.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter         TYPE STANDARD TABLE OF rsexp, 
 import_parameter         TYPE STANDARD TABLE OF rsimp, 
 parameter_docu           TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter         TYPE STANDARD TABLE OF rstbl, 
 changing_parameter       TYPE STANDARD TABLE OF rscha,
  wa_imp                  TYPE rsimp, 
  wa_exp                  TYPE rsexp, 
  wa_tables               TYPE rstbl, 
  cg_rep_tab              LIKE abaptext OCCURS 20, 
 include_name             TYPE rs38l-include, 
 cg_tabix                 LIKE sy-tabix,
 t_version                TYPE cvers.

 CLEAR: wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 

 wa_imp-parameter = 'IV_PROGNAME'. 
 wa_imp-TYP = 'CPROG'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_PACKAGE'. 
 wa_imp-TYP = 'DEVCLASS'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 

wa_imp-parameter = 'IV_PREFIX'. 
 wa_imp-TYP = 'CHAR100'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 

 wa_imp-parameter = 'OBJECT'. 
 wa_imp-TYP = 'TROBJTYPE'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 

wa_imp-parameter = 'IV_DESC'. 
 wa_imp-TYP = 'AS4TEXT'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 
wa_imp-parameter = 'IV_TRAN_LAYER'. 
 wa_imp-TYP = 'BAPISCTS02'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 

 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_BG_REPORT_SAVE_ACTV' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string .
INSERT 'CONSTANTS: c_shorttext  TYPE trdevclass-ctext'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VALUE ''ODI Package'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'c_reqtext         TYPE e07t-as4text'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VALUE ''ODI Transport Request'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'c_request         TYPE e070-trfunction'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VALUE ''K'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'c_task            TYPE e070-trfunction'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VALUE ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA:'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'trans_req_no        TYPE e070-trkorr,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'task_number         TYPE e070-trkorr,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lt_ko200            TYPE TREDT_OBJECTS ,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200            TYPE ko200.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lt_E07T TYPE TABLE OF E07T,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_E07T TYPE E07T,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lt_e070 TYPE TABLE OF e070,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lt_e071 TYPE TABLE OF e071,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_e071 TYPE e071,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_e070 TYPE e070,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_skip TYPE char1,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ls_e07t TYPE e07t.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: ls_ret TYPE  BAPIRET2,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ls_task TYPE BAPISCTS07,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lt_task TYPE TABLE OF BAPISCTS07,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ls_author TYPE BAPISCTS12,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      tran_layer type BAPISCTS02,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lt_author TYPE TABLE OF BAPISCTS12.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR lv_skip.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF NOT IV_PREFIX IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CONCATENATE IV_PREFIX ''%'' INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IV_PREFIX.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IV_PREFIX = IV_PROGNAME.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT *'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' FROM e071'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO TABLE lt_e071'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WHERE pgmid = ''R3TR'' AND'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' object = object AND'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' obj_name LIKE IV_PREFIX AND'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' lockflag = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF sy-subrc IS INITIAL AND'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  NOT lt_e071 IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   READ TABLE lt_e071 INTO wa_e071'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INDEX 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF sy-subrc IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' SELECT SINGLE * from e070 INTO wa_e070'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WHERE TRKORR = wa_e071-trkorr.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF sy-subrc is initial.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF NOT wa_e070-strkorr IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' trans_req_no = wa_e070-strkorr.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' trans_req_no = wa_e071-trkorr.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*Getting the transport description'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' SELECT SINGLE * from e07t'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ls_e07t'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WHERE langu = sy-langu'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' AND trkorr = trans_req_no.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF sy-subrc IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF ls_e07t-as4text <> iv_desc.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ls_e07t-as4text = iv_desc.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    UPDATE e07t FROM ls_e07t.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IF sy-subrc IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      COMMIT WORK AND WAIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message = ''TR Description Updated''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' lv_skip = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF lv_skip IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR trans_req_no.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ls_task-type = ''K''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ls_task-author = sy-uname.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND ls_task TO lt_task.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ls_author-task_owner = sy-uname.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND ls_author TO lt_author.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*tran_layer-LAYER_SET = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*tran_layer-LAYER = iv_tran_layer.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'tran_layer = iv_tran_layer.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CALL FUNCTION ''BAPI_CTREQUEST_CREATE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    REQUEST_TYPE       = ''K'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    AUTHOR             = sy-uname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    TEXT               = c_reqtext'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    TRANSLAYER         = tran_layer'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    REQUESTID          = trans_req_no'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    RETURN             = ls_ret'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     AUTHORLIST         = lt_author'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     TASK_LIST          = lt_task.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   et_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   et_file_return-MESSAGE =  ls_ret-message.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   READ TABLE lt_task INTO ls_task INDEX 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   IF sy-subrc = 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    task_number = ls_task-taskid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-trkorr = trans_req_no.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-pgmid = ''R3TR''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-object = ''PROG''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-obj_name = IV_PROGNAME.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-devclass = IV_PACKAGE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-operation = ''I''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_ko200 TO lt_ko200.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR wa_ko200.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''TR_EDIT_CHECK_OBJECTS_KEYS'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WI_ORDER                             = trans_req_no'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WI_WITH_DIALOG                       = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WI_SEND_MESSAGE                      = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IV_APPEND_TO_ORDER                   = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WT_E071                              = lt_ko200'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_APPEND_ERROR_KEYS        = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_APPEND_ERROR_OBJCT       = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_APPEND_ERROR_ORDER       = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_BUT_SE01                 = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_NO_HEADER_OBJECT         = 5'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_NO_ORDER_SELECTED        = 6'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_REPAIRED_OBJECT          = 7'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_SYSTEM_ERROR             = 8'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_TADIR_MISSING            = 9'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_TADIR_UPDATE_ERROR       = 10'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_UNKNOWN_DEVCLASS         = 11'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_UNKNOWN_OBJECTTYPE       = 12'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_CLOSED_SYSTEM              = 13'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_CONSOLIDATION_LEVEL        = 14'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_DDIC_IN_CUSTOMER_SYS       = 15'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_DELIVERY_SYSTEM            = 16'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_DIFFERENT_ORDERTYPES       = 17'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_DIFFERENT_TASKTYPES        = 18'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_ENQUEUE_FAILED             = 19'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_GENERATED_OBJECT           = 20'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_ILL_LOCK                   = 21'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_LOCK_ENQUEUE_FAILED        = 22'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_MIXED_ORDERS               = 23'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_MIX_LOCAL_TRANSP_OBJ       = 24'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_NO_SHARED_REPAIR           = 25'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_OBJECT_LOCKED              = 26'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_REPAIRED_OBJECT            = 27'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_SHOW_CLIENT                = 28'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_TADIR_MISSING              = 29'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_UNKNOWN_DEVCLASS           = 30'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_NO_CHECK_CALL            = 31'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_CATEGORY_MIXTURE         = 32'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_CLOSED_CLIENT              = 33'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_CLOSED_ALE_OBJECT          = 34'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_UNALLOWED_SUPERUSER        = 35'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_CUSTOM_OBJ_AT_SAP        = 36'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_ACCESS_DENIED            = 37'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_NO_REPAIR_SYSTEM           = 38'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_NO_LICENSE                 = 39'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_CENTRAL_BASIS              = 40'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_USER_AFTER_ERROR           = 41'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_USER_AFTER_ERROR         = 42'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_OBJECT_NOT_PATCHABLE       = 43'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   OTHERS                               = 44.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF SY-SUBRC <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO et_file_return-message'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-message = ''Program added  to package''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6416]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e9e2dcfa-5e64-42c5-9008-b0c50074ae09]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3537]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[200]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install SAP Version check RFC]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9d6c6d54-2401-4212-b979-5431adf39d02]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6416]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_GET_VERSION" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-ABAP_EXPORT_PARAMETERS=" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT ZODI_GET_VERSION.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 
 
DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    	  TYPE STANDARD TABLE OF rsexp, 
 import_parameter         TYPE STANDARD TABLE OF rsimp, 
 parameter_docu           TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter         TYPE STANDARD TABLE OF rstbl, 
 changing_parameter       TYPE STANDARD TABLE OF rscha,
  wa_imp                  TYPE rsimp, 
  wa_exp                  TYPE rsexp, 
  wa_tables               TYPE rstbl, 
  cg_rep_tab              LIKE abaptext OCCURS 20, 
 include_name             TYPE rs38l-include, 
 cg_tabix                 LIKE sy-tabix,
 t_version                TYPE cvers. 

 CLEAR: wa_imp, 
        wa_exp, 
        wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_exp-parameter = 'EX_VERSION'. 
 wa_exp-typ  = 'CHAR20'. 
 APPEND wa_exp TO  export_parameter.
 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_GET_VERSION' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3.  
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
 INSERT 'ex_version = ''39''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6417]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6fbf4593-7225-4007-8af3-df7dd7f3d981]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3538]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[210]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install Get Module RFC]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[09888623-e40e-4905-8046-269ef025d930]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6417]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_GET_SAP_MODULES" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-ABAP_TABLE_PARAMETERS=ET_FILE_RETURN,BAPIRET2;IT_APPLN,ZODI_APPL_COMP" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
TYPES:BEGIN OF lt_comp,
id    TYPE ufps_posid,
desc  TYPE udtext,
END OF lt_comp.

DATA: wa_comp   TYPE lt_comp,
it_comp   TYPE STANDARD TABLE OF lt_comp,
wa_appl   TYPE df14l,
it_appl   TYPE STANDARD TABLE OF df14l,
wa_df14t  TYPE df14t,
it_df14t  TYPE STANDARD TABLE OF df14t,
wa_appln  TYPE zodi_appl_comp.

SELECT * FROM df14l
INTO TABLE it_appl.

IF NOT it_appl IS INITIAL.

SELECT * FROM df14t
INTO TABLE it_df14t
FOR ALL ENTRIES IN it_appl
WHERE langu  = 'EN'
AND   addon  = ' '
AND   fctr_id  = it_appl-fctr_id
AND   as4local = 'A'.

ENDIF.

SORT it_df14t BY fctr_id.
SORT it_appl  BY fctr_id.

LOOP AT it_appl INTO wa_appl.

READ TABLE it_df14t INTO wa_df14t WITH KEY 
fctr_id  = wa_appl-fctr_id
BINARY SEARCH.

IF sy-subrc EQ 0.

wa_comp-id    = wa_appl-ps_posid.
wa_comp-desc  = wa_df14t-name.
APPEND wa_comp TO it_comp.

ENDIF.

ENDLOOP.

SORT it_comp BY id ASCENDING.

LOOP AT it_comp INTO wa_comp.

SEARCH wa_comp-id FOR '-'.

IF sy-subrc NE 0.

wa_appln  = wa_comp.
APPEND wa_appln TO it_appln.

ENDIF.
ENDLOOP.

DELETE ADJACENT DUPLICATES FROM 
it_appln COMPARING appl_comp.

SORT it_appln BY appl_comp ASCENDING."]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6418]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2b365bc7-6197-466a-9d41-f6eb7b353d12]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3539]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[220]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install Get Tables RFC]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5b5adb5a-57ea-44e0-8a34-c4adbd067973]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6418]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_RFC_GET_TABLES" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_FLAG,CHAR1;IV_VIEW_FLAG,CHAR1;IV_TABLE,CHAR30;IV_PACKG,CHAR30;IV_AP_COMP,CHAR30;IV_DESC,CHAR80" "-ABAP_TABLE_PARAMETERS=ET_TBL_LIST,ZODI_BAPI_S_TBL_LIST;ET_RETURN,BAPIRET2" "-ABAP_EXCEPTION_PARAMETERS=TABLES_NOT_AVAILABLE;TABLE_NOT_AVAILABLE;DESCRIPTION_NOT_MATCHING;PACKAGE_NOT_AVAILABLE;APPL_COMP_NOT_AVAILABLE;PACKAGE_TABLE_NOT_AVAILABLE" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
*{   INSERT         EI6K900116               1
*Data Declaration
*Variables
DATA: gc_msgclass(15) TYPE c VALUE 'ZODI_MSG'.
DATA: gc_error VALUE 'E'.
DATA: gc_success VALUE 'S'.
DATA: BEGIN OF gt_message,
msgty LIKE sy-msgty,
msgid LIKE sy-msgid,
message LIKE sy-msgli,
msgno LIKE sy-msgno,
msgv1 LIKE sy-msgv1,
msgv2 LIKE sy-msgv2,
msgv3 LIKE sy-msgv3,
msgv4 LIKE sy-msgv4,
END OF gt_message.
DATA: lv_devclass        TYPE devclass.
DATA: lv_component       TYPE uffctr.
DATA: lv_module_name(24) TYPE c.
DATA: lv_comments(100)   TYPE c.
DATA: lv_tabclass        TYPE tabclass.
DATA: lv_tabname         TYPE tabname.
DATA: lv_count           TYPE i.
*Internal Tables
DATA: it_tbl_detls TYPE TABLE OF dd02l WITH
HEADER LINE.
DATA: it_tadir     TYPE TABLE OF tadir WITH
HEADER LINE.
DATA: it_tdevc     TYPE TABLE OF tdevc WITH
HEADER LINE.
DATA: lt_dd02t     TYPE TABLE OF dd02t WITH
HEADER LINE.
DATA: lt_df14l     TYPE TABLE OF df14l WITH
HEADER LINE.
DATA : gt_return  TYPE bapiret2.
FIELD-SYMBOLS: <fs1> TYPE ANY.
DATA:          oref1 TYPE REF TO data.
DATA: t_version           TYPE cvers.


IF iv_flag = ' ' .

if IV_VIEW_FLAG  = 'X'.
SELECT * FROM dd02l INTO TABLE it_tbl_detls
WHERE tabclass = 'VIEW'
AND as4local = 'A'
AND viewclass IN ('D','P').
else.
SELECT * FROM dd02l INTO TABLE it_tbl_detls
WHERE tabclass IN
('POOL','CLUSTER','TRANSP')
AND as4local = 'A'.
endif.

***For error message on table
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 000.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return-message TO et_return.
ENDIF.
****end of error message
LOOP AT it_tbl_detls .
Clear : lv_comments,lv_devclass,
lv_component,lv_module_name.
SELECT SINGLE ddtext INTO lv_comments
FROM dd02t
WHERE tabname = it_tbl_detls-tabname
AND ddlanguage = sy-langu.
SELECT SINGLE devclass FROM tadir INTO
lv_devclass
WHERE pgmid ='R3TR'
AND   object = 'TABL'
AND obj_name = it_tbl_detls-tabname.
SELECT SINGLE component FROM tdevc INTO
lv_component
WHERE devclass = lv_devclass.
SELECT SINGLE ps_posid FROM df14l INTO
lv_module_name
WHERE fctr_id  = lv_component
AND   as4local = 'A'.
MOVE it_tbl_detls-tabname  TO
et_tbl_list-tabname.
MOVE it_tbl_detls-tabclass TO
et_tbl_list-tabclass.
MOVE lv_devclass           TO
et_tbl_list-devclass.
MOVE lv_comments           TO
et_tbl_list-comments.
MOVE lv_module_name        TO
et_tbl_list-module_name.
APPEND et_tbl_list.
CLEAR it_tbl_detls.
ENDLOOP.
SORT et_tbl_list BY module_name ASCENDING.
ELSE.
DO.
REPLACE '*' WITH '%' INTO iv_table.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
DO.
REPLACE '+' WITH '_' INTO iv_table.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
DO.
REPLACE '*' WITH '%' INTO iv_packg.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
DO.
REPLACE '+' WITH '_' INTO iv_packg.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
DO.
REPLACE '*' WITH '%' INTO iv_desc.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
DO.
REPLACE '+' WITH '_' INTO iv_desc.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
DO.
REPLACE '*' WITH '%' INTO iv_ap_comp.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
DO.
REPLACE '+' WITH '_' INTO iv_ap_comp.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
IF iv_table NE space.
IF iv_packg NE space.
IF iv_ap_comp NE space.
IF iv_desc NE space.
*Get based upon table,package,application
*component and table desc.

IF IV_VIEW_FLAG = 'X'.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN ('VIEW')
AND as4local = 'A'
AND tabname LIKE iv_table
AND viewclass IN ('D','P').

ELSE.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN
('POOL','CLUSTER','TRANSP')
AND as4local = 'A'
AND tabname LIKE iv_table.
ENDIF.


****for Wrong table name
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 000.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tbl_detls .
SELECT * FROM dd02t INTO
TABLE lt_dd02t
WHERE tabname = it_tbl_detls-tabname
AND ddlanguage LIKE sy-langu
AND ddtext     LIKE iv_desc.
****for Wrong table description
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 001.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_dd02t.
SELECT * FROM tadir INTO
TABLE it_tadir
WHERE pgmid = 'R3TR'
AND   object = 'TABL'
AND obj_name =
it_tbl_detls-tabname
AND devclass LIKE iv_packg.
****for Wrong Package
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 002.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tadir.
Clear : lv_component.
SELECT SINGLE component FROM
tdevc INTO lv_component
WHERE devclass =
it_tadir-devclass.
SELECT * FROM df14l INTO
TABLE lt_df14l
WHERE fctr_id  = lv_component
AND  as4local = 'A'
AND  ps_posid LIKE iv_ap_comp.
****for Wrong Application component
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 003.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_df14l.
MOVE it_tbl_detls-tabname  TO
et_tbl_list-tabname.
MOVE it_tbl_detls-tabclass TO
et_tbl_list-tabclass.
MOVE it_tadir-devclass     TO
et_tbl_list-devclass.
MOVE lt_dd02t-ddtext       TO
et_tbl_list-comments.
MOVE lt_df14l-ps_posid     TO
et_tbl_list-module_name.
APPEND et_tbl_list.
CLEAR it_tbl_detls.
ENDLOOP.
***********Endif for wrong Application comp.
ENDIF.
************************************
ENDLOOP.
***********Endif for wrong package
ENDIF.
************************************
ENDLOOP.
***********Endif for wrong table descritption
ENDIF.
************************************
ENDLOOP.
***********Endif for wrong table name
ENDIF.
************************************
ELSE.
*Get based upon table, package and application
*component name.
IF IV_VIEW_FLAG = 'X'.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN ('VIEW')
AND as4local = 'A'
AND tabname LIKE iv_table
AND viewclass IN ('D','P').

ELSE.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN
('POOL','CLUSTER','TRANSP')
AND as4local = 'A'
AND tabname LIKE iv_table.
ENDIF.

****for Wrong table name
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 000.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tbl_detls .
Clear : lv_comments.
SELECT SINGLE ddtext FROM dd02t
INTO lv_comments
WHERE tabname =
it_tbl_detls-tabname
AND ddlanguage LIKE sy-langu.
SELECT * FROM tadir INTO
TABLE it_tadir
WHERE pgmid = 'R3TR'
AND   object = 'TABL'
AND obj_name = it_tbl_detls-tabname
AND devclass LIKE iv_packg.
****for Wrong Package
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 002.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tadir.
Clear : lv_component.
SELECT SINGLE component FROM
tdevc INTO lv_component
WHERE devclass =
it_tadir-devclass.
SELECT * FROM df14l INTO
TABLE lt_df14l
WHERE fctr_id  = lv_component
AND   as4local = 'A'
AND ps_posid LIKE iv_ap_comp.
****for Wrong Application component
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 003.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_df14l.
MOVE it_tbl_detls-tabname  TO
et_tbl_list-tabname.
MOVE it_tbl_detls-tabclass TO
et_tbl_list-tabclass.
MOVE it_tadir-devclass     TO
et_tbl_list-devclass.
MOVE lv_comments           TO
et_tbl_list-comments.
MOVE lt_df14l-ps_posid     TO
et_tbl_list-module_name.
APPEND et_tbl_list.
CLEAR it_tbl_detls.
ENDLOOP.
***********Endif for wrong application component
ENDIF.
************************************
ENDLOOP.
***********Endif for wrong package
ENDIF.
************************************
ENDLOOP.
***********Endif for wrong table name
ENDIF.
************************************
ENDIF.
ELSEIF iv_desc NE space.
*Get based upon table, package and
*table descritption.

IF IV_VIEW_FLAG = 'X'.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN ('VIEW')
AND as4local = 'A'
AND tabname LIKE iv_table
AND viewclass IN ('D','P').

else.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN
('POOL','CLUSTER','TRANSP')
AND as4local = 'A'
AND tabname LIKE iv_table.

endif.


****for Wrong table name
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 000.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tbl_detls .
SELECT * FROM dd02t INTO TABLE
lt_dd02t
WHERE tabname = it_tbl_detls-tabname
AND ddlanguage LIKE sy-langu
AND ddtext LIKE iv_desc.
****for Wrong table description
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 001.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_dd02t.
SELECT * FROM tadir INTO TABLE
it_tadir
WHERE pgmid = 'R3TR'
AND   object = 'TABL'
AND obj_name = it_tbl_detls-tabname
AND devclass LIKE iv_packg.
****for Wrong Package
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 002.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tadir.
Clear : lv_component,
lv_module_name.
SELECT SINGLE component FROM
tdevc INTO lv_component
WHERE devclass =
it_tadir-devclass.
SELECT SINGLE ps_posid FROM
df14l INTO lv_module_name
WHERE fctr_id  = lv_component
AND   as4local = 'A'.
MOVE it_tbl_detls-tabname  TO
et_tbl_list-tabname.
MOVE it_tbl_detls-tabclass TO
et_tbl_list-tabclass.
MOVE it_tadir-devclass     TO
et_tbl_list-devclass.
MOVE lt_dd02t-ddtext       TO
et_tbl_list-comments.
MOVE lv_module_name        TO
et_tbl_list-module_name.
APPEND et_tbl_list.
CLEAR it_tbl_detls.
ENDLOOP.
***********Endif for wrong package
ENDIF.
************************************
ENDLOOP.
***********Endif for wrong table description
ENDIF.
************************************
ENDLOOP.
***********Endif for wrong table name
ENDIF.
************************************
ELSE.
*Get based upon table and package name.
if iv_view_flag = 'X'.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN ('VIEW')
AND as4local = 'A'
AND tabname LIKE iv_table
AND viewclass IN ('D','P').
else.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN
('POOL','CLUSTER','TRANSP')
AND as4local = 'A'
AND tabname LIKE iv_table.
endif.
****for Wrong table name
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 000.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
***************
LOOP AT it_tbl_detls .
Clear : lv_comments.
SELECT SINGLE ddtext FROM dd02t INTO
lv_comments
WHERE tabname = it_tbl_detls-tabname
AND ddlanguage LIKE sy-langu.
SELECT * FROM tadir INTO TABLE
it_tadir
WHERE pgmid = 'R3TR'
AND   object = 'TABL'
AND obj_name = it_tbl_detls-tabname
AND devclass LIKE iv_packg.
****for Wrong Package
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 002.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tadir.
Clear : lv_component,
lv_module_name.
SELECT SINGLE component FROM tdevc
INTO lv_component
WHERE devclass = it_tadir-devclass.
SELECT SINGLE ps_posid FROM df14l
INTO lv_module_name
WHERE fctr_id  = lv_component
AND   as4local = 'A'.
MOVE it_tbl_detls-tabname  TO
et_tbl_list-tabname.
MOVE it_tbl_detls-tabclass TO
et_tbl_list-tabclass.
MOVE it_tadir-devclass     TO
et_tbl_list-devclass.
MOVE lv_comments           TO
et_tbl_list-comments.
MOVE lv_module_name        TO
et_tbl_list-module_name.
APPEND et_tbl_list.
CLEAR it_tbl_detls.
ENDLOOP.
***********Endif for wrong package
ENDIF.
************************************
ENDLOOP.
***********Endif for wrong table name
ENDIF.
************************************
ENDIF.
ELSEIF iv_ap_comp NE space.
IF iv_desc NE space.
*Get based upon table, application component
*and Description
if iv_view_flag = 'X'.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN ('VIEW')
AND as4local = 'A'
AND tabname LIKE iv_table
AND viewclass IN ('D','P').
else.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN
('POOL','CLUSTER','TRANSP')
AND as4local = 'A'
AND tabname LIKE iv_table.
endif.
****for Wrong table name
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 000.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
***************
LOOP AT it_tbl_detls .
SELECT * FROM dd02t INTO TABLE
lt_dd02t
WHERE tabname = it_tbl_detls-tabname
AND ddlanguage LIKE sy-langu
AND ddtext LIKE iv_desc.
****for Wrong table description
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 001.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_dd02t.
Clear : lv_devclass,lv_component.
SELECT SINGLE devclass FROM tadir
INTO lv_devclass
WHERE pgmid = 'R3TR'
AND   object = 'TABL'
AND obj_name =
it_tbl_detls-tabname.
SELECT SINGLE component FROM
tdevc INTO lv_component
WHERE devclass = lv_devclass.
SELECT * FROM df14l INTO TABLE
lt_df14l
WHERE fctr_id  = lv_component
AND   as4local = 'A'
AND ps_posid LIKE iv_ap_comp.
****for Wrong Application component
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 003.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_df14l.
MOVE it_tbl_detls-tabname  TO
et_tbl_list-tabname.
MOVE it_tbl_detls-tabclass TO
et_tbl_list-tabclass.
MOVE lv_devclass           TO
et_tbl_list-devclass.
MOVE lt_dd02t-ddtext       TO
et_tbl_list-comments.
MOVE lt_df14l-ps_posid     TO
et_tbl_list-module_name.
APPEND et_tbl_list.
CLEAR it_tbl_detls.
ENDLOOP.
******endif for wrong applicaion comp.
ENDIF.
************************
ENDLOOP.
******endif for wrong description
ENDIF.
************************
ENDLOOP.
******endif for wrong table
ENDIF.
************************
ELSE.
*Get based upon table and application component.
if iv_view_flag = 'X'.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN ('VIEW')
AND as4local = 'A'
AND tabname LIKE iv_table
AND viewclass IN ('D','P').

else.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN
('POOL','CLUSTER','TRANSP')
AND as4local = 'A'
AND tabname LIKE iv_table.
endif.
****for Wrong table name
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 000.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
***************
LOOP AT it_tbl_detls .
clear : lv_comments,lv_devclass.
SELECT SINGLE ddtext FROM dd02t INTO
lv_comments
WHERE tabname = it_tbl_detls-tabname
AND ddlanguage LIKE sy-langu.
SELECT SINGLE devclass FROM tadir
INTO lv_devclass
WHERE pgmid = 'R3TR'
AND   object = 'TABL'
AND obj_name = it_tbl_detls-tabname
..
SELECT SINGLE component FROM tdevc
INTO lv_component
WHERE devclass = lv_devclass.
SELECT * FROM df14l INTO TABLE
lt_df14l
WHERE fctr_id  = lv_component
AND   as4local = 'A'
AND ps_posid LIKE iv_ap_comp.
****for Wrong Application component
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 003.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_df14l.
MOVE it_tbl_detls-tabname  TO
et_tbl_list-tabname.
MOVE it_tbl_detls-tabclass TO
et_tbl_list-tabclass.
MOVE lv_devclass           TO
et_tbl_list-devclass.
MOVE lv_comments           TO
et_tbl_list-comments.
MOVE lt_df14l-ps_posid     TO
et_tbl_list-module_name.
APPEND et_tbl_list.
CLEAR it_tbl_detls.
ENDLOOP.
********endif for worng application comp.
ENDIF.
*************************
ENDLOOP.
********endif for worng table name
ENDIF.
*************************
ENDIF.
ELSEIF iv_desc NE space.
*Get based upon TABLE and table description.
if iv_view_flag = 'X'.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN ('VIEW')
AND as4local = 'A'
AND tabname LIKE iv_table
AND viewclass IN ('D','P').

else.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN
('POOL','CLUSTER','TRANSP')
AND as4local = 'A'
AND tabname LIKE iv_table.
endif.

****for Wrong table name
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 000.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
***************
LOOP AT it_tbl_detls .
SELECT * FROM dd02t INTO TABLE
lt_dd02t
WHERE tabname = it_tbl_detls-tabname
AND ddlanguage LIKE sy-langu
AND ddtext LIKE iv_desc.
****for Wrong table description
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 001.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_dd02t.
Clear : lv_devclass, lv_component,
lv_module_name.
SELECT SINGLE devclass FROM tadir
INTO lv_devclass
WHERE pgmid = 'R3TR'
AND   object = 'TABL'
AND obj_name = it_tbl_detls-tabname.
SELECT SINGLE component FROM tdevc
INTO lv_component
WHERE devclass = it_tadir-devclass.
SELECT SINGLE ps_posid FROM df14l
INTO lv_module_name
WHERE fctr_id  = lv_component
AND   as4local = 'A'.
MOVE it_tbl_detls-tabname  TO
et_tbl_list-tabname.
MOVE it_tbl_detls-tabclass TO
et_tbl_list-tabclass.
MOVE lv_devclass           TO
et_tbl_list-devclass.
MOVE lt_dd02t-ddtext       TO
et_tbl_list-comments.
MOVE lv_module_name        TO
et_tbl_list-module_name.
APPEND et_tbl_list.
CLEAR it_tbl_detls.
ENDLOOP.
********endif for wrong table description
ENDIF.
***************************
ENDLOOP.
********endif for wrong table name
ENDIF.
***************************
ELSE.
*Get based upon table name.
if iv_view_flag = 'X'.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN ('VIEW')
AND as4local = 'A'
AND tabname LIKE iv_table
AND viewclass IN ('D','P').

else.
SELECT * FROM dd02l INTO TABLE
it_tbl_detls
WHERE tabclass IN
('POOL','CLUSTER','TRANSP')
AND as4local = 'A'
AND tabname LIKE iv_table.
endif.

****for Wrong table name
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 000.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
***************
LOOP AT it_tbl_detls .
Clear : lv_comments,lv_devclass,
lv_component,lv_module_name.
SELECT SINGLE ddtext FROM dd02t INTO
lv_comments
WHERE tabname = it_tbl_detls-tabname
AND ddlanguage LIKE sy-langu.
SELECT SINGLE devclass FROM tadir
INTO lv_devclass
WHERE pgmid = 'R3TR'
AND (  object = 'TABL' or object = 'VIEW' )
AND obj_name = it_tbl_detls-tabname.
SELECT SINGLE component FROM tdevc
INTO lv_component
WHERE devclass = lv_devclass.
SELECT SINGLE ps_posid FROM df14l
INTO lv_module_name
WHERE fctr_id  = lv_component
AND   as4local = 'A'.
MOVE it_tbl_detls-tabname  TO
et_tbl_list-tabname.
MOVE it_tbl_detls-tabclass TO
et_tbl_list-tabclass.
MOVE lv_devclass           TO
et_tbl_list-devclass.
MOVE lv_comments           TO
et_tbl_list-comments.
MOVE lv_module_name        TO
et_tbl_list-module_name.
APPEND et_tbl_list.
CLEAR it_tbl_detls.
ENDLOOP.
******endif for wrong table name
ENDIF.
******************
ENDIF.
ELSEIF iv_packg NE space.
IF iv_ap_comp NE space.
IF iv_desc NE space.
*Get based upon package, application component
*and description.
SELECT * FROM tadir INTO TABLE it_tadir
WHERE pgmid ='R3TR'
AND   object = 'TABL'
AND devclass LIKE iv_packg.
***for Wrong Package
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 002.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tadir.
SELECT * FROM dd02t INTO TABLE
lt_dd02t
WHERE tabname  = it_tadir-obj_name
AND ddlanguage = sy-langu
AND ddtext LIKE iv_desc.
****for Wrong table description
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 001.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
exit.
ELSE.
********************
LOOP AT lt_dd02t.
Clear : lv_component.
SELECT SINGLE component FROM
tdevc INTO lv_component
WHERE devclass = it_tadir-devclass.
SELECT * FROM df14l INTO
TABLE lt_df14l
WHERE fctr_id  = lv_component
AND as4local = 'A'
AND ps_posid LIKE iv_ap_comp.
***for Wrong Application component
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 003.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ENDIF.
********************
if iv_view_flag = 'X'.
SELECT SINGLE tabclass FROM
dd02l INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN ('VIEW')
AND viewclass IN ('D','P').

else.
SELECT SINGLE tabclass FROM
dd02l INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN
('POOL','CLUSTER','TRANSP').
endif.

IF sy-subrc = 0.
LOOP AT lt_df14l.
MOVE it_tadir-obj_name     TO
et_tbl_list-tabname.
MOVE lv_tabclass           TO
et_tbl_list-tabclass.
MOVE it_tadir-devclass     TO
et_tbl_list-devclass.
MOVE lt_dd02t-ddtext     TO
et_tbl_list-comments.
MOVE lt_df14l-ps_posid     TO
et_tbl_list-module_name .
APPEND et_tbl_list.
ENDLOOP.
ENDIF.
ENDLOOP.
********endif for wrong description
ENDIF.
************************
ENDLOOP.
********endif for wrong package
ENDIF.
************************
ELSE.
*Get based upon package and
*application component name.
SELECT * FROM tadir INTO TABLE it_tadir
WHERE pgmid ='R3TR'
AND   object = 'TABL'
AND devclass LIKE iv_packg.
***for Wrong Package
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 002.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tadir.
clear : lv_comments,lv_component.
SELECT SINGLE ddtext FROM dd02t
INTO lv_comments
WHERE tabname  = it_tadir-obj_name
AND ddlanguage = sy-langu.
SELECT SINGLE component FROM tdevc
INTO lv_component
WHERE devclass = it_tadir-devclass.
SELECT * FROM df14l INTO
TABLE lt_df14l
WHERE fctr_id  = lv_component
AND as4local = 'A'
AND ps_posid LIKE iv_ap_comp.
***for Wrong Application component
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 003.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
exit.
ENDIF.
********************
if iv_view_flag = 'X'.
SELECT SINGLE tabclass FROM dd02l
INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN ('VIEW')
AND viewclass IN ('D','P').

else.
SELECT SINGLE tabclass FROM dd02l
INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN
('POOL','CLUSTER','TRANSP').
endif.
IF sy-subrc = 0.
LOOP AT lt_df14l.
MOVE it_tadir-obj_name     TO
et_tbl_list-tabname.
MOVE lv_tabclass           TO
et_tbl_list-tabclass.
MOVE it_tadir-devclass     TO
et_tbl_list-devclass.
MOVE lv_comments           TO
et_tbl_list-comments.
MOVE lt_df14l-ps_posid     TO
et_tbl_list-module_name.
APPEND et_tbl_list.
ENDLOOP.
ENDIF.
ENDLOOP.
*******endif for wrong package
ENDIF.
********************
ENDIF.
ELSEIF iv_desc NE space.
*Get based upon package and description.
SELECT * FROM tadir INTO TABLE it_tadir
WHERE pgmid ='R3TR'
AND   object = 'TABL'
AND devclass
LIKE iv_packg.
***for Wrong Package
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 002.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tadir.
SELECT * FROM dd02t INTO TABLE lt_dd02t
WHERE tabname  = it_tadir-obj_name
AND ddlanguage = sy-langu
AND ddtext LIKE iv_desc.
***for Wrong table description
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 001.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_dd02t.
Clear : lv_component,lv_module_name,
lv_tabclass.
SELECT SINGLE component FROM tdevc
INTO lv_component
WHERE devclass = it_tadir-devclass.
SELECT SINGLE ps_posid FROM
df14l INTO lv_module_name
WHERE fctr_id  = lv_component
AND as4local = 'A'.

if iv_view_flag = 'X'.
SELECT SINGLE tabclass FROM dd02l
INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN ('VIEW')
AND viewclass IN ('D','P').

else.
SELECT SINGLE tabclass FROM dd02l
INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN
('POOL','CLUSTER','TRANSP').
endif.
IF sy-subrc = 0.
MOVE it_tadir-obj_name     TO
et_tbl_list-tabname.
MOVE lv_tabclass           TO
et_tbl_list-tabclass.
MOVE it_tadir-devclass     TO
et_tbl_list-devclass.
MOVE lt_dd02t-ddtext       TO
et_tbl_list-comments.
MOVE lv_module_name        TO
et_tbl_list-module_name.
APPEND et_tbl_list.
ENDIF.
ENDLOOP.
****endif for wrong description
ENDIF.
*************
ENDLOOP.
****endif for wrong packae
ENDIF.
*************
ELSE.
*Get based upon package name.
SELECT * FROM tadir INTO TABLE it_tadir
WHERE pgmid ='R3TR'
AND   object = 'TABL'
AND devclass LIKE iv_packg.
***for Wrong Package
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 002.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT it_tadir.
Clear : lv_comments,lv_component,
lv_module_name,lv_tabclass.
SELECT SINGLE ddtext FROM dd02t INTO
lv_comments
WHERE tabname  = it_tadir-obj_name
AND ddlanguage = sy-langu.
SELECT SINGLE component FROM tdevc
INTO lv_component
WHERE devclass = it_tadir-devclass.
SELECT SINGLE ps_posid FROM df14l
INTO lv_module_name
WHERE fctr_id  = lv_component
AND as4local = 'A'.
if iv_view_flag = 'X'.
SELECT SINGLE tabclass FROM dd02l
INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN ('VIEW')
AND viewclass IN ('D','P').

else.
SELECT SINGLE tabclass FROM dd02l
INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN
('POOL','CLUSTER','TRANSP').
endif.
IF sy-subrc = 0.
MOVE it_tadir-obj_name     TO
et_tbl_list-tabname.
MOVE lv_tabclass           TO
et_tbl_list-tabclass.
MOVE it_tadir-devclass     TO
et_tbl_list-devclass.
MOVE lv_comments           TO
et_tbl_list-comments.
MOVE lv_module_name        TO
et_tbl_list-module_name.
APPEND et_tbl_list.
ENDIF.
ENDLOOP.
*******endif for wrong package
ENDIF.
***************************
ENDIF.
ELSEIF iv_ap_comp NE space.
IF iv_desc NE space.
*Get based upon application component and
*table description.
SELECT * FROM df14l INTO TABLE
lt_df14l
WHERE ps_posid  LIKE iv_ap_comp
AND   as4local  = 'A'.
***for Wrong Application component
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 003.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT  lt_df14l.
SELECT * FROM tdevc INTO TABLE it_tdevc
WHERE component = lt_df14l-fctr_id.
LOOP AT it_tdevc.
SELECT * FROM tadir INTO TABLE
it_tadir
WHERE pgmid  ='R3TR'
AND   object = 'TABL'
AND devclass = it_tdevc-devclass.
LOOP AT it_tadir.
SELECT * FROM dd02t INTO TABLE
lt_dd02t
WHERE tabname  = it_tadir-obj_name
AND ddlanguage = sy-langu
AND ddtext LIKE iv_desc.
***for Wrong table description
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 001.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_dd02t.
Clear : lv_tabclass.
if iv_view_flag = 'X'.
SELECT SINGLE tabclass FROM
dd02l INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN ('VIEW')
AND viewclass IN ('D','P').

else.
SELECT SINGLE tabclass FROM
dd02l INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN
('POOL','CLUSTER','TRANSP').
endif.
IF sy-subrc = 0.
MOVE it_tadir-obj_name     TO
et_tbl_list-tabname.
MOVE lv_tabclass           TO
et_tbl_list-tabclass.
MOVE it_tdevc-devclass     TO
et_tbl_list-devclass.
MOVE lt_dd02t-ddtext       TO
et_tbl_list-comments.
MOVE lt_df14l-ps_posid     TO
et_tbl_list-module_name.
APPEND et_tbl_list.
ENDIF.
ENDLOOP.
******endif for wrong description
ENDIF.
*********************
ENDLOOP.
ENDLOOP.
ENDLOOP.
******endif for wrong application comp
ENDIF.
*********************
ELSE.
*Get based upon application component.
SELECT * FROM df14l INTO TABLE lt_df14l
WHERE ps_posid  LIKE iv_ap_comp
AND   as4local  = 'A'.
***for Wrong Application component
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 003.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT  lt_df14l.
SELECT * FROM tdevc INTO TABLE
it_tdevc
WHERE component = lt_df14l-fctr_id.
LOOP AT it_tdevc.
SELECT * FROM tadir INTO TABLE
it_tadir
WHERE pgmid  ='R3TR'
AND ( object = 'TABL' OR
      object = 'VIEW' )
AND devclass = it_tdevc-devclass.
LOOP AT it_tadir.
Clear : lv_comments, lv_tabclass.
SELECT SINGLE ddtext INTO
lv_comments FROM dd02t
WHERE tabname  = it_tadir-obj_name
AND ddlanguage = sy-langu.
if iv_view_flag = 'X'.
SELECT SINGLE tabclass FROM
dd02l INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN ('VIEW')
AND viewclass IN ('D','P').
else.
SELECT SINGLE tabclass FROM
dd02l INTO lv_tabclass
WHERE tabname = it_tadir-obj_name
AND tabclass IN
('POOL','CLUSTER','TRANSP').
endif.

IF sy-subrc = 0.
MOVE it_tadir-obj_name     TO
et_tbl_list-tabname.
MOVE lv_tabclass           TO
et_tbl_list-tabclass.
MOVE it_tdevc-devclass     TO
et_tbl_list-devclass.
MOVE lv_comments           TO
et_tbl_list-comments.
MOVE lt_df14l-ps_posid     TO
et_tbl_list-module_name.
APPEND et_tbl_list.
ENDIF.
ENDLOOP.
ENDLOOP.
ENDLOOP.
******endif for wrong application comp.
ENDIF.
************************
ENDIF.
ELSE.
*Get based upon table description.
SELECT * FROM dd02t INTO TABLE lt_dd02t
WHERE ddtext   LIKE iv_desc
AND ddlanguage = sy-langu.
***for Wrong table description
IF sy-subrc <> 0.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 001.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return TO et_return.
ELSE.
********************
LOOP AT lt_dd02t.
Clear : lv_devclass,lv_component,
lv_module_name,lv_tabclass.
SELECT SINGLE devclass FROM tadir INTO
lv_devclass
WHERE pgmid  ='R3TR'
AND   object = 'TABL'
AND obj_name = lt_dd02t-tabname.
SELECT SINGLE component FROM tdevc INTO
lv_component
WHERE devclass = lv_devclass.
SELECT SINGLE ps_posid FROM df14l INTO
lv_module_name
WHERE fctr_id  = lv_component
AND   as4local = 'A'.
if iv_view_flag = 'X'.
SELECT SINGLE tabclass FROM dd02l INTO
lv_tabclass
WHERE tabname = lt_dd02t-tabname
AND tabclass IN ('VIEW')
AND viewclass IN ('D','P').

else.
SELECT SINGLE tabclass FROM dd02l INTO
lv_tabclass
WHERE tabname = lt_dd02t-tabname
AND tabclass IN
('POOL','CLUSTER','TRANSP').
endif.
IF sy-subrc = 0.
MOVE lt_dd02t-tabname     TO
et_tbl_list-tabname.
MOVE lv_tabclass          TO
et_tbl_list-tabclass.
MOVE lv_devclass          TO
et_tbl_list-devclass.
MOVE lt_dd02t-ddtext      TO
et_tbl_list-comments.
MOVE lv_module_name       TO
et_tbl_list-module_name.
APPEND et_tbl_list.
ENDIF.
ENDLOOP.
*********endif for wrong table description
ENDIF.
**********************
ENDIF.
ENDIF.

IF NOT et_tbl_list IS INITIAL.
SORT et_tbl_list by tabname devclass.
DELETE ADJACENT DUPLICATES FROM et_tbl_list
COMPARING tabname devclass.
ENDIF.
"]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6419]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[96d6d66f-f0a1-4421-ab83-b3269e5bc049]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3540]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[230]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install Get Fields RFC]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[49f9d3d7-6c2c-4b6c-9b0b-5ad641e43f77]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6419]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_RFC_GET_FIELDS" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=QUERY_TABLE,CHAR30;DELIMITER,CHAR1;NO_DATA,CHAR1;ROWSKIPS,SOID-ACCNT;ROWCOUNT,SOID-ACCNT" "-ABAP_TABLE_PARAMETERS=OPTIONS,RFC_DB_OPT;FIELDS,ZODI_RFC_DB_FLD;DATA,TAB512;ET_RETURN,ZODIRETURN" "-ABAP_EXCEPTION_PARAMETERS=TABLE_NOT_AVAILABLE;TABLE_WITHOUT_DATA;OPTION_NOT_VALID;FIELD_NOT_VALID;NOT_AUTHORIZED;DATA_BUFFER_EXCEEDED" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
CALL FUNCTION 'VIEW_AUTHORITY_CHECK'
EXPORTING
view_action                    = 'S'
view_name                      = 
query_table
EXCEPTIONS
no_authority                   = 2
no_clientindependent_authority = 3
table_not_found                = 4.
IF sy-subrc = 2 OR sy-subrc = 3.
et_return-stat_msg_type = 'E'.
et_return-stat_msg_desc = 'Not Authorized'.
APPEND et_return.
CLEAR et_return.
RAISE not_authorized.
ELSEIF sy-subrc = 1.
et_return-stat_msg_type = 'E'.
et_return-stat_msg_desc = 'table not available'.
APPEND et_return.
CLEAR et_return.
RAISE table_not_available.
ENDIF.
DATA BEGIN OF table_structure OCCURS 10.
INCLUDE STRUCTURE dntab.
DATA END OF table_structure.
DATA table_header LIKE x030l.
DATA: BEGIN OF it_dd03l OCCURS 0,
tabname     TYPE   tabname,
fieldname   TYPE fieldname,
notnull     TYPE notnull,
leng        TYPE leng,
END OF it_dd03l .
CALL FUNCTION 'NAMETAB_GET'
EXPORTING
tabname             = query_table
IMPORTING
header              = table_header
TABLES
nametab             = table_structure
EXCEPTIONS
table_has_no_fields = 01
table_not_activ     = 02
internal_error      = 03
no_texts_found      = 04.
IF sy-subrc > 1.
et_return-stat_msg_type = 'E'.
et_return-stat_msg_desc = 'table not available'.
APPEND et_return.
CLEAR et_return.
RAISE table_not_available.
ENDIF.
IF sy-subrc = 1 OR table_header-tabform CN
'TCPV'.
et_return-stat_msg_type = 'E'.
et_return-stat_msg_desc = 'table without data'.
APPEND et_return.
CLEAR et_return.
RAISE table_without_data.
ENDIF.
DATA line_length TYPE i.
FIELD-SYMBOLS <d>.
ASSIGN COMPONENT 0 OF STRUCTURE data TO <d>.
DATA number_of_fields TYPE i.
DESCRIBE TABLE fields LINES number_of_fields.
IF number_of_fields = 0.
SELECT tabname fieldname notnull
INTO TABLE it_dd03l
FROM dd03l
WHERE tabname = query_table.
LOOP AT table_structure.
MOVE table_structure-fieldname TO
fields-fieldname.
READ TABLE it_dd03l WITH KEY tabname   =
table_structure-tabname
fieldname = table_structure-fieldname.
fields-notnull = it_dd03l-notnull.
APPEND fields.
CLEAR: table_structure, it_dd03l.
ENDLOOP.
ENDIF.
TYPES : BEGIN OF ty_field_int.
INCLUDE STRUCTURE ZODI_RFC_DB_FLD.
TYPES inttype.
TYPES: END OF ty_field_int.
DATA : it_output_fields TYPE TABLE OF
ty_field_int WITH HEADER LINE.
DATA : lv_leng TYPE dd03l-leng.
DATA : lv_rollname TYPE dd03l-rollname.
DATA: BEGIN OF fields_int OCCURS 10,
type LIKE
table_structure-inttype,
decimals   LIKE
table_structure-decimals,
length_src LIKE
table_structure-intlen,
length_dst LIKE
table_structure-ddlen,
offset_src LIKE
table_structure-offset,
offset_dst LIKE
table_structure-offset,
END OF fields_int,
line_cursor TYPE i.
line_cursor = 0.
LOOP AT fields.
SELECT SINGLE rollname
INTO lv_rollname
FROM dd03l
WHERE fieldname = fields-fieldname
and tabname = query_table .
IF lv_rollname IS NOT INITIAL.
SELECT SINGLE leng
INTO lv_leng
FROM dd04l
WHERE rollname = lv_rollname .
ELSE.
SELECT SINGLE leng
INTO lv_leng
FROM dd03l
WHERE TABNAME = QUERY_TABLE
AND FIELDNAME = fields-fieldname
AND as4vers = 'A'.
ENDIF.
READ TABLE table_structure WITH KEY
fieldname = fields-fieldname.
IF sy-subrc NE 0.
et_return-stat_msg_type = 'E'.
et_return-stat_msg_desc =
'field not valid'.
APPEND et_return.
CLEAR et_return.
RAISE field_not_valid.
ENDIF.
IF line_cursor <> 0.
IF no_data EQ space AND delimiter NE space.
MOVE delimiter TO data+line_cursor.
ENDIF.
line_cursor = line_cursor + 
STRLEN( delimiter ).
ENDIF.
fields_int-length_src = 
table_structure-intlen.
fields_int-length_dst = 
table_structure-ddlen.
fields_int-offset_src = 
table_structure-offset.
fields_int-offset_dst = 
line_cursor.
fields_int-decimals   = 
table_structure-decimals.
line_cursor = line_cursor + 
table_structure-ddlen.
IF line_cursor > line_length AND no_data 
EQ space.
et_return-stat_msg_type = 'E'.
et_return-stat_msg_desc = 
'data buffer exceeded'.
APPEND et_return.
CLEAR et_return.
RAISE data_buffer_exceeded.
ENDIF.
APPEND fields_int.
fields-fieldtext   = 
table_structure-fieldtext.
fields-datatype    = 
table_structure-datatype.
fields-decimals    = fields_int-decimals  .
fields-offset      = fields_int-offset_dst.
fields-length      = lv_leng.
MODIFY fields.
CLEAR : lv_rollname, lv_leng.
ENDLOOP.
IF no_data EQ space.
DATA: BEGIN OF work, buffer(30000), 
END OF work.
FIELD-SYMBOLS <f>.
IF rowcount > 0.
rowcount = rowcount + rowskips.
ENDIF.
SELECT * FROM (query_table) INTO work 
WHERE (options).
IF sy-dbcnt GT rowskips.
LOOP AT fields_int.
IF fields_int-type = 'P'.
ASSIGN     
work+fields_int-offset_src(fields_int-length_src)
TO <f>
TYPE     fields_int-type
DECIMALS fields_int-decimals.
ELSE.
ASSIGN     
work+fields_int-offset_src(fields_int-length_src)
TO <f>
TYPE     fields_int-type.
ENDIF.
MOVE <f> TO  
<d>+fields_int-offset_dst(fields_int-length_dst).
ENDLOOP.
APPEND data.
IF rowcount > 0 AND sy-dbcnt GE rowcount.
EXIT. 
ENDIF.
ENDIF.
ENDSELECT.
ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6420]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[481b4e8e-b24c-44ab-aa94-28670eb6b1f1]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3541]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[240]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install Get Table Keys RFC]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6efeffe0-fff6-4b5e-af57-d49f418b7ebd]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6420]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_RFC_TABLE_KEYS" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FILE_NAME=<Value>" "-FTP_HOST=<value>" "-FTP_USER=<value>" "-FTP_PASSWORD=<value>" "-FTP_PASSIVE_MODE=<value>"  "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_TABLE_NAME,CHAR30;IV_ALL_KEYS,CHAR1" "-ABAP_TABLE_PARAMETERS=ET_PRI_KEYS_TABLE,ZODI_S_PK;ET_FOR_KEYS_TABLE,ZODI_S_FK;ET_RETURN,ZODIRETURN" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
DATA BEGIN OF table_structure OCCURS 10.
INCLUDE STRUCTURE dntab.
DATA END OF table_structure.
DATA table_header LIKE x030l.
DATA : table_dd05m TYPE STANDARD TABLE OF 
dd05m WITH HEADER LINE.
DATA table LIKE dcobjdef-name.
table  = iv_table_name.
CALL FUNCTION 'NAMETAB_GET'
EXPORTING
tabname             = iv_table_name
IMPORTING
header              = table_header
TABLES
nametab             = table_structure
EXCEPTIONS
table_has_no_fields = 01
table_not_activ     = 02
internal_error      = 03
no_texts_found      = 04.
LOOP AT table_structure WHERE keyflag = 'X'
OR checktable NE space.
IF iv_all_keys = space.
IF table_structure-keyflag = 'X'.
et_pri_keys_table-pri_key_tabnam = 
table_structure-tabname.
et_pri_keys_table-pri_key_field  = 
table_structure-fieldname.
APPEND et_pri_keys_table.
CLEAR: table_structure, 
et_pri_keys_table.
ENDIF.
ELSE.
*      IF table_structure-keyflag = 'X'.
IF NOT table_structure-checktable IS 
INITIAL.
et_for_keys_table-table_name  = 
table_structure-tabname.
et_for_keys_table-field_name  = 
table_structure-fieldname.
et_for_keys_table-fk_table_name = 
table_structure-checktable.
*       et_for_keys_table-fk_field_name = 
*       table_structure-fieldname.
SELECT SINGLE ddtext INTO 
et_for_keys_table-fk_table_text FROM dd02t
WHERE tabname = table_structure-checktable
and ddlanguage = sy-langu.
CALL FUNCTION 'DD_FKEYS_GET'
EXPORTING
name                 = table
state                = 'A'
langu                = 'E'
TABLES
*   DD03P_TAB            =
dd05m_tab            = table_dd05m
*   DD08V_TAB            =
EXCEPTIONS
illegal_input        = 1
not_found            = 2
expand_failure       = 3
OTHERS               = 4.
IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY 
*  NUMBER SY-MSGNO
* WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 
* SY-MSGV4.
ENDIF.
READ TABLE table_dd05m WITH KEY 
fieldname = table_structure-fieldname
forkey   = table_structure-fieldname.
IF sy-subrc = 0.
et_for_keys_table-fk_field_name = 
table_dd05m-checkfield.
ENDIF.
APPEND et_for_keys_table.
ENDIF.
CLEAR: table_structure, et_for_keys_table.
ENDIF.
ENDLOOP.
IF sy-subrc NE 0.
*    RAISE table_not_available.
ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6421]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c3c2a657-aff7-4cc7-873b-5a0d029c2b2a]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3542]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[250]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install Get Table Indexes RFC]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e792fa9f-0074-45dc-b6c9-3dd0f7bb5c79]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6421]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_RFC_GET_TABLE_INDEXES" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_QUERY_TABLE,CHAR30;" "-ABAP_TABLE_PARAMETERS=ET_TABLE_INDEX_LIST,ZODI_BAPI_S_TBL_INDEX_LIST;ET_RETURN,ZODIRETURN" "-ABAP_EXCEPTION_PARAMETERS=TABLE_NOT_AVAILABLE;SECONDARY_INDEX_NOT_AVAILABLE" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
DATA: lt_dd12l TYPE TABLE OF dd12l.
DATA: wa_dd12l LIKE LINE  OF lt_dd12l.
DATA: lt_dd17s TYPE TABLE OF dd17s.
DATA: wa_dd17s LIKE LINE  OF lt_dd17s.
SELECT * FROM dd12l  INTO TABLE lt_dd12l WHERE
sqltab = iv_query_table.
IF sy-subrc > 1.
et_return-stat_msg_type = 'E'.
et_return-stat_msg_desc = 'table not available'.
APPEND et_return.
CLEAR et_return.
RAISE table_not_available.
ENDIF.
LOOP AT lt_dd12l INTO wa_dd12l.
SELECT * FROM dd17s  INTO TABLE lt_dd17s WHERE
sqltab = wa_dd12l-sqltab
AND indexname = wa_dd12l-indexname.
IF sy-subrc > 1.
et_return-stat_msg_type = 'E'.
et_return-stat_msg_desc ='sec index unavailable'.
APPEND et_return.
CLEAR et_return.
RAISE table_not_available.
ENDIF.
MOVE wa_dd12l-indexname TO 
et_table_index_list-indexname.
LOOP AT lt_dd17s INTO wa_dd17s.
IF sy-tabix = 1.
MOVE wa_dd17s-fieldname TO 
et_table_index_list-indexfields.
ELSE.
CONCATENATE et_table_index_list-indexfields 
wa_dd17s-fieldname INTO
et_table_index_list-indexfields 
SEPARATED BY ';'.
ENDIF.
ENDLOOP.
APPEND et_table_index_list.
ENDLOOP."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6422]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fdebe539-6732-4813-9063-6ac365855b66]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3543]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[260]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Reset SNP_REV tables]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b6e633e9-3229-4c35-8d10-73499193ce5e]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6422]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
  OdiReverseResetTable -MODEL=<%=odiRef.getModel("ID")%>
<%} else { /*if ODI 12C*/%>
  OdiReverseResetTable -MODEL=<%=odiRef.getModel("GLOBAL_ID")%>
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6423]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b91b659f-c256-40da-8286-091e44cf83e2]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3544]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[270]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Validate ODI SAP Component version]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[427dae2b-a48a-49ad-95e7-187e40a36d66]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6423]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
//Checks the KM, Open Tool and Installed SAP Components version compatibility
KM_VERSION = "40";
MIN_OT_VERSION = "21";
MIN_ODI_SAPCOMP_VERSION = "38";

sapConnection.checkComponentCompatibility(KM_VERSION, MIN_OT_VERSION, MIN_ODI_SAPCOMP_VERSION, false);]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6424]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5bc4a6c7-ef9d-4b27-ade1-c4e7ccf2d782]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3545]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get SAP Metadata]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[01447f75-5607-4e6d-8a43-ea6054142dfd]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6424]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Command Name: Get SAP Metadata
import javax.swing.JFrame;
import javax.swing.JDialog;

//Show SAP metadata on the basis of USE_GUI option
JFrame browserFrame = null;
OdiSAPERPMetadataBrowser  odiSAPERPMetadataBrowser ;
OdiSAPERPMetadataPopulator odiSAPERPMetadataPopulator = null;
JDialog plzWait = new JDialog();

<%if(odiRef.getOption("USE_GUI").equals("1")) {%>
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"USE_GUI = Yes"} );
	odiSAPERPMetadataBrowser = new OdiSAPERPMetadataBrowser(odiSapERPAdapter, sapLogger, odiSAPERPMetadataHelper, odiSapErpResourceBundle);
	browserFrame = odiSAPERPMetadataBrowser.frame;
	//Wait loop unti user selection is done i.e user clicks either Cancel/ReverseMetadata button
	while(true) {
		if(browserFrame.isVisible()) {
            Thread.sleep(100);
			continue;
		}else
			break;
	}
	if(odiSAPERPMetadataBrowser.isCancle) {
		OdiSapUtil.throwODIException("Reversing canceled / aborted!!!");
	}
<%} else {%>
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"USE_GUI = No"} );	
	odiSAPERPMetadataPopulator = new OdiSAPERPMetadataPopulator(odiSapERPAdapter, sapLogger, odiSAPERPMetadataHelper, odiSapErpResourceBundle);
	odiSAPERPMetadataPopulator.populateSearchData();
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Reversing Metadata Started"} );
<%}%>
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6425]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e13a92e3-ded8-4f50-a71e-3b578decbe37]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3546]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[290]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Retrieve Sub Models]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b1ed362e-3eb1-4902-895b-289c6b19a974]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6425]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Retrieve Sub Models
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.BatchUpdateException;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Iterator;

PreparedStatement batchInsert = null;
		
try {
	Hashtable sSubModel = odiSAPERPMetadataHelper.sSAPSubModels;
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Sub Models>>>>> :"+sSubModel.size()} );
			
	if(sSubModel != null && sSubModel.size() > 0) {
		sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Taking data of existing module started"} );		
		Hashtable hst = new Hashtable();
		//getting list of all existing sub_models to avoid unique constraints exception during insertion
		String query = "SELECT SMOD_CODE from SNP_REV_SUB_MODEL";
		Statement stmt = repoConnection.createStatement();
		ResultSet rs = stmt.executeQuery(query);
		while(rs.next()){
			String subModel = rs.getString("SMOD_CODE");
			hst.put(subModel, "");
			sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"sub Model from Rev table: "+subModel} );
		}
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"inserting data into SNP_REV_SUB_MODEL table -- started..."} );
		<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
			batchInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_SUB_MODEL (I_MOD, SMOD_CODE, SMOD_NAME, SMOD_PARENT_CODE, IND_INTEGRATION,  REV_APPY_PATTERN) values (?, ?,?, ?, '0', '0')");
		<%}else { /*if ODI 12C*/%>
			batchInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_SUB_MODEL (MOD_GUID, SMOD_CODE, SMOD_NAME, SMOD_PARENT_CODE, IND_INTEGRATION,  REV_APPY_PATTERN) values (?, ?,?, ?, '0', '0')");
		<%}%>

		Enumeration subModelKeys = sSubModel.keys();

		while ( subModelKeys.hasMoreElements()) {
	        	String tableNm = subModelKeys.nextElement().toString().trim();
	        	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve SubModels -  tableName: "+tableNm} );	
        		
	        	ArrayList subModelList = (ArrayList) sSubModel.get( tableNm );
	        	Iterator itr =  subModelList.iterator();
	        	SAPSubModels sapSubModel = null;
	        	while(itr.hasNext()) {
	        		sapSubModel = new SAPSubModels();
	        		sapSubModel = (SAPSubModels)itr.next(); 
	        			
	        		if(!(hst.containsKey(sapSubModel.appCompName))) {
						<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
							batchInsert.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
						<%}else { /*if ODI 12C*/%>
							batchInsert.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
						<%}%>
	        			batchInsert.setString(2, (sapSubModel.appCompName).trim());
	        			batchInsert.setString(3, (sapSubModel.appCompName).trim());
	        			if(sapSubModel.paranetAPPCompName != null) {
							sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve subModels - SMOD_PARENT_CODE: "+(sapSubModel.paranetAPPCompName).trim()} );
	        				batchInsert.setString(4, (sapSubModel.paranetAPPCompName).trim());
					}else {
	        				batchInsert.setNull(4, java.sql.Types.VARCHAR);
	        			}
	        			batchInsert.addBatch();
	        		}//end of if(!(hs.containsKey(sapSubModel.appCompName))) --
	        	}//end of while(itr.hasNext()) --
		}//end of while ( subModelKeys.hasMoreElements())
	//execute the insert statement
	batchInsert.executeBatch();
	repoConnection.commit();
	batchInsert.close();
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Data inserted successfully into SNP_REV_SUB_MODEL table"} );
	} //end of if(sSubModel != null && sSubModel.size() > 0) 
} catch (BatchUpdateException buexp) {
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Exception: Retrieve Sub Models - BatchUpdate Count: "+buexp.getMessage()} );
	OdiSapUtil.throwODIException(buexp.getMessage());
} catch(Exception e) {
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Sub Models - SQL Exception: "+e.printStackTrace()} );
	OdiSapUtil.throwODIException(e.getMessage());
} finally {
	batchInsert = null;
} //end of finally]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6426]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c1a27fec-63c7-4fd2-85ba-45327d7fb4ce]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3547]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[300]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Retrieve Tables]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0e4ec224-2ef9-4f52-8498-f94e47ca2a10]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6426]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Retrieve Tables
import java.sql.BatchUpdateException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Date;

PreparedStatement batchInsert = null;
PreparedStatement ffInsert = null;
ArrayList sT;

try {
	sT = odiSAPERPMetadataHelper.sSAPTables; //getting table list
	if(sT != null && sT.size() > 0) {
		sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Tables - sT.size(): "+sT.size()} );
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"inserting data into table SNP_REV_TABLE - SAP Tables started...."} );
		<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
                batchInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_TABLE (I_MOD, TABLE_NAME, RES_NAME, TABLE_ALIAS, TABLE_TYPE, TABLE_DESC, SMOD_CODE, R_COUNT, IND_SHOW) values (?,?,?,?,?, ?, ?, 1, '1')");
        <%} else { /*if ODI 12C*/%>
                batchInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_TABLE (MOD_GUID, TABLE_NAME, RES_NAME, TABLE_ALIAS, TABLE_TYPE, TABLE_DESC, SMOD_CODE, R_COUNT, IND_SHOW) values (?,?,?,?,?, ?, ?, 1, '1')");
				ffInsert = repoConnection.prepareStatement("INSERT INTO SNP_REV_TABLE_FFV(MOD_GUID,TABLE_NAME,FF_CODE, SHORT_TXT_VALUE) values(?, ?, ?, ?)");
        <%}%>
		Iterator itr =  sT.iterator();
		SAPSearchDetail sapTable = null;
		int i = 1;
		while(itr.hasNext()) {
			sapTable = new SAPSearchDetail();
			sapTable = (SAPSearchDetail)itr.next(); 

			String tableName = sapTable.name + "  "+sapTable.desc;
			if(tableName.length() > 100) {
				tableName = tableName.substring(0, 99);
			}
			<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
				batchInsert.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
			<%}else { /*if ODI 12C*/%>
				batchInsert.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
			<%}%>
			batchInsert.setString(2, tableName.trim()); //TABLE_NAME
			batchInsert.setString(3, sapTable.name); //RES_NAME
			batchInsert.setString(4, sapTable.name); //TABLE_ALIAS
			if(odiSapERPAdapter.getObjectType().equals("V")) {
				batchInsert.setString(5, "V");//TABLE_TYPE
			}else {
				batchInsert.setString(5, "T");//TABLE_TYPE
			}
			batchInsert.setString(6, sapTable.desc); //TABLE_DESC
			sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Tables - sapTable.moduleName: "+(sapTable.moduleName).trim()} );
			if(sapTable.moduleName != null) {
				sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Tables - putting module name&&&&: "+(sapTable.moduleName).trim()} );

				batchInsert.setString(7, (sapTable.moduleName).trim());
			} else {
				batchInsert.setNull(7, java.sql.Types.VARCHAR);
			}
			batchInsert.addBatch();
			i++;
			//Inserting data into SNP_REV_TABLE_FFV (flex field for table) in case of ODI 12c 
			<%if (!isOdi10gOr11g) { /*if ODI 12c*/%>
				ffInsert.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
				ffInsert.setString(2, tableName.trim()); //TABLE_NAME
				ffInsert.setString(3, "SAP_TABLE_TYPE"); //FF_CODE
				ffInsert.setString(4, sapTable.tableClass); //SHORT_TXT_VALUE (Table Type)
				ffInsert.addBatch();
			<%}%>
		}//end of inner while(fieldItr.hasNext()) 
		int []tableInsertCount = batchInsert.executeBatch();
		<%if (!isOdi10gOr11g) { /*if ODI 12c*/%>
			int []tableFFInsertCount = ffInsert.executeBatch();
		<%}%>
		repoConnection.commit();
		batchInsert.close();
		<%if (!isOdi10gOr11g) { /*if ODI 12c*/%>
			ffInsert.close();
			sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Data inserted successfully into -- SNP_REV_TABLE_FFV table"} );
		<%}%>
		sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Data inserted successfully into -- SNP_REV_TABLE table"} );
	} //end of while(itr.hasNext()) {
} catch (BatchUpdateException buexp) {
	sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[] {new Date(), "Exception in BatchUpdate: Retrieve Tables - BatchUpdate Count: "+buexp.getUpdateCounts()} );
	OdiSapUtil.throwODIException(buexp.getMessage());
} catch(Exception e) {
	sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[] {new Date(), "SQL Exception: Retrieve Tables -  "+e.printStackTrace()} );
	OdiSapUtil.throwODIException(e.getMessage());
} finally {
	batchInsert = null;
	ffInsert = null;
}//end of finally block]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6427]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3e5339dc-0d21-47ad-ba99-13334f3e64a4]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3548]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[40]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f3d6ac81-321a-4cfc-b562-4fef3e5afa36]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6427]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[1]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[////////////////////////////////////////////////////////////////////////////////////////////
//(c) Copyright 2008, Oracle	         		                                          //
//ALL RIGHTS RESERVED.                                                                   //
//This UNPUBLISHED PROPRIETARY software is  subject to the full copyright                //
//notice in the COPYRIGHT file in this directory.                                        //
////////////////////////////////////////////////////////////////////////////////////////////
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import oracle.odi.sdk.opentools.OpenToolExecutionException;

/**
 * @(#)OdiSapLogger.java  1.00 11/24/2008
 * Application : ODI SAP Knowledge Modules
 * Module      : SAP Logger
 * Author(s)   : Oracle,
 * About       :
 * Dependencies: JDK 1.4.2 API (with standard extensions),
 *
 *
 * Update History (Please make entries here in case you make a change.)
 * ____________________________________________________________________
 * Date       Author                       Comments about the change
 * ____________________________________________________________________
 *August 2012	  							Changed due to ODI 12c 
 *											logging framework
 **/
/**
 * This class is a common class for handling all the error/exception messages
 * of the SAP ERP/BW RKM/LKM modules. This class writes the messages either to
 * ODI console or a default log file name written to Systems Temporary folder
 *
 */
public class OdiSapLogger {

    private Logger mLogger = null;
    private PrintStream mLogPs = null;
    //private Logger mLogPsNew = null;
    //static private FileHandler fileTxt;
    //static private SimpleFormatter formatterTxt;
    private String resourceMessage = "";
    private String baseResourceName = null;
    private ResourceBundle messages = null;
    private LogRecord record = null;
    private String logFile = "";
    private ResourceBundle resourceBundle = null;

    /** For backwards compatibility:
    The OT should use file based logging as long as the "LOG_FILE" parameter is provided. Even in 12c!
    The KM will suppress this parameter, as soon as gen'ed in 12c. 
     * @throws OpenToolExecutionException 
     */
    public OdiSapLogger(String logFile, ResourceBundle rBundle) {
        this.logFile = logFile;
        this.resourceBundle = rBundle;
        initLogger();
    }

    /**
     * Initialize logger
     */
    private void initLogger() {
        try {
            //Do we have a logger?
			if (mLogger == null && mLogPs == null) {
                //Has the LOG_FILE_NAME parameter been passed to this OT?
                //If so we assume that the OT is used in a 10g or 11g version of ODI 
                //and we use file based logging
                if (logFile != null) {
                    //Empty file name provided? => use 12c logging 
                    if (logFile.equals("")) {
                        //This OT executes in ODI 12c or later and we can use ODI's logger
                        mLogger = Logger.getLogger("oracle.odi.km");
                    } else {
                        //Otherwise use given log file name for ODI 10g and 11g
                        mLogPs = new PrintStream(new FileOutputStream(logFile));
                    }
                } else {
                    //This OT executes in ODI 12c or later and we can use ODI's logger
                    mLogger = Logger.getLogger("oracle.odi.km");
                }
            }
        } catch (FileNotFoundException ex) {
			//Chanpreet
			OdiSapUtil.throwODIException("Exception during Logger initialization: " + ex.getMessage());
        }

    }//end of initLogger() method

    private void log(Level level, String messageId, String message, Object[] args) {
        record = new LogRecord(level, messageId);
        record.setResourceBundle(resourceBundle);
        record.setParameters(args);
        //record.setMessage(message);
        //Are we using a logger?
        if (mLogger != null) {
            mLogger.log(record);
        };
        //Are we using a log file?
        if (mLogPs != null) {
            String result = record.getLevel() + ": " + record.getResourceBundle().getString(messageId) + ": ";

            Object[] objParams = record.getParameters();
            if (objParams == null) {
                result += "<null>\n";
            } else {
                for (int i = 0; i < objParams.length; i++) {
                    result += objParams[i].toString() + " : ";
                }
            }
            //result += record.getSequenceNumber();
            mLogPs.println(result);
            //mLogPs.println(record.toString());
        }
    }//end of log() method

    /**
     * Return resource string
     * @param messageId
     * @return
     */
    private String getResourceString(String messageId) {
        //existing code to retrieve string from property file
        if (resourceMessage.equalsIgnoreCase("!!! BUNDLE " + baseResourceName + " !!!")) {
            return resourceMessage;
        } else {
            try {
                return messages.getString(messageId);
            } catch (Exception e) {
                //sapLogger.log(sapLogger.INFO, "Exception in getResourceString() -----: "+e);
                return "### KEY " + baseResourceName + " / " + messageId + "###"; //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$
            }
        }
    }//end of method

    public void setMessages(String resourceMsg) {
        this.resourceMessage = resourceMsg;
    }

    public void severe(String messageId, Object[] args) {
        //message text must be retrieved from resource file
        log(Level.SEVERE, messageId, getResourceString(messageId), args);
    }//end of method

    public void warn(String messageId, Object[] args) {
        //message text must be retrieved from resource file
        log(Level.WARNING, messageId, getResourceString(messageId), args);
    }//end of method

    public void fine(String messageId, String message, Object[] args) {
        //message text for trace messages is not externalized 
        log(Level.FINE, messageId, message, args);
    }//end of method
}//end of OdiSapLogger class

//**** Start of OdiSAPERPMetadataHelper class *********
/////////////////////////////////////////////////////////////////////////////
//(c) Copyright 2008, Oracle India Ltd		       		   //
//ALL RIGHTS RESERVED.                                                    //
//This UNPUBLISHED PROPRIETARY software is  subject to the full copyright //
//notice in the COPYRIGHT file in this directory.                         //
////////////////////////////////////////////////////////////////////////////
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Iterator;

/**
 * @(#)OdiSAPERPMetadataHelper.java  1.00 11/24/2008
 *
 * Application : ODI SAP Knowledge Modules
 * Module      : SAP ERP Adapter
 * Author(s)   : Oracle.
 * About       :
 * Dependencies: JDK 1.4.2 API (with standard extensions),
 *
 * Update History (Please make entries here in case you make a change.)
 * ____________________________________________________________________
 * Date       Author                       Comments about the change
 * ____________________________________________________________________
 *
 *
 **/
/**
 * <b>OdiSAPERPMetadataHelper</b> class is a data structure for storing the
 * user selection of SAP Metadata information from the Tree browser.
 */
public class OdiSAPERPMetadataHelper {

    //Contains list of SAPSubModels objects
    public Hashtable sSAPSubModels = null;
    //Contains list of SAPTable objects
    public ArrayList sSAPTables = null;
    //contains key as SAP Table Name --> Value array list with SAPField Objects
    public Hashtable sSAPFields = null;
    //contains key as SAP Table Name --> Value as array list with SAPPKField Objects
    public Hashtable sSAPPKFields = null;
    //contains key as SAP Table Name --> Value array list with SAPFKField Objects
    public Hashtable sSAPFKFields = null;
    //contains key as SAP Table Name --> Value array list with SAPIndField Objects
    public Hashtable sSAPIndexes = null;
    //Adapter class object
    private OdiSAPERPAdapter odiSAPERPAdapter = null; //ODI version
    //private OdiSAPERPAdapter odiSAPERPAdapter = new OdiSAPERPAdapter(); //eclipse version
    //Logger object
    public OdiSapLogger sapLogger = null;

    //Constructor
    public OdiSAPERPMetadataHelper(OdiSAPERPAdapter odiSapERPAdapterObj, OdiSapLogger OdiSapLogger) { //ODI version
        //public OdiSAPERPMetadataHelper(){ //eclipse version
        //this.sapLogger = odiSAPERPAdapter.sapLogger; // eclipse version
        this.sapLogger = OdiSapLogger; //ODI version
        this.odiSAPERPAdapter = odiSapERPAdapterObj;
    }

    public void getSAPMetadata(Hashtable selectedTableDetails, boolean searchWithoutUi, ArrayList tableInfoList) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++++ OdiSAPERPMetadataHelper.getSAPMetadata() +++++++++++"});
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Number of selected Table: " + selectedTableDetails.size()});
        this.sSAPFields = selectedTableDetails;
        String tableName = null;
        ArrayList tableFieldList = null;
        sSAPTables = new ArrayList(); //List of SAP Sub Models

        Enumeration selectedTableKeys = sSAPFields.keys();
        SAPSearchDetail sapSearchDetailObj = null;

        if (searchWithoutUi) { //if search without ui is TRUE
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"search without ui is TRUE"});
            tableName = selectedTableKeys.nextElement().toString();

            Iterator tableInfoItr = tableInfoList.iterator();
            while (tableInfoItr.hasNext()) {
                sapSearchDetailObj = new SAPSearchDetail();
                String tableMetadata = tableInfoItr.next().toString();
                String[] tableMetadataArray = tableMetadata.split("\\$");
                //sapLogger.log(sapLogger.INFO, "$$$$$$ tableMetadataArray.length: "+tableMetadataArray.length);
                //sapLogger.log(sapLogger.INFO, "$$$$$$ tableName: "+tableMetadataArray[0]);
                //sapLogger.log(sapLogger.INFO, "$$$$$$ tableDesc: "+tableMetadataArray[1]);
                //sapLogger.log(sapLogger.INFO, "$$$$$$ tableType: "+tableMetadataArray[2]);
                //sapLogger.log(sapLogger.INFO, "$$$$$$ AppComp: "+tableMetadataArray[3]);
                sapSearchDetailObj.name = tableMetadataArray[0];
                sapSearchDetailObj.desc = tableMetadataArray[1];
                sapSearchDetailObj.tableClass = tableMetadataArray[2];
                sapSearchDetailObj.moduleName = tableMetadataArray[3];
                if (sapSearchDetailObj.moduleName == null || sapSearchDetailObj.moduleName.equalsIgnoreCase("")) {
                    sapSearchDetailObj.moduleName = "UNDEFINED";
                }
                //tableName = sapSearchDetailObj.name;
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"selected TableName (search without ui): " + sapSearchDetailObj.name});
                sSAPTables.add(sapSearchDetailObj); //adding table details into public variable sSAPTables as ArrayList
            }//end of while(tableInfoItr.hasNext())

        } else { //if search without ui is FALSE

            while (selectedTableKeys.hasMoreElements()) {

                tableName = (String) selectedTableKeys.nextElement(); //getting table name
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"selected TableName (search with ui): " + tableName});

                //getting table information and storing into SAPSearchDetail class object and then putting that object into ArrayList
                ArrayList tableMetadata = odiSAPERPAdapter.getSearchResult(tableName, null, null, null);//Getting Application component name
                Iterator searchIterator = tableMetadata.iterator();

                while (searchIterator.hasNext()) {
                    sapSearchDetailObj = new SAPSearchDetail();
                    sapSearchDetailObj = (SAPSearchDetail) (searchIterator.next());

                    if (sapSearchDetailObj.moduleName == null || sapSearchDetailObj.moduleName.equalsIgnoreCase("")) {
                        sapSearchDetailObj.moduleName = "UNDEFINED";
                    }
                    sSAPTables.add(sapSearchDetailObj); //adding table details into public variable sSAPTables as ArrayList

                }//end of while(searchIterator.hasNext())
            }//end of while ( selectedTableKeys.hasMoreElements())

        }//end of -- else { //if search without ui is FALSE

        //getting ArrayList of SAP sub models
        this.sSAPSubModels = getAllSubModels(sSAPTables); //getting ArrayList of SAP sub models
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"getSAPMetadata() -- sSAPSubModels.size(): " + sSAPSubModels.size()});

        // getting list of primary key
        this.sSAPPKFields = getPrimaryKeys(sSAPTables); // getting list of primary key
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"sSAPPKFields PrimaryKeyFields.size(): " + sSAPPKFields.size()});

        //getting foreign keys
        this.sSAPFKFields = getForeignKeys(sSAPTables); //getting foreign keys
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"sSAPForeign Key Fields.size(): " + sSAPFKFields.size()});

        //getting list of tables INDEXES
        this.sSAPIndexes = getIndexes(sSAPTables); //getting list of tables INDEXES
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"sSAP Indexes size(): " + sSAPIndexes.size()});

        //getting all fields of a table
        tableFieldList = (ArrayList) sSAPFields.get(tableName); //getting list of fields

        SAPField sField = null;

        Iterator itr = tableFieldList.iterator();

        while (itr.hasNext()) {

            sField = (SAPField) (itr.next());
            sField = new SAPField();
            String fieldName = sField.name;
            String fieldDesc = sField.desc;
            //sapLogger.log(sapLogger.INFO, "<-Data types are ----->"+sField.dataType);
            String fieldDataType = sField.dataType;
            String fieldOffset = sField.offset;
            String fieldLength = sField.length;
        }// end of inner while
    }// end of getSAPMetadata() method

    /**
     * This method getAllSubModels() is responsible to get the tables Application component
     * and break into sub models and then put into the SAPSubModels class objec **
     * @param     ArrayList   of table details object
     * @return    Hasbtable   of all sub models
     */
    private Hashtable getAllSubModels(ArrayList selectedTablesMetadata) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++ OdiSAPERPMetadataHelper.getAllSubModels() +++++++++"});

        SAPSearchDetail sapSearchDetailObj = null;
        SAPSubModels sapSubModelsObj = null;
        Hashtable subModelDetails = new Hashtable();
        String parentSubModel = null;
        String appComp = null;


        if (selectedTablesMetadata.size() > 0) {
            Iterator itr = selectedTablesMetadata.iterator();
            String appComponentName = null;
            //sapSubModelsObj = new SAPSubModels();
            Hashtable hs = new Hashtable();
            while (itr.hasNext()) {

                sapSearchDetailObj = new SAPSearchDetail();
                sapSearchDetailObj = (SAPSearchDetail) (itr.next());
                ArrayList subModelsList = new ArrayList(); //to store sub model list
                //Hashtable hs = new Hashtable();

                String tableName = sapSearchDetailObj.name;
                appComponentName = sapSearchDetailObj.moduleName; //getting Application component name

                if (appComponentName != null) {
                    int countHyphen = count(appComponentName, "-");
                    //String parentSubModel = null;
                    appComp = appComponentName;

                    for (int i = 0; i <= countHyphen; i++) {
                        sapSubModelsObj = new SAPSubModels();
                        int posOfLastHyphen = appComp.lastIndexOf("-");
                        if (posOfLastHyphen != -1) {
                            parentSubModel = appComp.substring(0, posOfLastHyphen);
                        } else {
                            parentSubModel = null;
                        }
                        sapSubModelsObj.appCompName = appComp;
                        sapSubModelsObj.paranetAPPCompName = parentSubModel;
                        if (!(hs.containsKey(appComp))) {
                            hs.put(appComp, "");
                            subModelsList.add(sapSubModelsObj); //adding sapSubModels object into arrayList
                        }
                        appComp = parentSubModel;
                    }//end of for loop
                }//end of if(appComponentName != null)
                if (subModelsList.size() > 0) {
                    subModelDetails.put(tableName, subModelsList);
                }
            }//end of while(itr.hasNext())

        }//end of if(selectedTablesMetadata.size() > 0)
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"-------- OdiSAPERPMetadataHelper.getAllSubModels() ----------"});
        return subModelDetails;
    }//end of getAllSubModels() method

    /**
     * This method getPrimaryKeys() is responsible to get the all primary keys of
     * specified table putting into the SAPTablePrimaryKey class objec **
     * @param     ArrayList   of table details object
     * @return    Hashtable   of all table names as key and all values as arrayList of primary keys
     */
    private Hashtable getPrimaryKeys(ArrayList tableList) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++ OdiSAPERPMetadataHelper.getPrimaryKeys() +++++++++"});
        Hashtable primaryKeysList = new Hashtable();
        if (tableList.size() > 0 && tableList != null) {
            SAPSearchDetail sapSearchDtlObj = null;
            Iterator itr = tableList.iterator();
            while (itr.hasNext()) {
                sapSearchDtlObj = new SAPSearchDetail();
                sapSearchDtlObj = (SAPSearchDetail) itr.next();
                String tableName = sapSearchDtlObj.name;

                ArrayList primaryKeyList = (ArrayList) odiSAPERPAdapter.getPrimaryKeys(tableName);
                ArrayList pkList = new ArrayList();
                if (primaryKeyList.size() > 0 && primaryKeyList != null) {
                    Iterator pkItr = primaryKeyList.iterator();
                    SAPTablePrimaryKey sapTablePrimaryKeyObj = null;
                    while (pkItr.hasNext()) {
                        sapTablePrimaryKeyObj = new SAPTablePrimaryKey();
                        sapTablePrimaryKeyObj = (SAPTablePrimaryKey) pkItr.next();
                        pkList.add(sapTablePrimaryKeyObj);
                    } //end of while(pkItr.hasNext())
                }// end of if(primaryKeyList.size() .....
                //sapLogger.log(sapLogger.INFO, "******* primary Key List size: "+pkList.size());
                if (pkList.size() > 0) {
                    primaryKeysList.put(tableName, pkList);
                }
            }
        }
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"--------- OdiSAPERPMetadataHelper.getPrimaryKeys() -----------"});
        return primaryKeysList;
    }// end of getPrimaryKeys() method

    /**
     * This method getForeignKeys() is responsible to get the all foreign keys of
     * specified table putting into the SAPTableForeignKey class object **
     * @param     ArrayList   of table details object
     * @return    Hashtable   of all table names as key and all values as arrayList of foreign keys
     */
    private Hashtable getForeignKeys(ArrayList tableList) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++++ OdiSAPERPMetadataHelper.getForeignKeys() +++++++++"});

        Hashtable foreignKeysList = new Hashtable();

        if (tableList.size() > 0 && tableList != null) {
            SAPSearchDetail sapSearchDtlObj = null;
            Iterator itr = tableList.iterator();
            while (itr.hasNext()) {
                sapSearchDtlObj = new SAPSearchDetail();
                sapSearchDtlObj = (SAPSearchDetail) itr.next();
                String tableName = sapSearchDtlObj.name;
                ArrayList foreignKeyList = (ArrayList) odiSAPERPAdapter.getForeignKeys(tableName);
                ArrayList fkList = new ArrayList();
                if (foreignKeyList.size() > 0 && foreignKeyList != null) {
                    Iterator fkItr = foreignKeyList.iterator();
                    SAPTableForeignKey sapTableForeignKeyObj = null;
                    while (fkItr.hasNext()) {
                        sapTableForeignKeyObj = new SAPTableForeignKey();
                        sapTableForeignKeyObj = (SAPTableForeignKey) fkItr.next();
                        fkList.add(sapTableForeignKeyObj);
                    } //end of while(fkItr.hasNext())
                }// end of if(foreignKeyList.size() > 0 && foreignKeyList != null .....
                //sapLogger.log(sapLogger.INFO, "******* foreign Key List size: "+fkList.size());
                if (fkList.size() > 0) {
                    foreignKeysList.put(tableName, fkList);
                }
            }
        }
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"------- OdiSAPERPMetadataHelper.getForeignKeys() --------"});
        return foreignKeysList;
    }// end of getForeignKeys() method

    /**
     * This method getIndexes() is responsible to get the all indexes of
     * specified table putting into the SAPTableForeignKey class object **
     * @param     ArrayList   of table details object
     * @return    Hashtable   of all table names as key and all values as arrayList of foreign keys
     */
    private Hashtable getIndexes(ArrayList tableList) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++++ OdiSAPERPMetadataHelper.getIndexes() +++++++++"});

        Hashtable indexHashTable = new Hashtable();
        if (tableList.size() > 0 && tableList != null) {
            SAPSearchDetail sapSearchDtlObj = null;
            Iterator itr = tableList.iterator();
            while (itr.hasNext()) {
                sapSearchDtlObj = new SAPSearchDetail();
                sapSearchDtlObj = (SAPSearchDetail) itr.next();
                String tableName = sapSearchDtlObj.name;
                ArrayList indexList = new ArrayList();
                ArrayList tableIndexList = (ArrayList) odiSAPERPAdapter.getTableIndexes(tableName);

                if (tableIndexList.size() > 0 && tableIndexList != null) {
                    Iterator indexItr = tableIndexList.iterator();
                    SAPTableIndexes sapTableIndexKeyObj = null;
                    while (indexItr.hasNext()) {
                        sapTableIndexKeyObj = new SAPTableIndexes();
                        sapTableIndexKeyObj = (SAPTableIndexes) indexItr.next();
                        sapTableIndexKeyObj.indexName = sapTableIndexKeyObj.indexName;
                        sapTableIndexKeyObj.indexField = sapTableIndexKeyObj.indexField;
                        indexList.add(sapTableIndexKeyObj);
                    } //end of while(pkItr.hasNext())
                }// end of if(primaryKeyList.size() .....
                //sapLogger.log(sapLogger.INFO, "*******  getIndexes - Index List size: "+indexList.size());
                if (indexList.size() > 0) {
                    indexHashTable.put(tableName, indexList);
                }
            }
        }
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"-------- OdiSAPERPMetadataHelper.getIndexes() --------"});

        return indexHashTable;
    }// end of getIndexes() method

    /**
     * Count hyphen (-) in a specified string
     *
     * @param base
     * @param searchFor
     * @return int
     */
    public static int count(String base, String searchFor) {
        int len = searchFor.length();
        int result = 0;
        int start = base.indexOf(searchFor);
        while (start != -1) {
            result++;
            start = base.indexOf(searchFor, start + len);
        }
        return result;
    }
    //main method
	/*public static void main(String arg[]){
    OdiSAPERPMetadataHelper odiHelper = new OdiSAPERPMetadataHelper();
    }*/
}// End of OdiSAPERPMetadataHelper class

/**
 * This class is used to store SAP's sub models
 * information to display application component
 * in hierarchy in the ODI SAP Model.
 */
class SAPSubModels {

    public String appCompName;
    public String paranetAPPCompName;
}

/**
 * This class is used to store SAP's sub models
 * information to display application component
 * in hierarchy in the ODI SAP Model.
 */
/////////////////////////////////////////////////////////////////////////////
//(c) Copyright 2008, Oracle 								       		   //
//ALL RIGHTS RESERVED.                                                    //
//This UNPUBLISHED PROPRIETARY software is  subject to the full copyright //
//notice in the COPYRIGHT file in this directory.                         //
////////////////////////////////////////////////////////////////////////////
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Properties;
import java.util.TreeMap;

import com.sap.conn.jco.JCoDestination;
import com.sap.conn.jco.JCoDestinationManager;
import com.sap.conn.jco.JCoException;
import com.sap.conn.jco.JCoFunction;
import com.sap.conn.jco.JCoParameterList;
import com.sap.conn.jco.JCoRepository;
import com.sap.conn.jco.JCoTable;
import com.sap.conn.jco.ext.DestinationDataProvider;
import oracle.odi.sap.km.OdiSapDestinationDataProvider;

/**
 * @(#)OdiSAPERPAdapter.java  2.00 28/May/2009
 *
 * Application : ODI SAP Knowledge Modules
 *
 * Module      : SAP ERP Adapter (JCO API ver 3.0)
 *
 * Author(s)   : Oracle Corp.,
 *
 * About       :
 *
 * Dependencies: JDK 1.5 and above API (with standard extensions),
 *
 *
 * Update History (Please make entries here in case you make a change.)
 * ____________________________________________________________________
 * Date       Author                       Comments about the change
 * ____________________________________________________________________
 *
 *
 **/
/**
 * <b>OdiSAPERPAdapter</b> class handles creation/management of SAP connections
 * including Connection pooling. It also deals with all the methods for getting
 * SAP Metadata information.
 */
public class OdiSAPERPAdapter {

    public String logFileName = null;
    public OdiSapLogger sapLogger = null;
    //SAP Connection pool name
    public static final String POOL_NAME = "SAP_CONNECTION_POOL";
    //public static final String POOL_NAME = "SAP_CON_POOL";
    //repository name
    private JCoRepository repository = null;
    //The JCoDestination - sap connection we will be using
    private static JCoDestination destination = null;
    //Name of the Custom RFC Function used to get the All installed SAP modules
    public static String GET_SAP_MODULES_RFC_FUNCTION = "ZODI_GET_SAP_MODULES";
    //Name of the Custom RFC Fucntions used in this class gets all the SAP tables
    public static String GET_SAP_TABLES_RFC_FUNCTION_NAME = "ZODI_RFC_GET_TABLES";
    //gets all the SAP Fields
    public static String GET_SAP_FIELDS_FUNCTION_NAME = "ZODI_RFC_GET_FIELDS";
    //gets primary keys of a SAP Table
    public static String GET_SAP_TABLES_PK_FK_RFC_NAME = "ZODI_RFC_TABLE_KEYS";
    //gets Indexes keys of a SAP Table
    public static String GET_SAP_TABLES_INDEXES_RFC_NAME = "ZODI_RFC_GET_TABLE_INDEXES";
    //Get type of selected Object, either Views or Tables, default is Table
    private String typeOfObject = "T";
    /**code added for backward compatible RFC collection.
     * code added by AKS
     */
    Hashtable RFCNAMECollection = new Hashtable();
    //ResourBundle object
    private oracle.odi.sap.km.CommonResourceBundle odiSapErpResourceBundle;

    /**
     * Default Constructor, 
     * to SAP System.
     */
    public OdiSAPERPAdapter(OdiSapLogger sapLogger, oracle.odi.sap.km.CommonResourceBundle resourceBundle) {
        //Get resource bundle object
        this.odiSapErpResourceBundle = resourceBundle;
        //initialize all the variables
        //initialize();//For Eclipse version
        this.sapLogger = sapLogger;
    }//End of Default Constructor

    /**
     * function to fetch backward compatibility RFCs
     * code added by AKS
     * @param RFCName
     * @return 
     */
    public String getBackwardCompatibleRFC(String RFCName) {
        String rfcName = RFCName;
        try {
            destination = getSAPConnection();
            JCoFunction fun = destination.getRepository().getFunction(rfcName);
            if (fun == null) {
                rfcName = RFCNAMECollection.get(rfcName).toString();
            }
        } catch (Exception ex) {
			//Chanpreet
			OdiSapUtil.throwODIException("Error in fetching the backward compatible RFC: " + ex.getMessage());
        }
        return rfcName;
    }

    /**
     * This method is used to set the connection pool with provided SAP Server credential
     * and SAP Connection Pool name
     *
     * @param cHostName
     * @param cSystemNo
     * @param sClient
     * @param cLanguage
     * @param cUsername
     * @param cPassword
     * @param cSystemId
     * @param cSapRouterString
     * @return void
     * instead of it make use of setSAPConnection(JCoDestination destination)
     */
    public void setSAPConnection(String cHostName, String cSystemNo, String sClient, String cLanguage, String cUsername, String cPassword, String cSystemId, String cSapRouterString) {
        //ODISAPERPResourceBundle odiSapERPResourceBundle = new ODISAPERPResourceBundle(sapLogger);
        //odiSapERPResourceBundle.initializeResource();
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++OdiSAPERPAdapter.setSAPConnection()++++++++"});
        if (cHostName.equals("") || cHostName.equals(null)) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10020", new Object[]{"cHostName: " + cHostName});
			throw new RuntimeException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10020"));
        }
        if (cSystemNo.equals("") || cSystemNo.equals(null)) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10023", new Object[]{"SystemNo: " + cSystemNo});
            throw new RuntimeException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10023"));
        }
        if (sClient.equals("") || sClient.equals(null)) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10024", new Object[]{"sClient: " + sClient});
            throw new RuntimeException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10024"));
        }
        if (cLanguage.equals("") || cLanguage.equals(null)) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10025", new Object[]{"Client: " + sClient});
            throw new RuntimeException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10025"));
        }
        if (cUsername.equals("") || cUsername.equals(null)) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10021", new Object[]{"cUsername: " + cUsername});
            throw new RuntimeException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10021"));
        }
        if (cPassword.equals("") || cPassword.equals(null)) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10022", new Object[]{"cPassword: " + cPassword});
            throw new RuntimeException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10022"));
        }

        String sapPoolSize = "SAP_CONNECTION_POOL_SIZE";
        //String sapPoolSize = "10";
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"sapPoolSize: " + sapPoolSize});
        try {
            synchronized (this) {
                //set connection properties
                Properties connectProperties = new Properties();
                connectProperties.setProperty(DestinationDataProvider.JCO_ASHOST, cHostName);
                connectProperties.setProperty(DestinationDataProvider.JCO_SYSNR, cSystemNo);
                connectProperties.setProperty(DestinationDataProvider.JCO_CLIENT, sClient);
                connectProperties.setProperty(DestinationDataProvider.JCO_USER, cUsername);
                connectProperties.setProperty(DestinationDataProvider.JCO_PASSWD, cPassword);
                connectProperties.setProperty(DestinationDataProvider.JCO_LANG, cLanguage);
                connectProperties.setProperty(DestinationDataProvider.JCO_POOL_CAPACITY, sapPoolSize);
                connectProperties.setProperty(DestinationDataProvider.JCO_EXPIRATION_TIME, "15000");
                //connectProperties.setProperty(DestinationDataProvider.JCO_TRACE, "1");
                OdiSapDestinationDataProvider.defineDestination(POOL_NAME, connectProperties);

            }//end of synchronized block
            destination = JCoDestinationManager.getDestination(POOL_NAME);
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"destination: " + destination});
            repository = destination.getRepository();
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Connection to SAP successfully created...."});
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"SAP Connection attributes :" + destination.getAttributes()});
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"--------OdiSAPERPAdapter.setSAPConnection()---------"});

            //code added by AKS
            RFCNAMECollection.put("ZODI_RFC_GET_TABLES", "Z_ODI_RFC_GET_TABLES");
            RFCNAMECollection.put("ZODI_RFC_GET_FIELDS", "Z_ODI_RFC_READ_TABLE");
            RFCNAMECollection.put("ZODI_RFC_TABLE_KEYS", "Z_ODI_RFC_TABLE_KEYS");
            RFCNAMECollection.put("ZODI_RFC_GET_TABLE_INDEXES", "Z_ODI_RFC_GET_TABLE_INDEXES");

        } catch (JCoException e) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{"Error in creating the SAP Connection: " + e.getMessage()});
            throw new RuntimeException("Error in creating the SAP Connection: " + e.getMessage());
            //chainedSAPException(e, "setSAPConnection");
        } catch (Exception e) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{"Error in creating the SAP Connection: " + e.getMessage()});
            throw new RuntimeException("Error in creating the SAP Connection: " + e.getMessage());
            //chainedSAPException(e, "setSAPConnection");
        }


    }//end of method setSAPConnection()

    /**
     * This method will throw chained exception
     * @param Exception e
     * @param String errorLoc
     * @return void
     */
    public void chainedSAPException(Exception ex, String errorLoc) {
        try {
            String msg = ex.getMessage();
            Throwable e = ex.getCause();
            //sapLogger.log(sapLogger.INFO, ">>>> e: "+e);
            while (e != null) {
                msg += "\nCause: " + e.getMessage();
                e = e.getCause();
            }
            throw new Exception(errorLoc + "..." + msg);
        } catch (Exception wz) {
            System.out.println(wz);
        }
    }//end of chainedSAPException() method

    /**
     * This method returns connection from connection pool
     * @ return JCoDestination - connection from pool
     */
    private JCoDestination getSAPConnection() throws JCoException {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++OdiSAPERPAdapter.getSAPConnection()+++++: "});
        //return JCoDestinationManager.getDestination(POOL_NAME);
		return destination;
    }//end of getSAPConnection() method

    ///**
    //* To run from Eclipse code
    //* Initializes all the variables: logger, connection informations
    //*/
    //private void initialize() {
    ////Initialize Logger class
    ////check if the USE_LOG option is set for the log file
    ////During integration need to get the information from
    ////options variiables using sunopsis/odi api's
    //logFileName = "C:\\temp\\ODI_SAP_ERP_RKM.log";
    //sapLogger = new OdiSapLogger(logFileName);
    //
    ////initialize SAP Connection parameters.
    ////actually get these properties from ODI topology manager
    ////using ODI api TO DO for integration
    //SRC_SCHEMA = "800";
    //SRC_USER_NAME = "ODIRFC";
    //SRC_PWD = "*****";
    //SRC_HOST_NAME = "****";
    //SRC_CATALOG="00";
    //
    //}//end of initialize method.
    /**
     * Returns type of Object (Table or View) selected
     * in the model window of ODI
     * @return String representing selected type of object
     */
    /*public String getTypeOfObject() {
    if (("REV_OBJ_TYPE").indexOf(";V;") > -1)
    typeOfObject = "V";
    
    if (("REV_OBJ_TYPE").indexOf(";T;") > -1) 
    typeOfObject = "T";
    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{">>>>>>REV_OBJ_TYPE: "+"REV_OBJ_TYPE"});
    //return typeOfObject;
    return "T";
    }*///end of getTypeOfObject() method
    /**
     * Set type of Object (Table or View) selected
     * in the model window of ODI
     */
    public void setObjectType(String selectedObjType) {
        this.typeOfObject = selectedObjType;
    }

    /**
     * Get type of selected object (Table or View)
     */
    public String getObjectType() {
        return typeOfObject;
    }

    /**
     * Returns all the available SAP Modules initial list with its
     * descriptions. This method is called when the browser comes first
     * time to display all the available modules first
     */
    public TreeMap getALLSAPModules() {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++OdiSAPERPAdapter.getALLSAPModules()+++++++++"});

        TreeMap sModuleList = new TreeMap();
        try {
            //get connection from pool
            destination = getSAPConnection();
			JCoFunction function = destination.getRepository().getFunction(GET_SAP_MODULES_RFC_FUNCTION);
            if (function == null) {
				//Chanpreet
				OdiSapUtil.throwODIException("ZODI_GET_SAP_MODULES RFC not found in SAP.");
            }
            //execute the rfc function
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Executing RFC function for list of available SAP modules"});
            function.execute(destination);
			sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Executing RFC function for list of available SAP modules"});
			
			/** trapping possible SAP exceptions **/
            readET_File_Return(function);
			
            //process the output of the RFC Fucntion execution
            JCoTable listOfModules = function.getTableParameterList().getTable("IT_APPLN");

            //process all the rows of the tables and create objects of class SAPTable in an array list
            SAPModule sModule = null;
            int i = listOfModules.getNumRows();
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Number of SAP Modules: " + i});
            if (listOfModules.getNumRows() > 0) {
                for (int r = 0; r < listOfModules.getNumRows(); r++) {
                    listOfModules.setRow(r);
                    sModule = new SAPModule();

                    sModule.name = listOfModules.getString("APPL_COMP");
                    sModule.desc = listOfModules.getString("SHORT_TEXT");
                    if (!(sModule.name.startsWith("BEARBEITUNG") || sModule.name.startsWith("NOT USED"))) {
                        //sapLogger.log(sapLogger.INFO, "Module :"+sModule.name+"   "+sModule.desc);
                        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Modules Name: " + sModule.name});
                        sModuleList.put(sModule.name, sModule.desc);
                    }//end of if condition
                }//end of for loop
                sModuleList.put("IS", "Industry Specific");
                sModuleList.put("UNDEFINED", "General");
            }//end of if(listOfTables.getNumRows() > 0) --
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"------------OdiSAPERPAdapter.getALLSAPModules()------------"});
        } catch (JCoException ex) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10026", new Object[]{ex.getCause()});
            chainedSAPException(ex, "getALLSAPModules");
        }
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Number of SAP Module retrieved: " + sModuleList.size()});
        return sModuleList;

    }//End of getALLSAPModules method

    /**
     * This method returns all the available application components and
     * tables inside a specified module.
     * Once the initial module list is displayed then on each click of the
     * module node call this method passing the clicked module name then
     * this method returns all the available application components or
     * tables inside this passed module name.
     *
     * @param appCompName pass the name of the module/application
     * @param String undefined module
     * component name
     */
    public ArrayList getSAPTables(String appCompName, String undefinedModule) throws JCoException {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++OdiSAPERPAdapter.getSAPTables()++++++++"});
        ArrayList sapTablesObjs = new ArrayList();
        ArrayList sortedAppCompList = new ArrayList();

        try {
            //get connection from pool
            destination = getSAPConnection();

            //code added for fetching backward compatibility RFCs
            GET_SAP_TABLES_RFC_FUNCTION_NAME = getBackwardCompatibleRFC(GET_SAP_TABLES_RFC_FUNCTION_NAME);
            //get the JCO function name from the RFC function name
            JCoFunction function = destination.getRepository().getFunction(GET_SAP_TABLES_RFC_FUNCTION_NAME);
            if (function == null) {
				//Chanpreet
				OdiSapUtil.throwODIException(GET_SAP_TABLES_RFC_FUNCTION_NAME + " RFC not found in SAP.");
            }

            JCoParameterList input = function.getImportParameterList();

            input.setValue("IV_FLAG", "X");
            if ((undefinedModule != null) && (undefinedModule.equalsIgnoreCase("Y-Category"))) {
                input.setValue("IV_TABLE", "Y*");
            } else if ((undefinedModule != null) && (undefinedModule.equalsIgnoreCase("Z-Category"))) {
                input.setValue("IV_TABLE", "Z*");
            }
            input.setValue("IV_AP_COMP", appCompName.trim());

            //typeOfObject = getTypeOfObject();
            if (getObjectType().equals("V")) {
                input.setValue("IV_VIEW_FLAG", "X");
            } else if (getObjectType().equals("T")) {
                input.setValue("IV_VIEW_FLAG", "");
            }
            //execute the rfc function
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Executing RFC function for list of available SAP tables under module" + appCompName});
            function.execute(destination);
			
			/** trapping possible SAP exceptions **/
            readET_File_Return(function);

            //process the output of the RFC Function execution
            JCoTable listOfTables = function.getTableParameterList().getTable("ET_TBL_LIST");

            //process all the rows of the tables and create objects of class SAPTable in an
            //array list
            SAPTable sTable = null;
            int i = listOfTables.getNumRows();
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Number of Rows: " + i});
            if (listOfTables.getNumRows() > 0) {
                for (int r = 0; r < listOfTables.getNumRows(); r++) {
                    listOfTables.setRow(r);
                    sTable = new SAPTable();
                    if (appCompName.startsWith(listOfTables.getString("MODULE_NAME"))) {
                        sTable.name = listOfTables.getString("TABNAME");
                        sTable.desc = listOfTables.getString("COMMENTS");
                        sTable.appComp = listOfTables.getString("MODULE_NAME");
                        sTable.type = "T";
                    } else {
                        sTable.name = listOfTables.getString("MODULE_NAME");
                        sTable.desc = listOfTables.getString("COMMENTS");
                        sTable.type = "AC";
                    }
                    if ((undefinedModule != null) && (undefinedModule.equalsIgnoreCase("Y-Category") || undefinedModule.equalsIgnoreCase("Z-Category"))) {
                        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"sTable.name: " + sTable.name});
                        if (sTable.name.startsWith("Z") || sTable.name.startsWith("Y")) {
                            if ((sTable.name.indexOf("-") == -1) && (sTable.appComp == null || sTable.appComp.equalsIgnoreCase(""))) {
                                sapTablesObjs.add(sTable);
                            }
                        }
                    } else {
                        sapTablesObjs.add(sTable);
                    }
                }//end of for loop
            }//end of if(listOfTables.getNumRows() > 0) --
            //sorting arraylist
            ArrayList appCompList = new ArrayList();
            Iterator itr = sapTablesObjs.iterator();
            SAPTable sapTableObjFilter = null;
            while (itr.hasNext()) {
                sapTableObjFilter = new SAPTable();
                sapTableObjFilter = (SAPTable) itr.next();
                if (sapTableObjFilter.name.indexOf("-") != -1) {
                    appCompList.add(sapTableObjFilter);//Adding App Comp
                    itr.remove();
                }
            }//while(itr.hasNext())
            sortedAppCompList = sortArrayList(appCompList);
            ArrayList sortedTableList = sortArrayList(sapTablesObjs);

            Object[] tableListArray = sortedTableList.toArray(); //
            sortedAppCompList.addAll(Arrays.asList(tableListArray));//merging appComplist & tableList
            //End of sorting table list
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"------------OdiSAPERPAdapter.getSAPTables()-------------"});
        } catch (JCoException ex) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10027", new Object[]{ex.getCause()});
			//Chanpreet
			OdiSapUtil.throwODIException(ex);
        } catch (Exception ex) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10027", new Object[]{ex.getMessage()});
			//Chanpreet
			OdiSapUtil.throwODIException(ex);
        }
        sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{"Number of SAP Tables retrieved: " + sortedAppCompList.size()});
        return sortedAppCompList;
    }//End of getSAPTables method

    /**
     *
     * @param ArrayList    of list of tables / App Comp
     * @return ArrayList
     */
    private ArrayList sortArrayList(ArrayList dataList) {

        Collections.sort(dataList, new Comparator() {

            public int compare(Object obj1, Object obj2) {
                SAPTable sTable1 = (SAPTable) obj1;
                SAPTable sTable2 = (SAPTable) obj2;

                return sTable1.name.compareToIgnoreCase(sTable2.name);
            }
        });
        return dataList;
    }//end of sortArrayList() method

    /**
     * This method returns all the fields for a specified table name.
     *
     * @param tableName pass the name of the table
     */
    public ArrayList getSAPFields(String tableName) throws JCoException {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++++OdiSAPERPAdapter.getSAPFields()++++++++"});
        ArrayList sapFieldsObjs = new ArrayList();

        try {
            //get connection from pool
            destination = getSAPConnection();

            GET_SAP_FIELDS_FUNCTION_NAME = getBackwardCompatibleRFC(GET_SAP_FIELDS_FUNCTION_NAME);
            //get the JCO function name from the RFC function name
            JCoFunction function = destination.getRepository().getFunction(GET_SAP_FIELDS_FUNCTION_NAME);
            if (function == null) {
				//Chanpreet
				OdiSapUtil.throwODIException(GET_SAP_FIELDS_FUNCTION_NAME + " RFC not found in SAP.");
            }

            JCoParameterList input = function.getImportParameterList();

            input.setValue("QUERY_TABLE", tableName);
            input.setValue("ROWSKIPS", "0");
            input.setValue("ROWCOUNT", "0");
            input.setValue("NO_DATA", "X");

            //execute the rfc function
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Executing RFC function for list of SAP fileds for table: " + tableName});
            function.execute(destination);
			
			/** trapping possible SAP exceptions **/
            readET_File_Return(function);
			
            //process the output of the RFC Fucntion execution

            JCoTable listOfFields = function.getTableParameterList().getTable("FIELDS");
            //process all the rows of the fields and create objects of class SAPField in an array list
            SAPField sField = null;
            if (listOfFields.getNumRows() > 0) {
                for (int r = 0; r < listOfFields.getNumRows(); r++) {

                    listOfFields.setRow(r);
                    sField = new SAPField();
                    sField.name = listOfFields.getString("FIELDNAME");
                    sField.desc = listOfFields.getString("FIELDTEXT");
                    sField.dataType = listOfFields.getString("DATATYPE");
                    sField.offset = listOfFields.getString("OFFSET");
                    sField.length = listOfFields.getString("LENGTH");
                    sField.decimal = listOfFields.getString("DECIMALS");
                    sField.notnull = listOfFields.getString("NOTNULL");

                    sapFieldsObjs.add(sField);
                    //sapLogger.log(sapLogger.INFO, "sField.name: "+sField.name+"  dataType: "+sField.dataType+", length: "+sField.length);
                }//end of for loop
            }//end of if condition
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------OdiSAPERPAdapter.getSAPFields()--------"});
        } catch (JCoException ex) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10028", new Object[]{ex.getMessage()});
			//Chanpreet
			OdiSapUtil.throwODIException(ex);
        } catch (Exception ex) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10028", new Object[]{ex.getMessage()});
			//Chanpreet
			OdiSapUtil.throwODIException(GET_SAP_FIELDS_FUNCTION_NAME + " RFC not found in SAP.");
        }
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Number of Fields retrieved: " + sapFieldsObjs.size()});
        return sapFieldsObjs;
    }//End of getSAPFields method

    /**
     * This method returns the all primary keys for a specified table name.
     *
     * @param tableName pass the name of the table
     */
    public ArrayList getPrimaryKeys(String tableName) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++OdiSAPERPAdapter.getPrimaryKeys()+++++++++"});
        ArrayList sapTablesPrimaryKeyList = new ArrayList();
        //JCO.Client cl
        try {
            //get connection from pool
            destination = getSAPConnection();
            //get the JCO function name from the RFC function name

            GET_SAP_TABLES_PK_FK_RFC_NAME = getBackwardCompatibleRFC(GET_SAP_TABLES_PK_FK_RFC_NAME);
            JCoFunction function = destination.getRepository().getFunction(GET_SAP_TABLES_PK_FK_RFC_NAME);

            if (function == null) {
				//Chanpreet
				OdiSapUtil.throwODIException(GET_SAP_TABLES_PK_FK_RFC_NAME + " RFC not found in SAP.");
            }

            //set the input parameters for the RFC Function
            JCoParameterList input = function.getImportParameterList();
            input.setValue("IV_TABLE_NAME", tableName);
            input.setValue("IV_ALL_KEYS", "");

            //execute the rfc function
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Executing RFC function for list of Primary keys for table: " + tableName});
            function.execute(destination);
			
			/** trapping possible SAP exceptions **/
            readET_File_Return(function);

            //process the output of the RFC Fucntion execution
            JCoTable listOfPrimaryKeys = function.getTableParameterList().getTable("ET_PRI_KEYS_TABLE");
            //process all the rows of the tables to get primary key and create objects of class SAPTablePrimaryKey in an array list

            SAPTablePrimaryKey sPrimaryKeyObj = null;
            if (listOfPrimaryKeys.getNumRows() > 0) {
                for (int r = 0; r < listOfPrimaryKeys.getNumRows(); r++) {
                    listOfPrimaryKeys.setRow(r);
                    sPrimaryKeyObj = new SAPTablePrimaryKey();
                    sPrimaryKeyObj.primaryKeyTableName = listOfPrimaryKeys.getString("PRI_KEY_TABNAM");
                    sPrimaryKeyObj.primaryKeyFieldName = listOfPrimaryKeys.getString("PRI_KEY_FIELD");

                    sapTablesPrimaryKeyList.add(sPrimaryKeyObj);
                }
            }
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"-------OdiSAPERPAdapter.getPrimaryKeys()--------" + tableName});
        } catch (Exception ex) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10029", new Object[]{ex.getMessage()});
        }
        return sapTablesPrimaryKeyList;
    }//End of getPrimaryKeys method

    /**
     * This method returns the all Foreign keys for a specified table name.
     *
     * @param tableName pass the name of the table
     */
    public ArrayList getForeignKeys(String tableName) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++++OdiSAPERPAdapter.getForeignKeys()++++++++", tableName});
        ArrayList sapTablesForeignKeyList = new ArrayList();

        try {
            //get connection from pool
            destination = getSAPConnection();
            //get the JCO function name from the RFC function name
            JCoFunction function = destination.getRepository().getFunction(GET_SAP_TABLES_PK_FK_RFC_NAME);
            if (function == null) {
				//Chanpreet
				OdiSapUtil.throwODIException("Z_ODI_RFC_TABLE_KEYS RFC not found in SAP.");
            }

            //set the input parameters for the RFC Fucntion
            JCoParameterList input = function.getImportParameterList();
            input.setValue("IV_TABLE_NAME", tableName);
            input.setValue("IV_ALL_KEYS", "X");

            //Get the SAP Client connection from the pool
            function.execute(destination);
			
			/** trapping possible SAP exceptions **/
            readET_File_Return(function);
			
            //execute the rfc function
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Executing RFC function for list of Foreign keys for table: " + tableName});

            //process the output of the RFC Fucntion execution
            JCoTable listOfPrimaryKeys = function.getTableParameterList().getTable("ET_FOR_KEYS_TABLE");
            //process all the rows of the tables to get Foreign key and create objects of class SAPTablePrimaryKey in an
            //array list
            SAPTableForeignKey sForeignKeyObj = null;
            if (listOfPrimaryKeys.getNumRows() > 0) {
                for (int r = 0; r < listOfPrimaryKeys.getNumRows(); r++) {
                    listOfPrimaryKeys.setRow(r);
                    sForeignKeyObj = new SAPTableForeignKey();

                    sForeignKeyObj.primaryKeyTabName = listOfPrimaryKeys.getString("TABLE_NAME");
                    sForeignKeyObj.primaryKeyField = listOfPrimaryKeys.getString("FIELD_NAME");
                    sForeignKeyObj.foreignKeyTabName = listOfPrimaryKeys.getString("FK_TABLE_NAME");
                    sForeignKeyObj.foreignKeyTableDesc = listOfPrimaryKeys.getString("FK_TABLE_TEXT");
                    sForeignKeyObj.foreignKeyField = listOfPrimaryKeys.getString("FK_FIELD_NAME");

                    sapTablesForeignKeyList.add(sForeignKeyObj);
                }
            }
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------OdiSAPERPAdapter.getForeignKeys()---------"});
        } catch (Exception ex) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10030", new Object[]{ex.getMessage()});
        }
        return sapTablesForeignKeyList;
    }//End of getForeignKeys() method

    /**
     * This method returns the all Indexes name & field for a specified table name.
     *
     * @param tableName - pass the name of the table
     */
    public ArrayList getTableIndexes(String tableName) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++OdiSAPERPAdapter.getTableIndexes()+++++++"});

        ArrayList sapTablesIndexesList = new ArrayList();
        try {
            //get connection from pool
            destination = getSAPConnection();
            //get the JCO function name from the RFC function name

            GET_SAP_TABLES_INDEXES_RFC_NAME = getBackwardCompatibleRFC(GET_SAP_TABLES_INDEXES_RFC_NAME);
            JCoFunction function = destination.getRepository().getFunction(GET_SAP_TABLES_INDEXES_RFC_NAME);
            if (function == null) {
				//Chanpreet
				OdiSapUtil.throwODIException(GET_SAP_TABLES_INDEXES_RFC_NAME + " RFC not found in SAP.");
            }

            //set the input parameters for the RFC Fucntion
            JCoParameterList input = function.getImportParameterList();
            input.setValue("IV_QUERY_TABLE", tableName);
            //input.setValue("IV_ALL_KEYS","X");

            //Get the SAP Client connection from the pool
            function.execute(destination);
			
			/** trapping possible SAP exceptions **/
            readET_File_Return(function);
			
            //execute the rfc function
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Executing RFC function for list of Indexes for table: " + tableName});

            //process the output of the RFC Fucntion execution
            JCoTable listOfPrimaryKeys = function.getTableParameterList().getTable("ET_TABLE_INDEX_LIST");
            //process all the rows of the tables to get Indexes and create objects of class SAPTableIndexes in an array list

            SAPTableIndexes sTableIndexObj = null;
            if (listOfPrimaryKeys.getNumRows() > 0) {
                for (int r = 0; r < listOfPrimaryKeys.getNumRows(); r++) {
                    listOfPrimaryKeys.setRow(r);
                    sTableIndexObj = new SAPTableIndexes();

                    sTableIndexObj.indexName = listOfPrimaryKeys.getString("INDEXNAME");
                    sTableIndexObj.indexField = listOfPrimaryKeys.getString("INDEXFIELDS");

                    sapTablesIndexesList.add(sTableIndexObj);
                }
            }
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------OdiSAPERPAdapter.getTableIndexes()---------"});
        } catch (Exception ex) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10031", new Object[]{ex.getMessage()});
        }
        return sapTablesIndexesList;
    }//End of getTableIndexes method

    /**
     * This method returns the list of possible application component, Short Description, packages and tables for given Search Criteria
     * @param ivTable, ivDesc, ivPackg, ivAPCom -  pass the name of the table, desc, package and application application
     * @return ArrayList
     */
    public ArrayList getSearchResult(String ivTable, String ivDesc, String ivPackg, String ivAPComp) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++OdiSAPERPAdapter.getSearchResult()+++++++"});
        ArrayList sapSearchDetailObjs = new ArrayList();
        try {
            //get connection from pool
            //destination = getSAPConnection();
            //get the JCO function name from the RFC function name
            JCoFunction function = destination.getRepository().getFunction(GET_SAP_TABLES_RFC_FUNCTION_NAME);
            if (function == null) {
				//Chanpreet
				OdiSapUtil.throwODIException("Z_ODI_RFC_GET_TABLES RFC not found in SAP.");
            }

            //set the input parameters for the RFC Function
            JCoParameterList input = function.getImportParameterList();
            input.setValue("IV_FLAG", "X");
            if (ivTable != null) {
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Search- Getting list search criteria - IV_TABLE: " + ivTable});
                input.setValue("IV_TABLE", ivTable);
            }
            if (ivDesc != null) {
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Search- Getting list search criteria - IV_DESC: " + ivDesc});
                input.setValue("IV_DESC", ivDesc);
            }
            if (ivPackg != null) {
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Search- Getting list search criteria - IV_PACKG: " + ivPackg});
                input.setValue("IV_PACKG", ivPackg);
            }
            if (ivAPComp != null) {
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Search- Getting list search criteria - IV_AP_COMP: " + ivAPComp});
                input.setValue("IV_AP_COMP", ivAPComp);
            }
            //typeOfObject = getTypeOfObject();
            if (getObjectType().equals("V")) {
                input.setValue("IV_VIEW_FLAG", "X");
            } else if (getObjectType().equals("T")) {
                input.setValue("IV_VIEW_FLAG", "");
            }
            //execute the rfc function
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Executing RFC function for list search criteria"});
            function.execute(destination);
			
			/** trapping possible SAP exceptions **/
            readET_File_Return(function);

            //process the output of the RFC Fucntion execution
            JCoTable listOfTables = function.getTableParameterList().getTable("ET_TBL_LIST");

            //process all the rows of the tables and create objects of class SAPSearchDetail in an array list
            SAPSearchDetail searchDetail = null;
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"listOfTables: " + listOfTables.getNumRows()});
            if (listOfTables.getNumRows() > 0) {
                for (int r = 0; r < listOfTables.getNumRows(); r++) {
                    listOfTables.setRow(r);
                    searchDetail = new SAPSearchDetail();

                    searchDetail.name = listOfTables.getString("TABNAME");
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"searchDetail.name: " + searchDetail.name});

                    searchDetail.desc = listOfTables.getString("COMMENTS");
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"searchDetail.desc: " + searchDetail.desc});

                    searchDetail.tableClass = listOfTables.getString("TABCLASS");
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"searchDetail.tableClass: " + searchDetail.tableClass});

                    searchDetail.devClass = listOfTables.getString("DEVCLASS");
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"searchDetail.devClass: " + searchDetail.devClass});

                    searchDetail.moduleName = listOfTables.getString("MODULE_NAME");
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"searchDetail.moduleName: " + searchDetail.moduleName});

                    sapSearchDetailObjs.add(searchDetail);
                }
            }
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"----------OdiSAPERPAdapter.getSearchResult()-------"});
			
        } catch (Exception ex) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10032", new Object[]{ex.getMessage()});
        }
        return sapSearchDetailObjs;
    }//End of getSearchResult() method

    public void setSAPConnection(oracle.odi.sap.km.OdiSapConnection sapConnection) {
        try {
            switch (sapConnection.getSAP_CONNECTION_TYPE()) {
                case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"SAP Pool Connection is requested.."});
                    break;
                case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"SAP SNC Connection is requested.."});
                    break;
                case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION:
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"SAP Message Server Connection is requested.."});
                    break;
            }
            this.destination = sapConnection.getDestination();
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Destination : " + destination});
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Successfully Created SAP Connection"});
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"SAP Connection attributes :" + destination.getAttributes()});
        } catch (JCoException e) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{"Error in creating the SAP Connection: " + e.getMessage()});
			//Chanpreet
			OdiSapUtil.throwODIException("Error in creating the SAP Connection: " + e.getMessage());
        } catch (Exception e) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{"Error in creating the SAP Connection: " + e.getMessage()});
			//Chanpreet
			OdiSapUtil.throwODIException("Error in creating the SAP Connection: " + e.getMessage());
        }
	}
	
	/**Reads all the possible messages returned by the ET_FILE_RETURN table type **/
    public void readET_File_Return(JCoFunction function) {
        StringBuffer bufferString = new StringBuffer();
        StringBuffer errorMsg = new StringBuffer();
        boolean errorMsgFlag = false;
        if (function.getTableParameterList().getListMetaData().hasField("ET_FILE_RETURN")) {
            //Check if the ABAP program is any error occurred while executing the ABAP program
            JCoTable etFileReturn = function.getTableParameterList().getTable("ET_FILE_RETURN");
            int numRows = etFileReturn.getNumRows();
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{">>>>>>>>>>> Number of Return Logs: " + numRows});
            if (numRows > 0) {
                String msgType = "";
                msgType = msgType.trim();
                for (int r = 0; r < numRows; r++) {
                    bufferString.delete(0, bufferString.length());
                    etFileReturn.setRow(r);
                    msgType = etFileReturn.getString("TYPE");
                    bufferString.append((!etFileReturn.getString("MESSAGE").trim().isEmpty()) ? etFileReturn.getString("MESSAGE") : "");
                    bufferString.append((!etFileReturn.getString("MESSAGE_V1").trim().isEmpty()) ? etFileReturn.getString("MESSAGE_V1") : "");
                    bufferString.append((!etFileReturn.getString("MESSAGE_V2").trim().isEmpty()) ? etFileReturn.getString("MESSAGE_V2") : "");
                    bufferString.append((!etFileReturn.getString("MESSAGE_V3").trim().isEmpty()) ? etFileReturn.getString("MESSAGE_V3") : "");
                    bufferString.append((!etFileReturn.getString("MESSAGE_V4").trim().isEmpty()) ? etFileReturn.getString("MESSAGE_V4") : "");

//                            sapLogger.fine("ODIKM-SAPOT-10000", "", new Object[]{("Action : " + action + " Msg Type : " + msgType)});
                    if (msgType.equalsIgnoreCase("S") || msgType.equalsIgnoreCase("I") || msgType.equalsIgnoreCase("W")) {//S=SUCCESS, I=INFORMATION, W=WARNING
                        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Msg Type: " + msgType});
                        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Message : " + bufferString.toString()});
                    }
                    if (msgType.equalsIgnoreCase("E") || msgType.equalsIgnoreCase("A") || msgType.equalsIgnoreCase("X")) {//E=ERROR, A=ABORT, X=EXIT
                        errorMsgFlag = true;
                        errorMsg.append("\nError Type: " + msgType + "\nMessage : " + bufferString.toString());
                        sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{"Msg Type: " + msgType});
                        sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{"Message : " + bufferString.toString()});
                    }
                }//end of for loop   
                if (errorMsgFlag) {
                    OdiSapUtil.throwODIException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10000") + ": " + errorMsg.toString());
                }
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"-----------------------------------------------"});
            }
        }
    }
}// End of OdiSAPERPAdapter class

/**
 * This class to store SAP Fields
 * information to display in the tree browser.
 */
class SAPField {

    public String name;
    public String desc;
    public String dataType;
    public String offset;
    public String length;
    public String decimal;
    public String notnull;
}

/**
 * This class is used to store SAP Module 
 * name & description to display in the tree browser.
 */
class SAPModule {

    public String name;
    public String desc;
}

/**
 * This class to store the searched SAP table or application
 * component information to display in the tree browser.
 */
class SAPSearchDetail {

    public String name;
    public String desc;
    public String type;
    public String tableClass;
    public String devClass;
    public String moduleName;
}

/**
 * This class is used to store SAP's sub models
 * information to display application component
 * in hierarchy in the ODI SAP Model.
 */
class SAPSubModels {

    public String appCompName;
    public String paranetAPPCompName;
}

/**
 * This class to store SAP table or application
 * component information to display in the tree browser.
 */
class SAPTable {

    public String name;
    public String desc;
    public String type;
    public String appComp;
}

/**
 * This class to store SAP tables FOREIGN key
 * information to display in the SAP Model in ODI.
 */
class SAPTableForeignKey {

    public String primaryKeyTabName;
    public String primaryKeyField;
    public String foreignKeyTabName;
    public String foreignKeyTableDesc;
    public String foreignKeyField;
}

/**
 * This class to store SAP tables Indexes
 * information to display in the SAP Model in ODI.
 */
class SAPTableIndexes {

    public String indexName;
    public String indexField;
}

/**
 * This class to store SAP tables primary key
 * information to display in the SAP Model in ODI.
 */
class SAPTablePrimaryKey {

    public String primaryKeyTableName;
    public String primaryKeyFieldName;
}

//*****Start of OdiSAPERPMetadataPopulator class *******
/////////////////////////////////////////////////////////////////////////////
// (c) Copyright 2008, Oracle                      		       		   //
// ALL RIGHTS RESERVED.                                                    //
// This UNPUBLISHED PROPRIETARY software is  subject to the full copyright //
// notice in the COPYRIGHT file in this directory.                         //
////////////////////////////////////////////////////////////////////////////
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Iterator;

/**
 * <b>OdiSAPERPMetadataPopulator</b> java class handles reversing of SAP Metadata without showing
 * UI browser. It fills the table, application component, primary keys, foreign keys, indexes information
 * into respective hashtable and arrayList to populate the data into ODI SNP_REV tables
 *
 * @version 1.0
 */
public class OdiSAPERPMetadataPopulator {

    public OdiSapLogger sapLogger = null;
    private OdiSAPERPAdapter odiSAPERPAdapter = null;
    private OdiSAPERPMetadataHelper odiSAPERPMetadataHelper = null;
    //ResourBundle object
    private oracle.odi.sap.km.CommonResourceBundle odiSapErpResourceBundle;

    /**
     * OdiSAPERPMetadataPopulator constructor
     *
     */
    public OdiSAPERPMetadataPopulator(OdiSAPERPAdapter odiSapERPAdapterObj, OdiSapLogger OdiSapLogger, OdiSAPERPMetadataHelper odiSAPERPMetadataHelper, oracle.odi.sap.km.CommonResourceBundle resourceBundle) {

        this.sapLogger = OdiSapLogger; //For ODI version
        this.odiSAPERPAdapter = odiSapERPAdapterObj; //For ODI version
        this.odiSAPERPMetadataHelper = odiSAPERPMetadataHelper; //For ODI version
        this.odiSapErpResourceBundle = resourceBundle;
    }

    /**
     * This method is reponsible to take the search parameter, fetch the data from SAP system and
     * put the all tables metadata into hashtable for reverse engineering in ODI SNP Rev tables
     * @param
     * @return
     */
    public void populateSearchData() {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++++++ OdiSAPERPMetadataPopulator.populateSearchData() +++++++++++++"});

        String maskTableName = "<%=odiRef.getModel("REV_OBJ_PATT")%>".toUpperCase();
        //sapLogger.log(sapLogger.INFO,"maskTableName: ", maskTableName);		

        String sapTableDesc = "<%=snpRef.getOption("SAP_TABLE_DESC")%>";
		//sapLogger.log(sapLogger.INFO, "search without ui - sapTableDesc: "+sapTableDesc);
		
        String sapPackage = "<%=snpRef.getOption("SAP_PACKAGE_NAME")%>".toUpperCase();
        //sapLogger.log(sapLogger.INFO, "search without ui - sapPackage: "+sapPackage);

        String sapModule = "<%=snpRef.getOption("SAP_MODULE_NAME")%>".toUpperCase();
        //sapLogger.log(sapLogger.INFO, "search without ui - sapModule: "+sapModule);

        String sapAppComp = "<%=snpRef.getOption("SAP_APP_COMP_NAME")%>".toUpperCase();
        //sapLogger.log(sapLogger.INFO, "search without ui - sapAppComp: "+sapAppComp);

        String sapTableName = "<%=odiRef.getOption("SAP_TABLES_NAME")%>".toUpperCase();
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"search without ui - sapTableName: " + sapTableName});

        ArrayList searchedDataList = null;
        try {
            if (!(maskTableName.equalsIgnoreCase("%")) && (!(maskTableName.equalsIgnoreCase("")))) { //Table Name
                //Table Name
                if (maskTableName.indexOf("%") != -1) {
                    maskTableName = maskTableName.replace('%', '*');
                    searchedDataList = odiSAPERPAdapter.getSearchResult(maskTableName, null, null, null);

                } else if (maskTableName.lastIndexOf("_") != -1) {
                    int indexVal = maskTableName.lastIndexOf("_") + 1;
                    String subTableString = maskTableName.substring(0, indexVal - 1);
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"substring is --->" + subTableString});
                    maskTableName = subTableString + "*";//Adding * to substring
                    searchedDataList = (odiSAPERPAdapter.getSearchResult(maskTableName, null, null, null));//Getting search result in an ArrayList
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"lookupResultList size after--->" + searchedDataList.size()});
                    ArrayList removelookuptable = new ArrayList();
                    Iterator itrlookup = searchedDataList.iterator();
                    while (itrlookup.hasNext()) {
                        SAPSearchDetail objVal = (SAPSearchDetail) itrlookup.next();
                        String name = objVal.name;
                        if (name.length() != indexVal) {
                            removelookuptable.add(objVal);
                        }
                    }
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"removelookuptable size after removing--->" + removelookuptable.size()});
                    searchedDataList.removeAll(removelookuptable);
                    removelookuptable.clear();
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"lookupResultList size after removing--->" + searchedDataList.size()});
                } else {
                    searchedDataList = odiSAPERPAdapter.getSearchResult(maskTableName, null, null, null);
                }

            } else if (!(sapTableName.equalsIgnoreCase("%")) && (!(sapTableName.equalsIgnoreCase("")))) { //SAP Table Name

                //if(sapTableName.indexOf(",") != -1) {
                searchedDataList = new ArrayList();
                if (sapTableName.indexOf(",") != -1) {//multiple tables
                    String[] sapTableSearch = sapTableName.split(",");
                    for (int i = 0; i < sapTableSearch.length; i++) {
                        String tableName = sapTableSearch[i];
                        ArrayList tablesList = odiSAPERPAdapter.getSearchResult(tableName, null, null, null);
                        if (tablesList.size() > 0 && tablesList != null) {
                            Iterator tableListItr = tablesList.iterator();
                            SAPSearchDetail sapSearchDetailObj = null;
                            while (tableListItr.hasNext()) {
                                sapSearchDetailObj = new SAPSearchDetail();
                                sapSearchDetailObj = (SAPSearchDetail) (tableListItr.next());
                                searchedDataList.add(sapSearchDetailObj);
                            }//end of while loop
                        }//end of if condition
                    }//end of for loop
                } else {//single tables
                    ArrayList tableMetaData = odiSAPERPAdapter.getSearchResult(sapTableName, null, null, null);
                    if (tableMetaData.size() > 0 && tableMetaData != null) {
                        Iterator tableListItr = tableMetaData.iterator();
                        SAPSearchDetail sapSearchDetailObj = null;
                        while (tableListItr.hasNext()) {
                            sapSearchDetailObj = new SAPSearchDetail();
                            sapSearchDetailObj = (SAPSearchDetail) (tableListItr.next());
                            searchedDataList.add(sapSearchDetailObj);
                        }//end of while loop
                    }//end of if condition
                }
                /*} else {
                sapLogger.log(sapLogger.ERROR,"Error: in OdiSAPERPMetadataPopulator.populateSearchData(): Please enter wild card(,) followed by searching tables string in SAP Tables Name!!!");
                throw new Exception("Please enter wild card(,) followed by searching tables string in SAP Tables Name!!!");
                }*/
            } else if (!(sapModule.equalsIgnoreCase("%")) && (!(sapModule.equalsIgnoreCase("")))) { //Module Name
                if (sapModule.indexOf("%") != -1) {
                    sapModule = sapModule.replace('%', '*');
                    searchedDataList = odiSAPERPAdapter.getSearchResult(null, null, null, sapModule);
                } else {
                    sapLogger.severe("ODIKM-SAPERP-RKM-10008", new Object[]{""});
					//Chanpreet
					OdiSapUtil.throwODIException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10008"));
				}
            } else if (!(sapAppComp.equalsIgnoreCase("%")) && (!(sapAppComp.equalsIgnoreCase("")))) { //Application Component Name
                if (sapAppComp.indexOf("%") != -1) {
                    sapAppComp = sapAppComp.replace('%', '*');
                    searchedDataList = odiSAPERPAdapter.getSearchResult(null, null, null, sapAppComp);
                } else {
                    sapLogger.severe("ODIKM-SAPERP-RKM-10009", new Object[]{""});
					//Chanpreet
					OdiSapUtil.throwODIException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10009"));
                }
            } else if (!(sapPackage.equalsIgnoreCase("%")) && (!(sapPackage.equalsIgnoreCase("")))) { //Package name
                if (sapPackage.indexOf("%") != -1) {
                    sapPackage = sapPackage.replace('%', '*');
                    searchedDataList = odiSAPERPAdapter.getSearchResult(null, null, sapPackage, null);
                } else {
                    searchedDataList = odiSAPERPAdapter.getSearchResult(null, null, sapPackage, null);
                    //sapLogger.log(sapLogger.ERROR,"Error: in OdiSAPERPMetadataPopulator.populateSearchData(): Please enter wild card(%) followed by search string in SAP Package Name!!!");
                    //throw new Exception("Please enter wild card(%) followed by search string in SAP Package Name!!!");
                }

            } else if (!(sapTableDesc.equalsIgnoreCase("%")) && (!(sapTableDesc.equalsIgnoreCase("")))) { //Table Description
                if (sapTableDesc.indexOf("%") != -1) {
                    sapModule = sapModule.replace('%', '*');
                    searchedDataList = odiSAPERPAdapter.getSearchResult(null, sapTableDesc, null, null);
                } else {
                    searchedDataList = odiSAPERPAdapter.getSearchResult(null, sapTableDesc, null, null);
                    //sapLogger.log(sapLogger.ERROR,"Error: in OdiSAPERPMetadataPopulator.populateSearchData(): Please enter wild card(%) followed by search string in SAP Table Desc!!!");
                    //throw new Exception("Please enter wild card(%) followed by search string in SAP Table Desc!!!");
                }
            } else {
                sapLogger.severe("ODIKM-SAPERP-RKM-10010", new Object[]{""});
				//Chanpreet
				OdiSapUtil.throwODIException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10010"));
            }

            if (searchedDataList.isEmpty()) { //If no record found for the given search
                sapLogger.severe("ODIKM-SAPERP-RKM-10011", new Object[]{""});
				//Chanpreet
				OdiSapUtil.throwODIException(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10011"));
			}
            ArrayList fieldList = null;

            Iterator searchItr = searchedDataList.iterator();
            Hashtable tableMetadata = new Hashtable();
            ArrayList tableInfoList = new ArrayList();
            SAPSearchDetail searchDetails = null;

            while (searchItr.hasNext()) {
                searchDetails = new SAPSearchDetail();
                searchDetails = (SAPSearchDetail) searchItr.next();

                String tableName = searchDetails.name;
                String tableDesc = searchDetails.desc;
                String tableType = searchDetails.tableClass;
                if (searchDetails.moduleName == null || searchDetails.moduleName.equalsIgnoreCase("")) {
                    searchDetails.moduleName = "UNDEFINED";
                }
                String appComp = searchDetails.moduleName;
                StringBuffer tableInfoTemp = new StringBuffer();//performance tuning
                tableInfoTemp.append(tableName);
                tableInfoTemp.append("$");
                tableInfoTemp.append(tableDesc);
                tableInfoTemp.append("$");
                tableInfoTemp.append(tableType);
                tableInfoTemp.append("$");
                tableInfoTemp.append(appComp);

                //String tableInfo = tableName +"$"+tableDesc+"$"+tableType+"$"+appComp;//old approach
                String tableInfo = tableInfoTemp.toString();

                tableInfoList.add(tableInfo); //adding tableInfo into arrayList
                if ((tableName != null) && (!(tableName.equals("")))) {
                    fieldList = new ArrayList();
                    try {
                        fieldList = odiSAPERPAdapter.getSAPFields(tableName.trim());
                    } catch (Exception ex) {
                        odiSAPERPAdapter.chainedSAPException(ex, "getSAPFields");
                    }
                }
                tableMetadata.put(tableName, fieldList);
            }
            //sapLogger.log(sapLogger.INFO, ">>>>>> tableMetadata.size(): "+tableMetadata.size());
            odiSAPERPMetadataHelper.getSAPMetadata(tableMetadata, true, tableInfoList); //Reverse process starts here

        } catch (Exception e) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{e.getMessage()});
			//Chanpreet
			OdiSapUtil.throwODIException(e);
        }
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------- OdiSAPERPMetadataPopulator.populateSearchData() -----------"});
    }
    /*public static void main(String[] args) {
    // TODO Auto-generated method stub
    OdiSAPERPMetadataPopulator populator = new OdiSAPERPMetadataPopulator();
    }*/
} //end of main class - OdiSAPERPMetadataPopulator

import java.awt.Cursor;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.JTree;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;

public class OdiJTree extends JTree {

    private OdiSAPERPMetadataBrowser browser;

    public OdiJTree(TreeModel newModel) {
        super(newModel);
    }

    public OdiJTree(TreeNode root, boolean asksAllowsChildren) {
        super(root, asksAllowsChildren);
    }

    public OdiJTree(TreeNode root) {
        this(root, false);
    }

    public OdiJTree(Hashtable value) {
        super(value);
    }

    public OdiJTree(Vector value) {
        super(value);
    }

    public OdiJTree(Object[] value) {
        super(value);
    }

    public OdiJTree(OdiSAPERPMetadataBrowser browser) {
        super();
        this.browser = browser;
    }

    public void fireTreeCollapsed(TreePath path) {
        browser.sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------------------...Tree Collapsed...--------------------"});
        browser.setTreeExpanded(true);
        super.fireTreeCollapsed(path);
        browser.sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------------------...Tree Collapsed...--------------------"});
    }

    public void fireTreeExpanded(TreePath path) {
        // Guaranteed to return a non-null array
        browser.sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------------------...Tree Expanded...--------------------"});
        browser.setTreeExpanded(true);
        browser.frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        browser.sTP = true;
        Object obj = path.getPath()[path.getPathCount() - 1];
        browser.addChildNode(obj, false, 2);
        //this.setSelectionPath(path);                 
        super.fireTreeExpanded(path);
        browser.frame.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        browser.sTP = false;
        browser.sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------------------...Tree Expanded...--------------------"});
        browser.frame.repaint();
    }
}

import java.awt.Cursor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.TreePath;

public class OdiTreeListener extends MouseAdapter implements TreeSelectionListener {

    private OdiSAPERPAdapter odiSAPERPAdapter;
    private OdiSapLogger sapLogger;
    private OdiSAPERPMetadataBrowser browser;

    public OdiTreeListener(OdiSAPERPMetadataBrowser browser, OdiSAPERPAdapter odiSAPERPAdapter, OdiSapLogger sapLogger) {
        this.odiSAPERPAdapter = odiSAPERPAdapter;
        this.sapLogger = sapLogger;
        this.browser = browser;
    }

    public void valueChanged(TreeSelectionEvent e) {
        browser.setSelectedPath(e.getPath());
        //sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"value change event called : "+e.getPath()});
        browser.frame.repaint();
    }

    public void mouseClicked(MouseEvent e) {
        try {
            //System.out.println("Mouse Click");
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------------------...Mouse Clicked...--------------------"});
            browser.frame.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

            TreePath tp = browser.getSelectedPath();
            Object obj = tp.getPath()[tp.getPathCount() - 1];
            OdiSAPERPNode nd = (OdiSAPERPNode) obj;
            String name = nd.getName();
            int tableField = nd.getDesc().toString().indexOf("{");
            if ((name.indexOf("-") == -1) && (tp.getPath().length != 2) && !(name.equalsIgnoreCase("SAP Metadata")) && (tableField != 0)) {
                browser.frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                browser.addChildNode(obj, true, (browser.isTreeExpanded() ? 2 : 1));
                browser.setTreeExpanded(false);
                if (nd.isSelected()) {
                    int index = browser.mUncheckedTableList.indexOf(nd.getName());
                    if (index == -1) {
                        browser.mUncheckedTableList.add(nd.getName());
                    }
                } else {
                    int index = browser.mUncheckedTableList.indexOf(nd.getName());
                    if (index != -1) {
                        //node already exists, so remove it
                        browser.mUncheckedTableList.remove(index);
                    }
                }
                browser.setTreeExpanded(false);
                browser.frame.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------------------...Mouse Clicked...--------------------"});
                browser.frame.repaint();
            }

        } catch (Exception ex) {
            //ex.printStackTrace();
        }

    }

    public void mouseWheelMoved(MouseWheelEvent e) {
        browser.getTree().repaint();
        //super.mouseWheelMoved(e);            
    }
}

import java.util.ArrayList;
import javax.swing.event.TreeModelListener;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author Anup.Singh
 */
public class OdiErpTreeModel implements TreeModel {

    OdiSAPERPNode myNode;

    public OdiSAPERPNode getMyNode() {
        return myNode;
    }

    public OdiErpTreeModel(OdiSAPERPNode node) {
        this.myNode = node;
    }

    public void add(OdiErpTreeModel model) {
        ArrayList vc = this.myNode.getChildNodes();
        vc.add(model.myNode);
        this.myNode.setChildNodes(vc);
    }

    public Object getRoot() {
        return myNode;
    }

    public Object getChild(Object parent, int index) {
        OdiSAPERPNode node = (OdiSAPERPNode) parent;
        if (node != null) {
            node = (OdiSAPERPNode) node.getChildNodes().get(index);
            return node;
        }
        return null;
    }

    public int getChildCount(Object parent) {
        OdiSAPERPNode node = (OdiSAPERPNode) parent;
        if (node != null) {
            return node.getChildNodes().size();
        }
        return 0;
    }

    public boolean isLeaf(Object node) {
        boolean leaf = true;
        OdiSAPERPNode nodex = (OdiSAPERPNode) node;
        if (nodex != null) {
            leaf = nodex.isLeaf();
        }
        return leaf;
    }

    public void valueForPathChanged(TreePath path, Object newValue) {
    }

    public int getIndexOfChild(Object parent, Object child) {
        OdiSAPERPNode pnode = (OdiSAPERPNode) parent;
        OdiSAPERPNode cnode = (OdiSAPERPNode) child;
        if (!(pnode == null && null == cnode)) {
            return pnode.getChildNodes().indexOf(cnode);
        }
        return -1;
    }

    public void addTreeModelListener(TreeModelListener l) {
    }

    public void removeTreeModelListener(TreeModelListener l) {
    }
}

import java.util.ArrayList;
import java.util.Iterator;

/**
 * This class will represent each Tree Browser node
 * name- node name
 * desc- node description
 * selected- its corresponding checkbox is selected/deselected
 *
 */
public class OdiSAPERPNode {

    private String name = "";
    private String desc = "";
    //selected status
    private boolean selected;
    private boolean leaf;
    private boolean table;

    public boolean isTable() {
        return table;
    }

    public void setTable(boolean table) {
        this.table = table;
    }

    public boolean isLeaf() {
        return leaf;
    }

    public void setLeaf(boolean leaf) {
        this.leaf = leaf;
    }

    public ArrayList getChildNodes() {
        return childNodes;
    }

    public void setChildNodes(ArrayList childNodes) {
        this.childNodes = childNodes;
    }
    private ArrayList childNodes = new ArrayList();

    public OdiSAPERPNode(String name, String desc, boolean selected) {
        this.name = name;
        this.desc = desc;
        this.selected = selected;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public boolean isSelected() {
        return selected;
    }

    public void setSelected(boolean selected) {
        this.selected = selected;
    }

    public String getDesc() {
        return desc;
    }

    public void setDesc(String desc) {
        this.desc = desc;
    }

    public String toString() {
        return name + "(" + desc + ")";
    }

    public OdiSAPERPNode getNode(String name) {
        OdiSAPERPNode parentNode = null;
        ArrayList al = this.getChildNodes();
        Iterator it = al.iterator();
        while (it.hasNext()) {
            parentNode = (OdiSAPERPNode) it.next();
            if (parentNode.getName().equalsIgnoreCase(name)) {
                return parentNode;
            }
        }
        return null;
    }
}//end of class - OdiSAPERPNode

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.Icon;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTree;
import javax.swing.UIManager;
import javax.swing.tree.TreeCellRenderer;
import javax.swing.tree.TreePath;

/**
 * CheckRenderer: This inner class is responsible to set the tree node icon
 * @author
 *
 */
public class CheckRenderer implements TreeCellRenderer, ItemListener {
//public class CheckRenderer extends DefaultTreeCellRenderer implements ItemListener {

    protected JCheckBox check;
    protected TreeLabel label;
    protected JPanel jPan = null;
    public OdiSapLogger sapLogger = null;
    private OdiSAPERPAdapter odiSAPERPAdapter = null;
    private OdiSAPERPMetadataBrowser browser;
    OdiSAPERPNode selNode;
    boolean operationSel = false;
    static int count = 0;
    //Icon iconRoot = null;
    //Icon iconModule = null;
    //Icon iconField = null;
    //Icon iconTable = null;
    //Icon iconComponent = null;
    private final String checkboxLabel1 = "<html><table cellpadding=0><tr><td><img src=\"";
    private final String checkboxLabel2 = "\"></img>&nbsp;";
    private final String checkboxLabel3 = "</td></tr></table></html>";
    protected JPanel checkCollection;
    protected JLabel lab;

    public CheckRenderer(OdiSAPERPMetadataBrowser browser, OdiSAPERPAdapter odiSapERPAdapterObj, OdiSapLogger odiSapLogger) {
        jPan = new JPanel();
        jPan.add(check = new JCheckBox());
        jPan.add(label = new TreeLabel());
        this.browser = browser;////ODI version
        this.sapLogger = odiSapLogger; //ODI version


        //URL obj_model = this.getClass().getResource("com/sunopsis/graphical/gif/obj_model.gif");
        //URL obj_model = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_model.gif");
        //iconRoot = new ImageIcon(obj_model);

        //URL obj_submodel = this.getClass().getResource("com/sunopsis/graphical/gif/obj_submodel.gif");
        //URL obj_submodel = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_submodel.gif");
        //iconModule = new ImageIcon(obj_submodel);

        //URL obj_column = this.getClass().getResource("com/sunopsis/graphical/gif/obj_column.gif");
        //URL obj_column = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_column.gif");
        //iconField = new ImageIcon(obj_column);

        //URL obj_table = this.getClass().getResource("com/sunopsis/graphical/gif/obj_table.gif");
        //URL obj_table = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_table.gif");
        //iconTable = new ImageIcon(obj_table);
        //iconComponent = new ImageIcon(obj_submodel);

    }

    public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {

        try {
            //sapLogger.log(sapLogger.INFO, "### Cell Rendered Component......");
            //OdiErpTreeModel tnode = (OdiErpTreeModel) value;
            //OdiSAPERPNode node = tnode.getMyNode();
            OdiSAPERPNode node = (OdiSAPERPNode) value;
            TreePath path = tree.getPathForRow(row);
            Object[] obj = path.getPath();

            String name = node.getName();

            int tableField = node.getDesc().toString().indexOf("{");

            if ((name.indexOf("-") == -1) && (obj.length != 2) && !(name.equalsIgnoreCase("SAP Metadata")) && (tableField != 0)) {

                String imgSrc = "";

                try {
                    imgSrc = browser.getIconTable().toString();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                //set custom label for checkbox

                check.setText("");
                check.setBackground(tree.getBackground());
                String cusLabel = checkboxLabel1 + imgSrc
                        + checkboxLabel2
                        + name.trim() + "  (" + node.getDesc().trim() + ")"
                        + checkboxLabel3;
                check.setLabel(cusLabel);
                check.setSelected(node.isSelected());
                check.setBackground(tree.getBackground());
                check.setFont(tree.getFont());
                return check;
            } else {

                String stringValue = "";
                if (name.equalsIgnoreCase("SAP Metadata")) {
                    stringValue = name;
                } else if (tableField >= 0) {
                    stringValue = name + "  " + node.getDesc();
                } else {
                    stringValue = name + "  (" + node.getDesc() + ")";
                }

                jPan.setEnabled(tree.isEnabled());
                label.setFont(tree.getFont());
                label.setText(stringValue);
                label.setSelected(selected);
                label.setFocus(hasFocus);

                String modName = node.getName();

                if (path == null) {
                    label.setIcon(browser.getIconTable());
                } else {
                    if (path.getPathCount() == 1) {
                        label.setIcon(browser.getIconRoot());
                    } else if (path.getPathCount() == 2) {
                        label.setIcon(browser.getIconModule());
                    } else if (modName.indexOf("-") >= 0) {
                        label.setIcon(browser.getIconComponent());
                    } else if (modName.indexOf("-") == -1) {
                        label.setIcon(browser.getIconTable());
                    }
                }

                if (tableField >= 0) {
                    label.setIcon(browser.getIconField());
                    label.setSelected(false);
                }
            }
            tree.clearSelection();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return label;
    }//end of public Component getTreeCellRendererComponent() method

    public void reset() {
        selNode = null;
    }

    public void doLayout() {
        Dimension d_check = check.getPreferredSize();
        Dimension d_label = label.getPreferredSize();
        int y_check = 0;
        int y_label = 0;
        if (d_check.height < d_label.height) {
            y_check = (d_label.height - d_check.height) / 2;
        } else {
            y_label = (d_check.height - d_label.height) / 2;
        }
        check.setLocation(0, y_check);
        check.setBounds(0, y_check, d_check.width, d_check.height);
        label.setLocation(d_check.width, y_label);
        label.setBounds(d_check.width, y_label, d_label.width, d_label.height);
    }

    public class TreeLabel extends JLabel {

        boolean isSelected;
        boolean hasFocus;

        public void paint(Graphics g) {
            String str;
            if ((str = getText()) != null) {
                if (0 < str.length()) {
                    if (isSelected) {
                        //g.setColor(UIManager.getColor("Tree.selectionBackground"));
                        g.setColor(Color.LIGHT_GRAY);
                    } else {
                        g.setColor(UIManager.getColor("Tree.textBackground"));
                    }
                    Dimension d = getPreferredSize();
                    int imageOffset = 0;
                    Icon currentI = getIcon();
                    if (currentI != null) {
                        imageOffset = currentI.getIconWidth()
                                + Math.max(0, getIconTextGap() - 1);
                    }
                    g.fillRect(imageOffset, 0, d.width - 1 - imageOffset,
                            d.height);
                    if (hasFocus) {
                        g.setColor(UIManager.getColor("Tree.selectionBorderColor"));
                        g.drawRect(imageOffset, 0, d.width - 1 - imageOffset,
                                d.height - 1);
                    }
                }
            }
            super.paint(g);
        }//end of paint() method

        public void setSelected(boolean isSelected) {
            this.isSelected = isSelected;
        }

        public void setFocus(boolean hasFocus) {
            this.hasFocus = hasFocus;
        }
    }//end of inner class TreeLabel

    public void itemStateChanged(ItemEvent e) {
        // TODO Auto-generated method stub
    }
}//End of class - CheckRenderer

/////////////////////////////////////////////////////////////////////////////
//(c) Copyright 2008, Oracle                      		       		   //
//ALL RIGHTS RESERVED.                                                    //
//This UNPUBLISHED PROPRIETARY software is  subject to the full copyright //
//notice in the COPYRIGHT file in this directory.                         //
////////////////////////////////////////////////////////////////////////////
//import com.sunopsis.graphical.gif.toolbar.*;
import java.awt.BorderLayout;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.TreeMap;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
//import javax.swing.JTree;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.TreePath;

/**
 * @(#)OdiSAPERPMetadataBrowser.java  1.00 11/24/2008
 *
 * Application : ODI SAP ERP Metadata Browser  Modules
 * Module      : SAP ERP Metadata Browser
 * Author(s)   : Oracle
 * About       :
 *
 * Dependencies: JDK 1.4.2 API (with standard extensions),
 * Update History (Please make entries here in case you make a change.)
 * ____________________________________________________________________
 * Date       Author                       Comments about the change
 * ____________________________________________________________________
 *
 *
 **/
/**
 * <b>OdiSAPERPMetadataBrowser</b> swing class handles creation/management of SAP connections
 * including Connection pooling. It also deals with all the methods for getting
 * SAP Metadata information.
 */
/**
 * This swing class is responsible to create & show the ODI-SAP ERP Metadata Browser in the tree form with search panel on top
 *
 * @version 1.0
 */
/**
 * <b>OdiSAPERPMetadataBrowser</b> swing class handles creation/management of SAP connections
 * including Connection pooling. It also deals with all the methods for getting
 * SAP Metadata information.
 */
/**
 * This swing class is responsible to create & show the ODI-SAP ERP Metadata Browser in the tree form with search panel on top
 *
 * @version 1.0
 */
public class OdiSAPERPMetadataBrowser {

    // The initial width and height of the frame
    private static int sWIDTH = 550;
    private static int sHEIGHT = 630;
    protected JFrame frame = null;
    public OdiErpTreeModel jTreeRootNode; //rootNode
    public OdiErpTreeModel jTreeSelectedNode; //selected node
    private JPanel jPanelTop = new JPanel();
    private JPanel jPanelSearch = new JPanel();
    private JPanel jPanelTree = new JPanel();
    private JPanel jBottomPanel = new JPanel();
    private JPanel jPanelGap2 = new JPanel();
    private JLabel jLabelTName = null;
    private JLabel jLabelSDesc = null;
    private JLabel jLabelAppComp = null;
    private JLabel jLabelPkg = null;
    private JTextField jTxtFieldTName = new JTextField("", 20);
    private JTextField jTxtFieldSDesc = new JTextField("", 20);
    private JTextField jTxtFieldAppComp = new JTextField("", 20);
    private JTextField jTxtFieldPkg = new JTextField("", 20);
    private JButton jButtonSearch = null;
    private JButton jButtonCancle = null;
    private JButton jButtonReverse = null;
    private TreeMap mModuleName = null; //Hashtable of Module Name & Description
    private ArrayList mAppCompList = null; //List of Application Component & Tables
    private String moduleKey = null;
    private String moduleDesc = null;
    public boolean isTableNodeSelected = false;
    //mSelectedTables - map of keys as selected tables name & values as their list of fields name
    private Hashtable mSelectedTables = new Hashtable();
    public ArrayList mUncheckedTableList = new ArrayList();
    private boolean _treeExpanded;

    public boolean isTreeExpanded() {
        return _treeExpanded;
    }

    public void setTreeExpanded(boolean _treeExpanded) {
        this._treeExpanded = _treeExpanded;
    }

    public Hashtable getmSelectedTables() {
        return mSelectedTables;
    }

    public void setmSelectedTables(Hashtable mSelectedTables) {
        this.mSelectedTables = mSelectedTables;
    }

    public ArrayList getmUncheckedTableList() {
        return mUncheckedTableList;
    }

    public void setmUncheckedTableList(ArrayList mUncheckedTableList) {
        this.mUncheckedTableList = mUncheckedTableList;
    }
    //code added by AKS
    public boolean sTP = false;

    public boolean issTP() {
        return sTP;
    }

    public void setsTP(boolean sTP) {
        this.sTP = sTP;
    }
    private String[] searchNodeNames;

    public String[] getSearchNodeNames() {
        return searchNodeNames;
    }
    private TreePath selectedPath = null;

    //end of searchNodeNames
    public TreePath getSelectedPath() {
        return selectedPath;
    }

    public void setSelectedPath(TreePath selectedPath) {
        this.selectedPath = selectedPath;
    }
    public OdiSapLogger sapLogger = null;
    private OdiSAPERPAdapter odiSAPERPAdapter = null;
    private OdiSAPERPMetadataHelper odiSAPERPMetadataHelper = null;
    private oracle.odi.sap.km.CommonResourceBundle odiSapErpResourceBundle = null;
    private OdiJTree tree = null;//AKS

    public OdiJTree getTree() {
        return tree;
    }

    public void setTree(OdiJTree tree) {
        this.tree = tree;
    }
    private String ivTable = null;
    private String ivDesc = null;
    private String ivPackg = null;
    private String ivAPComp = null;
    private ImageIcon lookupFrameIcon = null;
    private ImageIcon frameIcon = null;
    private URL obj_model = null;
    private URL obj_submodel = null;
    private Icon iconRoot = null;
    private Icon iconModule = null;
    private Icon iconComponent = null;
    private Icon iconField = null;
    private Icon iconTable = null;
    private JButton jButtonTLookup = null;
    private JButton jButtonSDescLookup = null;
    private JButton jButtonACompLookup = null;
    private JButton jButtonPckgLookup = null;
    public boolean isCancle = true;
    String searchTableName = null;

    /**
     * Default Constructor
     * Comments
     */
    public OdiSAPERPMetadataBrowser(OdiSAPERPAdapter odiSapERPAdapterObj, OdiSapLogger odiSapLogger,
            OdiSAPERPMetadataHelper odiSAPERPMetadataHelper, oracle.odi.sap.km.CommonResourceBundle resourceBundle) {

        frame = new JFrame();
        //frame.setResizable(false);

        this.sapLogger = odiSapLogger; //For ODI version
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++++++ OdiSAPERPMetadataBrowser constructor ++++++++++++"});
        this.odiSAPERPAdapter = odiSapERPAdapterObj; //For ODI version
        this.odiSAPERPMetadataHelper = odiSAPERPMetadataHelper; //For ODI version
        //this.odiSAPERPAdapter = new OdiSAPERPAdapter(); //For eclipse version
        //this.sapLogger = odiSAPERPAdapter.sapLogger;; //For eclipse version

        this.mModuleName = odiSAPERPAdapter.getALLSAPModules(); //getting SAP main module
        //code for I18N
        //odiSapERPResourceBundle = new ODISAPERPResourceBundle(sapLogger);//resourcebundle object to initialize & load resources
        //odiSapERPResourceBundle.initializeResource();//initializing/loading resources
        this.odiSapErpResourceBundle = resourceBundle;

        frame.setTitle(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_Title"));

        jLabelTName = new JLabel(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jLabelTName"));
        jLabelSDesc = new JLabel(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jLabelSDesc"));
        jLabelAppComp = new JLabel(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jLabelAppComp"));
        jLabelPkg = new JLabel(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jLabelPkg"));

        jButtonSearch = new JButton(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jButtonSearch"));
        jButtonCancle = new JButton(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jButtonCancle"));
        jButtonReverse = new JButton(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jButtonReverse"));

        //load resource icon
        loadIconResource();
        //setting icon for frame
        //URL designerIconUrl = this.getClass().getResource("com/sunopsis/graphical/gif/toolbar/designer_16.gif");
        //URL designerIconUrl = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/toolbar/designer_16.gif");

        //ImageIcon frameIcon = new ImageIcon(designerIconUrl);
        frame.setIconImage(getFrameIcon().getImage());

        //setting icon for lookup screen
        //URL lookupFrameIconUrl = this.getClass().getResource("com/sunopsis/graphical/gif/toolbar/search_16.gif");
        //URL lookupFrameIconUrl = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/toolbar/search_16.gif");

        //lookupFrameIcon = new ImageIcon(lookupFrameIconUrl);


        jButtonTLookup = new JButton(".Table..");
        jButtonSDescLookup = new JButton(".Desc.");
        jButtonACompLookup = new JButton(".Application..");
        jButtonPckgLookup = new JButton(".Package..");

        jButtonTLookup.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jButtonTLookup"));
        jButtonSDescLookup.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jButtonSDescLookup"));
        jButtonACompLookup.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jButtonACompLookup"));
        jButtonPckgLookup.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jButtonPckgLookup"));

        jTxtFieldTName.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jTxtFieldTName"));
        jTxtFieldPkg.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jTxtFieldPkg"));
        jTxtFieldAppComp.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jTxtFieldAppComp"));
        jTxtFieldSDesc.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jTxtFieldSDesc"));

        jButtonSearch.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jButtonSearchToolTip"));
        jButtonReverse.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jButtonReverseToolTip"));
        jButtonCancle.setToolTipText(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jButtonCancleToolTip"));

        createSearchPanel(); //Add search panel on the top
        createTreePanel(); //Prepare tree panel
        addBottomPanel(); //Add bottom panel

        frame.setSize(sWIDTH, sHEIGHT);
        frame.setLocationRelativeTo(null);//set location in center
        frame.setVisible(true);
        frame.addWindowListener(new WindowAdapter() {

            public void windowClosing(WindowEvent e) {
                isCancle = true;
                frame.setVisible(false);
            }
        });
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"------- OdiSAPERPMetadataBrowser constructor ---------"});
    }//End of Default Constructor

    /**
     * Load image icon resources for browser frame, lookup frame,
     * Sap modules, application components, tables and fields
     */
    private void loadIconResource() {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++++ OdiSAPERPMetadataBrowser.loadIconResource() +++++++++++"});
        //loading icon for frame
        URL designerIconUrl = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/toolbar/designer_16.gif");
        frameIcon = new ImageIcon(designerIconUrl);
        setFrameIcon(frameIcon);

        //setting icon for lookup screen
        URL lookupFrameIconUrl = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/toolbar/search_16.gif");
        lookupFrameIcon = new ImageIcon(lookupFrameIconUrl);
        setLookupFrameIcon(lookupFrameIcon);

        //Loading & setting resource icon for tree node
        obj_model = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_model.gif");
        iconRoot = new ImageIcon(obj_model);
        setIconRoot(iconRoot);

        //loading & setting resource icon for SAP module and application component
        obj_submodel = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_submodel.gif");
        iconModule = new ImageIcon(obj_submodel);
        setIconModule(iconModule);//set Icon for SAP module

        iconComponent = new ImageIcon(obj_submodel);

        setIconComponent(iconComponent);//set icon from SAP application component

        //loading and setting resource icon for SAP tables. e.g. MARA        
        URL obj_table = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_table.gif");
        iconTable = new ImageIcon(obj_table);
        setIconTable(iconTable);

        //loading and setting resource icon for table fields
        URL obj_column = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_column.gif");
        iconField = new ImageIcon(obj_column);

        setIconField(iconField);
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"------- OdiSAPERPMetadataBrowser.loadIconResource() ---------"});
    }//End of loadIconResource() method

    /**
     * @return the lookupFrameIcon
     */
    public ImageIcon getLookupFrameIcon() {
        return lookupFrameIcon;
    }

    /**
     * @param lookupFrameIcon the lookupFrameIcon to set
     */
    public void setLookupFrameIcon(ImageIcon lookupFrameIcon) {
        this.lookupFrameIcon = lookupFrameIcon;
    }

    /**
     * @return the frameIcon
     */
    public ImageIcon getFrameIcon() {
        return frameIcon;
    }

    /**
     * @param frameIcon the frameIcon to set
     */
    public void setFrameIcon(ImageIcon frameIcon) {
        this.frameIcon = frameIcon;
    }

    /**
     * Get icon for tree root node
     * @return the iconRoot
     */
    public Icon getIconRoot() {
        return iconRoot;
    }

    /**
     * Set icon for tree root node
     * @param iconRoot the iconRoot to set
     */
    public void setIconRoot(Icon iconRoot) {
        this.iconRoot = iconRoot;
    }

    /**
     * @return the iconModule
     */
    public Icon getIconModule() {
        return iconModule;
    }

    /**
     * @param iconModule the iconModule to set
     */
    public void setIconModule(Icon iconModule) {
        this.iconModule = iconModule;
    }

    /**
     * @return the iconComponent
     */
    public Icon getIconComponent() {
        return iconComponent;
    }

    /**
     * @param iconComponent the iconComponent to set
     */
    public void setIconComponent(Icon iconComponent) {
        this.iconComponent = iconComponent;
    }

    /**
     * @return the iconTable
     */
    public Icon getIconTable() {
        return iconTable;
    }

    /**
     * @param iconTable the iconTable to set
     */
    public void setIconTable(Icon iconTable) {
        this.iconTable = iconTable;
    }

    /**
     * @return the iconField
     */
    public Icon getIconField() {
        return iconField;
    }

    /**
     * @param iconField the iconField to set
     */
    public void setIconField(Icon iconField) {
        this.iconField = iconField;
    }

    /**
     * This method is responsible to create the Search Panel and adding this panel on top **
     *
     * @param
     * @return void
     */
    private void createSearchPanel() {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++++++ OdiSAPERPMetadataBrowser.createSearchPanel() +++++++++++"});
        jPanelSearch.setLayout(new GridBagLayout());
        jPanelSearch.setBorder(BorderFactory.createTitledBorder(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_jPanelSearch")));

        GridBagConstraints gBC = new GridBagConstraints();
        gBC.fill = GridBagConstraints.HORIZONTAL;

        // ****** First row of search panel ********
        //Adding Label - Table Name
        gBC.gridx = 0;
        gBC.gridy = 0;
        //jLabelTName.setFont(new java.awt.Font ("Helvetica", 4, 11);
        jLabelTName.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jLabelTName, gBC);

        // Adding a big Gap between 1st & 2nd column (1st row - Label)
        gBC.gridx = 2;
        gBC.gridy = 0;
        jPanelSearch.add(jPanelGap2, gBC);

        //Adding Label - Short Description
        gBC.gridx = 4;
        gBC.gridy = 0;
        // jLabelSDesc.setFont(new java.awt.Font ("Helvetica", 4, 11));
        jLabelSDesc.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jLabelSDesc, gBC);

        //Adding text field - Table Name
        gBC.gridx = 0;
        gBC.gridy = 1;
        gBC.weightx = 1.0;
        jTxtFieldTName.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jTxtFieldTName, gBC);

        //Adding lookup button - Table Name
        gBC.gridx = 1;
        gBC.gridy = 1;
        gBC.weightx = 1.0;
        jButtonTLookup.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jButtonTLookup, gBC);

        //Adding a big Gap between 1st & 2nd column (1st row - text field )
        gBC.gridx = 3;
        gBC.gridy = 1;
        jPanelSearch.add(jPanelGap2, gBC);

        //Adding text field - Short Description
        gBC.gridx = 4;
        gBC.gridy = 1;
        gBC.weightx = 1.0;
        jTxtFieldSDesc.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jTxtFieldSDesc, gBC);


        //Adding look up button -  Short Description
        gBC.gridx = 5;
        gBC.gridy = 1;
        gBC.weightx = 1.0;
        jButtonSDescLookup.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jButtonSDescLookup, gBC);


        // ****** 2nd row of search panel ********
        //Adding label - Application component
        gBC.gridx = 0;
        gBC.gridy = 3;
        //jLabelAppComp.setFont(new java.awt.Font ("Helvetica", 4, 11));
        jLabelAppComp.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jLabelAppComp, gBC);

        //Adding a big Gap between 1st & 2nd column (2nd row - Label )
        gBC.gridx = 2;
        gBC.gridy = 3;
        jPanelSearch.add(jPanelGap2, gBC);

        //Adding Label - Package
        gBC.gridx = 4;
        gBC.gridy = 3;
        //jLabelPkg.setFont(new java.awt.Font ("Helvetica", 4, 11));
        jLabelPkg.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jLabelPkg, gBC);

        //Adding text field - Application Component
        gBC.gridx = 0;
        gBC.gridy = 4;
        gBC.weightx = 1.0;
        // jTxtFieldAppComp.setPreferredSize(new Dimension(5,5));
        jPanelSearch.add(jTxtFieldAppComp, gBC);

        //Adding look up button - Application Component
        gBC.gridx = 1;
        gBC.gridy = 4;
        gBC.weightx = 1.0;
        jButtonACompLookup.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jButtonACompLookup, gBC);

        //Adding a big Gap between 1st & 2nd column (2nd row - text field )
        gBC.gridx = 2;
        gBC.gridy = 4;
        jPanelSearch.add(jPanelGap2, gBC);

        //Adding text field - Package
        gBC.gridx = 4;
        gBC.gridy = 4;
        gBC.weightx = 1.0;
        jTxtFieldPkg.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jTxtFieldPkg, gBC);

        //Adding lookup button - Package
        gBC.gridx = 5;
        gBC.gridy = 4;
        gBC.weightx = 1.0;
        jButtonPckgLookup.setPreferredSize(new Dimension(5, 20));
        jPanelSearch.add(jButtonPckgLookup, gBC);

        // Adding Gap between last row of text field & search button
        gBC.gridx = 0;
        gBC.gridy = 5;
        jPanelSearch.add(jPanelGap2, gBC);

        //Adding SEARCH button in the last row
        gBC.gridx = 2;
        gBC.gridy = 6;
        jButtonSearch.setPreferredSize(new Dimension(58, 25));
        jPanelSearch.add(jButtonSearch, gBC);


        //Adding Search Panel into Top Panel
        jPanelTop.add(jPanelSearch);
        jPanelTop.setBorder(BorderFactory.createLoweredBevelBorder());
        jPanelTop.setLayout(new BoxLayout(jPanelTop, BoxLayout.LINE_AXIS));//NEW CODE
        frame.getContentPane().add(jPanelTop, BorderLayout.NORTH);

        /* Old Code commented for testing
        //ActionListener for search button
        jButtonSearch.addActionListener(new ActionListener() {
        
        public void actionPerformed(ActionEvent e) {
        showSearchResult();
        } // End actionPerformed() method
        }); // End of inner class button search listener          end of Old Code commented for testing */

        //Start of changed code

        CustomActionListener listener = new CustomActionListener();
        jButtonSearch.addActionListener(listener);

        //End of changed code


        //ActionListener for Table Name lookup button
        jButtonTLookup.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                if (validateLookup(jTxtFieldTName)) {
                    displayLookupResult(1, jTxtFieldTName.getText());
                } else {
                    JOptionPane.showMessageDialog(null, (odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10001")), "Error", JOptionPane.OK_OPTION);
                }
            } // End actionPerformed() method
        }); // End of inner class button search listener

        //ActionListener for Short Description lookup button
        jButtonSDescLookup.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                if (validateLookup(jTxtFieldSDesc)) {
                    displayLookupResult(2, jTxtFieldSDesc.getText());
                } else {
                    JOptionPane.showMessageDialog(null, (odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10001")), "Error", JOptionPane.OK_OPTION);
                }
            } // End actionPerformed() method
        }); // End of inner class button search listener

        //ActionListener for Application Component lookup button
        jButtonACompLookup.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                if (validateLookup(jTxtFieldAppComp)) {
                    displayLookupResult(3, jTxtFieldAppComp.getText());
                } else {
                    JOptionPane.showMessageDialog(null, (odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10001")), "Error", JOptionPane.OK_OPTION);
                }
            } // End actionPerformed() method
        }); // End of inner class button search listener

        //ActionListener for Package lookup button
        jButtonPckgLookup.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                if (validateLookup(jTxtFieldPkg)) {
                    displayLookupResult(4, jTxtFieldPkg.getText());
                } else {
                    JOptionPane.showMessageDialog(null, (odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10001")), "Error", JOptionPane.OK_OPTION);
                }
            } // End actionPerformed() method
        }); // End of inner class button search listener
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------- OdiSAPERPMetadataBrowser.createSearchPanel() -----------"});
    } // End of createSearchPanel() method

    /**
     * This method is responsible to create tree node of fetched table metadata from SAP System **
     * @param
     * @return void
     * code updated by AKS
     */
    private void createTreePanel() {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++++++ OdiSAPERPMetadataBrowser.createTreePanel() ++++++++++"});
        // Root node and main modules
        jTreeRootNode = new OdiErpTreeModel(new OdiSAPERPNode("SAP Metadata", "", false));

        /*Now Fetching SAP Module Name java code is the part of Constructor*/
        Iterator iter = mModuleName.keySet().iterator();
        while (iter.hasNext()) {
            moduleKey = (String) iter.next();
            moduleDesc = (String) mModuleName.get(moduleKey);
            OdiErpTreeModel moduleNode = new OdiErpTreeModel(new OdiSAPERPNode(moduleKey, moduleDesc, false));

            jTreeRootNode.add(moduleNode); //Adding main module into tree

            if (moduleKey.equalsIgnoreCase("UNDEFINED")) {
                OdiErpTreeModel zCategoryNode = new OdiErpTreeModel(new OdiSAPERPNode("Z-Category", "Z Category Tables", false));
                OdiErpTreeModel yCategoryNode = new OdiErpTreeModel(new OdiSAPERPNode("Y-Category", "Y Category Tables", false));
                moduleNode.add(zCategoryNode);
                moduleNode.add(yCategoryNode);
            }//end of if(moduleKey.equalsIgnoreCase("UNDEFINED"))
        } // end while
        tree = new OdiJTree(this);
        //tree.setDoubleBuffered(true);
        tree.setModel(jTreeRootNode);
        final CheckRenderer checkRendererObj = new CheckRenderer(this, odiSAPERPAdapter, sapLogger);
        tree.setCellRenderer(checkRendererObj); //Anzar Icon Change

        OdiTreeListener listener = new OdiTreeListener(this, odiSAPERPAdapter, sapLogger);
        tree.addTreeSelectionListener(listener);
        tree.addMouseListener(listener);

        //Add tree structure into the scrollpane & after that in the container
        JScrollPane srollpane = new JScrollPane(tree);
        //srollpane.setDoubleBuffered(true);
        //srollpane.addMouseWheelListener(listener);
        //srollpane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jPanelTree.setLayout(new BoxLayout(jPanelTree, BoxLayout.LINE_AXIS));
        jPanelTree.add(srollpane);
        jPanelTree.setBorder(BorderFactory.createTitledBorder(""));
        frame.getContentPane().add(jPanelTree, BorderLayout.CENTER); //Adding tree in the center
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"-------- OdiSAPERPMetadataBrowser.createTreePanel() --------"});
    }//End of createTreePanel() method

    /**
     * This method is use to add bottom panel and handle the button listener to cancel or reverse metadata
     *
     */
    private void addBottomPanel() {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++++++ OdiSAPERPMetadataBrowser.addBottomPanel() ++++++++"});
        //Add bottom panel with two buttons - cancel & reverse
        jButtonCancle.setPreferredSize(new Dimension(80, 25));
        jButtonReverse.setPreferredSize(new Dimension(80, 25));
        jBottomPanel.add(jButtonCancle);
        jBottomPanel.add(jButtonReverse);
        jBottomPanel.setBorder(BorderFactory.createLoweredBevelBorder());
        frame.getContentPane().add(jBottomPanel, BorderLayout.SOUTH);
        //ActionListener for cancel button
        jButtonCancle.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                isCancle = true;
                frame.setVisible(false);
            }
        });

        //ActionListener for Reverse Metadata button
        jButtonReverse.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent ae) {
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Reverse Metadata"});
                //	sapLogger.log(sapLogger.INFO, "Reverse Metadata");
                isCancle = false;
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"mUncheckedTableList.size()>>>>" + mUncheckedTableList.size()});
                boolean frameVisible = true;
//JOptionPane.showConfirmDialog(null, mUncheckedTableList , "Error", JOptionPane.OK_OPTION);

                frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

                try {
                    if (mSelectedTables.size() == 0) {
                        JOptionPane.showMessageDialog(null, (odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10007")), "Error", JOptionPane.OK_OPTION);
                        frameVisible = true;
                    } else {
                        Hashtable selectedTableList = new Hashtable();
                        if (mUncheckedTableList.size() > 0) {
                            Iterator itr = mUncheckedTableList.iterator();
                            while (itr.hasNext()) {
                                String uncheckedTable = (String) itr.next();
                                if (mSelectedTables.containsKey(uncheckedTable)) {
                                    selectedTableList.put(uncheckedTable, mSelectedTables.get(uncheckedTable));
                                }
                            }
                        }
                        frameVisible = false;
                        sapLogger.fine("ODIKM-SAPERP-RKM-10000", " ", new Object[]{"After removing de-selected Node -- tablesDetail.size: " + selectedTableList.size()});
						odiSAPERPMetadataHelper.getSAPMetadata(selectedTableList, false, null); //Reverse process starts here
                    }
                } catch (Exception e) {
                    sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{e.getMessage()});
					//Chanpreet
					OdiSapUtil.throwODIException(e);
                } finally {
                    frame.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    frame.repaint();
                    if (frameVisible) {
                        frame.setVisible(true); //After reversing closing the SAP Metadata UI browser
                    } else {
                        frame.setVisible(false); //After reversing closing the SAP Metadata UI browser
                    }

                }//end finally

            }// end of actionPerformed() method
        });
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"--------- OdiSAPERPMetadataBrowser.addBottomPanel() ------------"});
    } //end of addBottomPanel() method

    /**
     * This method checks whether selected node is module name or application component, if yes it returns true and if selected node
     * is table it returns false. On the basis of returned value, we call the OdiSAPERPAdapter's method getSAPTables() in case of module
     * or application component and getSAPFields() method in case of table.
     * @return boolean
     */
    private boolean checkModuleAndAppModule() {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++++++ OdiSAPERPMetadataBrowser.checkModuleAndAppModule() ++++++++++++"});

        //String tempSelectedName = jTreeSelectedNode.toString().substring(0, jTreeSelectedNode.toString().indexOf(" ")).trim();
        String tempSelectedName = jTreeSelectedNode.getMyNode().getName().trim();
        String tempModuleKey = "";
        boolean result = false;

        Iterator iter = mModuleName.keySet().iterator();
        while (iter.hasNext()) {
            tempModuleKey = (String) iter.next();
            if (tempModuleKey.equalsIgnoreCase(tempSelectedName) || (tempSelectedName.indexOf("-") != -1)) {
                result = true;
            } else if ((tempSelectedName.equalsIgnoreCase("Z-Category"))) {
                result = true;
            } else if ((tempSelectedName.equalsIgnoreCase("Y-Category"))) {
                result = true;
            }
        } // end while
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"result: " + result});
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"--------- OdiSAPERPMetadataBrowser.checkModuleAndAppModule()----------"});
        return result;
    }// end of checkModuleAndAppModule() method

    /**
     * This method used to group the tables & application component as their hierarchy
     *
     * @param  ArrayList      -  of fetched Application components & tables
     * @param  OdiErpTreeModel   -  selected node
     * @return ArrayList      -  of filtered ACs & tables
     */
    private ArrayList groupSubNodes(ArrayList subModule, OdiSAPERPNode treeSelectedNode) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++++++ OdiSAPERPMetadataBrowser.groupSubNodes() ++++++++++++"});
        ArrayList filteredArrayList = subModule;

        SAPTable sTable = null;

        //int countSelectedNodeHyphen = count(jTreeSelectedNode.toString().substring(0, jTreeSelectedNode.toString().indexOf(" ")).trim(), "-") ;
        OdiSAPERPNode node = treeSelectedNode;
        int countSelectedNodeHyphen = count(node.getName().trim(), "-");

        SAPTable sTable1 = null;
        Iterator tempIterator = filteredArrayList.iterator();
        ArrayList tempList = new ArrayList();

        while (tempIterator.hasNext()) {
            sTable1 = (SAPTable) tempIterator.next();
            if (count(sTable1.name.toString(), "-") != -1) {
                tempList.add(sTable1.name);
            }
        }

        Iterator filterItr = filteredArrayList.iterator();
        while (filterItr.hasNext()) {
            sTable = (SAPTable) filterItr.next();

            if (countSelectedNodeHyphen == 0) {
                if (count(sTable.name.toString(), "-") > 1) {
                    if (validateParentSubModule(tempList, sTable.name.toString())) {
                        filterItr.remove();
                    }
                }
            } else if (countSelectedNodeHyphen == 1) {
                if (count(sTable.name.toString(), "-") > 2) {
                    if (validateParentSubModule(tempList, sTable.name.toString())) {
                        filterItr.remove();
                    }
                }
            } else if (countSelectedNodeHyphen == 2) {
                if (count(sTable.name.toString(), "-") > 3) {
                    if (validateParentSubModule(tempList, sTable.name.toString())) {
                        filterItr.remove();
                    }

                }
            } else if (countSelectedNodeHyphen == 3) {
                if (count(sTable.name.toString(), "-") > 4) {
                    if (validateParentSubModule(tempList, sTable.name.toString())) {
                        filterItr.remove();
                    }
                }
            } else if (countSelectedNodeHyphen == 4) {
                if (count(sTable.name.toString(), "-") > 5) {
                    if (validateParentSubModule(tempList, sTable.name.toString())) {
                        filterItr.remove();
                    }
                }
            } else if (countSelectedNodeHyphen == 5) {
                if (count(sTable.name.toString(), "-") > 6) {
                    if (validateParentSubModule(tempList, sTable.name.toString())) {
                        filterItr.remove();
                    }
                }
            } //end of last else if
        }//end while
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"-------- OdiSAPERPMetadataBrowser.groupSubNodes()----------"});
        return filteredArrayList;
    }// end of - groupSubNodes() method

    /**
     * This method returns the flag value if particular node doesn't have any parent node
     * @param ArrayList  - of table name
     * @param String   - table name / application component name
     * @return boolean
     */
    private boolean validateParentSubModule(ArrayList tableNameList, String tableName) {

        boolean flag = false;

        int countAppCompHyphen = tableName.lastIndexOf("-");
        String checkParent = tableName.substring(0, countAppCompHyphen);

        int tempHyphen = checkParent.lastIndexOf("-");
        String temp = checkParent.substring(0, tempHyphen);

        if (!tableNameList.contains(checkParent)) {
            if (tableNameList.contains(temp)) {
                flag = true;
            }
        } else {
            flag = true;
        }
        return flag;
    } //end of validateParentSubModule() method

    /**
     * This method returns the no. of specified character (hyphen in our case) within the string
     *
     * @param  String    -  any string
     * @param  String    -  any specified character
     * @return int       -  no of hyphen
     */
    public int count(String base, String searchFor) {
        int len = searchFor.length();
        int result = 0;
        int start = base.indexOf(searchFor);
        while (start != -1) {
            result++;
            start = base.indexOf(searchFor, start + len);
        }
        return result;
    } //end of count() method

    /**
     * This method is used to check for the wild card or blank field in the search textfield and
     *
     * @return boolean
     */
    private boolean checkSearchFields() {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++++ OdiSAPERPMetadataBrowser.checkSearchFields() +++++++++++"});
        boolean flag = true;

        if (jTxtFieldTName.getText().toString().trim().equalsIgnoreCase("") && jTxtFieldSDesc.getText().toString().trim().equalsIgnoreCase("") && jTxtFieldAppComp.getText().toString().trim().equalsIgnoreCase("") && jTxtFieldPkg.getText().toString().trim().equalsIgnoreCase("")) {
            flag = false;
        }

        if (!checkSpecialChar(jTxtFieldTName.getText())) {
            flag = false;
        }
        if (!checkSpecialChar(jTxtFieldSDesc.getText())) {
            flag = false;
        }
        if (!checkSpecialChar(jTxtFieldAppComp.getText())) {
            flag = false;
        }
        if (!checkSpecialChar(jTxtFieldPkg.getText())) {
            flag = false;
        }
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"-------- OdiSAPERPMetadataBrowser.checkSearchFields() ----------"});
        return flag;
    } //end of checkSearchFields() method

    /**
     * This method is used to check for the wild card or blank field in the search textfield and
     * if there any,remove it from the given string
     * @return boolean
     */
    private boolean checkSpecialChar(String searchText) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++OdiSAPERPMetadataBrowser.checkSpecialChar()++++++++"});
        boolean flag = true;

        if (!searchText.trim().equals("")) {//if passed search field is not blank

            int percentage = searchText.trim().indexOf("%");
            int asterisk = searchText.trim().indexOf("*");

            if (percentage != -1) {
                flag = false;
            }
            if (asterisk != -1) {
                flag = false;
            }
        }
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"------- OdiSAPERPMetadataBrowser.checkSpecialChar() --------"});
        return flag;
    }
    public boolean tableSelection;//AKS

    /**
     * This method is used to display Look up result in a new popup window
     * @return void
     */
    private void displayLookupResult(int criteria, String SearchName) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"+++++++OdiSAPERPMetadataBrowser.displayLookupResult()++++++++"});

        SAPSearchDetail searchDetails = null;
        String tableName = null;
        String shortDesc = null;
        String appComp = null;
        String pckg = null;

        final JDialog jFrameLookup = new JDialog(frame);//AKS
        jFrameLookup.setTitle(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_LookupTitle"));//AKS
        jFrameLookup.setModal(true);//AKS

        //final JFrame jFrameLookup = new JFrame(odiSapErpResourceBundle.getResourceString("SAP_RKM_ERP_LookupTitle"));
        jFrameLookup.setIconImage(lookupFrameIcon.getImage());
        jFrameLookup.setIconImage(getLookupFrameIcon().getImage());

        ArrayList lookupResultList = new ArrayList();
        frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        try {
            switch (criteria) {
                case 1:/*Table Name*/ {
                    //tableName = jTxtFieldTName.getText().toUpperCase();
                    tableName = SearchName.toUpperCase();
                    if (tableName.indexOf("%") != -1) {
                        tableName = tableName.replace('%', '*');
                        lookupResultList = (odiSAPERPAdapter.getSearchResult(tableName, null, null, null));//Getting search result in an ArrayList
                    } else if (tableName.lastIndexOf("_") != -1) {
                        int indexVal = tableName.lastIndexOf("_") + 1;
                        //sapLogger.log(sapLogger.INFO, "Displaying search Popup index val is "+indexVal);
                        tableName = tableName.replace('_', '*');
                        lookupResultList = (odiSAPERPAdapter.getSearchResult(tableName, null, null, null));//Getting search result in an ArrayList

                        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"lookupResultList size after--->" + lookupResultList.size()});
                        ArrayList removelookuptable = new ArrayList();
                        Iterator itrlookup = lookupResultList.iterator();
                        while (itrlookup.hasNext()) {
                            SAPSearchDetail objVal = (SAPSearchDetail) itrlookup.next();
                            String name = objVal.name;
                            if (name.length() != indexVal) {
                                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Removing =" + name + " <---name whose length is ---->" + name.length()});
                                //lookupResultList.remove(objVal);
                                removelookuptable.add(objVal);
                            }
                        }
                        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"removelookuptable size after removing--->" + removelookuptable.size()});
                        lookupResultList.removeAll(removelookuptable);
                        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"lookupResultList size after removing--->" + lookupResultList.size()});
                    }
                    //lookupResultList = (odiSAPERPAdapter.getSearchResult(tableName, null, null, null));//Getting search result in an ArrayList
                }
                ;
                break;
                case 2:/*Short Description*/ {
                    //shortDesc = jTxtFieldSDesc.getText().trim();
                    shortDesc = SearchName.trim();
                    shortDesc = shortDesc.replace('%', '*');
                    lookupResultList = (odiSAPERPAdapter.getSearchResult(null, shortDesc, null, null));//Getting search result in an ArrayList

                }
                ;
                break;
                // Changing the order of case 3 and case 4 for fixing RKM ERP Metadata browser issue
                case 4:/*Package*/ {
                    //pckg = jTxtFieldPkg.getText().trim().toUpperCase();
                    pckg = SearchName.trim().toUpperCase();
                    pckg = pckg.replace('%', '*');
                    lookupResultList = (odiSAPERPAdapter.getSearchResult(null, null, pckg, null));//Getting search result in an ArrayList

                }
                ;
                break;
                case 3:/* Application Component*/ {
                    //appComp = jTxtFieldAppComp.getText().trim().toUpperCase();
                    appComp = SearchName.trim().toUpperCase();
                    appComp = appComp.replace('%', '*');
                    lookupResultList = (odiSAPERPAdapter.getSearchResult(null, null, null, appComp));//Getting search result in an ArrayList
                }
                ;
                break;
            }

            if (lookupResultList.isEmpty()) { //If no record found for the given search
                javax.swing.JOptionPane.showMessageDialog(null, odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10003"), "Error", javax.swing.JOptionPane.OK_OPTION);
                return;
            }
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Search Result size is: " + lookupResultList.size()});
            //frame.setVisible(false);
            Vector rowData = new Vector();
            Vector rowDataTemp = null;

            Iterator lookupItr = lookupResultList.iterator();
            while (lookupItr.hasNext()) {
                searchDetails = (SAPSearchDetail) lookupItr.next();
                rowDataTemp = new Vector();

                rowDataTemp.addElement(searchDetails.name);
                rowDataTemp.addElement(searchDetails.moduleName);
                rowDataTemp.addElement(searchDetails.desc);

                rowData.addElement(rowDataTemp);
            }//end of while
            Vector columnHeader = new Vector();

            columnHeader.addElement("Table Name");
            columnHeader.addElement("Module Name");
            columnHeader.addElement("Short Description");

            final JTable jTableLookup = new JTable(new DefaultTableModel(rowData, columnHeader));

            ListSelectionModel cellSelectionModel = jTableLookup.getSelectionModel();
            cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"After Search: "});

            cellSelectionModel.addListSelectionListener(new ListSelectionListener() {

                public void valueChanged(ListSelectionEvent e) {

//                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"valueChanged: " + lookupResultList.size()});
                    tableSelection = true;//AKS
                    /*int lookupSelection = javax.swing.JOptionPane.showConfirmDialog(jFrameLookup, "Confirm Selection ", "Continue(Yes/No)", javax.swing.JOptionPane.YES_NO_OPTION);
                    //jFrameLookup.setVisible(true);
                    frame.repaint();
                    if (lookupSelection == 0) {
                    
                    String selectedData = null;
                    int selectedRow = jTableLookup.getSelectedRow();
                    int selectedColumn = jTableLookup.getSelectedColumn();
                    
                    selectedData = (String) jTableLookup.getValueAt(selectedRow, 0);
                    resetSearchField();
                    jTxtFieldTName.setText(selectedData);
                    
                    jFrameLookup.setVisible(false);
                    frame.setEnabled(true);
                    } else {
                    jFrameLookup.setVisible(true);
                    }*/
                }
            });

            //AKS start of mouse listener
            class customML extends java.awt.event.MouseAdapter {

                public void mouseClicked(java.awt.event.MouseEvent e) {
                    if (tableSelection) {
                        int lookupSelection = javax.swing.JOptionPane.showConfirmDialog(jFrameLookup, "Confirm Selection ", "Continue(Yes/No)", javax.swing.JOptionPane.YES_NO_OPTION);
                        //jFrameLookup.setVisible(true);
                        frame.repaint();
                        if (lookupSelection == 0) {

                            String selectedData = null;
                            int selectedRow = jTableLookup.getSelectedRow();
                            int selectedColumn = jTableLookup.getSelectedColumn();

                            selectedData = (String) jTableLookup.getValueAt(selectedRow, 0);
                            resetSearchField();
                            jTxtFieldTName.setText(selectedData);

                            jFrameLookup.setVisible(false);
                            frame.setEnabled(true);
                        } else {
                            jFrameLookup.setVisible(true);
                        }
                    }
                }
            }
            customML ml = new customML();
            jTableLookup.addMouseListener(ml);//AKS


            sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"After mouseclick "});
            jTableLookup.setOpaque(true); //content panes must be opaque

            JScrollPane scrollPane = new JScrollPane(jTableLookup);
            jFrameLookup.getContentPane().add(scrollPane);

            Toolkit tk = Toolkit.getDefaultToolkit();
            Dimension screenSize = tk.getScreenSize();
            int screenHeight = screenSize.height;
            int screenWidth = screenSize.width;
            jFrameLookup.setSize(500, 400);
            //jFrameLookup.setLocation(null);
            jFrameLookup.setLocationRelativeTo(null);
            jFrameLookup.setVisible(true);
            jFrameLookup.setResizable(false);
            /*frame.setEnabled(false);
            jFrameLookup.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent ev) {
            frame.setEnabled(true);
            }
            });*/

        } catch (Exception e) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{e.getMessage()});
			//Chanpreet
			OdiSapUtil.throwODIException(e);
        } finally {
            frame.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            frame.repaint();
        }
    }//end of method - displayLookupResult()

    /**
     * This method is used to reset the values of search textfields
     * @return void
     */
    private void resetSearchField() {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Resetting the Search text fields"});
        jTxtFieldTName.setText("");
        jTxtFieldAppComp.setText("");
        jTxtFieldPkg.setText("");
        jTxtFieldSDesc.setText("");
    }

    /**
     * This method is used to check wild card and blank field on click of lookup button.
     * @return void
     */
    private boolean validateLookup(JTextField searchValue) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++++validateLookup()++++++++++++"});
        boolean flag = false;
        if (!searchValue.getText().trim().equalsIgnoreCase("")) {
            if (!(searchValue.getText().trim().equalsIgnoreCase("%")) && (!(searchValue.getText().trim().equalsIgnoreCase("")))) { //Table Name
                if (searchValue.getText().indexOf("%") != -1) {
                    flag = true;
                } else if (searchValue.getText().indexOf("_") != -1) {
                    flag = true;
                }
            } else {
                return false;
            }
            return flag;
        } else {
            return false;
        }
    } //end of method - validateLookup()

    /**
     * This method returns the current selected tree node name
     *
     * @param    TreePath
     * @return   OdiErpTreeModel   -  as name of current selected node
     */
    private OdiErpTreeModel getTreeNode(TreePath path) {
        return (OdiErpTreeModel) (path.getLastPathComponent());
    }

    /**
     * This method breakup the module into child and parent application
     * component
     */
    public ArrayList getSubModels(String str) {
        SAPSubModels sapSubModelsObj = null;
        ArrayList subModelsList = new ArrayList();
        String parentSubModel = null;
        String appComp = null;

        String appComponentName = str;
        if (appComponentName != null) {
            int countHyphen = count(appComponentName, "-");
            //String parentSubModel = null;
            appComp = appComponentName;
            for (int i = 0; i <= countHyphen; i++) {
                sapSubModelsObj = new SAPSubModels();
                int posOfLastHyphen = appComp.lastIndexOf("-");
                if (posOfLastHyphen != -1) {
                    parentSubModel = appComp.substring(0, posOfLastHyphen);
                } else {
                    parentSubModel = null;
                }
                sapSubModelsObj.appCompName = appComp;
                sapSubModelsObj.paranetAPPCompName = parentSubModel;

                subModelsList.add(sapSubModelsObj); //adding sapSubModels object into arrayList
                appComp = parentSubModel;

            }//end of for loop
        }//end of if(appComponentName != null)
        return subModelsList;
    }
    //code added by AKS

    public void setTableColumns(ArrayList mSelectedTables, OdiSAPERPNode nodex, boolean select) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"Selected node is table"});
        //System.out.println(select);
        OdiSAPERPNode node = nodex;
        node.setSelected(select);
        ArrayList fieldList = null;
        node.setTable(true);
        try {
            fieldList = odiSAPERPAdapter.getSAPFields(node.getName().trim());
        } catch (Exception ex) {
		//authorization checks
            JOptionPane.showMessageDialog(null, ("SAP Exception : " + ex), "Error", JOptionPane.OK_OPTION);
            //frame.setVisible(false);
            odiSAPERPAdapter.chainedSAPException(ex, "getSAPFields");			
            return;
        }
        if (fieldList.isEmpty()) { //If no record found from SAP System
            JOptionPane.showMessageDialog(null, (odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10006")), "Error", JOptionPane.OK_OPTION);
            return;
        }
        Iterator itr = fieldList.iterator();
        SAPField sField = null;
        OdiSAPERPNode childNodes;
        ArrayList childList = new ArrayList();
        while (itr.hasNext()) {
            sField = (SAPField) (itr.next());
            //OdiErpTreeModel fieldNode = new OdiErpTreeModel(new OdiSAPERPNode(sField.name, "{ " + sField.desc + " }", false));
            //jTreeSelectedNode.add(fieldNode); //Adding table fields into node
            childNodes = new OdiSAPERPNode(sField.name, "{ " + sField.desc + " }", false);
            childNodes.setLeaf(true);
            childList.add(childNodes);

        }//end of while - else loop
        node.setChildNodes(childList);
        getmSelectedTables().put(node.getName(), fieldList);
        mUncheckedTableList.add(node.getName());
//        String selectedTable = node.getName().trim();
//        //Adding selected tables as key & their values as arraylist into global hashtable variable
//        mSelectedTables.put(selectedTable, fieldList);

    }//end of setTableColumns

//code added by AKS
    public boolean addChildNode(Object nodee, boolean select, int isExpanded) {
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"++++++++++ addChildNode ++++++++++"});
        OdiSAPERPNode node = (OdiSAPERPNode) nodee;
        String selectedNodeName = node.getName();
        //System.out.println(selectedNodeName);
        if (node.getChildNodes().size() > 0) {
            if (node.isTable()) {
                if (node.isTable() && (isExpanded != 2)) {
                    node.setSelected(!node.isSelected());
                }
            }
            return false;
        }
        if (node.isLeaf()) {
            return false;
        }
        try {
            if (selectedNodeName.equalsIgnoreCase("Z-Category")) {
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"UNDEFINED - Z-Category node is selected for Z_ categroy tables"});
                mAppCompList = odiSAPERPAdapter.getSAPTables("", "Z-Category");
            } else if (selectedNodeName.equalsIgnoreCase("Y-Category")) {
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"UNDEFINED - Y-Category node is selected for Y_ categroy tables"});
                mAppCompList = odiSAPERPAdapter.getSAPTables("", "Y-Category");
            } else {
                mAppCompList = odiSAPERPAdapter.getSAPTables(node.getName().trim() + "*", null);
                if ((mAppCompList != null) && (mAppCompList.size() == 0)) {
                    setTableColumns(mAppCompList, node, select);
                    return true;
                }
            }
        } catch (Exception ex) {
            odiSAPERPAdapter.chainedSAPException(ex, "getSAPTables");
            ex.printStackTrace();
            return true;
        }
        if (mAppCompList.isEmpty()) { //If no record found from SAP System
            return true;
        }

        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"ArrayList size of subModule: " + mAppCompList.size()});
        ArrayList filteredList = groupSubNodes(mAppCompList, node);
        sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"ArrayList size of filteredList: " + filteredList.size()});

        Iterator iterator = filteredList.iterator();
        SAPTable sTable = null;
        String prevItem = "";
        OdiSAPERPNode childNodes;
        ArrayList childList = new ArrayList();
        while (iterator.hasNext()) {
            sTable = (SAPTable) iterator.next();
            if (!(sTable.name.toString().trim()).equalsIgnoreCase(prevItem.trim())) { //Restrict duplicate Application Component to add as node
                prevItem = sTable.name.toString();
                //System.out.println(sTable.name);
                childNodes = new OdiSAPERPNode(sTable.name, sTable.desc, false);
                childList.add(childNodes);
            } //end of if
        }//end while
        node.setChildNodes(childList);
        return node.getChildNodes().isEmpty();
        //return childList.isEmpty() ? true : false;
    }//end of addChildNode

//code added by AKS
    /**
     * This method is responsible to search a particular table in the tree browser. It sends the request to SAP thru RFC and get back tables
     * and application component with table fields and add it in the tree node to show the requested table.
     * @return  void
     */
    public void showSearchResult() {
        try {
            if (checkSearchFields()) {
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------------------...Table Search Clicked...--------------------"});
                ivTable = jTxtFieldTName.getText().toUpperCase();
                ivDesc = jTxtFieldSDesc.getText().toUpperCase();
                ivAPComp = jTxtFieldAppComp.getText().toUpperCase();
                ivPackg = jTxtFieldPkg.getText().toUpperCase();
                searchTableName = ivTable;//Assigning search table

                ArrayList searchResult = new ArrayList();
                searchResult = odiSAPERPAdapter.getSearchResult(ivTable, ivDesc, ivPackg, ivAPComp);//Getting search result in an ArrayList
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------------------...Search Result : " + searchResult + " ...--------------------"});
                if (searchResult.isEmpty()) {
                    JOptionPane.showMessageDialog(null, odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10003"), "Error", JOptionPane.OK_OPTION);
                    return;
                }
//            System.out.println(searchResult.size());
                Iterator it = searchResult.iterator();
                SAPSearchDetail det = (SAPSearchDetail) it.next();
                System.out.println("Name:" + det.name);
                System.out.println("Module:" + det.moduleName);
                System.out.println("Desc:" + det.desc);
                System.out.println("Tab Class:" + det.tableClass);
                System.out.println("type:" + det.type);
//            OdiSAPERPNode tableNode = (new OdiSAPERPNode(det.name, det.desc, false));

                String collectName = det.moduleName + "-" + det.name;
                ArrayList selectPath = new ArrayList();
                searchNodeNames = collectName.split("-");
                OdiSAPERPNode tagNode = ((OdiSAPERPNode) tree.getModel().getRoot());
                selectPath.add(tagNode);
                String modName = "";

                frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                TreePath nodeSelectionPath = null;
                String[] arr = collectName.split("-");
                //OdiSAPERPNode tagNode = (OdiSAPERPNode) tagNode.getNode(a);
                //for (String module : arr) {
                modName = "";
                for (int i = 0; i < (arr.length - 1); i++) {
                    modName += arr[i];
                    tagNode = tagNode.getNode(modName);
                    if (tagNode == null) {
                        break;
                    }
                    modName += "-";
                    selectPath.add(tagNode);
                    if (tagNode.getChildNodes().size() > 0) {
                        continue;
                    }
                    addChildNode(tagNode, false, 0);

                }
                if (null == tagNode) {
                    sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------------------...No Such Application Node...--------------------"});
                    JOptionPane.showMessageDialog(null, odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-RKM-10003"), "Error", JOptionPane.OK_OPTION);
                    frame.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    return;
                }
                tagNode = tagNode.getNode(arr[arr.length - 1]);
                if (tagNode.getChildNodes().size() == 0) {
                    addChildNode(tagNode, true, 0);
                }
                selectPath.add(tagNode);
                nodeSelectionPath = new TreePath(selectPath.toArray(new Object[0]));
                this.selectedPath = nodeSelectionPath;
                System.out.println(nodeSelectionPath);
                tree.setSelectionPath(nodeSelectionPath);
                tree.scrollPathToVisible(nodeSelectionPath);
                frame.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"---------------------...Table Search Clicked...--------------------"});
            }
        } catch (Exception e) {
            sapLogger.severe("ODIKM-SAPERP-RKM-10000", new Object[]{"Exception: " + e.getMessage()});
        }
    }//end of searchNode

    /** static void main() method */
    /*
    public static void main(String args[]) {
    try {
    oracle.odi.sap.km.CommonResourceBundle odiSapErpResourceBundle = new oracle.odi.sap.km.CommonResourceBundle();//resourceBundle object to initialize & load resources
    odiSapErpResourceBundle.initializeResource();//initializing/loading resources
    ResourceBundle resourceBundle = odiSapErpResourceBundle.getResourceBundle();
    OdiSapLogger sapLogger = new OdiSapLogger("D:\\test.log", resourceBundle);
    
    OdiSAPERPAdapter odiSapERPAdapter = new OdiSAPERPAdapter(sapLogger, odiSapErpResourceBundle);
    OdiSAPERPMetadataHelper odiSAPERPMetadataHelper = new OdiSAPERPMetadataHelper(odiSapERPAdapter, sapLogger);
    odiSapERPAdapter.setSAPConnection("10.30.0.17", "20", "800", "en", "ODIRFC", "ODI1234", null, null);
    
    OdiSAPERPMetadataBrowser frame = new OdiSAPERPMetadataBrowser(odiSapERPAdapter, sapLogger, odiSAPERPMetadataHelper, odiSapErpResourceBundle);
    brow = frame;
    while (true) {
    if (frame.frame.isVisible()) {
    Thread.sleep(100);
    continue;
    } else {
    break;
    }
    }
    if (frame.isCancle) {
    throw new RuntimeException("Reversing canceled / aborted!!!");
    }
    
    } catch (Exception ex) {
    System.out.println(ex);
    }
    
    } //End of static void main() method
     */
    public class CustomActionListener implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            showSearchResult();
        } // End actionPerformed() method
    }
} // end of main class -- OdiSAPERPMetadataBrowser


//Chanpreet
//**** Start of OdiSapUtil class *********//
//Copyright??

/**
 * @(#)OdiSapUtil.java  1.00 10/30/2013
 *
 * Application : ODI SAP Knowledge Modules
 * Module      : SAP ERP Adapter
 * Author(s)   : 
 **/

/**
 * <b>OdiSapUtil</b> class is a data structure of all utilities to be used in RKM
 */
public class OdiSapUtil {

	// Check the ODI Release
	public static boolean isOdi10gOr11g(){
		return <%=odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")%>;
	}
			
	public static void throwODIException(Exception ex){
  ArrayList errorMsgList = new ArrayList();
        StringBuilder msg = new StringBuilder();
        
        errorMsgList.add("\nCause: "+ ex.getMessage());        
        Throwable e = null;
        if (e instanceof RuntimeException) {
            e = ex.getCause();
        } else {
            e = ex.getTarget();
        }
        while (e != null) {
            errorMsgList.add("\nCause: " + e.getMessage());
            if (e instanceof RuntimeException) {
                e = ex.getCause();
            } else {
                e = ex.getTarget();
            }
        }
        for(int i = (errorMsgList.size()-1);i >= 0; i--){
            msg.append(errorMsgList.get(i));
        }
        OdiSapUtil.throwODIException(msg.toString());     
 }
 
    public static void throwODIException(String message) {
        <% if(odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")){%>
            throw new RuntimeException(message);
        <%} else {%>
            throw new oracle.odi.km.exception.OdiKMException(message);
        <%}%>
    }
}
//end of main class -- OdiSapUtil
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6428]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2d56c7a0-f861-4896-9586-92d1fc4d6525]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3549]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[60]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[549bda54-9aeb-4f39-a63e-4d4ba0a4b59c]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6428]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Command Name: Initialize
import com.sap.mw.jco.*;
import java.sql.Connection;
import java.util.ResourceBundle;
import java.util.Date;

//Initializing resourceBundle
odiSapErpResourceBundle = new oracle.odi.sap.km.CommonResourceBundle();
odiSapErpResourceBundle.initializeResource("sap_rkm_erp");//initializing/loading resources
resourceBundle = odiSapErpResourceBundle.getResourceBundle();

//Check the ODI Release
<%boolean isOdi10gOr11g = odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION");%>
//Initialize Open Tool log file name
<% otLogFileName = ""; %>
<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
<% otLogFileName = odiRef.getOption("LOG_FILE_NAME")+".opentool.log"; %>
<%}else {%> //else if ODI 12c
<%otLogFileName = "";%>
<%}%>

//Initializing logger
String logFileName = "";
<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
  logFileName = <@=odiRef.getQuotedString("<%= odiRef.getOption("LOG_FILE_NAME")%>") @>;
<%}%>
OdiSapLogger sapLogger = new OdiSapLogger(logFileName, resourceBundle);
sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP ERP RKM - Initialize step.."} );

//Check whether Table or View checkbox selected
typeOfObject = "";

//Variables for exception messages
String incorrectSelection = resourceBundle.getString("ODIKM-SAPERP-RKM-10033");
String noSelection = resourceBundle.getString("ODIKM-SAPERP-RKM-10034");

revObjType = "<%=odiRef.getModel("REV_OBJ_TYPE")%>";
sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"----> object type selected:  "+revObjType});
if(!OdiSapUtil.isOdi10gOr11g())
{ 
sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"----> Class Loaded"});
}
//Condition to check if only Table or only View checkbox is selected
if(revObjType.equals("T") || revObjType.equals("V")){
	if ((";<%=odiRef.getModel("REV_OBJ_TYPE")%>;").indexOf(";V;") > -1)
		typeOfObject = "V";
	if ((";<%=odiRef.getModel("REV_OBJ_TYPE")%>;").indexOf(";T;") > -1) 
		typeOfObject = "T";
}
else if(revObjType.length()==0){ //Checks if no selection is made
	sapLogger.severe("ODIKM-SAPERP-RKM-10034",  new Object[] {"No Object type is selected \n"+revObjType} );
	OdiSapUtil.throwODIException(noSelection);
}
else{ //Checks if multiple or incorrect selections are made
	sapLogger.severe("ODIKM-SAPERP-RKM-10033",  new Object[] {"Incorrect object type selected \n "+revObjType} );
	OdiSapUtil.throwODIException(incorrectSelection);
}

//Initializing SAP Connector
OdiSAPERPAdapter odiSapERPAdapter = new OdiSAPERPAdapter(sapLogger, odiSapErpResourceBundle);
odiSapERPAdapter.setObjectType(typeOfObject);

//Helper object
OdiSAPERPMetadataHelper odiSAPERPMetadataHelper = new OdiSAPERPMetadataHelper(odiSapERPAdapter, sapLogger);

<?
// SAP connection properties get from Topology Manager Defintions
String hostName = odiRef.getInfo("SRC_DSERV_NAME");//SRC_DSERV_NAME
String userName = odiRef.getInfo("SRC_USER_NAME");
String password = odiRef.getInfo("SRC_PASS");
String sapTransportLayerName = null;

<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
String systemNo = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_NUMBER" );
String sapClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_CLIENT" );
String language = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_LANGUAGE" );
String sSapAbapVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_ABAP_VERSION" );

//Flex field for Transport Layer Name
String sapTransLayerNameFF = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TRANSPORT_LAYER_NAME" );
String sapTransLayerNameKM = "<%=odiRef.getOption("SAP_TRANSPORT_LAYER_NAME")%>";
sapTransportLayerName = (sapTransLayerNameKM == null || sapTransLayerNameKM.isEmpty())?((sapTransLayerNameFF == null || sapTransLayerNameFF.isEmpty())?"SAP":sapTransLayerNameFF):sapTransLayerNameKM;


//new flex fields addition for SAP Message Logon & SAP SNC Connection
String msHost = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_MSHOST" );
String msService = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_MSSERV" );
String msR3Name = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_ID" );
String msGroupName = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_GROUP" );
String sncPartner = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_PARTNERNAME" );
String sncClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_MYNAME" );
String sncQOP = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_QOP" );

<%} else { /*if ODI 12C*/%>
String systemNo = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_NUMBER" );
String sapClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_CLIENT" );
String language = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_LANGUAGE" );
String sSapAbapVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_ABAP_VERSION" );

//Flex field for transport layer name
String sapTransLayerNameFF = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TRANSPORT_LAYER_NAME" );
String sapTransLayerNameKM = "<%=odiRef.getOption("SAP_TRANSPORT_LAYER_NAME")%>";
sapTransportLayerName = (sapTransLayerNameKM == null || sapTransLayerNameKM.isEmpty())?((sapTransLayerNameFF == null || sapTransLayerNameFF.isEmpty())?"SAP":sapTransLayerNameFF):sapTransLayerNameKM;

//new flex fields addition for SAP Message Logon & SAP SNC Connection
String msHost = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_MSHOST" );
String msService = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_MSSERV" );
String msR3Name = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_ID" );
String msGroupName = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_GROUP" );
String sncPartner = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_PARTNERNAME" );
String sncClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_MYNAME" );
String sncQOP = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_QOP" );

<%}%>
?>

//Setting the SAP Connection
//odiSapERPAdapter.setSAPConnection("<?=hostName?>", "<?=systemNo?>", "<?=sapClient?>", "<?=language?>", "<?=userName?>", "<?=password?>", null, null);

<?
int sapcontype = oracle.odi.sap.km.OdiSapConnection.getSAPConnectionType(odiRef.getInfo("SRC_DSERV_NAME"),sncPartner,msHost);
?>
//Setting Parameters for type of SAP Connection
oracle.odi.sap.km.OdiSapConnection sapConnection = new oracle.odi.sap.km.OdiSapConnection();

sapConnection.setOdiVersion(<%=isOdi10gOr11g%>);
sapConnection.setSAP_CONNECTION_TYPE(<?=sapcontype?>);
sapConnection.setSAP_CLIENT_NO("<?=sapClient?>");
sapLogger.fine("ODIKM-SAPERP-RKM-10000", "", new Object[]{"SAP Client No: " + sapConnection.getSAP_CLIENT_NO()});
sapConnection.setSAP_USER_NAME("<?=userName?>");
sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP User Name: "+sapConnection.getSAP_USER_NAME()});
sapConnection.setSAP_LANGUAGE("<?=language?>");
sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP Language: "+sapConnection.getSAP_LANGUAGE()});                                
switch (<?=sapcontype?>) {
	case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION: {
		sapConnection.setSAP_HOST_NAME("<?=hostName?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP Host Name: "+sapConnection.getSAP_HOST_NAME()});                   
        sapConnection.setSAP_PWD("<?=password?>");
        sapConnection.setSAP_SYSTEM_NO("<?=systemNo?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP System No: "+sapConnection.getSAP_SYSTEM_NO()});
    }
    ;
    break;
    case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION: {                    
		sapConnection.setSAP_HOST_NAME("<?=hostName?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP Host Name: "+sapConnection.getSAP_HOST_NAME()});
        sapConnection.setSAP_SYSTEM_NO("<?=systemNo?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP System No: "+sapConnection.getSAP_SYSTEM_NO()});
        sapConnection.setSAP_SNC_CLIENT("<?=sncClient?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP SNC Client Name: "+sapConnection.getSAP_SNC_CLIENT()});
        sapConnection.setSAP_SNC_PARTNER("<?=sncPartner?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP SNC Partner Name: "+sapConnection.getSAP_SNC_PARTNER()});
        sapConnection.setSAP_SNC_LEVEL("<?=sncQOP?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP SNC Level: "+sapConnection.getSAP_SNC_LEVEL()});    
    }
    ;
    break;
    case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: {
		sapConnection.setSAP_USER_NAME("<?=userName?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP User Name: "+sapConnection.getSAP_USER_NAME()});
        sapConnection.setSAP_PWD("<?=password?>");
        sapConnection.setSAP_MSG_HOST("<?=msHost?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP Message Host Name: "+sapConnection.getSAP_MSG_HOST()});
        sapConnection.setSAP_SERV_NAME("<?=msService?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP Service Name: "+sapConnection.getSAP_SERV_NAME()});
        sapConnection.setSAP_LOGON_GROUP("<?=msGroupName?>");//must be CASE-Sensitive
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP Group Name: "+sapConnection.getSAP_LOGON_GROUP()});
        sapConnection.setSAP_R3NAME("<?=msR3Name?>");
        sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP R3 Name: "+sapConnection.getSAP_R3NAME()});                   
    }
    ;
    break;
}
sapConnection.setSAP_CONNECTION_POOL_NAME("<%= odiRef.getOption("SAP_CONNECTION_POOL")%>");
sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP Connection Pool Name: "+sapConnection.getSAP_CONNECTION_POOL_NAME()});
sapConnection.setSAP_CONNECTION_POOL_SIZE("<%= odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>");
sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"SAP Connection Pool size: "+sapConnection.getSAP_CONNECTION_POOL_SIZE()});

odiSapERPAdapter.setSAPConnection(sapConnection);

//Get the repository connection
Connection repoConnection = odiRef.getJDBCConnection("DEST");
sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"repoConnection: "+repoConnection});]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6429]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[482e8813-35ff-4a63-8017-56ad896ccb19]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3550]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[70]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install Base for Dev Components]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c65299b3-0b3e-45e4-aed4-3f0d247ca96d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6429]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_CODE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_CREATE_BDC" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT ZODI_CREATE_PROGRAMS.
  CONSTANTS : 
 c_devclass        TYPE tadir-devclass 
 VALUE '<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>', 
 c_shorttext       TYPE trdevclass-ctext 
 VALUE 'ODI Package', 
 c_reqtext         TYPE e07t-as4text 
 *VALUE 'ODI Transport Request', 
VALUE 'ODI SAP DEVELOPMENT OBJECTS',
 c_component       TYPE dlvunit 
 VALUE 'SAP_ABA', 
 c_action          TYPE sy-ucomm 
 VALUE 'CREA', 
 c_dialog          TYPE trpari-flag 
 VALUE '', 
 c_dlvunit         TYPE trdevclass-dlvunit 
 VALUE 'HOME', 
 c_task            TYPE e070-trfunction 
 VALUE 'S', 
 c_request         TYPE e070-trfunction 
 VALUE 'K', 
 c_msgclass        TYPE rsdag-arbgb 
 VALUE 'ZODI_MSG', 
 c_msg_class_txt   TYPE t100a-stext 
 VALUE 'Message Class for ODI', 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>', 
 c_fngrp_text      TYPE tftit-stext 
 VALUE 'Function Group for ODI', 
 c_zodi_appl_comp        TYPE 
 dd02v-tabname VALUE 'ZODI_APPL_COMP', 

c_zodi_appl_comp1        TYPE 
 dd02v-tabname VALUE 'ZODI_COND', 
c_zodi_appl_comp2        TYPE 
 dd02v-tabname VALUE 'ZODI_COND_STR', 
 c_zodi_bapi_s_tbl_list        TYPE 
 dd02v-tabname VALUE 'ZODI_BAPI_S_TBL_LIST', 
 c_zodi_rfc_db_fld             TYPE 
 dd02v-tabname VALUE 'ZODI_RFC_DB_FLD', 
 c_zodi_bapi_s_tbl_index_list  TYPE 
 dd02v-tabname VALUE 'ZODI_BAPI_S_TBL_INDEX_LIST', 
 c_zodi_s_pk       TYPE dd02v-tabname 
 VALUE 'ZODI_S_PK', 
 c_zodi_s_fk       TYPE dd02v-tabname 
 VALUE 'ZODI_S_FK', 
 c_zreturn         TYPE dd02v-tabname 
 VALUE 'ZODIRETURN', 
 c_funcname        TYPE rs38l-name 
 VALUE 'ZRFC_ABAP_INSTALL_AND_RUN', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 
 DATA : BEGIN OF struct OCCURS 0, 
 tabname TYPE dd02v-tabname, 
 END OF struct. 
 DATA : 
 trans_req_no        TYPE e070-trkorr, 
 task_number         TYPE e070-trkorr, 
 es_devclass         TYPE trdevclass, 
 is_devclass         TYPE trdevclass, 
 t_version           TYPE cvers, 
 ev_something_changd TYPE trpari-flag, 
 ev_request          TYPE e070-trkorr, 
 obj_name            TYPE tadir-obj_name, 
 es_tadir            TYPE tadir, 
 e071                TYPE STANDARD TABLE OF e071, 
 wa_e071             TYPE e071, 
 et_log              TYPE sprot_u_tab, 
 it_bdcdata          TYPE STANDARD TABLE OF 
 bdcdata    WITH HEADER LINE, 
 it_messtab          TYPE STANDARD TABLE OF 
 bdcmsgcoll WITH HEADER LINE, 
 wa_headerstruct     LIKE dd02v, 
 lv_sysid            TYPE srcsystem, 
 wa_struct           LIKE LINE OF struct, 
 t_structure         TYPE STANDARD TABLE OF dd03p 
 WITH HEADER LINE, 
 exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha, 
 wa_exp              TYPE rsexp, 
 wa_imp              TYPE rsimp, 
 wa_tables           TYPE rstbl, 
 wa_tdevc            TYPE tdevc, 
 cg_rep_tab          LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix,
 ERRORMESSAGE        TYPE symsgv. 

DATA: ls_ret TYPE  BAPIRET2,
      ls_task TYPE BAPISCTS07,
      lt_task TYPE TABLE OF BAPISCTS07,
      ls_author TYPE BAPISCTS12,
      lt_author TYPE TABLE OF BAPISCTS12.

DATA:
 wa_headerstruct1     LIKE dd40v,
 t_structure1         TYPE STANDARD TABLE OF dd42v
 WITH HEADER LINE.

DATA: TRAN_LAYER type BAPISCTS02.

 START-OF-SELECTION. 
*Developer Check
 CALL FUNCTION 'DEVELOPER_CHECK'
 EXPORTING
   SUPPRESS_DIALOG       = 'X'
 EXCEPTIONS
   ACCESS_DENIED         = 1
   DISPLAY_ONLY          = 2
   OTHERS                = 3.
IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
ENDIF.

 CLEAR trans_req_no. 

ls_task-type = 'K'.
ls_task-author = sy-uname.
APPEND ls_task TO lt_task.

ls_author-task_owner = sy-uname.
APPEND ls_author TO lt_author.

tran_layer-LAYER_SET = 'X'.
tran_layer-LAYER = '<?=sapTransportLayerName?>'.

 CALL FUNCTION 'BAPI_CTREQUEST_CREATE'
   EXPORTING
    REQUEST_TYPE       = 'K'
    AUTHOR             = sy-uname
    TEXT               = c_reqtext
    TRANSLAYER         = tran_layer
  IMPORTING
    REQUESTID          = trans_req_no
    RETURN             = ls_ret
   TABLES
     AUTHORLIST         = lt_author
     TASK_LIST          = lt_task.
  IF sy-subrc <> 0.
   ERRORMESSAGE = ls_ret-message.
   WRITE: ERRORMESSAGE.
   EXIT.
  ELSE.
   READ TABLE lt_task INTO ls_task INDEX 2.
   IF sy-subrc = 0.
    task_number = ls_task-taskid.
   ENDIF.
  ENDIF.




*****Ashish Addition
DATA: lv_devclass TYPE DEVCLASS. 
DATA: lv_area  TYPE RS38L_AREA.
SELECT SINGLE devclass
FROM TDEVC
INTO lv_devclass
WHERE devclass = c_devclass.
IF sy-subrc IS NOT INITIAL.
*****Ashish Addition

 SELECT SINGLE * FROM cvers INTO t_version 
 WHERE component = c_component. 
****if SAP version 4.7 and above**** 
 IF t_version-release  >=  '620'. 
 PERFORM create_devclass_6. 
*****else if SAP version 4.6c**** 
 ELSE. 
 PERFORM create_devclass_46c. 
 ENDIF. 
*****Ashish Addition
ENDIF.
SELECT SINGLE area
FROM TLIBG
INTO lv_area
WHERE area = c_function_group.
IF sy-subrc IS NOT INITIAL.
*****Ashish Addition

 CALL FUNCTION 'RS_FUNCTION_POOL_INSERT' 
 EXPORTING 
 function_pool       = c_function_group 
 short_text          = c_fngrp_text 
 responsible         = sy-uname 
 devclass            = c_devclass 
 corrnum             = trans_req_no 
 suppress_corr_check = space
 EXCEPTIONS
  NAME_ALREADY_EXISTS           = 1
  NAME_NOT_CORRECT              = 2
  FUNCTION_ALREADY_EXISTS       = 3
  INVALID_FUNCTION_POOL         = 4
  INVALID_NAME                  = 5
  TOO_MANY_FUNCTIONS            = 6
  NO_MODIFY_PERMISSION          = 7
  NO_SHOW_PERMISSION            = 8
  ENQUEUE_SYSTEM_FAILURE        = 9
  CANCELED_IN_CORR              = 10
  UNDEFINED_ERROR               = 11
  OTHERS                        = 12. 
IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
ENDIF.
*****Ashish Addition
ENDIF.
*****Ashish Addition
 
PERFORM STRUCTURE.
 
 PERFORM CREATE_MESSAGE_CLASS. 
 FORM create_devclass_46c. 
 CALL FUNCTION 'TR_MODIFY_DEVCLASS' 
 EXPORTING 
 iv_action            = c_action 
 iv_dialog            = c_dialog 
 iv_devclass          = c_devclass 
 iv_text              = c_shorttext 
 iv_responsible       = sy-uname 
 iv_dlvunit           = c_dlvunit 
 iv_request           =  trans_req_no 
 IMPORTING 
 es_devclass          = es_devclass 
 ev_something_changed = ev_something_changd 
 ev_request           = ev_request
 EXCEPTIONS
 CANCELLED_BY_USER           = 1
 NO_AUTHORIZATION            = 2
 INVALID_DEVCLASS            = 3
 INVALID_ACTION              = 4
 ENQUEUE_FAILED              = 5
 DB_ACCESS_ERROR             = 6
 SYSTEM_NOT_CONFIGURED       = 7
 OTHERS                      = 8.
IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
ENDIF.


 ENDFORM. 
 FORM create_devclass_6. 
 IS_DEVCLASS-DEVCLASS  =  c_devclass. 
 IS_DEVCLASS-CTEXT     =  c_shorttext. 
 IS_DEVCLASS-AS4USER   =  sy-uname. 
 IS_DEVCLASS-PDEVCLASS = '<?=sapTransportLayerName?>'. 
 IS_DEVCLASS-DLVUNIT   = 'HOME'. 
 CALL FUNCTION 'PA_REPLACE_MODIFY_DEVCLASS' 
 EXPORTING 
 IV_ACTION                   = c_action 
 IV_DIALOG                   = c_dialog 
 IS_DEVCLASS                 = is_devclass 
 IV_REQUEST                  =  trans_req_no 
 IMPORTING 
 es_devclass          = es_devclass 
 ev_something_changed = ev_something_changd 
 ev_request           = ev_request
 EXCEPTIONS
  NO_AUTHORIZATION            = 1
  INVALID_DEVCLASS            = 2
  INVALID_ACTION              = 3
  ENQUEUE_FAILED              = 4
  DB_ACCESS_ERROR             = 5
  SYSTEM_NOT_CONFIGURED       = 6
  OTHERS                      = 7.
 IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 CLEAR: es_devclass, ev_something_changd, 
 ev_request. 
 EXIT.
 ENDIF. 
 ENDFORM. 

FORM CREATE_MESSAGE_CLASS. 
 DATA:   it_bdcdata  TYPE STANDARD TABLE OF 
 bdcdata    WITH HEADER LINE. 
 DATA:   it_messtab  TYPE STANDARD TABLE OF 
 bdcmsgcoll WITH HEADER LINE. 
 perform bdc_dynpro      using 'SAPLWBMESSAGES' 
 '0100'. 
 perform bdc_field       using 'BDC_CURSOR' 
 'RSDAG-ARBGB'. 
 perform bdc_field       using 'BDC_OKCODE' 
 '=WB_CREATE'. 
 perform bdc_field       using 'RSDAG-ARBGB' 
 c_msgclass. 
 perform bdc_field       using 'RSDAG-MSGFLAG' 
 'X'. 
 perform bdc_dynpro      using 'SAPLWBMESSAGES' 
 '1000'. 
 perform bdc_field       using 'BDC_OKCODE' 
 '=MESS'. 
 perform bdc_field       using 'BDC_CURSOR' 
 'T100A-STEXT'. 
 perform bdc_field       using 'T100A-RESPUSER' 
 sy-uname. 
 perform bdc_field       using 'T100A-STEXT' 
 'TEST'. 
 perform bdc_dynpro      using 'SAPLSTRD' '0100'. 
 perform bdc_field       using 'BDC_CURSOR' 
 'KO007-L_DEVCLASS'. 
 perform bdc_field       using 'BDC_OKCODE' 
 '=ADD'. 
 perform bdc_field       using 'KO007-L_DEVCLASS' 
 c_devclass. 
 perform bdc_field       using 'KO007-L_AUTHOR' 
 sy-uname. 
 perform bdc_dynpro      using 'SAPLSTRD' '0300'. 
 perform bdc_field       using 'BDC_CURSOR' 
 'KO008-TRKORR'. 
 perform bdc_field       using 'BDC_OKCODE' 
 '=LOCK'. 
 perform bdc_field       using 'KO008-TRKORR' 
 trans_req_no. 
 PERFORM bdc_dynpro      USING 'SAPLSTRD' '0302'. 
 PERFORM bdc_field       USING 'BDC_CURSOR' 
 'KO008-TRKORR'. 
 PERFORM bdc_field       USING 'BDC_OKCODE' 
 '=LOCK'. 
 perform bdc_dynpro      using 'SAPLWBMESSAGES' 
 '1000'. 
 perform bdc_field       using 'BDC_OKCODE' 
 '=ALMA'. 
 perform bdc_field       using 'BDC_CURSOR' 
 'T100-TEXT(01)'. 
 perform bdc_field       using 'NUMMER' 
 '000'. 
 perform bdc_dynpro      using 'SAPLWBMESSAGES' 
 '1000'. 
 perform bdc_field       using 'BDC_OKCODE' 
 '=WB_BACK'. 
 perform bdc_field       using 'BDC_CURSOR' 
 'T100-TEXT(13)'. 
 perform bdc_field       using 'NUMMER' 
 '000'. 
 perform bdc_field       using 'T100-TEXT(00)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(01)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(02)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(03)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(04)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(05)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(06)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(07)' 
 'TESTT'. 
 perform bdc_field       using 'T100-TEXT(08)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(09)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(10)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(11)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(12)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(13)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(14)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(15)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(16)' 
 'TEST'. 
 perform bdc_field       using 'T100-TEXT(17)' 
 'TEST'. 
 perform bdc_dynpro      using 'SAPLSPO1' 
 '0100'. 
 perform bdc_field       using 'BDC_OKCODE' 
 '=YES'. 
 perform bdc_dynpro      using 'SAPLWBMESSAGES' 
 '0100'. 
 perform bdc_field       using 'BDC_CURSOR' 
 'RSDAG-ARBGB'. 
 perform bdc_field       using 'BDC_OKCODE' 
 '=WB_BACK'. 
 perform bdc_field       using 'RSDAG-ARBGB' 
 c_msgclass. 
 perform bdc_field       using 'RSDAG-MSGFLAG' 
 'X'. 
 perform bdc_transaction using 'SE91'. 
 ENDFORM. 
 FORM bdc_transaction USING tcode. 
 REFRESH it_messtab. 
 CALL TRANSACTION tcode USING it_bdcdata 
 MODE   'N' 
 UPDATE 'A' 
 MESSAGES INTO it_messtab. 
 IF sy-subrc NE 0. 
 ENDIF. 
 DATA: 
 it_text TYPE STANDARD TABLE OF t100, 
 wa_text TYPE t100. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '000'. 
 wa_text-text  = 'Table not available'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '001'. 
 wa_text-text  = 
 'Table Description not available for the table'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '002'. 
 wa_text-text  = 'Table not available'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '003'. 
 wa_text-text  = 'Invalid Package'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '004'. 
 wa_text-text  = 'Invalid Application Component'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '005'. 
 wa_text-text  = 'Package for table not available'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '006'. 
 wa_text-text  = 
 'No Tables Available for the given input'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '007'. 
 wa_text-text  = 'Error in passing FTP command'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '008'. 
 wa_text-text  = 'Error in opening data File'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '009'. 
 wa_text-text  = 
 'Error in passing data to FTP server'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '010'. 
 wa_text-text  = 'Error in passing FTP command'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '011'. 
 wa_text-text  = 
 'Data file transfer to FTP Server successful'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '012'. 
 wa_text-text  = 'No data Available'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '013'. 
 wa_text-text  = 'Error in closing RFC connection'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '014'. 
 wa_text-text  = 'Fields not Available'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '015'. 
 wa_text-text  = 'No foreign keys Available'. 
 APPEND wa_text TO it_text. 
 wa_text-sprsl = sy-langu. 
 wa_text-arbgb = c_msgclass. 
 wa_text-msgnr = '016'. 
 wa_text-text  = 
 'Secondary Indexes Not found for the table'. 
 APPEND wa_text TO it_text. 
 INSERT T100 FROM TABLE it_text. 
 ENDFORM. 
 FORM bdc_dynpro USING program dynpro. 
 CLEAR it_bdcdata. 
 it_bdcdata-program  = program. 
 it_bdcdata-dynpro   = dynpro. 
 it_bdcdata-dynbegin = 'X'. 
 APPEND it_bdcdata. 
 ENDFORM. 
 FORM bdc_field USING fnam fval. 
 CLEAR it_bdcdata. 
 it_bdcdata-fnam = fnam. 
 it_bdcdata-fval = fval. 
 APPEND it_bdcdata. 
 ENDFORM.

FORM structure. 
 CLEAR   t_structure. 
 REFRESH t_structure. 
 wa_headerstruct-tabname = 
 c_zodi_appl_comp. 
 wa_headerstruct-ddlanguage = sy-langu. 
 wa_headerstruct-tabclass = 'INTTAB'. 
 wa_headerstruct-ddtext   = 'ODI GET SAP MODULES '. 
 wa_headerstruct-exclass   = '3'. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'APPL_COMP'. 
 t_structure-position  = '1'. 
 t_structure-rollname  = 'UFPS_POSID'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'SHORT_TEXT'. 
 t_structure-position  = '2'. 
 t_structure-rollname  = 'UDTEXT'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 struct-tabname = wa_headerstruct-tabname. 
 APPEND struct. 
 CLEAR  struct. 
 CALL FUNCTION 'DDIF_TABL_PUT' 
 EXPORTING 
 name              = wa_headerstruct-tabname 
 dd02v_wa          = wa_headerstruct 
 TABLES 
 dd03p_tab         = t_structure 
 EXCEPTIONS 
 tabl_not_found    = 1 
 name_inconsistent = 2 
 tabl_inconsistent = 3 
 put_failure       = 4 
 put_refused       = 5 
 OTHERS            = 6.
 IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
 ENDIF.
 
 CALL FUNCTION 'DDIF_TABL_ACTIVATE' 
 EXPORTING 
 name        = wa_headerstruct-tabname 
 auth_chk    = space 
 EXCEPTIONS 
 not_found   = 1 
 put_failure = 2 
 OTHERS      = 3.
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
 ENDIF. 

 CLEAR wa_headerstruct. 
 CLEAR   t_structure. 
 REFRESH t_structure. 
 wa_headerstruct-tabname = 
 c_zodi_bapi_s_tbl_list. 
 wa_headerstruct-ddlanguage = sy-langu. 
 wa_headerstruct-tabclass = 'INTTAB'. 
 wa_headerstruct-ddtext   = 'ODI GET TABLES RFC '. 
 wa_headerstruct-exclass   = '3'. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'TABNAME'. 
 t_structure-position  = '1'. 
 t_structure-rollname  = 'CHAR0032'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'TABCLASS'. 
 t_structure-position  = '2'. 
 t_structure-rollname  = 'CHAR0008'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'DEVCLASS'. 
 t_structure-position  = '3'. 
 t_structure-rollname  = 'CHAR0032'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'COMMENTS'. 
 t_structure-position  = '4'. 
 t_structure-rollname  = 'CHAR100'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'MODULE_NAME'. 
 t_structure-position  = '5'. 
 t_structure-rollname  = 'CHAR24'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 struct-tabname = wa_headerstruct-tabname. 
 APPEND struct. 
 CLEAR  struct. 
 CALL FUNCTION 'DDIF_TABL_PUT' 
 EXPORTING 
 name              = wa_headerstruct-tabname 
 dd02v_wa          = wa_headerstruct 
 TABLES 
 dd03p_tab         = t_structure 
 EXCEPTIONS 
 tabl_not_found    = 1 
 name_inconsistent = 2 
 tabl_inconsistent = 3 
 put_failure       = 4 
 put_refused       = 5 
 OTHERS            = 6. 
 IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT. 
 ENDIF.
 CALL FUNCTION 'DDIF_TABL_ACTIVATE' 
 EXPORTING 
 name        = wa_headerstruct-tabname 
 auth_chk    = space 
 EXCEPTIONS 
 not_found   = 1 
 put_failure = 2 
 OTHERS      = 3. 
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
 
 ENDIF.
 CLEAR wa_headerstruct. 
 CLEAR   t_structure. 
 REFRESH t_structure. 
 wa_headerstruct-tabname = c_zodi_rfc_db_fld. 
 wa_headerstruct-ddlanguage = sy-langu. 
 wa_headerstruct-tabclass = 'INTTAB'. 
 wa_headerstruct-ddtext   = 'RFC Table Read'. 
 wa_headerstruct-exclass   = '3'. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'FIELDNAME'. 
 t_structure-position  = '1'. 
 t_structure-rollname  = 'FIELDNAME'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'OFFSET'. 
 t_structure-position  = '2'. 
 t_structure-rollname  = 'DOFFSET'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'DATATYPE'. 
 t_structure-position  = '3'. 
 t_structure-rollname  = 'DATATYPE_D'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'LENGTH'. 
 t_structure-position  = '4'. 
 t_structure-rollname  = 'DDLENG'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'DECIMALS'. 
 t_structure-position  = '5'. 
 t_structure-rollname  = 'DECIMALS'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'FIELDTEXT'. 
 t_structure-position  = '6'. 
 t_structure-rollname  = 'AS4TEXT'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'NOTNULL'. 
 t_structure-position  = '7'. 
 t_structure-rollname  = 'NOTNULL'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 struct-tabname = wa_headerstruct-tabname. 
 APPEND struct. 
 CLEAR  struct. 
 CALL FUNCTION 'DDIF_TABL_PUT' 
 EXPORTING 
 name              = wa_headerstruct-tabname 
 dd02v_wa          = wa_headerstruct 
 TABLES 
 dd03p_tab         = t_structure 
 EXCEPTIONS 
 tabl_not_found    = 1 
 name_inconsistent = 2 
 tabl_inconsistent = 3 
 put_failure       = 4 
 put_refused       = 5 
 OTHERS            = 6. 
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT. 
 ENDIF.
 CALL FUNCTION 'DDIF_TABL_ACTIVATE' 
 EXPORTING 
 name        = wa_headerstruct-tabname 
 auth_chk    = space 
 EXCEPTIONS 
 not_found   = 1 
 put_failure = 2 
 OTHERS      = 3. 
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
 ENDIF.
 CLEAR wa_headerstruct. 
 CLEAR   t_structure. 
 REFRESH t_structure. 
 wa_headerstruct-tabname = 
 c_zodi_bapi_s_tbl_index_list. 
 wa_headerstruct-ddlanguage = sy-langu. 
 wa_headerstruct-tabclass = 'INTTAB'. 
 wa_headerstruct-ddtext   = 
 'Structure used in ODI for table Indexes'. 
 wa_headerstruct-exclass   = '3'. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'INDEXNAME'. 
 t_structure-position  = '1'. 
 t_structure-rollname  = 'INDEXID'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'INDEXFIELDS'. 
 t_structure-position  = '2'. 
 t_structure-rollname  = 'CHAR255'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 struct-tabname = wa_headerstruct-tabname. 
 APPEND struct. 
 CLEAR  struct. 
 CALL FUNCTION 'DDIF_TABL_PUT' 
 EXPORTING 
 name              = wa_headerstruct-tabname 
 dd02v_wa          = wa_headerstruct 
 TABLES 
 dd03p_tab         = t_structure 
 EXCEPTIONS 
 tabl_not_found    = 1 
 name_inconsistent = 2 
 tabl_inconsistent = 3 
 put_failure       = 4 
 put_refused       = 5 
 OTHERS            = 6. 
 IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT. 
 ENDIF.
 CALL FUNCTION 'DDIF_TABL_ACTIVATE' 
 EXPORTING 
 name        = wa_headerstruct-tabname 
 auth_chk    = space 
 EXCEPTIONS 
 not_found   = 1 
 put_failure = 2 
 OTHERS      = 3. 
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT. 
 ENDIF.
 CLEAR wa_headerstruct. 
 CLEAR   t_structure. 
 REFRESH t_structure. 
 wa_headerstruct-tabname = c_zodi_s_pk. 
 wa_headerstruct-ddlanguage = sy-langu. 
 wa_headerstruct-tabclass = 'INTTAB'. 
 wa_headerstruct-ddtext   = 
 'ODI Structure for Primary Keys'. 
 wa_headerstruct-exclass   = '3'. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'PRI_KEY_TABNAM'. 
 t_structure-position  = '1'. 
 t_structure-rollname  = 'CHAR30'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'PRI_KEY_FIELD'. 
 t_structure-position  = '2'. 
 t_structure-rollname  = 'CHAR30'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 struct-tabname = wa_headerstruct-tabname. 
 APPEND struct. 
 CLEAR  struct. 
 CALL FUNCTION 'DDIF_TABL_PUT' 
 EXPORTING 
 name              = wa_headerstruct-tabname 
 dd02v_wa          = wa_headerstruct 
 TABLES 
 dd03p_tab         = t_structure 
 EXCEPTIONS 
 tabl_not_found    = 1 
 name_inconsistent = 2 
 tabl_inconsistent = 3 
 put_failure       = 4 
 put_refused       = 5 
 OTHERS            = 6. 
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
 ENDIF.
 CALL FUNCTION 'DDIF_TABL_ACTIVATE' 
 EXPORTING 
 name        = wa_headerstruct-tabname 
 auth_chk    = space 
 EXCEPTIONS 
 not_found   = 1 
 put_failure = 2 
 OTHERS      = 3. 
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
 
 ENDIF.
 CLEAR wa_headerstruct. 
 CLEAR   t_structure. 
 REFRESH t_structure. 
 wa_headerstruct-tabname = c_zodi_s_fk. 
 wa_headerstruct-ddlanguage = sy-langu. 
 wa_headerstruct-tabclass = 'INTTAB'. 
 wa_headerstruct-ddtext   = 
 'Structute for Foreign KEys'. 
 wa_headerstruct-exclass   = '3'. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'FIELD_NAME'. 
 t_structure-position  = '1'. 
 t_structure-rollname  = 'CHAR30'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'TABLE_NAME'. 
 t_structure-position  = '2'. 
 t_structure-rollname  = 'CHAR30'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'FK_TABLE_NAME'. 
 t_structure-position  = '3'. 
 t_structure-rollname  = 'CHAR30'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'FK_FIELD_NAME'. 
 t_structure-position  = '4'. 
 t_structure-rollname  = 'CHAR30'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'FK_TABLE_TEXT'. 
 t_structure-position  = '5'. 
 t_structure-rollname  = 'AS4TEXT'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 struct-tabname = wa_headerstruct-tabname. 
 APPEND struct. 
 CLEAR  struct. 
 CALL FUNCTION 'DDIF_TABL_PUT' 
 EXPORTING 
 name              = wa_headerstruct-tabname 
 dd02v_wa          = wa_headerstruct 
 TABLES 
 dd03p_tab         = t_structure 
 EXCEPTIONS 
 tabl_not_found    = 1 
 name_inconsistent = 2 
 tabl_inconsistent = 3 
 put_failure       = 4 
 put_refused       = 5 
 OTHERS            = 6. 
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
 
 ENDIF.
 CALL FUNCTION 'DDIF_TABL_ACTIVATE' 
 EXPORTING 
 name        = wa_headerstruct-tabname 
 auth_chk    = space 
 EXCEPTIONS 
 not_found   = 1 
 put_failure = 2 
 OTHERS      = 3. 
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
 
 ENDIF.
 CLEAR wa_headerstruct. 
 CLEAR   t_structure. 
 REFRESH t_structure. 
 wa_headerstruct-tabname = c_zreturn. 
 wa_headerstruct-ddlanguage = sy-langu. 
 wa_headerstruct-tabclass = 'INTTAB'. 
 wa_headerstruct-ddtext   = 
 'StructuRe for Return table'. 
 wa_headerstruct-exclass   = '3'. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'STAT_MSG_TYPE'. 
 t_structure-position  = '1'. 
 t_structure-rollname  = 'CHAR1'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 t_structure-tabname   = wa_headerstruct-tabname. 
 t_structure-fieldname = 'STAT_MSG_DESC'. 
 t_structure-position  = '2'. 
 t_structure-rollname  = 'CHAR50'. 
 APPEND t_structure. 
 CLEAR  t_structure. 
 struct-tabname = wa_headerstruct-tabname. 
 APPEND struct. 
 CLEAR  struct. 
 CALL FUNCTION 'DDIF_TABL_PUT' 
 EXPORTING 
 name              = wa_headerstruct-tabname 
 dd02v_wa          = wa_headerstruct 
 TABLES 
 dd03p_tab         = t_structure 
 EXCEPTIONS 
 tabl_not_found    = 1 
 name_inconsistent = 2 
 tabl_inconsistent = 3 
 put_failure       = 4 
 put_refused       = 5 
 OTHERS            = 6. 
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
 
 ENDIF.
 CALL FUNCTION 'DDIF_TABL_ACTIVATE' 
 EXPORTING 
 name        = wa_headerstruct-tabname 
 auth_chk    = space 
 EXCEPTIONS 
 not_found   = 1 
 put_failure = 2 
 OTHERS      = 3. 
  IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
 
 ENDIF.
 CLEAR wa_headerstruct. 
 LOOP AT struct INTO wa_struct. 
 obj_name  = wa_struct-tabname. 
 lv_sysid = sy-sysid. 
 CALL FUNCTION 'TRINT_TADIR_INSERT' 
 EXPORTING 
 author               = sy-uname 
 masterlang           = sy-langu 
 devclass             = c_devclass 
 genflag              = ' ' 
 object               = 'TABL' 
 obj_name             = obj_name 
 pgmid                = 'R3TR' 
 srcsystem            = lv_sysid 
 IMPORTING 
 es_tadir             = es_tadir 
 EXCEPTIONS 
 object_exists_global = 1 
 object_exists_local  = 2 
 OTHERS               = 3. 
 IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
 
 ENDIF.
 wa_e071-trkorr    = trans_req_no. 
 wa_e071-as4pos    = '1'. 
 wa_e071-pgmid     = 'R3TR'. 
 wa_e071-object    = 'TABL'. 
 wa_e071-obj_name  = obj_name. 
 wa_e071-lockflag  = 'X'. 
 APPEND wa_e071 TO e071. 
 CLEAR wa_e071. 
 wa_e071-trkorr    = trans_req_no. 
 wa_e071-as4pos    = '2'. 
 wa_e071-pgmid     = 'LIMU'. 
 wa_e071-object    = 'TABD'. 
 wa_e071-obj_name  = obj_name. 
 wa_e071-lockflag  = 'X'. 
 APPEND wa_e071 TO e071. 
 CLEAR  wa_e071. 
 CALL FUNCTION 'TRINT_REQUEST_CHOICE' 
 EXPORTING 
 iv_suppress_dialog = 'X' 
 iv_request_types   = 'KL' 
 iv_request         = trans_req_no 
 IMPORTING 
 et_log             = et_log 
 TABLES 
 it_e071            = e071
 EXCEPTIONS
   INVALID_REQUEST            = 1
   INVALID_REQUEST_TYPE       = 2
   USER_NOT_OWNER             = 3
   NO_OBJECTS_APPENDED        = 4
   ENQUEUE_ERROR              = 5
   CANCELLED_BY_USER          = 6
   RECURSIVE_CALL             = 7
   OTHERS                     = 8.
 IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT. 
 ENDIF.

 ENDLOOP. 
ENDFORM.

"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6430]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8d871bed-17a1-4a4d-b160-13a980e09bd0]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3551]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[80]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install Base for Prod Components]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[05f6dc4e-2c6d-423e-9fb4-bdf4eb56d58b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6430]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_CODE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_CREATE_BDC" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT ZODI_CREATE_PROGRAMS.
CONSTANTS :
 c_devclass        TYPE tadir-devclass
 VALUE '<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>',
 c_shorttext       TYPE trdevclass-ctext
 VALUE 'ODI Package',
 c_reqtext         TYPE e07t-as4text
 *VALUE 'ODI Transport Request',
VALUE 'ODI SAP PRODUCTION OBJECTS',
 c_component       TYPE dlvunit
 VALUE 'SAP_ABA',
 c_action          TYPE sy-ucomm
 VALUE 'CREA',
 c_dialog          TYPE trpari-flag
 VALUE '',
 c_dlvunit         TYPE trdevclass-dlvunit
 VALUE 'HOME',
 c_task            TYPE e070-trfunction
 VALUE 'S',
 c_request         TYPE e070-trfunction
 VALUE 'K',
 c_msgclass        TYPE rsdag-arbgb
 VALUE 'ZODI_MSG',
 c_msg_class_txt   TYPE t100a-stext
 VALUE 'Message Class for ODI',
 c_function_group  TYPE rsnewleng-area
 VALUE 'ZODI_FGR',
 c_function_group1  TYPE rsnewleng-area
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>',
 c_fngrp_text      TYPE tftit-stext
 VALUE 'Function Group for ODI',
 c_zodi_appl_comp        TYPE
 dd02v-tabname VALUE 'ZODI_APPL_COMP',
c_zodi_appl_comp1        TYPE
 dd02v-tabname VALUE 'ZODI_COND',
c_zodi_appl_comp2        TYPE
 dd02v-tabname VALUE 'ZODI_COND_STR',
 c_zodi_bapi_s_tbl_list        TYPE
 dd02v-tabname VALUE 'ZODI_BAPI_S_TBL_LIST',
 c_zodi_rfc_db_fld             TYPE
 dd02v-tabname VALUE 'ZODI_RFC_DB_FLD',
 c_zodi_bapi_s_tbl_index_list  TYPE
 dd02v-tabname VALUE 'ZODI_BAPI_S_TBL_INDEX_LIST',
 c_zodi_s_pk       TYPE dd02v-tabname
 VALUE 'ZODI_S_PK',
 c_zodi_s_fk       TYPE dd02v-tabname
 VALUE 'ZODI_S_FK',
 c_zreturn         TYPE dd02v-tabname
 VALUE 'ZODIRETURN',
 c_funcname        TYPE rs38l-name
 VALUE 'ZRFC_ABAP_INSTALL_AND_RUN',
 c_funcname_text   TYPE tftit-stext
 VALUE 'Install code and execute',
 c_remote_call     TYPE RS38L-REMOTE
 VALUE 'X'.
 DATA : BEGIN OF struct OCCURS 0,
 tabname TYPE dd02v-tabname,
 END OF struct.
 DATA :
 trans_req_no        TYPE e070-trkorr,
 task_number         TYPE e070-trkorr,
 es_devclass         TYPE trdevclass,
 is_devclass         TYPE trdevclass,
 t_version           TYPE cvers,
 ev_something_changd TYPE trpari-flag,
 ev_request          TYPE e070-trkorr,
 obj_name            TYPE tadir-obj_name,
 es_tadir            TYPE tadir,
 e071                TYPE STANDARD TABLE OF e071,
 wa_e071             TYPE e071,
 et_log              TYPE sprot_u_tab,
 it_bdcdata          TYPE STANDARD TABLE OF
 bdcdata    WITH HEADER LINE,
 it_messtab          TYPE STANDARD TABLE OF
 bdcmsgcoll WITH HEADER LINE,
 wa_headerstruct     LIKE dd02v,
 lv_sysid            TYPE srcsystem,
 wa_struct           LIKE LINE OF struct,
 t_structure         TYPE STANDARD TABLE OF dd03p
 WITH HEADER LINE,
 exception_list      TYPE STANDARD TABLE OF rsexc,
 export_parameter    TYPE STANDARD TABLE OF rsexp,
 import_parameter    TYPE STANDARD TABLE OF rsimp,
 parameter_docu      TYPE STANDARD TABLE OF rsfdo,
 tables_parameter    TYPE STANDARD TABLE OF rstbl,
 changing_parameter  TYPE STANDARD TABLE OF rscha,
 wa_exp              TYPE rsexp,
 wa_imp              TYPE rsimp,
 wa_tables           TYPE rstbl,
 wa_tdevc            TYPE tdevc,
 cg_rep_tab          LIKE abaptext OCCURS 20,
 include_name        TYPE rs38l-include,
 cg_tabix            LIKE sy-tabix,
 ERRORMESSAGE        TYPE symsgv,
 lv_devclass         TYPE devclass.

DATA: ls_ret TYPE  BAPIRET2,
      ls_task TYPE BAPISCTS07,
      lt_task TYPE TABLE OF BAPISCTS07,
      ls_author TYPE BAPISCTS12,
      lt_author TYPE TABLE OF BAPISCTS12.

DATA: lt_e071 TYPE TABLE OF e071,
      lt_e070 TYPE TABLE OF e070,
      wa_e070 TYPE e070.

DATA: TRAN_LAYER type BAPISCTS02.

DATA:
 wa_headerstruct1     LIKE dd40v,
 t_structure1         TYPE STANDARD TABLE OF dd42v
 WITH HEADER LINE.

 START-OF-SELECTION.
*Developer Check
 SELECT SINGLE DEVCLASS
 FROM tdevc
 INTO lv_devclass
 WHERE devclass = c_devclass.
 IF sy-subrc NE 0.
 CLEAR trans_req_no.

ls_task-type = 'K'.
ls_task-author = sy-uname.
APPEND ls_task TO lt_task.

ls_author-task_owner = sy-uname.
APPEND ls_author TO lt_author.

tran_layer-LAYER_SET = 'X'.
tran_layer-LAYER = '<?=sapTransportLayerName?>'.

 CALL FUNCTION 'BAPI_CTREQUEST_CREATE'
   EXPORTING
    REQUEST_TYPE       = 'K'
    AUTHOR             = sy-uname
    TEXT               = c_reqtext
	TRANSLAYER         = tran_layer
  IMPORTING
    REQUESTID          = trans_req_no
    RETURN             = ls_ret
   TABLES
     AUTHORLIST         = lt_author
     TASK_LIST          = lt_task.
  IF sy-subrc <> 0.
   ERRORMESSAGE = ls_ret-message.
 WRITE: ERRORMESSAGE.
 EXIT.
  ELSE.
   READ TABLE lt_task INTO ls_task INDEX 2.
   IF sy-subrc = 0.
    task_number = ls_task-taskid.
   ENDIF.
  ENDIF.

*****Ashish Addition
DATA: lv_devc TYPE DEVCLASS. 
DATA: lv_area  TYPE RS38L_AREA.
SELECT SINGLE devclass
FROM TDEVC
INTO lv_devc
WHERE devclass = c_devclass.
IF sy-subrc IS NOT INITIAL.
*****Ashish Addition

 SELECT SINGLE * FROM cvers INTO t_version
 WHERE component = c_component.
****if SAP version 4.7 and above****
 IF t_version-release  >=  '620'.
 PERFORM create_devclass_6.
*****else if SAP version 4.6c****
 ELSE.
 PERFORM create_devclass_46c.
 ENDIF.

*****Ashish Addition
ENDIF.
*****Ashish Addition

ELSE.
SELECT * FROM E071
INTO TABLE lt_e071
WHERE OBJECT = 'DEVC' AND
OBJ_NAME = c_devclass AND
LOCKFLAG = 'X'.
IF sy-subrc IS INITIAL.
SELECT * from e070
INTO TABLE lt_e070
FOR ALL ENTRIES IN lt_e071
WHERE trkorr = lt_e071-trkorr.
IF sy-subrc IS INITIAL.
READ TABLE lt_e070 INTO wa_e070 INDEX 1.
IF sy-subrc IS INITIAL.
trans_req_no = wa_e070-sTRKORR.
ENDIF.
ENDIF.
ENDIF.

 ENDIF.

*****Ashish Addition
SELECT SINGLE area
FROM TLIBG
INTO lv_area
WHERE area = c_function_group1.
IF sy-subrc IS NOT INITIAL.
*****Ashish Addition

 CALL FUNCTION 'RS_FUNCTION_POOL_INSERT'
 EXPORTING
 function_pool       = c_function_group1
 short_text          = c_fngrp_text
 responsible         = sy-uname
 devclass            = c_devclass
 corrnum             = trans_req_no
 suppress_corr_check = space
 EXCEPTIONS
  NAME_ALREADY_EXISTS           = 1
  NAME_NOT_CORRECT              = 2
  FUNCTION_ALREADY_EXISTS       = 3
  INVALID_FUNCTION_POOL         = 4
  INVALID_NAME                  = 5
  TOO_MANY_FUNCTIONS            = 6
  NO_MODIFY_PERMISSION          = 7
  NO_SHOW_PERMISSION            = 8
  ENQUEUE_SYSTEM_FAILURE        = 9
  CANCELED_IN_CORR              = 10
  UNDEFINED_ERROR               = 11
  OTHERS                        = 12.
IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.

 EXIT.
ENDIF.

*****Ashish Addition
ENDIF.
*****Ashish Addition

PERFORM structure.

 FORM create_devclass_46c.
 CALL FUNCTION 'TR_MODIFY_DEVCLASS'
 EXPORTING
 iv_action            = c_action
 iv_dialog            = c_dialog
 iv_devclass          = c_devclass
 iv_text              = c_shorttext
 iv_responsible       = sy-uname
 iv_dlvunit           = c_dlvunit
 iv_request           =  trans_req_no
 IMPORTING
 es_devclass          = es_devclass
 ev_something_changed = ev_something_changd
 ev_request           = ev_request
EXCEPTIONS
    CANCELLED_BY_USER           = 1
    NO_AUTHORIZATION            = 2
    INVALID_DEVCLASS            = 3
    INVALID_ACTION              = 4
    ENQUEUE_FAILED              = 5
    DB_ACCESS_ERROR             = 6
    SYSTEM_NOT_CONFIGURED       = 7
    OTHERS                      = 8.
 IF sy-subrc <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
ENDIF.

 ENDFORM.
 FORM create_devclass_6.
 IS_DEVCLASS-DEVCLASS  =  c_devclass.
 IS_DEVCLASS-CTEXT     =  c_shorttext.
 IS_DEVCLASS-AS4USER   =  sy-uname.
 IS_DEVCLASS-PDEVCLASS = '<?=sapTransportLayerName?>'.
 IS_DEVCLASS-DLVUNIT   = 'HOME'.
 CALL FUNCTION 'PA_REPLACE_MODIFY_DEVCLASS'
 EXPORTING
 IV_ACTION                   = c_action
 IV_DIALOG                   = c_dialog
 IS_DEVCLASS                 = is_devclass
 IV_REQUEST                  =  trans_req_no
 IMPORTING
 es_devclass          = es_devclass
 ev_something_changed = ev_something_changd
 ev_request           = ev_request
EXCEPTIONS
   NO_AUTHORIZATION            = 1
   INVALID_DEVCLASS            = 2
   INVALID_ACTION              = 3
   ENQUEUE_FAILED              = 4
   DB_ACCESS_ERROR             = 5
   SYSTEM_NOT_CONFIGURED       = 6
   OTHERS                      = 7.

 IF sy-subrc <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
 CLEAR: es_devclass, ev_something_changd,
 ev_request.
 ENDIF.
 ENDFORM.

FORM structure.

*****Ashish Addition
DATA: lv_tab TYPE TABNAME.

SELECT TABNAME
UP TO 1 ROWS
FROM DD02L
INTO lv_tab
WHERE tabname = 'ZODI_COND_STR'.
ENDSELECT.
IF sy-subrc IS NOT INITIAL.
*****Ashish Addition

CLEAR   t_structure.
 REFRESH t_structure.
 wa_headerstruct-tabname =
 c_zodi_appl_comp2.
 wa_headerstruct-ddlanguage = sy-langu.
 wa_headerstruct-tabclass = 'INTTAB'.
 wa_headerstruct-ddtext   = 'ODI Dynamic Condition'.
 wa_headerstruct-exclass   = '3'.
 t_structure-tabname   = wa_headerstruct-tabname.
 t_structure-fieldname = 'FIELD'.
 t_structure-position  = '1'.
 t_structure-rollname  = 'SYLISEL'.
 APPEND t_structure.
 CLEAR  t_structure.
 t_structure-tabname   = wa_headerstruct-tabname.
 t_structure-fieldname = 'VAL'.
 t_structure-position  = '2'.
 t_structure-rollname  = 'SYLISEL'.
 APPEND t_structure.
 CLEAR  t_structure.
 struct-tabname = wa_headerstruct-tabname.
 APPEND struct.
 CLEAR  struct.
 CALL FUNCTION 'DDIF_TABL_PUT'
 EXPORTING
 name              = wa_headerstruct-tabname
 dd02v_wa          = wa_headerstruct
 TABLES
 dd03p_tab         = t_structure
 EXCEPTIONS
 tabl_not_found    = 1
 name_inconsistent = 2
 tabl_inconsistent = 3
 put_failure       = 4
 put_refused       = 5
 OTHERS            = 6.
 IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
 ENDIF.

 CALL FUNCTION 'DDIF_TABL_ACTIVATE'
 EXPORTING
 name        = wa_headerstruct-tabname
 auth_chk    = space
 EXCEPTIONS
 not_found   = 1
 put_failure = 2
 OTHERS      = 3.
  IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
 ENDIF.

*****Ashish Addition
ENDIF.
*****Ashish Addition


*****Ashish Addition
DATA: lv_type TYPE TTYPENAME.

SELECT typename
UP TO 1 ROWS
FROM DD40L
INTO lv_type
WHERE typename = 'ZODI_COND'.
ENDSELECT.
IF sy-subrc IS NOT INITIAL.
*****Ashish Addition

 CLEAR   t_structure1.
 REFRESH t_structure1.
 wa_headerstruct1-typename =
 c_zodi_appl_comp1.
 wa_headerstruct1-keykind = 'N'.
 wa_headerstruct1-KEYDEF = 'D'.
 wa_headerstruct1-ddlanguage = sy-langu.
 wa_headerstruct1-ddtext = 'ODI Dynamic Table Type Condition'.
 wa_headerstruct1-rowtype = 'ZODI_COND_STR'.
 t_structure1-typename   = c_zodi_appl_comp1.
 t_structure1-keyfdpos  = '1'.
 t_structure1-keyfield  = 'FIELD'.
 APPEND t_structure1.
 CLEAR  t_structure1.
 t_structure1-typename   = c_zodi_appl_comp1.
 t_structure1-keyfdpos  = '2'.
 t_structure1-keyfield  = 'VAL'.
 APPEND t_structure1.
CLEAR  t_structure.
 struct-tabname = wa_headerstruct1-typename.

CALL FUNCTION 'DDIF_TTYP_PUT'
  EXPORTING
    NAME                    = c_zodi_appl_comp1
   DD40V_WA                = wa_headerstruct1
 TABLES
   DD42V_TAB               = t_structure1
 EXCEPTIONS
   TTYP_NOT_FOUND          = 1
   NAME_INCONSISTENT       = 2
   TTYP_INCONSISTENT       = 3
   PUT_FAILURE             = 4
   PUT_REFUSED             = 5
   OTHERS                  = 6.
IF SY-SUBRC <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CALL FUNCTION 'DDIF_TTYP_ACTIVATE'
  EXPORTING
    NAME              = c_zodi_appl_comp1
 EXCEPTIONS
   NOT_FOUND         = 1
   PUT_FAILURE       = 2
   OTHERS            = 3.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

*****Ashish Addition
ENDIF.

*****Ashish Addition

 CLEAR wa_headerstruct.
 LOOP AT struct INTO wa_struct.
 obj_name  = wa_struct-tabname.
 lv_sysid = sy-sysid.
 CALL FUNCTION 'TRINT_TADIR_INSERT'
 EXPORTING
 author               = sy-uname
 masterlang           = sy-langu
 devclass             = c_devclass
 genflag              = ' '
 object               = 'TABL'
 obj_name             = obj_name
 pgmid                = 'R3TR'
 srcsystem            = lv_sysid
 IMPORTING
 es_tadir             = es_tadir
 EXCEPTIONS
 object_exists_global = 1
 object_exists_local  = 2
 OTHERS               = 3.
 IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.

 ENDIF.
 wa_e071-trkorr    = trans_req_no.
 wa_e071-as4pos    = '1'.
 wa_e071-pgmid     = 'R3TR'.
 wa_e071-object    = 'TABL'.
 wa_e071-obj_name  = obj_name.
 wa_e071-lockflag  = 'X'.
 APPEND wa_e071 TO e071.
 CLEAR wa_e071.
 wa_e071-trkorr    = trans_req_no.
 wa_e071-as4pos    = '2'.
 wa_e071-pgmid     = 'LIMU'.
 wa_e071-object    = 'TABD'.
 wa_e071-obj_name  = obj_name.
 wa_e071-lockflag  = 'X'.
 APPEND wa_e071 TO e071.
 CLEAR  wa_e071.
 CALL FUNCTION 'TRINT_REQUEST_CHOICE'
 EXPORTING
 iv_suppress_dialog = 'X'
 iv_request_types   = 'KL'
 iv_request         = trans_req_no
 IMPORTING
 et_log             = et_log
 TABLES
 it_e071            = e071
 EXCEPTIONS
   INVALID_REQUEST            = 1
   INVALID_REQUEST_TYPE       = 2
   USER_NOT_OWNER             = 3
   NO_OBJECTS_APPENDED        = 4
   ENQUEUE_ERROR              = 5
   CANCELLED_BY_USER          = 6
   RECURSIVE_CALL             = 7
   OTHERS                     = 8.
 IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
 ENDIF.

 ENDLOOP.

obj_name  = c_zodi_appl_comp1.
lv_sysid = sy-sysid.

CALL FUNCTION 'TRINT_TADIR_INSERT'
 EXPORTING
 author               = sy-uname
 masterlang           = sy-langu
 devclass             = c_devclass
 genflag              = ' '
 object               = 'TTYP'
 obj_name             = obj_name
 pgmid                = 'R3TR'
 srcsystem            = lv_sysid
 IMPORTING
 es_tadir             = es_tadir
 EXCEPTIONS
 object_exists_global = 1
 object_exists_local  = 2
 OTHERS               = 3.
 IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.

 ENDIF.
 wa_e071-trkorr    = trans_req_no.
 wa_e071-as4pos    = '1'.
 wa_e071-pgmid     = 'R3TR'.
 wa_e071-object    = 'TTYP'.
 wa_e071-obj_name  = c_zodi_appl_comp1 .
 wa_e071-lockflag  = 'X'.
 APPEND wa_e071 TO e071.
 CLEAR wa_e071.
 CALL FUNCTION 'TRINT_REQUEST_CHOICE'
 EXPORTING
 iv_suppress_dialog = 'X'
 iv_request_types   = 'KL'
 iv_request         = trans_req_no
 IMPORTING
 et_log             = et_log
 TABLES
 it_e071            = e071
 EXCEPTIONS
   INVALID_REQUEST            = 1
   INVALID_REQUEST_TYPE       = 2
   USER_NOT_OWNER             = 3
   NO_OBJECTS_APPENDED        = 4
   ENQUEUE_ERROR              = 5
   CANCELLED_BY_USER          = 6
   RECURSIVE_CALL             = 7
   OTHERS                     = 8.
 IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.

 ENDIF.

********************************************
**Creation of Application Log Objects
********************************************
Data : lv_balsub type balsub,
       lv_balsubt type balsubt,
       lv_balobj  type  balobj,
       lv_balobjt type balobjt,       
	   TEXT type STRING.

DATA: lv_object TYPE BALOBJ_D.


SELECT SINGLE object
FROM balobj 
INTO lv_object
WHERE object = '<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
IF sy-subrc IS INITIAL.
 EXIT.
ENDIF.

	   
lv_balobj-object = 
'<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
insert into balobj values lv_balobj.

if sy-subrc <> 0. 
TEXT = 'Enter correct Application object name'.
MESSAGE e000(l1) WITH text.
endif.

lv_balobjt-spras    = '<?=language?>'.
lv_balobjt-object   = 
'<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
lv_balobjt-objtxt   = 
'SAP Background job application object name'.

insert into balobjt values lv_balobjt.

if sy-subrc <> 0.
TEXT = 'Enter correct Application object description'.
MESSAGE e000(l1) WITH text.
endif.

lv_balsub-object     =  
'<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
lv_balsub-subobject  =  
'<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>'.

insert into balsub values lv_balsub.

if sy-subrc <> 0.
TEXT = 'Enter correct Subobject name'.
MESSAGE e000(l1) WITH text.
endif.

lv_balsubt-spras       = '<?=language?>'.
lv_balsubt-object      = 
'<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
lv_balsubt-subobject   = 
'<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>'.
lv_balsubt-subobjtxt   = 
'SAP Background job application sub object name'.

insert into balsubt values lv_balsubt.

if sy-subrc <> 0.
TEXT = 'Enter correct Subobject text'.
MESSAGE e000(l1) WITH text.
endif.

commit work.

If sy-subrc = 0.
TEXT = 'Application object created'.
MESSAGE s000(l1) WITH text.
endif.

********************************************
**Storing the Application Logging Object into
**Production Transport Request
********************************************
DATA: lt_e071         TYPE table of e071,
      lt_e071k        TYPE TABLE OF e071k,
      ls_e071         TYPE e071,
      ls_e071k        TYPE e071k,
      appobj_name     TYPE balobj_d,
      lv_temp_appname TYPE balobj_d,
      subobj_name     TYPE balsubobj,
	  i TYPE int4,
      rem TYPE int4.

DATA:
lo_len TYPE REF TO data.
FIELD-SYMBOLS:
          <lv_len> TYPE any.

appobj_name =
'<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
subobj_name =
'<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>'.

i = strlen( appobj_name ).
rem = 20 - i.
CREATE DATA lo_len TYPE c LENGTH rem.
ASSIGN lo_len->* TO <lv_len>.
<lv_len> = SPACE.

ls_e071-trkorr = trans_req_no      .
ls_e071-pgmid = 'R3TR'.
ls_e071-object = 'CDAT'.
ls_e071-obj_name = 'APPL_LOG'.
ls_e071-objfunc = 'K'.
APPEND ls_e071 TO lt_e071.


ls_e071k-trkorr = trans_req_no.
ls_e071k-pgmid  = 'R3TR'.
ls_e071k-object = 'TABU'.
ls_e071k-objname = 'BALOBJ'.
ls_e071k-MASTERTYPE = 'CDAT'.
ls_e071k-mastername = 'APPL_LOG'.
ls_e071k-viewname = SPACE.
ls_e071k-tabkey = appobj_name .
APPEND ls_e071k TO lt_e071k.
CLEAR ls_e071k.

ls_e071k-trkorr = trans_req_no.
ls_e071k-pgmid  = 'R3TR'.
ls_e071k-object = 'TABU'.
ls_e071k-objname = 'BALOBJT'.
ls_e071k-MASTERTYPE = 'CDAT'.
ls_e071k-mastername = 'APPL_LOG'.
ls_e071k-viewname = SPACE.
CONCATENATE 'E' appobj_name
INTO lv_temp_appname.
ls_e071k-tabkey = lv_temp_appname .
APPEND ls_e071k TO lt_e071k.
CLEAR ls_e071k.

*****************************
**Moving to TR**************
****************************

ls_e071k-trkorr = trans_req_no.
ls_e071k-pgmid  = 'R3TR'.
ls_e071k-object = 'TABU'.
ls_e071k-objname = 'BALSUB'.
ls_e071k-MASTERTYPE = 'CDAT'.
ls_e071k-mastername = 'APPL_LOG'.
ls_e071k-viewname = 'V_BALSUB'.

CONCATENATE appobj_name  subobj_name
INTO ls_e071k-tabkey in CHARACTER MODE SEPARATED BY <lv_len>.
APPEND ls_e071k TO lt_e071k.
CLEAR ls_e071k.
*********TR Movement Ends******************

ls_e071k-trkorr = trans_req_no.
ls_e071k-pgmid  = 'R3TR'.
ls_e071k-object = 'TABU'.
ls_e071k-objname = 'BALSUBT'.
ls_e071k-MASTERTYPE = 'CDAT'.
ls_e071k-mastername = 'APPL_LOG'.
ls_e071k-viewname = 'V_BALSUB'.
CONCATENATE 'E' appobj_name INTO appobj_name.
CONCATENATE appobj_name subobj_name
INTO ls_e071k-tabkey in CHARACTER MODE SEPARATED BY <lv_len>.

APPEND ls_e071k TO lt_e071k.
CLEAR ls_e071k.

CALL FUNCTION 'TRINT_APPEND_COMM'
  EXPORTING
   WI_EXCLUSIVE                       = 'X'
   WI_SEL_E071                        = 'X'
   WI_SEL_E071K                       = 'X'
   WI_TRKORR                          = trans_req_no
* IMPORTING
*   WE_KEYS_PHYSICAL_APPENDED          =
*   WE_OBJECTS_PHYSICAL_APPENDED       =
 TABLES
   WT_E071                            =  lt_e071
   WT_E071K                           =  lt_e071k
 EXCEPTIONS
   E071K_APPEND_ERROR                 = 1
   E071_APPEND_ERROR                  = 2
   TRKORR_EMPTY                       = 3
   OTHERS                             = 4 .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
ENDFORM.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %> 	
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6431]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1d492ec6-aef2-45a6-afb8-2d1f969baabf]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3552]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[90]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_RFC_ABAP_INSTALL_&_RUN]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3677daea-4b3f-4c9d-a301-6b2d7ad8c670]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6431]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0"  "-ABAP_PROGRAM_NAME=ZODI_RFC_ABAP_INSTALL_AND_RUN" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT ZODI_RFC_ABAP_INSTALL_AND_RUN.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp              TYPE rsimp, 
  wa_exp              TYPE rsexp, 
  wa_tables           TYPE rstbl, 
  cg_rep_tab          LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 


 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'MODE'. 
 wa_imp-TYP = 'SY-MSGTY'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'PROGRAMNAME'. 
 wa_imp-TYP = 'SY-REPID'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'FUNCTION'. 
 wa_imp-TYP = 'STRING'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'EXEC_AND_DEL'. 
 wa_imp-TYP = 'CHAR1'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_BACKGROUND'. 
 wa_imp-TYP = 'CHAR1'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_exp-parameter = 'ERRORMESSAGE'. 
 wa_exp-types  = 'X'. 
 wa_exp-dbfield  = 'SY-MSGV1'. 
 APPEND wa_exp TO  export_parameter. 
 wa_tables-parameter = 'PROGRAM'. 
 wa_tables-dbstruct  = 'PROGTAB'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'WRITES'. 
 wa_tables-dbstruct  = 'LISTZEILE'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_RFC_ABAP_INSTALL_AND_RUN' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
INSERT 'DATA: BEGIN OF listobj OCCURS 20.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'INCLUDE STRUCTURE abaplist.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: END OF listobj.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: mess(72),wrd(72),flag.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lin TYPE int4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: wa_file_return TYPE bapiret2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: systemedit  LIKE tadir-edtflag,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'sys_cliinddep_edit LIKE t000-ccnocliind.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''TR_SYS_PARAMS'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'systemedit          = systemedit'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'sys_cliinddep_edit  = sys_cliinddep_edit'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'OTHERS                   = 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = ''Error in TR_SYS_PARAMS''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = errormessage.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF systemedit EQ ''N''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = ''SAP System has status not modifiable''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = errormessage.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*MESSAGE e102(tk).'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sys_cliinddep_edit CA ''23''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = ''Changes to Repository not allowed''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = errormessage.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*MESSAGE e729(tk).'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF mode = ''F''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SYNTAX-CHECK FOR program'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE mess LINE lin WORD wrd.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF mess <> space.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = mess.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = errormessage.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-row = lin.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF mode = ''F''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'INSERT REPORT programname FROM program.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'COMMIT WORK AND WAIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF exec_and_del NE ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SUBMIT (programname) AND RETURN .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA lv_function TYPE rs38l_fnam.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DO 300 TIMES.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR lv_function.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT SINGLE funcname FROM tfdir INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_function WHERE  funcname  = function.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc = 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'flag = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WAIT UP TO 1 SECONDS.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDDO.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF flag NE ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ''ABAP_INSTALL_RUN failed to Execute Uploader Report''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = et_file_return-message.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF iv_background NE ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' DELETE REPORT programname.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA lv_func TYPE trobj_name.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_func = function.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FUNC_OBJECT_ACTIVATE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   object_name = lv_func'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  cancelled   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  OTHERS      = 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE ID sy-msgid'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TYPE sy-msgty NUMBER sy-msgno INTO mess'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH sy-msgv1 sy-msgv2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'sy-msgv3 sy-msgv4 .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = mess.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = errormessage.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WAIT UP TO 5 SECONDS.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6432]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5cdd4f6a-2bcb-4e52-a21c-fdfdc2352689]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3553]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_UPLOAD_INSTALL_WRAPPER]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8070a213-8c48-41a9-a1d5-ecbdcc23d8f1]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6432]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_UPLOAD_INSTALL_WRAPPER" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT ZODI_UPLOAD_INSTALL_WRAPPER.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp              TYPE rsimp, 
  wa_exp              TYPE rsexp, 
  wa_tables           TYPE rstbl, 
  cg_rep_tab          LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 

 CLEAR: wa_imp, 
        wa_exp, 
        wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'MODE'. 
 wa_imp-TYP = 'SY-MSGTY'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'PROGRAMNAME'. 
 wa_imp-TYP = 'SY-REPID'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'LV_TASK'. 
 wa_imp-TYP = 'TABNAME'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'FUNCTION'. 
 wa_imp-TYP = 'STRING'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'EXEC_AND_DEL'. 
 wa_imp-TYP = 'CHAR1'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_BACKGROUND'. 
 wa_imp-TYP = 'CHAR1'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_exp-parameter = 'ERRORMESSAGE'. 
 wa_exp-types  = 'X'. 
 wa_exp-dbfield  = 'SY-MSGV1'. 
 APPEND wa_exp TO  export_parameter. 
 wa_tables-parameter = 'PROGRAM'. 
 wa_tables-dbstruct  = 'PROGTAB'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'WRITES'. 
 wa_tables-dbstruct  = 'LISTZEILE'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_UPLOAD_INSTALL_WRAPPER' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
  DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
INSERT 'DATA: lv_grp    TYPE rzlli_apcl,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wait_bfr  TYPE i  VALUE 1,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wait_afr  TYPE i  VALUE 1,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'des       TYPE rfcdest.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''ZODI_RFC_ABAP_INSTALL_AND_RUN'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'mode           = mode'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'programname    = programname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'function    = function'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'exec_and_del = exec_and_del'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'iv_background = iv_background'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'program        = program'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'writes         = writes'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return = et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1. 
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6433]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b5c35eff-5a49-49cf-9e09-ae2c395868ef]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3554]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_ABAP_SYNTAX_CHECK]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c9ad1229-7d7b-4f2a-8196-3c74070de445]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6433]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_ABAP_SYNTAX_CHECK" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT Z_CREATE_ABAP_WRAPPER.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp              TYPE rsimp, 
  wa_exp              TYPE rsexp, 
  wa_tables           TYPE rstbl, 
  cg_rep_tab          LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix,
 t_version           TYPE cvers.

 CLEAR: wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_tables-parameter = 'PROGRAM'. 
 wa_tables-dbstruct  = 'PROGTAB'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_ABAP_SYNTAX_CHECK' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string .
INSERT 'DATA: mess(72),wrd(72).'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lin TYPE int4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: wa_file_return TYPE bapiret2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.

INSERT 'IF NOT program[] IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.

INSERT 'SYNTAX-CHECK FOR program'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE mess LINE lin WORD wrd.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF mess <> space.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = mess.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-row = lin.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = ''No syntax error''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6434]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a148da07-f653-4b5e-9751-ff6d99c56374]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3555]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[120]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_RFC_DELETE_FTP_FILE]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ce2ba664-8533-492a-98ce-7dc41a3f8982]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6434]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_RFC_DELETE_FTP_FILE" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=language?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-ABAP_PROGRAM_BODY=
REPORT z_delete_ftp_file.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp              TYPE rsimp, 
  wa_exp              TYPE rsexp, 
  wa_tables           TYPE rstbl, 
  cg_rep_tab          LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 

 CLEAR: wa_imp, 
        wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'IV_FILENAME'. 
 wa_imp-TYP  = 'BAPIEXT-VALUE'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_USER'. 
 wa_imp-TYP = 'BAPI0012_3-NAME'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_PWD'. 
 wa_imp-TYP = 'BAPI0012_3-NAME'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_HOST'. 
 wa_imp-TYP = 'CHAR35'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_PATH'. 
 wa_imp-TYP = 'CFDAT60'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_RFC_DELETE_FTP_FILE' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = 'Delete FTP File' 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
INSERT '*****Start of FTP Specific*****'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*Calling FTP program'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TYPES: BEGIN OF gs_text,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  line(356) TYPE c,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  END OF gs_text.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA:'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'gc_error   VALUE ''E'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'gc_success VALUE ''S'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_result TYPE string,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'gt_result  TYPE TABLE OF gs_text.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  DATA: lv_hdl TYPE i,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lv_cmd(120) TYPE c,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lv_slen TYPE i,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lv_line TYPE i .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  DATA: lc_dest TYPE rfcdes-rfcdest VALUE ''SAPFTPA'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lc_key TYPE i VALUE 26101957,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lc_pasv VALUE ''X'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lc_cmd1(20) TYPE c VALUE ''set passive on'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lc_cmd2(5) TYPE c VALUE ''del''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  TYPES: BEGIN OF ls_blob,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  line(300) TYPE c,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  END OF ls_blob.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  TYPES: BEGIN OF ls_text,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  line(300) TYPE c,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  END OF ls_text.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  DATA: lt_txtdata TYPE TABLE OF ls_text.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  DATA: wa_txtdata LIKE LINE  OF lt_txtdata.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  DATA: lt_result  TYPE TABLE OF ls_text,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '        lw_result  TYPE ls_text.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  DATA: t_vers TYPE cvers .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  DATA: path TYPE char35.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT SINGLE * FROM cvers INTO t_vers'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WHERE component = ''SAP_ABA''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_slen = STRLEN( iv_pwd ).'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF t_vers-release >= ''700''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*To Scrammble password for ECC 6.0'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''HTTP_SCRAMBLE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    SOURCE      = iv_pwd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    sourcelen   = lv_slen'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    key         = lc_key'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    destination = iv_pwd.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''SCRAMBLE_STRING'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    SOURCE        = iv_pwd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   TARGET        = iv_pwd.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '          .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_CONNECT'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   user            = iv_user'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   password        = iv_pwd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   host            = iv_host'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   rfc_destination = lc_dest'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   handle          = lv_hdl'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   not_connected   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   OTHERS          = 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_error.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF NOT lc_pasv IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'REFRESH lt_result.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cmd  = lc_cmd1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_COMMAND'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  handle        = lv_hdl'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  command       = lv_cmd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  data          = lt_result'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' tcpip_error   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' command_error = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' data_error    = 3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_error.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CONCATENATE lc_cmd2 iv_filename'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'INTO lv_cmd SEPARATED BY '' ''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'REFRESH lt_result.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CONCATENATE ''cd'' iv_path INTO path SEPARATED BY space.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_COMMAND'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' handle        = lv_hdl'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' command       = path'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  data          = lt_result'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' tcpip_error   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'command_error = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'data_error    = 3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc NE 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_error.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_success.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''Directory changed successfully''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_COMMAND'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' handle        = lv_hdl'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' command       = lv_cmd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' data          = lt_result'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' tcpip_error   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' command_error = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' data_error    = 3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc NE 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_error.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_success.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''Data Transfer Successful''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_DISCONNECT'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' handle = lv_hdl.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''RFC_CONNECTION_CLOSE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' destination = lc_dest'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' OTHERS      = 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_error.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message = ''No data Available''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_DISCONNECT'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  handle = lv_hdl.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''RFC_CONNECTION_CLOSE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  destination = lc_dest'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  OTHERS      = 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_error.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6435]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[bde29fd7-0873-4e29-8e76-0d68446b97d7]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3556]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[317]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[310]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Retrieve Columns]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c7a2906b-91e6-481d-8db9-74917033dbda]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6435]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Command Name: Retrieve Columns
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.BatchUpdateException;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Iterator;

PreparedStatement batchInsert = null;

try {
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"inserting data into table SNP_REV_COL - table column started...."} );
	Hashtable sF = odiSAPERPMetadataHelper.sSAPFields;
	sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Columns -  sF.size(): "+sF.size()} );

	if(sF != null && sF.size() > 0) {
		<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
			batchInsert = repoConnection.prepareStatement("insert into SNP_REV_COL(I_MOD,TABLE_NAME,COL_NAME,COL_HEADING,COL_DESC,DT_DRIVER,POS,LONGC,SCALEC,BYTES,COL_MANDATORY,CHECK_FLOW,CHECK_STAT) values (?,?,?,?,?,?,?,?,?,?,?,?,?)");
      <%}else { /*if ODI 12C*/%>
			batchInsert = repoConnection.prepareStatement("insert into SNP_REV_COL(MOD_GUID,TABLE_NAME,COL_NAME,COL_HEADING,COL_DESC,DT_DRIVER,POS,LONGC,SCALEC,BYTES,COL_MANDATORY,CHECK_FLOW,CHECK_STAT) values (?,?,?,?,?,?,?,?,?,?,?,?,?)");
       <%}%>
		Iterator itr =  sT.iterator();
		SAPSearchDetail sapTable = null;
		while(itr.hasNext()) {
			sapTable = new SAPSearchDetail();
			sapTable = (SAPSearchDetail)itr.next(); 
			String tableName = sapTable.name + "  "+sapTable.desc;
			if(tableName.length() > 100) {
				tableName = tableName.substring(0, 99);
			}
			sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Columns -- tableName: "+tableName} );
			ArrayList fieldsList = (ArrayList) sF.get(tableName.substring(0,tableName.indexOf(" ")).trim());
			sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Columns -  fieldsList.size(): "+fieldsList.size()} );
			Iterator fieldItr = fieldsList.iterator();
			int i = 0;
			SAPField sField = null;
			while(fieldItr.hasNext()) {
				sField = new SAPField();
				sField  = (SAPField) fieldItr.next();
                <%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
					batchInsert.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
				<%}else { /*if ODI 12C*/%>
					batchInsert.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
				<%}%>
				batchInsert.setString(2, tableName.trim()); //TABLE_NAME
				String fieldName = sField.name;
				if(fieldName.length() > 100) {
					fieldName = fieldName.substring(0, 99);
				}
				batchInsert.setString(3, fieldName); //COL_NAME
				String shortDesc = sField.desc;
				<%if (isOdi10gOr11g) { /*if ODI 10g or 11g*/%>
					if(shortDesc.length() > 35) {
						shortDesc = shortDesc.substring(0, 34);
					}
				<%}else { /*if ODI 12C*/%>
					if(shortDesc.length() > 128) {
						shortDesc = shortDesc.substring(0, 127);
					}
				<%}%>
				batchInsert.setString(4, shortDesc); //COL_HEADING (short desc)
				batchInsert.setString(5, sField.desc); //COL_DESC
				batchInsert.setString(6, sField.dataType); //DT_DRIVER
				batchInsert.setInt(7, new Integer(i).intValue()); //POS
				batchInsert.setInt(8, new Integer(sField.length).intValue()); //LONGC
				batchInsert.setInt(9, new Integer(sField.decimal).intValue()); //SCALEC
				batchInsert.setInt(10, 0); //BYTES
                //sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Columns -- Column name: "+sField.name} );
                //sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Columns --  sField.dataType: "+ sField.dataType} );
                //sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Columns --  sField.length: "+ sField.length} );
                //sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[] {"Retrieve Columns --  sField.decimal: "+ sField.decimal} );
				if(sField.notnull.equalsIgnoreCase("X")) {
					batchInsert.setString(11, "1"); //COL_MANDATORY
				}else {
					batchInsert.setString(11, "0"); //COL_MANDATORY
				}
				batchInsert.setString(12, "1"); //CHECK_FLOW
				batchInsert.setString(13, "1"); //CHECK_STAT
				batchInsert.addBatch();
				i++;
			}//end of inner while(fieldItr.hasNext()) 
		} //end of while(itr.hasNext()) {
		//execute the insert statement
		batchInsert.executeBatch();
		repoConnection.commit();
		batchInsert.close();
		sapLogger.fine("ODIKM-SAPERP-RKM-10000","",new Object[]{"Data inserted into table SNP_REV_COL table successfully."} );
	}//end of if(sF != null && sF.size() > 0) {
} catch (BatchUpdateException buexp) {
	sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[] {new Date(), "Exception: Retrieve Columns - BatchUpdate Count: "+buexp.getMessage()} );
	OdiSapUtil.throwODIException(buexp.getMessage());
} catch(Exception e) {
	sapLogger.severe("ODIKM-SAPERP-RKM-10000",new Object[] {new Date(), "Retrieve Columns - SQL Exception: "+e.printStackTrace()} );
	OdiSapUtil.throwODIException(e.getMessage());
} finally {
	batchInsert = null;
} //end of finally block]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a6c08dab-b14c-462e-9892-5f65d860e1b5]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3530]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1799]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ab790c8b-05d8-4cee-913b-3aee69108728]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3530]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1801]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ff2192f6-c87c-4913-9430-b11ee0a49373]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3530]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1803]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9ffd2411-6061-4501-8c85-a2f57a885824]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3530]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d48f2b02-9ceb-4290-b603-e2455edd309d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3530]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1791]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[914da27d-0e61-4902-80b3-d202c8475bfb]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3530]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1800]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[0ec087ab-98cc-41f2-8c0d-764fd694a8c6]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3532]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[73d916fb-cbb6-40ea-a4c1-c799227cf226]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3533]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b24f89c4-e0c1-48f6-a6c6-69c7bbb29869]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3534]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9cc07709-3445-4990-9d97-2cfe1b3afbae]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3535]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3a1061d2-abb4-47a3-9017-e1f0e7de30d4]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3536]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[8baf7a7e-7c9e-4345-ba4b-0d82e165ec26]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3538]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[27fd1199-5321-4601-909d-f1a715bb3293]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3539]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[bd81d873-a908-448a-83ff-7bc46a00fe9b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3540]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9b2e9fc0-0c78-4617-a9a0-8b0eb1aecd33]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3541]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[102fd8e8-d40e-4a56-8898-0759924a9a15]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3542]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e486560f-53ed-4c5d-8db6-e78d9fe50c94]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3548]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1799]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[78516ea1-911d-46a3-9927-1afec147a567]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3548]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1801]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2ca3d712-a8f4-40bc-94dc-f8b3a65ca04b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3548]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1803]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[263126e5-347d-4721-9955-43fdbde56300]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3548]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2a9065f6-b4eb-437e-b3f3-dd0f9420421e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3548]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1791]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[56bf4e91-449b-41be-b9ad-8591f4689569]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3548]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1800]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[329c6a12-383b-4ad9-a915-62c6acdc9fb2]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3550]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ac27db03-4596-4e72-9232-35631b07a452]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3551]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[bd6e7afd-b9b2-4725-91fa-9b21974ec278]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3552]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[f21b6320-86be-4eec-b7bf-4697d7b79892]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3553]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[837293e0-7783-4d09-8587-e2dedacdab2a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3554]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c2bf22af-2a2f-48e2-bebb-abceee83b4f2]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3555]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1802]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_PROJECT.1]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[236fd394-6f34-48ff-9081-6e4dd9bea0f8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6382]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0ae95189-6a0d-47e8-8341-158e2d7bdb52]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.317]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[87612e7e-0b22-4bbe-b490-dbc083a38497]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6383]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9622e612-c5db-4841-8620-3f421fc8a212]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6385]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7290d65f-5d63-4559-a657-245b66a290e5]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6384]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[deb9819c-ccec-4ec3-b2f3-73bf33df4a1d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.111]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6387]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[118de094-01ef-4acc-9fe7-e5ab6f006fd5]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6386]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[30204ac7-5bdd-43ba-bc29-6adbc902582a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.110]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6388]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a5ddee7b-d494-4589-82e0-341fd430b298]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6389]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7cfe74dc-b537-4c3d-9e90-7f8554615dea]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6390]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b0390553-4fd7-4374-a9e9-6f1c98cd07e6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6391]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[04329f99-b571-40ec-ba25-5f17a0b4f148]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6392]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[712333aa-2359-434d-8272-7e954011df77]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6393]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7aee88d8-3379-4ab4-a927-f037cb7d4d98]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6394]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7a7881a3-e253-4127-ad01-b04c4122fbf8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6395]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fdf527b0-87d9-492a-95c9-343f7007e938]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6396]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[53338555-80d3-4b36-a6b2-3ddec9d562bc]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6397]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[dbca511d-b717-45e0-bd36-7ca0bf87e0f3]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6398]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0a99a93e-18b4-4b71-97b3-1b9b3b6c68c8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6399]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e0c78aae-4431-459d-a1b8-cedf9ce61c12]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6400]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[31cd747f-510d-446d-9639-49e1e1808489]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6401]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4c1f1e1c-48d2-477b-a8a0-7414930cdf87]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6402]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[83a2576b-1a69-46a5-98ef-ee3140009c72]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6403]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2691b05b-7bf0-4a43-929f-cea69c651066]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6404]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3ae9e844-2832-4740-9aa8-7238fce5d67f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6405]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b6de7ee9-f3fa-4d90-8fb2-dd3014d2ecce]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.103]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6406]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7eb21585-6a16-4bd0-a978-246f6b311d5e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6407]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8e4db2c8-19d2-496f-a26d-319d1b1ac209]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6408]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[839c8a44-7b7e-45db-bb85-040d098f4245]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6409]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7d8da610-bf8f-434a-966e-927d034803e8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6410]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c6b257ab-a09d-4475-8081-1d2eb595186f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6411]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[376fecc2-3996-4501-805d-d0c161ef420d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.102]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6412]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[12c40a1d-a6d9-49c3-808f-b2fc8825aaa6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6413]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[81fea430-9dd4-458b-aeae-de5d9ddb823a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6414]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0294b684-38ee-454a-bd79-8d304ef9ace4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6415]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[18768573-ff7a-476c-980d-7f801c4d300a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6416]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9d6c6d54-2401-4212-b979-5431adf39d02]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6417]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[09888623-e40e-4905-8046-269ef025d930]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6418]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5b5adb5a-57ea-44e0-8a34-c4adbd067973]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6419]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[49f9d3d7-6c2c-4b6c-9b0b-5ad641e43f77]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6420]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6efeffe0-fff6-4b5e-af57-d49f418b7ebd]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6421]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e792fa9f-0074-45dc-b6c9-3dd0f7bb5c79]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6422]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b6e633e9-3229-4c35-8d10-73499193ce5e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6423]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[427dae2b-a48a-49ad-95e7-187e40a36d66]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6424]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[01447f75-5607-4e6d-8a43-ea6054142dfd]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6425]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b1ed362e-3eb1-4902-895b-289c6b19a974]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6426]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0e4ec224-2ef9-4f52-8498-f94e47ca2a10]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6427]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f3d6ac81-321a-4cfc-b562-4fef3e5afa36]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6428]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[549bda54-9aeb-4f39-a63e-4d4ba0a4b59c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6429]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c65299b3-0b3e-45e4-aed4-3f0d247ca96d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6430]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[05f6dc4e-2c6d-423e-9fb4-bdf4eb56d58b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6431]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3677daea-4b3f-4c9d-a301-6b2d7ad8c670]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6432]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8070a213-8c48-41a9-a1d5-ecbdcc23d8f1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6433]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c9ad1229-7d7b-4f2a-8196-3c74070de445]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6434]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ce2ba664-8533-492a-98ce-7dc41a3f8982]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6435]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c7a2906b-91e6-481d-8db9-74917033dbda]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1799]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6939586d-8d0a-444b-95de-c2f67c788601]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.GET_FOREIGN_KEYS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3530]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1b879fff-05b8-47f5-85c6-6d1df618d50b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Set Flex Fields]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.15]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1801]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b7d7df4a-893f-4631-af4b-b238d9a56dd4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.GET_PRIMARY_KEYS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1803]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ca295e60-cdff-414d-8ef0-24a2083692d9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.UPLOAD_ABAP_BASE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1802]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[220cefaa-41a1-4db1-8f9b-f7ae98afd1fa]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.UPLOAD_ABAP_CODE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1791]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[118c2917-bcde-46af-9ad3-f2188fe2e696]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.USE_GUI]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.7]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1800]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c767e4d8-f183-4590-b5e4-9b2ae8f163ee]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.GET_INDEXES]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.11]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3532]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e536d1dd-5dee-4195-a2dc-c15dd77d69b0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install ZODI_APPLOG]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.19]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3533]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8f6043d7-8700-4a53-a128-aa665caa4a20]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install ZODI_LOGMSG_ADD_TASK]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.28]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3534]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a69eda9b-a7d6-4086-8560-0064f56e03c9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install ZODI_LOGMSG_ADD]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.23]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3535]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[351ba23e-c540-4902-8577-579728bc3def]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install ZODI_BG_CONTROLLER]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.26]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3536]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9e790840-e27e-423e-b1a3-ef803f0b8b29]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install ZODI_BG_REPORT_SAVE_ACT]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.31]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3538]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6fbf4593-7225-4007-8af3-df7dd7f3d981]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install Get Module RFC]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.22]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3539]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2b365bc7-6197-466a-9d41-f6eb7b353d12]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install Get Tables RFC]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.22]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3540]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[96d6d66f-f0a1-4421-ab83-b3269e5bc049]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install Get Fields RFC]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.22]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3541]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[481b4e8e-b24c-44ab-aa94-28670eb6b1f1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install Get Table Keys RFC]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.26]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3542]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c3c2a657-aff7-4cc7-873b-5a0d029c2b2a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install Get Table Indexes RFC]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.29]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3548]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3e5339dc-0d21-47ad-ba99-13334f3e64a4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Create Java Classes]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.19]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3550]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[482e8813-35ff-4a63-8017-56ad896ccb19]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install Base for Dev Components]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.31]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3551]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8d871bed-17a1-4a4d-b160-13a980e09bd0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install Base for Prod Components]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.32]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3552]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1d492ec6-aef2-45a6-afb8-2d1f969baabf]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install ZODI_RFC_ABAP_INSTALL_&_RUN]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.35]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3553]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5cdd4f6a-2bcb-4e52-a21c-fdfdc2352689]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install ZODI_UPLOAD_INSTALL_WRAPPER]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.35]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3554]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b5c35eff-5a49-49cf-9e09-ae2c395868ef]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install ZODI_ABAP_SYNTAX_CHECK]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.30]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3555]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a148da07-f653-4b5e-9751-ff6d99c56374]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP ERP.Install ZODI_RFC_DELETE_FTP_FILE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.11.32]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[54]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[81]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[54]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[11]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.09]]></Field>
</Object>
</SunopsisExport>
