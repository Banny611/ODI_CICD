<?xml version="1.0" encoding="UTF-8"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.09" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="FM0HgISuhDyERqhAkCExfX9D4P/hbPno5yne73s5Jyc=" keyVect="OfEWlsvqQ43y1+s3nTCrEg==" exportKeySalt="27c7c00e-152c-41d6-b7ee-4effacc812fe" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String">null</Field>
	<Field name="DelegateClass" type="java.lang.String">null</Field>
	<Field name="DelegateScript" type="java.lang.String">null</Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b8ccebaa-8933-4c27-af44-2b3fefbf4364]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String"><![CDATA[S]]></Field>
	<Field name="IndSuppSetBased" type="java.lang.String">null</Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String">null</Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[6330]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String">null</Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="KmTechno" type="java.lang.String">null</Field>
	<Field name="KmVersion" type="java.lang.String"><![CDATA[42]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String">null</Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[1417544644]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String">null</Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String">null</Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[RKM SAP BW]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[KR]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b19f3a9e-205d-4a18-bc0c-d7290d862461]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6330]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Component: RKM SAP BW/BI
Author: Oracle

Description :
- Reverse engineering Knowledge Module to retrieve SAP BW Infocubes, Infoobjects, ODS data targets and Open Hub Tables.
- RKM provides a Tree Browser UI for selecting Infocubes, Infoobjects, ODS data targets and Open Hub Tables.

For first-time users please follow the Getting-Started-Guide for ODI SAP BW on the ODI OTN documentation page for pre-requisites, detailed installation instructions and examples.

Please also see ODI Application Adapter documentation for ODI AA for SAP BW.

The list of supported SAP versions can be found in the ODI Certification matrix on OTN.

This KM requires ODI SAP Open Tool version 10.1.3.22 (odi-sap.jar) or higher.

Restrictions:
- The mask of tables to reverse must not be empty, and at least contain the '%' character.
- The tab Selective reverse cannot be used with this knowledge module.
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Edit Command]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_TRT_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e58ce49a-b720-4e09-b18b-9919f8579814]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1775]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[USE_GUI]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[With or Without MetaData GUI]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[76021f4b-7e97-411b-8331-ec9af1eb3904]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6331]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[UPLOAD_ABAP_CODE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag for RKM RFC to UPLOAD]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[10665fc6-c42a-4194-a25d-f291bf847c88]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6331]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Deprecated:]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[User Exit help]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_UE_HELP]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e32059ae-f7db-4e2c-8db6-374d8e7d9609]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6332]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1777]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[UPLOAD_ABAP_BASE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to install SAP base structures]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9c5f393a-3023-4390-ba8b-03758b1beedb]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6332]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Deprecated: Flag to install SAP base structures]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[27514acb-a579-49dc-bebd-526fa167cf24]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1778]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[200]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[INFOOBJECT_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[InfoObject to reverse]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f708d8b1-d59a-4e59-aa09-6c442c99ed8e]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1779]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[210]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[INFOCUBE_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[InfoCube to reverse]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[23b221c0-ed34-4236-a8ab-fb7d52bff38b]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1780]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[220]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[ODS_DSO_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[ODS/DSO to reverse]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[17f92314-bf20-4e8f-82ed-5d014dd9ca5d]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1781]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[230]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[OHD_TABLE_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String">null</Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[T]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5eb27158-e37c-47a1-8195-a6329a7929e3]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1782]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[300]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[SAP_ODI_LKM_POOL_<%=odiRef.getInfo("SRC_DSERV_NAME")%>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_CONNECTION_POOL]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Connection pool name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c1f06d25-2cab-49d8-b378-c1b77d55dc0c]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1783]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[310]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[10]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_CONNECTION_POOL_SIZE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Connection pool size]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b582e816-3a47-4020-94bf-30a57c73707e]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6333]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1784]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[320]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_FGR]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_FUNCTION_GROUP_ODI_DEV]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Function Group Name in Development]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d341f78e-1258-4fed-9e81-08bcb0e6fc0a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6333]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[The name of the Development SAP function group where all generated ABAP programs will be uploaded.

If non-default value has to be used, the specified function group must not exist prior to RKM installation. It will be created automatically during the RKM installation."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3f846854-31b1-46d9-8e39-0e5b271d5223]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6334]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1785]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[330]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_FGR_PROD]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_FUNCTION_GROUP_ODI_PROD]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Production SAP FG Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4b2f0376-87cd-4ba6-91ca-9289481424b7]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6334]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[The name of the Production SAP function group where all generated ABAP programs will be uploaded.

If non-default value has to be used, the specified function group must not exist prior to RKM installation. It will be created automatically during the RKM installation."

Only applies if KM option BACKGROUND is set to "No". Please see KM option SAP_REPORT_NAME_PREFIX]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b7bb5a97-98ee-4347-af5e-a15047681901]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6335]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1786]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[750]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_RKM_PCKG]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_PACKAGE_NAME_ODI_DEV]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[ODI SAP dev package name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[41272b81-b67e-464c-9609-367399594bfc]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6335]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines the SAP package name used for all ODI objects required during ODI SAP development.

This SAP package name must not exist prior to first-time installation of this RKM.

Only change if requested by SAP administrator and checked with ODI product support or for backwards compatibility:

For compatibility with ODI SAP ERP|BW Adapter installations prior to Build 32|23 please set to ZODI_DEVCLASS | ZODIBW_PCKG
Default values: ZODI_RKM_PCKG]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5a793efe-8ae3-4686-bebf-620ef1521178]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6336]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1787]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[760]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_LKM_PCKG]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_PACKAGE_NAME_ODI_PROD]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[ODI SAP prod package name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b5b69005-6b4e-4f8b-b837-5d46a44389dd]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6336]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines the SAP package name used for all ODI objects required during ODI SAP production use.

This SAP package name must not exist prior to first-time installation of this RKM.

Only change if requested by SAP administrator and checked with ODI product support or for backwards compatibility:

For compatibility with ODI SAP ERP|BW Adapter installations prior to Build 32|23 please set to ZODI_DEVCLASS | ZODIBW_PCKG

Default values: ZODI_LKM_PCKG]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4521de58-d3b1-4316-82bd-35b675ad76c1]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1788]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[770]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[SAP]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_TRANSPORT_LAYER_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Transport Layer]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a2d67a18-9b44-4d1c-8932-84fbda5e7a14]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6337]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1789]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[780]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_APPOBJ]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_APPLICATION_OBJECT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Application object name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[59ee685c-00d3-4caf-b84b-9a37480efdf2]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6337]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SAP Background job application object name.

Default : ZODI_APPOBJ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d5649ac1-131b-4dd6-8ff8-05d5d3a4a260]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[6338]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1790]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[790]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_SUBOBJ]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_APPLICATION_SUB_OBJECT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Application sub object name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a41a9181-5344-472c-8ad8-aedb05edf486]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6338]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SAP Background job application object name.

Default : ZODI_SUBOBJ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6339]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a4db331c-6fc4-4b93-966b-0b580031729e]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3482]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[500]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Set FlexFields]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[92437cb1-fa45-4ee9-a3d4-51841f63d4f8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6339]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Set FlexFields
<% if (isOdi10gOr11g) { /* Code for ODI 10g and 11g */ %>
	snpHandler.storeFlexFields();
<% } %>

]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Source Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[COL_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6340]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[080ca614-026d-43cd-ba99-267b5ba89b49]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3483]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[510]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Release Resource]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[30a4cdc4-83e1-44b5-9e40-d24835f47632]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6340]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Release resources
	//adapter.disconnect();
snpHandler.closeOracleConnection();
sSapBwVersion = null;
logFile = null;
adapter = null;
snpHandler = null;]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6341]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b5cef280-864b-42da-b7cd-561df8d066a1]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3484]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[10]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java Logger Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9bd5549f-4f30-4700-bdf6-ded90639b5cc]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6341]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
//import java.io.IOException;
import java.io.PrintStream;
import java.util.Locale;
import java.util.ResourceBundle;
//import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
//import java.util.logging.SimpleFormatter;


public class OdiSAPBWLogger {
	
	private Logger mLogger = null;
	private PrintStream mLogPs = null;
	//private Logger mLogPsNew = null;
	//static private FileHandler fileTxt;
	//static private SimpleFormatter formatterTxt;
	private String resourceMessage = "";
	private String baseResourceName = null;
	private ResourceBundle messages = null;
	private LogRecord record = null;
	private static OdiSAPBWLogger loggerInstance = null;
	private ResourceBundle resourceBundle = null;
	private String logFile = "";

	/** For backwards compatibility:
    The OT should use file based logging as long as the "LOG_FILE" parameter is provided. Even in 12c!
    The KM will suppress this parameter, as soon as gen'ed in 12c. 
	 * @throws OpenToolExecutionException 
	*/
	public static OdiSAPBWLogger getLogger(String logFileName, ResourceBundle resourceBundle) throws Exception {
		//Check the instance of the singleton class
		if (loggerInstance == null) {
		    resourceBundle = resourceBundle;
			loggerInstance = new OdiSAPBWLogger(logFileName, resourceBundle);
		} 
		return loggerInstance;
	}
	
	public static OdiSAPBWLogger getLogger()throws Exception {
		return loggerInstance;
	}
	
	public OdiSAPBWLogger(String logFileName, ResourceBundle rBundle){
		this.resourceBundle = rBundle;
		this.logFile = logFileName;
		initLogger();
	}
	
  /**
  * Initialize logger
  */
 private void initLogger() {
  try {
   // Do we have a logger?
   if (mLogger == null && mLogPs == null) {
    // Has the LOG_FILE_NAME parameter been passed to this OT?
    // If so we assume that the OT is used in a 10g or 11g version of ODI 
    // and we use file based logging
    if (logFile != null) {
     // Empty file name provided? => use 12c logging 
     if (logFile.equals("")) {
      // This OT executes in ODI 12c or later and we can use ODI's logger
      mLogger = Logger.getLogger("oracle.odi.km");
     } else {
      // Otherwise use given log file name for ODI 10g and 11g
      mLogPs = new PrintStream(new FileOutputStream(logFile));
     }
    } else {            
     // This OT executes in ODI 12c or later and we can use ODI's logger
     mLogger = Logger.getLogger("oracle.odi.km");
    }
   }
  } catch(FileNotFoundException ex) {
   throw new RuntimeException("Exception during Logger initialization: "+ ex.getMessage());
  } 
 }//end of initLogger() method
	    
	    
	private void log(Level level, String messageId, String message, Object[] args) {
		//record.setResourceBundle(new OdiSapOTLoggerResourceBundle(messageId, message));
	//	baseResourceName = "sap_rkm_bw";
	//	messages = ResourceBundle.getBundle("oracle/odi/sap/km/"+baseResourceName, Locale.getDefault(), this.caller.getClass().getClassLoader());//class loader changed due to 12c issue
	//	messages = ResourceBundle.getBundle("oracle/odi/sap/km/"+baseResourceName, Locale.getDefault(), this.getClass().getClassLoader());
		record = new LogRecord(level, messageId);
		record.setResourceBundle(resourceBundle);
		record.setParameters(args);
	//	record.setMessage(message);
		// Are we using a logger?
		if (mLogger != null) {
			mLogger.log(record);
		};
		// Are we using a log file?
		if (mLogPs != null) {
			String result = record.getLevel() + ": "+ record.getResourceBundle().getString(messageId)+ ": ";
	        	
			Object[] objParams = record.getParameters();
			if (objParams == null)
				result += "<null>\n";
			else
				for (int i = 0; i < objParams.length; i++)
					result += objParams[i].toString() + ": ";
			mLogPs.println(result);
	        	
		//	mLogPs.println(result);
			//mLogPs.println(record.toString());
		}
	}//end of log() method
	    
	/**
	 * Return resource string
	 * @param messageId
	 * @return
	 */
	private String getResourceString(String messageId) {
		// existing code to retrieve string from property file
		if (resourceMessage.equalsIgnoreCase("!!! BUNDLE " + baseResourceName + " !!!")) {
			return resourceMessage;
		} else {
			try {
				return messages.getString(messageId);
			} catch (Exception e) {
				//sapLogger.log(sapLogger.INFO, "Exception in getResourceString() -----: "+e);
				return "### KEY " + baseResourceName + " / " + messageId + "###"; //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$
			}
		}
	}//end of method
	    
	public void setMessages(String resourceMsg) {
		this.resourceMessage = resourceMsg;
	}
	    
	public void severe(String messageId, Object[] args) {
		// message text must be retrieved from resource file
		log( Level.SEVERE, messageId, getResourceString(messageId), args );
	}//end of method
	    
	public void warn(String messageId, Object[] args) {
		// message text must be retrieved from resource file
		log( Level.WARNING, messageId, getResourceString(messageId), args );
	}//end of method
	    
	public void fine(String messageId, String message, Object[] args) {
		// message text for trace messages is not externalized 
		log( Level.FINE, messageId, message, args );
	}//end of method
	    
	    
}//end of inner class _OdiLog

//**** Start of OdiSapUtil class *********//


/**
 * @(#)OdiSapUtil.java  1.00 10/30/2013
 *
 * Application : ODI SAP Knowledge Modules
 * Module      : SAP ERP Adapter
 * Author(s)   : 
 **/

/**
 * <b>OdiSapUtil</b> class is a data structure of all utilities to be used in RKM
 */
public class OdiSapUtil {

	// Check the ODI Release
	public static boolean isOdi10gOr11g(){
		//return <%=odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")%>;
		return true;
	}
			
	public static void throwODIException(String message)
	{
		if(isOdi10gOr11g()){			
			throw new RuntimeException(message);
		}else{
			throw new OdiKMException(message);
		}
	}

}
//end of main class -- OdiSapUtil]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6342]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e3ac6964-bf7f-4d93-bf6a-a50876e5bdb9]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3485]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[340]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_INFOAREA_GETLIST]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6825d78a-9ae9-4ab9-bd91-1de16215a21a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6342]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_INFOAREA_GETLIST" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-ABAP_TABLE_PARAMETERS=ET_INFOAREA_LIST,ZIAREA_S_LIST;ET_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
TYPES: BEGIN OF ty_infoname,
infoarea   TYPE rsinfoarea,
infoarea_p TYPE rsinfoarea,
infoarea_c TYPE rsinfoarea,
infoarea_n TYPE rsinfoarea,
END OF ty_infoname.

TYPES: BEGIN OF ty_infotext,
infoarea TYPE rsinfoarea,
txtlg TYPE rstxtlg,
END OF ty_infotext.

DATA: wa_infoname TYPE ty_infoname,
it_infoname TYPE TABLE OF ty_infoname,
wa_infotext TYPE ty_infotext,
it_infotext TYPE TABLE OF ty_infotext.

DATA: BEGIN OF gt_message,
msgty LIKE sy-msgty,
msgid LIKE sy-msgid,
message LIKE sy-msgli,
msgno LIKE sy-msgno,
msgv1 LIKE sy-msgv1,
msgv2 LIKE sy-msgv2,
msgv3 LIKE sy-msgv3,
msgv4 LIKE sy-msgv4,
END OF gt_message.
DATA: gc_msgclass(15) TYPE c VALUE 'ZODI_MSGCL'.
DATA: gc_error VALUE 'E'.
DATA: gc_success VALUE 'S'.

DATA : gt_return  TYPE bapiret2.

SELECT infoarea infoarea_p infoarea_c infoarea_n
INTO TABLE it_infoname FROM rsdarea 
WHERE objvers = 'A'.
if sy-subrc <> 0.
et_return-type = 'E'.
et_return-message = 'Infoareas do not exist'.
append et_return.
exit.
endif.
SELECT infoarea txtlg INTO TABLE it_infotext
FROM rsdareat
FOR ALL ENTRIES IN it_infoname
WHERE infoarea = it_infoname-infoarea 
AND langu = sy-langu.
IF it_infoname IS INITIAL.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 000.

CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return-message TO et_return.
ELSE.

LOOP AT it_infoname INTO wa_infoname.
READ TABLE it_infotext INTO wa_infotext
WITH KEY infoarea = wa_infoname-infoarea.
IF sy-subrc = 0.
et_infoarea_list-infoarea_desc 
= wa_infotext-txtlg.
ENDIF.
et_infoarea_list-infoarea = wa_infoname-infoarea.
et_infoarea_list-infoarea_p 
= wa_infoname-infoarea_p.
et_infoarea_list-infoarea_c
= wa_infoname-infoarea_c.
et_infoarea_list-infoarea_n
= wa_infoname-infoarea_n.
APPEND et_infoarea_list.
CLEAR: wa_infoname,et_infoarea_list.
ENDLOOP.

CLEAR gt_message.
gt_message-msgty = gc_success.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 005.

CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return-message TO et_return.

ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Target Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[DEF_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6343]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3607eaab-d52d-466d-a49b-76f1fd72d77a]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3486]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[350]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_INFOAREA_GETDETAILS]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d7a710fe-4be6-4f79-8cdd-46330bd5c6a6]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6343]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_INFOAREA_GETDETAILS" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_INFOAREA,RSDAREA-INFOAREA;" "-ABAP_TABLE_PARAMETERS=ET_IAREA_OBJ,ZIAREA_S_DETAILS;ET_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
TYPES: BEGIN OF ty_rsdodso,
odsobject TYPE rsdodsobject,
END OF ty_rsdodso.
TYPES: BEGIN OF ty_rsdodsot,
odsobject TYPE rsdodsobject,
txtsh     TYPE rstxtsh,
END OF ty_rsdodsot.
TYPES: BEGIN OF ty_rsdcube,
infocube TYPE rsinfocube,
END OF ty_rsdcube.
TYPES: BEGIN OF ty_rsdcubet,
infocube TYPE rsinfocube,
txtsh     TYPE rstxtsh,
END OF ty_rsdcubet.

TYPES: BEGIN OF ty_rsdchabas,
chabasnm TYPE rschabasnm,
infoarea TYPE rsinfoarea,
END OF ty_rsdchabas.

TYPES: BEGIN OF ty_rsdiobc,
infoobjcat TYPE rsinfoobjcat,
END OF ty_rsdiobc.

TYPES: BEGIN OF ty_rsdiobciobj,
iobjnm TYPE rsiobjnm,
END OF ty_rsdiobciobj.

DATA: wa_rsdodso TYPE ty_rsdodso,
it_rsdodso TYPE TABLE OF ty_rsdodso,
wa_rsdcube TYPE ty_rsdcube,
it_rsdcube TYPE TABLE OF ty_rsdcube,
wa_rsdodsot TYPE ty_rsdodsot,
it_rsdodsot TYPE TABLE OF ty_rsdodsot,
wa_rsdcubet TYPE ty_rsdcubet,
it_rsdcubet TYPE TABLE OF ty_rsdcubet,
wa_infoobject TYPE bapi6112io,
it_infoobject TYPE TABLE OF bapi6112io,
ls_return     TYPE bapiret2.
DATA: wa_rsdchabas TYPE ty_rsdchabas,
it_rsdchabas TYPE TABLE OF ty_rsdchabas.

DATA: wa_rsdiobc TYPE ty_rsdiobc,
it_rsdiobc TYPE TABLE OF ty_rsdiobc.

DATA: wa_rsdiobciobj TYPE ty_rsdiobciobj,
it_rsdiobciobj TYPE TABLE OF ty_rsdiobciobj.

DATA: wa_rsdiobciobj1 TYPE ty_rsdiobciobj,
it_rsdiobciobj1 TYPE TABLE OF ty_rsdiobciobj.
DATA : INAREA TYPE RSDAREA-INFOAREA.
DATA: BEGIN OF gt_message,
msgty LIKE sy-msgty,
msgid LIKE sy-msgid,
message LIKE sy-msgli,
msgno LIKE sy-msgno,
msgv1 LIKE sy-msgv1,
msgv2 LIKE sy-msgv2,
msgv3 LIKE sy-msgv3,
msgv4 LIKE sy-msgv4,
END OF gt_message.
DATA: gc_msgclass(15) TYPE c VALUE 'ZODI_MSGCL'.
DATA: gc_error VALUE 'E'.
DATA: gc_success VALUE 'S'.
DATA : gt_return  TYPE bapiret2.
select single infoarea from rsdarea
into inarea
where infoarea = IV_INFOAREA.
if sy-subrc <> 0.
et_return-type = 'E'.
et_return-message = 'Infoarea not found'.
et_return-message_v1 = IV_INFOAREA.
append et_return.
clear et_return.
exit.
endif.
SELECT odsobject FROM rsdodso
INTO TABLE it_rsdodso
WHERE objvers = 'A' AND infoarea = iv_infoarea.
if sy-subrc <> 0.
et_return-type = 'I'.
et_return-message 
= 'ODS object not found under Infoarea'.
et_return-message_v1 = IV_INFOAREA.
append et_return.
clear et_return.
endif.
IF it_rsdodso IS NOT INITIAL.
SELECT odsobject txtsh FROM rsdodsot 
INTO TABLE it_rsdodsot
FOR ALL ENTRIES IN it_rsdodso 
WHERE odsobject = it_rsdodso-odsobject
AND objvers = 'A' AND langu = sy-langu.

LOOP AT it_rsdodso INTO wa_rsdodso.
et_iarea_obj-data_target = wa_rsdodso-odsobject.
READ TABLE it_rsdodsot INTO wa_rsdodsot
WITH KEY odsobject = wa_rsdodso-odsobject.
IF sy-subrc = 0.
et_iarea_obj-description = wa_rsdodsot-txtsh.
ENDIF.
et_iarea_obj-data_target_typ = 'ODS'.
APPEND et_iarea_obj.
CLEAR:  wa_rsdodso,et_iarea_obj,wa_rsdodso.
ENDLOOP.

ENDIF.

SELECT infocube FROM rsdcube 
INTO TABLE it_rsdcube
WHERE objvers = 'A' AND infoarea = iv_infoarea.
if sy-subrc <> 0.
et_return-type = 'I'.
et_return-message 
= 'Infocube not found under infoarea'.
et_return-message_v1 = IV_INFOAREA.
append et_return.
clear et_return.
endif.
IF it_rsdcube IS NOT INITIAL.
SELECT infocube txtsh FROM rsdcubet 
INTO TABLE it_rsdcubet
FOR ALL ENTRIES IN it_rsdcube
WHERE infocube = it_rsdcube-infocube
AND objvers = 'A' AND langu = sy-langu.

LOOP AT it_rsdcube INTO wa_rsdcube.
et_iarea_obj-data_target = wa_rsdcube-infocube.
READ TABLE it_rsdcubet INTO wa_rsdcubet
WITH KEY infocube = wa_rsdcube-infocube.
IF sy-subrc = 0.
et_iarea_obj-description = wa_rsdcubet-txtsh.
ENDIF.
et_iarea_obj-data_target_typ = 'CUB'.
APPEND et_iarea_obj.
CALL FUNCTION 'BAPI_CUBE_GETDETAIL'
EXPORTING
infocube    = wa_rsdcube-infocube
IMPORTING
return      = ls_return
TABLES
infoobjects = it_infoobject.
*if sy-subrc <> 0.
if ls_return is not initial.
et_return-id = ls_return-id.
et_return-type = ls_return-type.
et_return-message =  ls_return-message.
et_return-message_v1 =  ls_return-message_v1.
et_return-message_v2 = ls_return-message_v2.
et_return-message_v3 = ls_return-message_v3.
et_return-message_v4 = ls_return-message_v4.
APPEND et_return.
clear et_return.
endif.
LOOP AT it_infoobject INTO wa_infoobject
WHERE atrnavfl = space .
IF wa_infoobject-iobjtp NE 'KYF' 
AND wa_infoobject-iobjtp NE 'DPA'.
et_iarea_obj-data_target 
= wa_infoobject-infoobject.
SELECT SINGLE txtsh FROM rsdiobjt 
INTO et_iarea_obj-description
WHERE iobjnm = et_iarea_obj-data_target 
AND langu = sy-langu.
et_iarea_obj-data_target_typ = 'IOB'.
APPEND et_iarea_obj.
ENDIF.
CLEAR: et_iarea_obj,wa_infoobject.
ENDLOOP.
CLEAR:  it_infoobject,et_iarea_obj,wa_rsdcube.
ENDLOOP.

ENDIF.

SELECT infoobjcat FROM rsdiobc 
INTO TABLE it_rsdiobc
WHERE infoarea = iv_infoarea
AND objvers = 'A'.
if sy-subrc <> 0.
et_return-type = 'I'.
et_return-message 
= 'Infoobject catalog not found  under infoarea'.
et_return-message_v1 = IV_INFOAREA.
append et_return.
clear et_return.
endif.
IF it_rsdiobc IS NOT INITIAL.
SELECT iobjnm FROM rsdiobciobj 
INTO TABLE it_rsdiobciobj
FOR ALL ENTRIES IN it_rsdiobc
WHERE infoobjcat = it_rsdiobc-infoobjcat
AND objvers = 'A'.
if sy-subrc <> 0.
et_return-type = 'I'.
et_return-message =
'No Infoobject under Infoobject catalog'.
append et_return.
clear et_return.
endif.
SELECT iobjnm FROM rsdiobj
INTO TABLE it_rsdiobciobj1
FOR ALL ENTRIES IN it_rsdiobciobj
WHERE iobjnm = it_rsdiobciobj-iobjnm
AND iobjtp NE 'KYF'
AND iobjtp NE 'DPA'
AND objvers = 'A'.

CLEAR it_rsdiobciobj.
it_rsdiobciobj = it_rsdiobciobj1.

LOOP AT it_rsdiobciobj INTO wa_rsdiobciobj.
READ TABLE et_iarea_obj 
WITH KEY data_target_typ = 'IOB'
data_target = wa_rsdiobciobj-iobjnm.
IF sy-subrc NE 0.
et_iarea_obj-data_target = wa_rsdiobciobj-iobjnm.
SELECT SINGLE txtsh FROM rsdiobjt 
INTO et_iarea_obj-description
WHERE iobjnm = et_iarea_obj-data_target
AND langu = sy-langu.
et_iarea_obj-data_target_typ = 'IOB'.
APPEND et_iarea_obj.
CLEAR: et_iarea_obj,wa_rsdchabas.
ENDIF.
ENDLOOP.
ENDIF.

IF et_iarea_obj IS INITIAL.
CLEAR gt_message.
gt_message-msgty = gc_error.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 001.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return-message TO et_return.
ELSE.
CLEAR gt_message.
gt_message-msgty = gc_success.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 005.

CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return-message TO et_return.

ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6344]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6239d8cd-b101-4da2-8fe8-8cc8aac5ec41]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3487]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[360]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_IOBJ_GETDETAILS]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[765aa092-e913-4243-a9dc-1fb244c0d8f9]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6344]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_IOBJ_GETDETAILS" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_INFOOBJ,RSDIOBJ-IOBJNM;" "-ABAP_TABLE_PARAMETERS=ET_ATTR_TAB,ZIOBJ_S_ATTR;ET_TEXT_TAB,ZIOBJ_S_TEXT_TAB;ET_MRGD_TAB,ZIOBJ_S_MRGD_TAB;ET_HIER_TAB,ZIOBJ_S_HIER_TAB;ET_TABLES,ZIOBJ_S_TABLES;ET_RETURN,BAPIRET2;ET_HIER_LIST,ZIOBJ_S_HIER_LIST;ET_NODE_TXT,ZIOBJ_S_TEXT_TAB" "-ABAP_EXPORT_PARAMETERS=EV_SID_KEY,DD03L-FIELDNAME;EV_MTABS_VIEW,DD02L-TABNAME;" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
type-pools: RSHI.
TYPES: BEGIN OF ty_iobjname,
iobjnm TYPE rsdiobjnm,
END OF ty_iobjname.
TYPES: BEGIN OF ty_iobjtext,
iobjnm TYPE rsdiobjnm,
txtlg TYPE rstxtlg,
END OF ty_iobjtext.
TYPES: BEGIN OF ty_attrfld,
iobjnm  TYPE rsdiobjnm,
fieldnm TYPE rsdiobjfieldnm,
END OF ty_attrfld.
TYPES: BEGIN OF ty_tabname,
tabname TYPE tabname,
ddtext TYPE as4text,
tab_typ,
END OF ty_tabname.
TYPES: BEGIN OF ty_sid_atrtab,
sid_atrtab TYPE tabname,
attr_desc  TYPE char20,
tab_keys   TYPE char40,
attr_type  TYPE char3,
flag_timdep,
END OF ty_sid_atrtab.
TYPES: BEGIN OF ty_tabtext,
tabname TYPE tabname,
ddtext TYPE as4text,
END OF ty_tabtext.
DATA BEGIN OF it_text_table OCCURS 10.
INCLUDE STRUCTURE dfies.
DATA END OF it_text_table.
DATA BEGIN OF it_hier_table OCCURS 10.
INCLUDE STRUCTURE dfies.
DATA END OF it_hier_table.
DATA p_table TYPE tabname.
DATA q_table TYPE tabname.
DATA t_table TYPE tabname.
DATA h_table TYPE tabname.
DATA j_table TYPE tabname.
DATA mtext   TYPE string.
DATA wa_tabtext TYPE ty_tabtext.
DATA it_tabtext TYPE TABLE OF ty_tabtext.
DATA wa_iobjtext TYPE ty_iobjtext.
DATA it_iobjtext TYPE TABLE OF ty_iobjtext.
DATA wa_attrfld TYPE ty_attrfld.
DATA it_attrfld TYPE TABLE OF ty_attrfld.
DATA wa_tabname  TYPE ty_tabname.
DATA it_tabname  TYPE TABLE OF ty_tabname.
DATA : it_attr_tab TYPE TABLE OF dfies.
DATA : wa_attr_tab TYPE dfies.
DATA : it_timattr_tab TYPE TABLE OF dfies.
DATA : wa_timattr_tab TYPE dfies.
DATA iv_timdep TYPE flag.
DATA: BEGIN OF gt_message,
msgty LIKE sy-msgty,
msgid LIKE sy-msgid,
message LIKE sy-msgli,
msgno LIKE sy-msgno,
msgv1 LIKE sy-msgv1,
msgv2 LIKE sy-msgv2,
msgv3 LIKE sy-msgv3,
msgv4 LIKE sy-msgv4,
END OF gt_message.
DATA: gc_msgclass(15) TYPE c VALUE 'ZODI_MSGCL'.
DATA: gc_error VALUE 'E'.
DATA gc_infrmtn VALUE 'I'.
DATA : gt_return  TYPE bapiret2.
DATA wa_attributes TYPE bapi6108at.
DATA it_attributes TYPE TABLE OF bapi6108at.
CLEAR:  p_table.
**TO Identify the reference Object and Keyfigure
DATA: is_details  TYPE bapi6108.
DATA: is_details1 TYPE bapi6108.
CLEAR: is_details.
CALL FUNCTION 'RSSB_AUTHORITY_ADMWB_IOBJ'
  EXPORTING
    i_infoobjcat              = SPACE
    i_actvt                   = '03'
    i_infoobject              = IV_INFOOBJ
    i_iobjobj                 = 'DEFINITION'
 EXCEPTIONS
   USER_NOT_AUTHORIZED       = 1
  INTERNAL_ERROR            = 2
  OTHERS                    = 3.
 if sy-subrc <> 0.
 clear mtext.
 MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
 INTO mtext
 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
 et_return-id = sy-msgid.
 et_return-type = sy-msgty.
 et_return-number = sy-msgno.
 et_return-message = mtext.
 et_return-message_v1 = 'S_RS_IOBJ'.
append et_return.
clear : et_return , mtext.
exit.
  ENDIF.
CALL FUNCTION 'BAPI_IOBJ_GETDETAIL'
EXPORTING
version    = 'A'
infoobject = iv_infoobj
IMPORTING
details    = is_details
return     = gt_return
TABLES
attributes = it_attributes.
if gt_return is not initial.
et_return-id = gt_return-id.
et_return-type = gt_return-type.
et_return-message =  gt_return-message.
et_return-message_v1 =  gt_return-message_v1.
et_return-message_v2 = gt_return-message_v2.
et_return-message_v3 = gt_return-message_v3.
et_return-message_v4 = gt_return-message_v4.
APPEND et_return.
clear : et_return,gt_return.
exit.
endif.

IF iv_infoobj EQ is_details-chabasnm.
ev_sid_key = is_details-fieldnm.
EV_MTABS_VIEW = is_details-CHKTAB.
ELSE.
CALL FUNCTION 'BAPI_IOBJ_GETDETAIL'
EXPORTING
version    = 'A'
infoobject = is_details-chabasnm
IMPORTING
details    = is_details1
return     = gt_return.
if gt_return is not initial.
et_return-id = gt_return-id.
et_return-type = gt_return-type.
et_return-message =  gt_return-message.
et_return-message_v1 =  gt_return-message_v1.
et_return-message_v2 = gt_return-message_v2.
et_return-message_v3 = gt_return-message_v3.
et_return-message_v4 = gt_return-message_v4.
APPEND et_return.
clear : et_return,gt_return.
exit.
endif.

ev_sid_key = is_details1-fieldnm.
EV_MTABS_VIEW = is_details-CHKTAB.
ENDIF.
SELECT iobjnm fieldnm
FROM rsdiobj
INTO TABLE it_attrfld
FOR ALL ENTRIES IN it_attributes
WHERE iobjnm = it_attributes-attrinm
AND objvers = 'A'.
SELECT iobjnm txtsh FROM rsdiobjt
INTO TABLE it_iobjtext
FOR ALL ENTRIES IN it_attributes
WHERE iobjnm = it_attributes-attrinm
AND objvers = 'A'
AND langu = sy-langu.
IF is_details-type = 'UNI' OR
is_details-type = 'TIM' OR
is_details-type = 'DPA'.
EXIT.
ENDIF.
*** Get the list of Attributes
IF it_attributes IS INITIAL.
CLEAR gt_message.
gt_message-msgty = gc_infrmtn.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 002.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return-message TO et_return.
ENDIF.
LOOP AT it_attributes INTO wa_attributes.
IF wa_attributes-atrtimfl = '1'.
iv_timdep = 'X'.
ENDIF.
et_attr_tab-attr_name = wa_attributes-attrinm.
READ TABLE it_attrfld INTO wa_attrfld
WITH KEY iobjnm = wa_attributes-attrinm.
IF sy-subrc = 0.
et_attr_tab-fieldnm = wa_attrfld-fieldnm.
ENDIF.
et_attr_tab-attr_type = wa_attributes-attritp.
et_attr_tab-flag_timdep = wa_attributes-atrtimfl.
READ TABLE it_iobjtext INTO wa_iobjtext
WITH KEY iobjnm = wa_attributes-attrinm.
IF sy-subrc = 0.
et_attr_tab-attr_desc = wa_iobjtext-txtlg.
ENDIF.
APPEND et_attr_tab.
CLEAR: et_attr_tab, wa_attrfld, wa_iobjtext.
ENDLOOP.
*****P-Table Details************
IF is_details-chntab IS NOT INITIAL.
p_table = is_details-chntab.
wa_tabname-tabname = p_table.
wa_tabname-tab_typ = 'P'.
APPEND wa_tabname TO it_tabname.
CLEAR wa_tabname.
CALL FUNCTION 'DDIF_FIELDINFO_GET'
EXPORTING
tabname        = p_table
TABLES
dfies_tab      = it_attr_tab
EXCEPTIONS
not_found      = 1
internal_error = 2
OTHERS         = 3.
 if sy-subrc <> 0.
 clear mtext.
 MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
 INTO mtext
 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
 et_return-id = sy-msgid.
 et_return-type = sy-msgty.
 et_return-number = sy-msgno.
 et_return-message = mtext.
 append et_return.
 clear : et_return , mtext.
 exit.
 ENDIF.
*--Get p-table data into Merged table.....
LOOP AT it_attr_tab INTO wa_attr_tab
WHERE fieldname NE 'OBJVERS'
AND fieldname NE 'CHANGED'.
et_mrgd_tab-fieldname = wa_attr_tab-fieldname.
et_mrgd_tab-fieldtext = wa_attr_tab-fieldtext.
et_mrgd_tab-keyflag   = wa_attr_tab-keyflag.
et_mrgd_tab-tabname   = p_table.
et_mrgd_tab-tab_typ   = 'P'.
et_mrgd_tab-datatype  = wa_attr_tab-datatype.
et_mrgd_tab-ddlen     = wa_attr_tab-leng.
et_mrgd_tab-decimals  = wa_attr_tab-decimals.
APPEND: et_mrgd_tab.
CLEAR: et_mrgd_tab, wa_attr_tab, et_mrgd_tab.
ENDLOOP.
ENDIF.
*****Q-Table Details***********************
IF is_details-chttab IS NOT INITIAL.
q_table = is_details-chttab.
wa_tabname-tabname = q_table.
wa_tabname-tab_typ = 'Q'.
APPEND wa_tabname TO it_tabname.
CLEAR wa_tabname.
CALL FUNCTION 'DDIF_FIELDINFO_GET'
EXPORTING
tabname        = q_table
TABLES
dfies_tab      = it_timattr_tab
EXCEPTIONS
not_found      = 1
internal_error = 2
OTHERS         = 3.

 if sy-subrc <> 0.
      clear mtext.
      MESSAGE ID sy-msgid TYPE sy-msgty 
	  NUMBER sy-msgno
      INTO mtext
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*     Internal error
      et_return-id = sy-msgid.
      et_return-type = sy-msgty.
      et_return-number = sy-msgno.
      et_return-message = mtext.
      append et_return.
      clear : et_return , mtext.
      exit.
  ENDIF.
***----Get q-table data into Merged table.....
LOOP AT it_timattr_tab INTO
wa_timattr_tab
WHERE
fieldname NE 'OBJVERS'
AND fieldname NE 'CHANGED'.
et_mrgd_tab-fieldname = wa_timattr_tab-fieldname.
et_mrgd_tab-fieldtext = wa_timattr_tab-fieldtext.
et_mrgd_tab-keyflag   = wa_timattr_tab-keyflag.
et_mrgd_tab-tabname   = q_table.
et_mrgd_tab-tab_typ   = 'Q'.
et_mrgd_tab-datatype  = wa_timattr_tab-datatype.
et_mrgd_tab-ddlen     = wa_timattr_tab-leng.
et_mrgd_tab-decimals  = wa_timattr_tab-decimals.
APPEND: et_mrgd_tab.
CLEAR: wa_timattr_tab, et_mrgd_tab.
ENDLOOP.
ENDIF.
SORT et_mrgd_tab BY fieldname.
DELETE ADJACENT DUPLICATES
FROM
et_mrgd_tab COMPARING fieldname.
SORT et_mrgd_tab BY keyflag DESCENDING.
*HIETAB
*******H-Table Details---------------
IF is_details-HIETAB IS NOT INITIAL.
h_table = is_details-HIETAB.
wa_tabname-tabname = h_table.
wa_tabname-tab_typ = 'H'.
APPEND wa_tabname TO it_tabname.
CLEAR wa_tabname.
CALL FUNCTION 'DDIF_FIELDINFO_GET'
  EXPORTING
    tabname              = h_table
  TABLES
   DFIES_TAB            =  it_hier_table
  EXCEPTIONS
   NOT_FOUND            = 1
   INTERNAL_ERROR       = 2
   OTHERS               = 3 .
 if sy-subrc <> 0.
      clear mtext.
      MESSAGE ID sy-msgid TYPE sy-msgty 
	  NUMBER sy-msgno
      INTO mtext
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*     Internal error
      et_return-id = sy-msgid.
      et_return-type = sy-msgty.
      et_return-number = sy-msgno.
      et_return-message = mtext.
      append et_return.
      clear : et_return , mtext.
      exit.
  ENDIF.
******  Hierarchy  Table------
ET_HIER_TAB-fieldname = 'RSHIENM'.
ET_HIER_TAB-fieldtext = 'Hierarchy Name'.
ET_HIER_TAB-keyflag   = 'X'.
ET_HIER_TAB-datatype  = 'CHAR'.
ET_HIER_TAB-ddlen     = '000030'.
ET_HIER_TAB-decimals  = '000000'.
APPEND: ET_HIER_TAB.
CLEAR: ET_HIER_TAB.
LOOP AT it_hier_table
where
fieldname ne 'OBJVERS'.
ET_HIER_TAB-fieldname = it_hier_table-fieldname.
ET_HIER_TAB-fieldtext = it_hier_table-fieldtext.
ET_HIER_TAB-keyflag = it_hier_table-keyflag.
ET_HIER_TAB-datatype = it_hier_table-datatype.
ET_HIER_TAB-ddlen  = it_hier_table-leng.
ET_HIER_TAB-decimals = it_hier_table-decimals.
APPEND: ET_HIER_TAB.
CLEAR: ET_HIER_TAB, it_hier_table.
ENDLOOP.
clear: it_hier_table, it_hier_table[].
***Get the HIER Interval table details..
IF is_details-HINTAB IS NOT INITIAL.
j_table = is_details-HINTAB.
wa_tabname-tabname = j_table.
wa_tabname-tab_typ = 'J'.
APPEND wa_tabname TO it_tabname.
CLEAR wa_tabname.
ET_HIER_TAB-fieldname = 'LEAFFROM'.
ET_HIER_TAB-fieldtext = 'Page of Hierarchy from'.
ET_HIER_TAB-keyflag   = ''.
ET_HIER_TAB-datatype  = 'CHAR'.
ET_HIER_TAB-ddlen     = '000060'.
ET_HIER_TAB-decimals  = '000000'.
APPEND: ET_HIER_TAB.
CLEAR: ET_HIER_TAB.
ET_HIER_TAB-fieldname = 'LEAFTO'.
ET_HIER_TAB-fieldtext = 'Page of Hierarchy to'.
ET_HIER_TAB-keyflag   = ''.
ET_HIER_TAB-datatype  = 'CHAR'.
ET_HIER_TAB-ddlen     = '000060'.
ET_HIER_TAB-decimals  = '000000'.
APPEND: ET_HIER_TAB.
CLEAR: ET_HIER_TAB.
ENDIF.
** Get the list of Hierarchies
DATA wa_HIER_TXT TYPE rshi_s_hiedirtxt.
DATA it_HIER_TXT TYPE rshi_s_hiedirtxt OCCURS 0.
CALL FUNCTION 'RSSH_GET_HIERARCHIES_OF_IOBJNM'
EXPORTING
I_OBJVERS = RS_C_OBJVERS-ACTIVE
I_IOBJNM  = IV_INFOOBJ
I_LANGU   = sy-langu
*I_ASSO_CHABASNM = RS_C_TRUE
IMPORTING
*   E_T_RSHIEDIR =
E_T_RSHIEDIRTXT = it_HIER_TXT

 EXCEPTIONS
  IOBJ_NOT_FOUND = 1
 HIERARCHY_NOT_ALLOWED_FOR_IOBJ = 2
 HIERARCHY_NOT_FOUND            = 3
 INTERNAL_ERROR                 = 4
 OTHERS                         = 5
.
 if sy-subrc <> 0.
      clear mtext.
      MESSAGE ID sy-msgid TYPE sy-msgty 
	  NUMBER sy-msgno
      INTO mtext
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*     Internal error
      et_return-id = sy-msgid.
      et_return-type = sy-msgty.
      et_return-number = sy-msgno.
      et_return-message = mtext.
      append et_return.
      clear : et_return , mtext.
      exit.
  ENDIF.
LOOP AT it_HIER_TXT into wa_HIER_TXT.
ET_HIER_LIST-HIEID  =  wa_HIER_TXT-HIEID .
ET_HIER_LIST-HIETYPE =  wa_HIER_TXT-HIETYPE .
ET_HIER_LIST-HIENM  =  wa_HIER_TXT-HIENM .
ET_HIER_LIST-VERSION =  wa_HIER_TXT-VERSION .
ET_HIER_LIST-DATETO  =  wa_HIER_TXT-DATETO .
ET_HIER_LIST-DATEFROM = wa_HIER_TXT-DATEFROM.
ET_HIER_LIST-LANGU  =  wa_HIER_TXT-LANGU .
ET_HIER_LIST-TXTSH  =  wa_HIER_TXT-TXTSH .
ET_HIER_LIST-TXTMD  =  wa_HIER_TXT-TXTMD .
APPEND ET_HIER_LIST.
CLEAR: ET_HIER_LIST, wa_HIER_TXT.
ENDLOOP.
ENDIF.
*****************
**Non Postable Nodes Text
***********************
*DATA: lt_rsthier TYPE TABLE OF rsthiernode,
*      wa_rsthier TYPE rsthiernode.
*IF NOT et_hier_list[] IS INITIAL.
*  SELECT * from
*  RSTHIERNODE
*  INTO TABLE lt_rsthier
*  FOR ALL ENTRIES IN  et_hier_list
*  WHERE langu = sy-langu
*    AND hieid eq et_hier_list-hieid.
*  IF sy-subrc IS INITIAL.
*     SORT lt_rsthier BY hieid.
*     LOOP AT lt_rsthier INTO wa_rsthier.
*      et_node_txt-fieldname = wa_rsthier-nodename.
*      et_node_txt-fieldtext = wa_rsthier-txtlg.
*      APPEND et_node_txt.
*     CLEAR: et_node_txt, wa_rsthier.
*     ENDLOOP.
*     wa_tabname-tabname = 'RSTHIERNODE'.
*     wa_tabname-tab_typ = 'R'.
*     APPEND wa_tabname TO it_tabname.
*     CLEAR wa_tabname.
*  ENDIF.
*ENDIF.
***************************************
CLEAR it_text_table.
wa_tabname-tabname = 'RSTHIERNODE'.
wa_tabname-tab_typ = 'R'.
APPEND wa_tabname TO it_tabname.
CLEAR wa_tabname.
CALL FUNCTION 'DDIF_FIELDINFO_GET'
  EXPORTING
    tabname              = 'RSTHIERNODE'
  TABLES
   DFIES_TAB            =  it_text_table
  EXCEPTIONS
   NOT_FOUND            = 1
   INTERNAL_ERROR       = 2
   OTHERS               = 3 .
 if sy-subrc <> 0.
      clear mtext.
      MESSAGE ID sy-msgid TYPE sy-msgty 
	  NUMBER sy-msgno
      INTO mtext
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*     Internal error
      et_return-id = sy-msgid.
      et_return-type = sy-msgty.
      et_return-number = sy-msgno.
      et_return-message = mtext.
      append et_return.
      clear : et_return , mtext.
      exit.
  ENDIF.
******  Update Text Table-------
LOOP AT it_text_table.
et_node_txt-fieldname = it_text_table-fieldname.
et_node_txt-fieldtext = it_text_table-fieldtext.
et_node_txt-keyflag = it_text_table-keyflag.
et_node_txt-datatype = it_text_table-datatype.
et_node_txt-ddlen  = it_text_table-leng.
et_node_txt-decimals = it_text_table-decimals.
APPEND: et_node_txt.
CLEAR: et_node_txt, it_text_table.
ENDLOOP.
****************************************
*******T-Table Details---------------
IF is_details-txttab IS NOT INITIAL.
t_table = is_details-txttab.
wa_tabname-tabname = t_table.
wa_tabname-tab_typ = 'T'.
APPEND wa_tabname TO it_tabname.
CLEAR wa_tabname.
CALL FUNCTION 'DDIF_FIELDINFO_GET'
  EXPORTING
    tabname              = t_table
  TABLES
   DFIES_TAB            =  it_text_table
  EXCEPTIONS
   NOT_FOUND            = 1
   INTERNAL_ERROR       = 2
   OTHERS               = 3 .
 if sy-subrc <> 0.
      clear mtext.
      MESSAGE ID sy-msgid TYPE sy-msgty 
	  NUMBER sy-msgno
      INTO mtext
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*     Internal error
      et_return-id = sy-msgid.
      et_return-type = sy-msgty.
      et_return-number = sy-msgno.
      et_return-message = mtext.
      append et_return.
      clear : et_return , mtext.
      exit.
  ENDIF.
******  Update Text Table-------
LOOP AT it_text_table.
et_text_tab-fieldname = it_text_table-fieldname.
et_text_tab-fieldtext = it_text_table-fieldtext.
et_text_tab-keyflag = it_text_table-keyflag.
et_text_tab-datatype = it_text_table-datatype.
et_text_tab-ddlen  = it_text_table-leng.
et_text_tab-decimals = it_text_table-decimals.
APPEND: et_text_tab.
CLEAR: et_text_tab, it_text_table,wa_tabtext.
ENDLOOP.
ELSE.
CLEAR gt_message.
gt_message-msgty = gc_infrmtn.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 003.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return-message TO et_return.
ENDIF.
SELECT  tabname ddtext
INTO TABLE it_tabtext
FROM dd02t
FOR ALL ENTRIES IN it_tabname
WHERE tabname  = it_tabname-tabname
AND ddlanguage = sy-langu.
LOOP AT it_tabname INTO wa_tabname.
READ TABLE it_tabtext INTO wa_tabtext
WITH KEY tabname = wa_tabname-tabname.
IF sy-subrc = 0.
wa_tabname-ddtext = wa_tabtext-ddtext.
ENDIF.
MOVE-CORRESPONDING wa_tabname TO et_tables.
APPEND et_tables.
CLEAR: et_tables, wa_tabtext, wa_tabname.
ENDLOOP."]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6345]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5b954698-c8c7-4dfb-adb7-75464f30abb2]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3488]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[370]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_CUBE_GETDETAILS]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[530a965b-91d6-4d73-add6-8ad5952730e0]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6345]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_CUBE_GETDETAILS" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_INFOCUBE,RSDCUBE-INFOCUBE;" "-ABAP_TABLE_PARAMETERS=ET_CUBE_DETAIL,ZCUBE_S_DETAIL;ET_KEYFIG_TAB,ZCUBE_S_KEYFIG;ET_RETURN,BAPIRET2;ET_UNITTIM_TAB,ZCUBE_S_UNITTIM" "-ABAP_EXPORT_PARAMETERS=EV_FACT_TABLE,DD02L-TABNAME;" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
TYPE-POOLS : rsd , rssb.
TYPES: BEGIN OF ty_tabdesc,
tabname TYPE tabname,
ddtext  TYPE as4text,
END OF ty_tabdesc.
DATA BEGIN OF table_structure OCCURS 10.
INCLUDE STRUCTURE dntab.
DATA END OF table_structure.
DATA :l_s_cube   TYPE rsd_s_cube,
i_infocube TYPE rsinfocube,
i_icubeobj TYPE rsicubepartobj,
l_infoarea TYPE rsinfoarea,
i_actvt    TYPE activ_auth,
ls_return  TYPE bapiret2.

DATA: wa_tabdesc TYPE ty_tabdesc,
it_tabdesc TYPE TABLE OF ty_tabdesc,
wa_dimensions TYPE bapi6112di,
it_dimensions TYPE TABLE OF bapi6112di,
wa_infoobjects TYPE bapi6112io,
it_infoobjects TYPE TABLE OF bapi6112io,
wa_dimensioninfoobjects TYPE bapi6112dio,
it_dimensioninfoobjects TYPE TABLE OF bapi6112dio,
table_header LIKE x030l,
iv_tabname TYPE tabname,
it_t_atr TYPE rsd_t_atr,
wa_t_atr TYPE rsd_s_atr,
iv_dim_characs_1 TYPE char30,
mtext TYPE string.
DATA iv_dim_table TYPE tabname.
DATA: is_details TYPE bapi6108,
flag_ref.
DATA iv_ref_iobj TYPE rsdiobjnm.
DATA: BEGIN OF gt_message,
msgty LIKE sy-msgty,
msgid LIKE sy-msgid,
message LIKE sy-msgli,
msgno LIKE sy-msgno,
msgv1 LIKE sy-msgv1,
msgv2 LIKE sy-msgv2,
msgv3 LIKE sy-msgv3,
msgv4 LIKE sy-msgv4,
END OF gt_message.
DATA: gc_msgclass(15) TYPE c VALUE 'ZODI_MSGCL'.
DATA: gc_error VALUE 'E'.
DATA: gc_success VALUE 'S'.
DATA: gt_return  TYPE bapiret2.
DATA: package_dim TYPE rsdimension.
DATA: lv_error.
DATA: is_rsdtbhd TYPE rsdtbhd.
CLEAR ev_fact_table.
*IF iv_infocube(1) = '0'.
*CONCATENATE '/BI0/F' iv_infocube 
*INTO ev_fact_table.
*ELSE.
*CONCATENATE '/BIC/F' iv_infocube 
*INTO ev_fact_table.
*ENDIF.
CALL FUNCTION 'RSD_CUBE_GET'
EXPORTING
i_infocube         = iv_infocube
IMPORTING
e_s_cube           = l_s_cube
E_S_TBHD           = IS_RSDTBHD
EXCEPTIONS
infocube_not_found = 1
illegal_input      = 2
OTHERS             = 3.
EV_FACT_TABLE      = IS_RSDTBHD-TABLNM.
IF sy-subrc <> 0 AND NOT iv_infocube IS INITIAL .
CLEAR mtext.
MESSAGE ID sy-msgid TYPE sy-msgty 
NUMBER sy-msgno
INTO mtext
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
et_return-id = sy-msgid.
et_return-type = sy-msgty.
et_return-number = sy-msgno.
et_return-message = mtext.
APPEND et_return.
CLEAR : et_return , mtext.
lv_error = 'X'.
EXIT.
ELSE.
l_infoarea =  l_s_cube-infoarea.
i_infocube = l_s_cube-infocube.
i_icubeobj = 'DEFINITION'.
i_actvt    = '03'.
ENDIF.

CALL FUNCTION 'RSSB_AUTHORITY_ADMWB_INFOCUBE'
EXPORTING
i_infoarea          = l_infoarea
i_actvt             = i_actvt
i_infocube          = i_infocube
i_icubeobj          = i_icubeobj
EXCEPTIONS
user_not_authorized = 1
not_active          = 2
OTHERS              = 3.
IF sy-subrc <> 0.
CLEAR mtext.
MESSAGE ID sy-msgid TYPE sy-msgty 
NUMBER sy-msgno INTO mtext
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
et_return-id = sy-msgid.
et_return-type = sy-msgty.
et_return-number = sy-msgno.
et_return-message = mtext.
et_return-message_v1  = 'S_RS_ICUBE'.
APPEND et_return.
CLEAR : et_return , mtext.
lv_error = 'X'.
EXIT.
ENDIF.

***** Get the Details of the Infocube
CALL FUNCTION 'BAPI_CUBE_GETDETAIL'
EXPORTING
objvers              = 'A'
infocube             = iv_infocube
IMPORTING
return               = ls_return
TABLES
dimensions           = it_dimensions
infoobjects          = it_infoobjects
dimensioninfoobjects = it_dimensioninfoobjects.
IF ls_return IS NOT INITIAL AND 
NOT iv_infocube IS INITIAL.
et_return-id = ls_return-id.
et_return-type = ls_return-type.
et_return-message =  ls_return-message.
et_return-message_v1 =  ls_return-message_v1.
et_return-message_v2 = ls_return-message_v2.
et_return-message_v3 = ls_return-message_v3.
et_return-message_v4 = ls_return-message_v4.
APPEND et_return.
CLEAR: et_return,ls_return.
lv_error = 'X'.
EXIT.
ENDIF.
***** TO Identify the Keyfigure and
****get their Meta Data Information
LOOP AT it_infoobjects INTO wa_infoobjects
WHERE iobjtp  = 'KYF'.
CLEAR: is_details, flag_ref.
CALL FUNCTION 'BAPI_IOBJ_GETDETAIL'
EXPORTING
version    = 'A'
infoobject = wa_infoobjects-infoobject
IMPORTING
details    = is_details
return     = ls_return.
IF ls_return IS NOT INITIAL AND 
NOT wa_infoobjects-infoobject IS INITIAL.
et_return-id = ls_return-id.
et_return-type = ls_return-type.
et_return-message =  ls_return-message.
et_return-message_v1 =  ls_return-message_v1.
et_return-message_v2 = ls_return-message_v2.
et_return-message_v3 = ls_return-message_v3.
et_return-message_v4 = ls_return-message_v4.
APPEND et_return.
CLEAR: et_return,ls_return.
lv_error = 'X'.
EXIT.
ENDIF.

et_keyfig_tab-fieldname   = is_details-infoobject.
et_keyfig_tab-fieldtext   = is_details-textlong.
et_keyfig_tab-kffield     = is_details-fieldnm.
et_keyfig_tab-datatype    = is_details-datatp.
et_keyfig_tab-ddlen       = is_details-leng.
et_keyfig_tab-decimals    = is_details-decimals.
et_keyfig_tab-characs_typ = is_details-type.
IF is_details-ncumfl NE '2' AND
is_details-ncumfl NE '1'.
APPEND et_keyfig_tab.
wa_dimensioninfoobjects-infoobject
= wa_infoobjects-infoobject.
APPEND wa_dimensioninfoobjects
TO it_dimensioninfoobjects.
ENDIF.
CLEAR  et_keyfig_tab.
CLEAR: wa_dimensioninfoobjects, wa_infoobjects.
ENDLOOP.
**** Handling of Time and Unit Dimension
LOOP AT it_infoobjects INTO wa_infoobjects
WHERE iobjtp  = 'TIM'
OR iobjtp  = 'UNI'
OR iobjtp  = 'CHA'.
IF wa_infoobjects-atrnavfl EQ 'X'.
CONTINUE.
ENDIF.
CLEAR: is_details, flag_ref.
CALL FUNCTION 'BAPI_IOBJ_GETDETAIL'
EXPORTING
version    = 'A'
infoobject = wa_infoobjects-infoobject
IMPORTING
details    = is_details
return =   ls_return.
IF ls_return IS NOT INITIAL AND 
NOT wa_infoobjects-infoobject IS INITIAL.
et_return-id = ls_return-id.
et_return-type = ls_return-type.
et_return-message =  ls_return-message.
et_return-message_v1 =  ls_return-message_v1.
et_return-message_v2 = ls_return-message_v2.
et_return-message_v3 = ls_return-message_v3.
et_return-message_v4 = ls_return-message_v4.
APPEND et_return.
CLEAR: et_return,ls_return.
lv_error = 'X'.
EXIT.
ENDIF.
IF wa_infoobjects-infoobject NE is_details-chabasnm.
CALL FUNCTION 'BAPI_IOBJ_GETDETAIL'
EXPORTING
version    = 'A'
infoobject = is_details-chabasnm
IMPORTING
details    = is_details
return     = ls_return.
IF ls_return IS NOT INITIAL AND 
NOT is_details-chabasnm IS INITIAL..
et_return-id = ls_return-id.
et_return-type = ls_return-type.
et_return-message =  ls_return-message.
et_return-message_v1 =  ls_return-message_v1.
et_return-message_v2 = ls_return-message_v2.
et_return-message_v3 = ls_return-message_v3.
et_return-message_v4 = ls_return-message_v4.
APPEND et_return.
CLEAR: et_return,ls_return.
lv_error = 'X'.
EXIT.
ENDIF.
ENDIF.
IF is_details-chktab IS NOT INITIAL    AND
wa_infoobjects-iobjtp  EQ 'CHA'.
CONTINUE.
ENDIF.
et_unittim_tab-fieldname   
= wa_infoobjects-infoobject.
et_unittim_tab-fieldtext   
= is_details-textlong.
et_unittim_tab-kffield     
= is_details-fieldnm.
et_unittim_tab-datatype    
= is_details-datatp.
et_unittim_tab-ddlen       
= is_details-leng.
et_unittim_tab-decimals    
= is_details-decimals.
et_unittim_tab-characs_typ 
= is_details-type.
APPEND et_unittim_tab.
CLEAR  et_unittim_tab.
CLEAR: wa_dimensioninfoobjects, 
wa_infoobjects.
ENDLOOP.
CLEAR package_dim.
If lv_error = 'X'.
EXIT.
ENDIF.
CONCATENATE iv_infocube 'P' INTO package_dim.
LOOP AT it_dimensioninfoobjects
INTO wa_dimensioninfoobjects
WHERE
atrnavfl  NE 'X'
AND
dimension NE package_dim.
*AND infoobject NE '0CHNGID'
*AND infoobject NE '0RECORDTP'.
et_cube_detail-dimension
=  wa_dimensioninfoobjects-dimension.
AT NEW dimension.
READ TABLE it_dimensions 
INTO wa_dimensions
WITH KEY 
dimension = wa_dimensioninfoobjects-dimension.
IF sy-subrc = 0.
et_cube_detail-dim_desc = wa_dimensions-textlong.
et_cube_detail-linitfl  = wa_dimensions-linitfl.
ENDIF.
CLEAR wa_dimensions.
ENDAT.
et_cube_detail-dim_characs
= wa_dimensioninfoobjects-infoobject.
**TO Identify the reference Object and Keyfigure
CLEAR: is_details, flag_ref.
CALL FUNCTION 'BAPI_IOBJ_GETDETAIL'
EXPORTING
version    = 'A'
infoobject = wa_dimensioninfoobjects-infoobject
IMPORTING
details    = is_details
return     = ls_return.
IF ls_return IS NOT INITIAL AND
NOT wa_dimensioninfoobjects-infoobject IS INITIAL.
et_return-id = ls_return-id.
et_return-type = ls_return-type.
et_return-message =  ls_return-message.
et_return-message_v1 =  ls_return-message_v1.
et_return-message_v2 = ls_return-message_v2.
et_return-message_v3 = ls_return-message_v3.
et_return-message_v4 = ls_return-message_v4.
APPEND et_return.
CLEAR: et_return,ls_return.
lv_error = 'X'.
EXIT.
ENDIF.
IF is_details-infoobject NE is_details-chabasnm 
AND is_details-type NE 'KYF'.
iv_ref_iobj = is_details-chabasnm.
flag_ref = 'X'.
CALL FUNCTION 'BAPI_IOBJ_GETDETAIL'
EXPORTING
version    = 'A'
infoobject = is_details-chabasnm
IMPORTING
details    = is_details
return     = ls_return.
IF ls_return IS NOT INITIAL AND NOT
is_details-chabasnm IS INITIAL.
et_return-id = ls_return-id.
et_return-type 
= ls_return-type.
et_return-message 
=  ls_return-message.
et_return-message_v1 
=  ls_return-message_v1.
et_return-message_v2 
= ls_return-message_v2.
et_return-message_v3 
= ls_return-message_v3.
et_return-message_v4 
= ls_return-message_v4.
APPEND et_return.
CLEAR: et_return,ls_return.
lv_error = 'X'.
EXIT.
ENDIF.
ELSE.
iv_ref_iobj 
= wa_dimensioninfoobjects-infoobject.
ENDIF.
et_cube_detail-characs_desc 
= is_details-textshort.
IF wa_dimensioninfoobjects-atrnavfl NE 'X'.
DATA: lv_prefix TYPE rschabasnm,
lv_suffix TYPE rschabasnm.
CALL FUNCTION 'RSD_TABTYPES_GET_FOR_CHA_BAS'
EXPORTING
i_chabasnm = iv_ref_iobj
IMPORTING
e_sidtty   = et_cube_detail-sid_table
EXCEPTIONS
name_error = 1
OTHERS     = 2.

IF sy-subrc <> 0.
et_return-id = sy-msgid.
et_return-type = sy-msgty.
et_return-message_v1 =  sy-msgv1.
et_return-message_v2 = sy-msgv2.
et_return-message_v3 =  sy-msgv3.
et_return-message_v4 =  sy-msgv4.
MESSAGE ID sy-msgid TYPE sy-msgty 
NUMBER sy-msgno
INTO mtext
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
et_return-message =  mtext.
APPEND et_return.
CLEAR:mtext,et_return.
lv_error = 'X'.
EXIT.
ENDIF.
lv_prefix = et_cube_detail-sid_table+0(5).
lv_suffix = et_cube_detail-sid_table+6(24).
CONCATENATE lv_prefix lv_suffix INTO
et_cube_detail-sid_table.
CLEAR: lv_prefix,lv_suffix.
ENDIF.
SELECT SINGLE tabname FROM dd02l INTO iv_tabname
WHERE tabname = et_cube_detail-sid_table.
IF sy-subrc NE 0.
IF wa_dimensioninfoobjects-atrnavfl NE 'X'.
CLEAR et_cube_detail-sid_table.
CALL FUNCTION 'RSD_IOBJ_GET'
EXPORTING
i_iobjnm               
= wa_dimensioninfoobjects-infoobject
i_objvers              = 'A'
IMPORTING
e_t_atr                = it_t_atr
EXCEPTIONS
iobj_not_found         = 1
illegal_input          = 2
bct_comp_invalid       = 3
OTHERS                 = 4.
IF sy-subrc <> 0.
et_return-id = sy-msgid.
et_return-type = sy-msgty.
et_return-message_v1 =  sy-msgv1.
et_return-message_v2 = sy-msgv2.
et_return-message_v3 =  sy-msgv3.
et_return-message_v4 =  sy-msgv4.
MESSAGE ID sy-msgid TYPE sy-msgty 
NUMBER sy-msgno  INTO mtext
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
et_return-message =  mtext.
APPEND et_return.
CLEAR:mtext,et_return.
lv_error = 'X'.
EXIT.
ENDIF.
IF NOT it_t_atr IS INITIAL.
READ TABLE it_t_atr INTO wa_t_atr INDEX 1.
CALL FUNCTION 'RSD_TABTYPES_GET_FOR_CHA_BAS'
EXPORTING
i_chabasnm = wa_t_atr-chabasnm
IMPORTING
e_sidtty   = et_cube_detail-sid_table
EXCEPTIONS
name_error = 1
OTHERS     = 2.
IF sy-subrc <> 0.
et_return-id = sy-msgid.
et_return-type = sy-msgty.
et_return-message_v1 =  sy-msgv1.
et_return-message_v2 = sy-msgv2.
et_return-message_v3 =  sy-msgv3.
et_return-message_v4 =  sy-msgv4.
MESSAGE ID sy-msgid TYPE sy-msgty 
NUMBER sy-msgno     INTO mtext
WITH sy-msgv1 
sy-msgv2 sy-msgv3 sy-msgv4.
et_return-message =  mtext.
APPEND et_return.
CLEAR:mtext,et_return.
lv_error = 'X'.
EXIT.
ENDIF.
lv_prefix = et_cube_detail-sid_table+0(5).
lv_suffix = et_cube_detail-sid_table+6(24).
CONCATENATE lv_prefix lv_suffix INTO
et_cube_detail-sid_table.
CLEAR: lv_prefix,lv_suffix.
ENDIF.
CLEAR wa_t_atr.
ENDIF.
ENDIF.
CLEAR: table_header, table_structure.
CALL FUNCTION 'NAMETAB_GET'
EXPORTING
tabname             
= et_cube_detail-sid_table
IMPORTING
header              = table_header
TABLES
nametab             = table_structure
EXCEPTIONS
table_has_no_fields = 01
table_not_activ     = 02
internal_error      = 03
no_texts_found      = 04.

IF sy-subrc <> 0 AND NOT 
table_header IS INITIAL.
et_return-id = sy-msgid.
et_return-type = sy-msgty.
et_return-message_v1 =  sy-msgv1.
et_return-message_v2 = sy-msgv2.
et_return-message_v3 =  sy-msgv3.
et_return-message_v4 =  sy-msgv4.
MESSAGE ID sy-msgid TYPE sy-msgty 
NUMBER sy-msgno
INTO mtext
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
et_return-message =  mtext.
APPEND et_return.
CLEAR:mtext,et_return.
lv_error = 'X'.
EXIT.
ENDIF.
LOOP AT table_structure WHERE keyflag = 'X'.
IF sy-tabix = 1.
et_cube_detail-sid_keyfld
= table_structure-fieldname.
ELSE.
CONCATENATE et_cube_detail-sid_keyfld
table_structure-fieldname
INTO et_cube_detail-sid_keyfld
SEPARATED BY ','.
ENDIF.
ENDLOOP.
READ TABLE it_infoobjects INTO wa_infoobjects
WITH KEY infoobject
= wa_dimensioninfoobjects-infoobject.
et_cube_detail-characs_typ
= wa_infoobjects-iobjtp.
IF et_cube_detail-characs_typ = 'KYF'.
CLEAR et_cube_detail-dimension.
et_cube_detail-sid_keyfld 
= is_details-fieldnm.
ENDIF.
et_cube_detail-sid_keyfld = is_details-fieldnm.
CLEAR: table_header, 
table_structure,wa_infoobjects.
APPEND et_cube_detail.CLEAR et_cube_detail.
ENDLOOP.
If lv_error = 'X'.
EXIT.
ENDIF.
IF et_cube_detail IS NOT INITIAL.
CLEAR gt_message.
gt_message-msgty = gc_success.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 005.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return-message TO et_return.
ENDIF."]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6346]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[94fb8608-c4d1-4101-b0bc-7e6e8a3c6e11]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3489]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[380]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_ODS_GETDETAILS]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7d575ca2-5f6a-4e7b-8637-7888026f58fe]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6346]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_ODS_GETDETAILS" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_ODSOBJECT,RSDODSO-ODSOBJECT;" "-ABAP_TABLE_PARAMETERS=ET_ODS_DET,ZODS_S_DETAILS;ET_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
TABLES: dfies.
DATA: wa_ods_list TYPE bapi6116l,
it_ods_list TYPE TABLE OF bapi6116l,
wa_iobject TYPE bapi6116io,
it_iobject TYPE TABLE OF bapi6116io.
DATA ods_tabname TYPE tabname.
DATA BEGIN OF table_structure OCCURS 10.
  INCLUDE STRUCTURE dfies.
DATA END OF table_structure.
DATA table_header LIKE x030l.
DATA lv_odsobject TYPE rsdodsobject.
DATA lv_string TYPE string.
DATA: BEGIN OF gt_message,
msgty LIKE sy-msgty,
msgid LIKE sy-msgid,
message LIKE sy-msgli,
msgno LIKE sy-msgno,
msgv1 LIKE sy-msgv1,
msgv2 LIKE sy-msgv2,
msgv3 LIKE sy-msgv3,
msgv4 LIKE sy-msgv4,
END OF gt_message.
DATA: gc_msgclass(15) TYPE c VALUE 'ZODI_MSGCL'.
DATA: l_s_odso   TYPE  rsd_s_odso.
DATA: gc_success VALUE 'E'.
DATA: gc_error VALUE 'E'.
DATA: RSODSPART TYPE RSODSPARTOBJ,
      ACTVT     TYPE ACTIV_AUTH,
      MTEXT     TYPE string.
DATA : gt_return  TYPE bapiret2.
IF iv_odsobject IS INITIAL.
CALL FUNCTION 'BAPI_ODSO_GETLIST'
EXPORTING
 OBJVERS             = 'A'
IMPORTING
 RETURN              = gt_return
TABLES
 odsobjectlist       = it_ods_list.

if gt_return is not initial.
gt_return-message_v1 = 'S_RS_ODSO'.
et_return = gt_return.

if et_return-type = 'W' and 
et_return-number = '167' and 
et_return-id = 'RSDODSO'.
et_return-type = 'E'.
endif.

append et_return.
clear : gt_return ,et_return.
exit.
endif.
ELSE.
SELECT SINGLE odsobject odsotype infoarea 
FROM rsdodso
INTO corresponding fields of  wa_ods_list
WHERE odsobject = iv_odsobject
AND objvers = 'A'.
if sy-subrc <> 0.
et_return-type = 'E'.
et_return-message = 'ODS not found'.
et_return-message_v1 = IV_ODSOBJECT.
append et_return.
clear et_return.
exit.
endif.
CALL FUNCTION 'RSSB_AUTHORITY_ADMWB_ODSOBJECT'
  EXPORTING
   I_INFOAREA                = wa_ods_list-infoarea
    i_actvt                  = '03'
    i_odsobject              = iv_odsobject
    i_odspart                = 'DEFINITION'
 EXCEPTIONS
 USER_NOT_AUTHORIZED       = 1
 INTERNAL_ERROR            = 2
 OTHERS                    = 3 .
if sy-subrc <> 0.
clear mtext.
MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
INTO mtext
WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*     Internal error
et_return-id = sy-msgid.

if sy-msgty = 'W' and sy-msgno = '167' and 
sy-msgid = 'RSDODSO'.
et_return-type = 'E'.
else.
et_return-type = sy-msgty.
endif.


et_return-number = sy-msgno.
et_return-message = mtext.
et_return-message_v1 = 'S_RS_ODSO'.
append et_return.
clear : et_return , mtext.
exit.
ENDIF.
*IF sy-subrc = 0.
SELECT SINGLE txtlg FROM rsdodsot
INTO wa_ods_list-textlong
WHERE odsobject = iv_odsobject AND
objvers = 'A' AND langu = sy-langu.
APPEND wa_ods_list TO it_ods_list.
CLEAR wa_ods_list.
ENDIF.
LOOP AT it_ods_list INTO wa_ods_list.
IF wa_ods_list-odsobject(1) = '0'.
lv_odsobject = wa_ods_list-odsobject+1.
CONCATENATE '/BI0/A' lv_odsobject '00'
INTO ods_tabname.
ELSE.
lv_odsobject = wa_ods_list-odsobject.
CONCATENATE '/BIC/A'
lv_odsobject '00' INTO ods_tabname.
ENDIF.
CALL FUNCTION 'DDIF_NAMETAB_GET'
EXPORTING
tabname           = ods_tabname
TABLES
dfies_tab         = table_structure
EXCEPTIONS
NOT_FOUND         = 1
OTHERS            = 2.
if sy-subrc <> 0.
      clear mtext.
      MESSAGE ID sy-msgid TYPE sy-msgty 
	  NUMBER sy-msgno
      INTO mtext
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*     Internal error
      et_return-id = sy-msgid.
      et_return-type = sy-msgty.
      et_return-number = sy-msgno.
      et_return-message = mtext.
      append et_return.
      clear : et_return , mtext.
      exit.
  ENDIF.
LOOP AT table_structure.
AT NEW tabname.
et_ods_det-ods_obj_name = wa_ods_list-odsobject.
et_ods_det-ods_obj_desc = wa_ods_list-textlong.
et_ods_det-ods_tab_name = ods_tabname.
et_ods_det-odsotype     = wa_ods_list-odsotype.
ENDAT.
CLEAR: dfies.
CALL 'C_DD_READ_FIELD'
   ID 'TYPE'      FIELD 'X'
   ID 'TABNAME'   FIELD ods_tabname
   ID 'FIELDNAME' FIELD table_structure-fieldname
   ID 'LANGUAGE'  FIELD sy-langu.
*       DNTAB aus DFIES aufbauen.
MOVE:    dfies-fieldtext TO et_ods_det-field_desc.
et_ods_det-field      =
table_structure-fieldname.
et_ods_det-key_flag   =
table_structure-keyflag.
et_ods_det-field_pos  =
table_structure-position.
et_ods_det-datatype   =
table_structure-datatype.
et_ods_det-ddlen      =
table_structure-leng.
et_ods_det-decimals   =
table_structure-decimals.
APPEND et_ods_det.
CLEAR: et_ods_det, table_structure,
*      ods_tabname,
lv_string.
ENDLOOP.
CLEAR: wa_ods_list,lv_odsobject.
ENDLOOP.
IF et_ods_det IS NOT INITIAL.
CLEAR gt_message.
gt_message-msgty = gc_success.
gt_message-msgid = gc_msgclass.
gt_message-msgno = 005.
CALL FUNCTION 'BALW_BAPIRETURN_GET2'
EXPORTING
type   = gt_message-msgty
cl     = gt_message-msgid
number = gt_message-msgno
IMPORTING
return = gt_return.
APPEND gt_return-message TO et_return.
ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6347]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[184b19aa-8c82-4581-9c45-2c8df6c36a86]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3490]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[390]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_LKM_OPENHUB]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f33ea243-9920-4d45-ac00-ea30c35c3f70]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6347]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_LKM_OPENHUB" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_DELIMITER,CHAR1;IV_FILENAME,CHAR255;IV_USER,CHAR35;IV_PWD,CHAR35;IV_HOST,CHAR35;OHDEST,CHAR30;OH_DBTABLE,TABNAME;IV_PATH,CHAR35;IV_REQUID_L,RSSID;IV_REQUID_H,RSSID" "-ABAP_TABLE_PARAMETERS=ET_FILE_RETURN,BAPIRET2;IT_FIELDS,ZODI_FIELDS" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
TYPES: BEGIN OF gs_text,
line(500) TYPE c,
END OF gs_text.

TYPES: BEGIN OF ls_blob,
line(300) TYPE c,
END OF ls_blob.

TYPES: BEGIN OF ls_text,
line(300) TYPE c,
END OF ls_text.

DATA: wa_final   TYPE REF TO data,
it_final   TYPE REF TO data,
str_line   TYPE string,
str_linef  TYPE string,
gt_result  TYPE TABLE OF gs_text,
gc_error   VALUE 'E',
gc_success VALUE 'S'.

DATA:
lv_hdl TYPE i,
lv_cmd(120) TYPE c,
lv_slen TYPE i,
lv_line TYPE i.

DATA:
lc_dest TYPE rfcdes-rfcdest VALUE 'SAPFTPA',
lc_key TYPE i VALUE 26101957,
lc_pasv VALUE 'X',
lc_cmd1(20) TYPE c VALUE 'set passive on',
lc_cmd2(5) TYPE c VALUE 'put'.

DATA:
lt_result  TYPE TABLE OF ls_text.

data lv_path type char70.

FIELD-SYMBOLS:
<fs_wa_final> TYPE ANY,
<fs_it_final> TYPE ANY TABLE,
<fs_field>    TYPE ANY.


field-symbols <field> type any.


CREATE DATA wa_final TYPE (oh_dbtable).
CREATE DATA it_final TYPE TABLE OF (oh_dbtable).

ASSIGN wa_final->* TO <fs_wa_final>.
ASSIGN it_final->* TO <fs_it_final>.

*** If the user extracts the data twice,
*** where there is no new request ids available

IF IV_REQUID_H IS NOT INITIAL AND
IV_REQUID_L  = IV_REQUID_H.
CLEAR et_file_return.
et_file_return-type = 'I'.
et_file_return-message 
= 'No Incremental data to Extract'.
APPEND et_file_return.
EXIT.
ENDIF.

IF IV_REQUID_H is initial.

SELECT * FROM (oh_dbtable)
INTO CORRESPONDING FIELDS OF 
TABLE <fs_it_final>.

ELSE.

SELECT * FROM (oh_dbtable)
INTO CORRESPONDING FIELDS OF 
TABLE <fs_it_final>
WHERE OHREQUID GT IV_REQUID_L
AND OHREQUID LE IV_REQUID_H.

ENDIF.

IF <fs_it_final> IS NOT INITIAL.
LOOP AT <fs_it_final> INTO <fs_wa_final>.

DO.
ASSIGN COMPONENT sy-index OF STRUCTURE
<fs_wa_final> TO <fs_field>.

IF sy-subrc EQ 0.
str_linef = <fs_field>.
concatenate str_linef iv_delimiter into str_linef.
CONCATENATE str_line str_linef INTO
str_line.
*SEPARATED BY iv_delimiter.
CLEAR: str_linef, <fs_field>.
ELSE.
EXIT.
ENDIF.
ENDDO.
CONDENSE str_line NO-GAPS.
shift str_line left deleting
leading iv_delimiter.
APPEND str_line TO gt_result.
CLEAR: <fs_wa_final>, str_line.
ENDLOOP.
ELSE.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message = 'Data not available!'.
APPEND et_file_return.
ENDIF.


*Calling FTP program

*To Scrammble password

lv_slen = STRLEN( iv_pwd ).
CALL FUNCTION 'HTTP_SCRAMBLE'
EXPORTING
SOURCE      = iv_pwd
sourcelen   = lv_slen
key         = lc_key
IMPORTING
destination = iv_pwd.

CALL FUNCTION 'FTP_CONNECT'
EXPORTING
user            = iv_user
password        = iv_pwd
host            = iv_host
rfc_destination = lc_dest
IMPORTING
handle          = lv_hdl
EXCEPTIONS
not_connected   = 1
OTHERS          = 2.
IF sy-subrc <> 0.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message
= 'Unable to connect FTP.'.
APPEND et_file_return.
ELSE.
IF NOT lc_pasv IS INITIAL.
REFRESH lt_result.
lv_cmd  = lc_cmd1.
CALL FUNCTION 'FTP_COMMAND'
EXPORTING
handle        = lv_hdl
command       = lv_cmd
TABLES
data          = lt_result
EXCEPTIONS
tcpip_error   = 1
command_error = 2
data_error    = 3.
IF sy-subrc <> 0.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message
= 'Error in passing FTP .'.
APPEND et_file_return.
ENDIF.
CALL FUNCTION 'FTP_R3_TO_CLIENT'
EXPORTING
fname           = iv_filename
rfc_destination = lc_dest
character_mode  = lc_pasv
TABLES
text            = gt_result
EXCEPTIONS
command_error   = 1
data_error      = 2
OTHERS          = 3.
IF sy-subrc <> 0.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message
= 'Error passing data to FTP .'.
APPEND et_file_return.
ENDIF.
CONCATENATE lc_cmd2 iv_filename
INTO lv_cmd SEPARATED BY space.
REFRESH lt_result.

concatenate 'cd' iv_path into
lv_path separated by space.

CALL FUNCTION 'FTP_COMMAND'
EXPORTING
handle  = lv_hdl
command  = lv_path
TABLES
data  = lt_result
EXCEPTIONS
tcpip_error   = 1
command_error = 2
data_error    = 3.
IF sy-subrc NE 0.
clear et_file_return.
et_file_return-TYPE = gc_error.
et_file_return-message
= 'Error in passing FTP .'.
Append et_file_return.
EXIT.
ELSE.
clear et_file_return.
et_file_return-TYPE = gc_success.
et_file_return-message
= 'Directory changed successfully'.
Append et_file_return.
ENDIF.

CALL FUNCTION 'FTP_COMMAND'
EXPORTING
handle        = lv_hdl
command       = lv_cmd
TABLES
data          = lt_result
EXCEPTIONS
tcpip_error   = 1
command_error = 2
data_error    = 3.
IF sy-subrc NE 0.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message
= 'Error in passing FTP .'.
APPEND et_file_return.
EXIT.
ELSE.
CLEAR et_file_return.
et_file_return-type = gc_success.
et_file_return-message
= 'Data Transfer Successful'.
APPEND et_file_return.
ENDIF.
ELSE.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message
= 'No data Available.'.
APPEND et_file_return.
CALL FUNCTION 'FTP_DISCONNECT'
EXPORTING
handle = lv_hdl.
CALL FUNCTION 'RFC_CONNECTION_CLOSE'
EXPORTING
destination = lc_dest
EXCEPTIONS
OTHERS      = 1.
IF sy-subrc <> 0.
CLEAR et_file_return.
et_file_return-type = gc_error.
et_file_return-message
= 'Error in RFC connection.'.
APPEND et_file_return.
ENDIF.
ENDIF.
ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6348]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c1ec1966-cd30-4595-9b56-691937ce9d44]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3491]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[20]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java BW Metadata Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9d00b223-aff8-44ed-b948-924fbaf2a615]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6348]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Start of OdiSAPBWData.java
/**
 * Super class for any SAP BW Data
 * TODO: Remove Field specific details (e.g. data type etc.)from this class to a seperate Field.java
 */
public class OdiSAPBWData {

	/**
	 * node name
	 */
	String name;
	/**
	 * node description
	 */
	String desc;
	/**
	 * Short Desc
	 */
	String heading;
	/**
	 * true- this node is root
	 * false- it is not root
	 */
	boolean root = false;
	
	public String getDesc() {
		return desc;
	}
	public void setDesc(String desc) {
		this.desc = desc;
		//Set the heading- Max Char limit 250
		if(desc.length() > 250){
			setHeading(desc.substring(0, 249));
		
		}
		else
			setHeading(desc);
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public boolean isRoot() {
		return root;
	}
	public void setRoot(boolean root) {
		this.root = root;
	}
	public String getHeading() {
		return heading;
	}
	public void setHeading(String heading) {
		this.heading = heading;
	}
}
//End of OdiSAPBWData.java

//Start of OdiSAPBWTableField.java


/**
 * Super class for Column details
 */
public class OdiSAPBWTableField extends OdiSAPBWData {
	public static int P_TABLE = 0;
	public static int Q_TABLE = 1;
	public static int SID_TABLE = 2;
	/**
	 * SAP Table name to which this table belongs. This will be in use
	 * for data targets like InfoObject which is comprise of multiple tables
	 */
	String sapTableName = "";
	/**
	 * SAP Table Type- P, Q, SID Tables
	 */
	int sapTableType = -1;
	/**
	 * Short Desc
	 */
	String heading;
	/**
	 * Data Type
	 */
	String dataType;
	/**
	 * Field Length
	 */
	int fieldLen = 0;
	/**
	 * Decimal Len
	 */
	int decLen = 0;
	/**
	 * Mandatory Field: 
	 * "0"- Not Mandatory
	 * "1"- Mandatory 
	 */
	String mandatory = "0";
	/**
	 * @author Anupam.Srivastava
	 * Date: 15,June,2010
	 * 
	 * Added BW-Structure for Hierarchies
	 *  For the following Columns :- HIEID,HIETYPE,HIENM,VERSION,DATETO,DATEFROM,LANGU,TXTSH,TXTMD
	 */
	
	String heiID;
	
	String hieType;
    
	String hieNm;
	
	String hieVersion;
	
    String hieDateTo;
	
	String hieDateFrom;
    
	String hieLangu;
	
	String hieTxtSh;
	
	String hieTxtMd;
	
		
	private int hashCode = 0;

	public int hashCode(){
		return hashCode;
	}
	
	public boolean equals(Object obj){
		if(!(obj instanceof OdiSAPBWTableField))
			return false;
		if(hashCode == obj.hashCode())
			return true;
		return false;
	}
	
	/* (non-Javadoc)
	 * @see OdiSAPBWData#setName(java.lang.String)
	 */
	public void setName(String name){
		this.name = name;
		hashCode = name.hashCode();
	}
	/* (non-Javadoc)
	 * @see OdiSAPBWData#setDesc(java.lang.String)
	 */
	public void setDesc(String desc) {
		this.desc = desc;
		//Set the heading- Max Char limit 35
		if(desc.length() > 35){
			/*if(desc.charAt(35) == ' ')
				setHeading(desc.substring(0, 35));
			else{
				String hdr = desc.substring(0, desc.lastIndexOf(' ', 35));
				setHeading(hdr);
			}*/
			setHeading(desc.substring(0, 35));
		}
		else
			setHeading(desc);
	}
	
	public String getDataType() {
		return dataType;
	}
	public void setDataType(String dataType) {
		this.dataType = dataType;
	}
	public int getDecLen() {
		return decLen;
	}
	public void setDecLen(int decLen) {
		this.decLen = decLen;
	}
	public int getFieldLen() {
		return fieldLen;
	}
	public void setFieldLen(int fieldLen) {
		this.fieldLen = fieldLen;
	}
	public String getHeading() {
		return heading;
	}
	public void setHeading(String heading) {
		this.heading = heading;
	}
	public String getMandatory() {
		return mandatory;
	}
	public void setMandatory(boolean flag) {
		if(flag)
			this.mandatory = "1";
		else
			this.mandatory = "0";
		
	}

	/**
	 * @return the sapTableName
	 */
	public String getSapTableName() {
		return sapTableName;
	}

	/**
	 * @param sapTableName the sapTableName to set
	 */
	public void setSapTableName(String sapTableName) {
		this.sapTableName = sapTableName;
	}

	/**
	 * @return the sapTableType
	 */
	public int getSapTableType() {
		return sapTableType;
	}

	/**
	 * @param sapTableType the sapTableType to set
	 */
	public void setSapTableType(int sapTableType) {
		this.sapTableType = sapTableType;
	}
/**
 * @author Anupam.Srivastava
 * Date :- 15,June,2010
 * 
 * Generate the Getter and Setter Method for the Hierarchies details,
 * 
 * For the Following Columns:-HIEID,HIETYPE,HIENM,VERSION,DATETO,DATEFROM,LANGU,TXTSH,TXTMD of Hierarchies
 * 
 */
	public String getHeiID() {
		return heiID;
	}

	public void setHeiID(String heiID) {
		this.heiID = heiID;
	}

	public String getHieDateFrom() {
		return hieDateFrom;
	}

	public void setHieDateFrom(String hieDateFrom) {
		this.hieDateFrom = hieDateFrom;
	}

	public String getHieDateTo() {
		return hieDateTo;
	}

	public void setHieDateTo(String hieDateTo) {
		this.hieDateTo = hieDateTo;
	}

	public String getHieLangu() {
		return hieLangu;
	}

	public void setHieLangu(String hieLangu) {
		this.hieLangu = hieLangu;
	}

	public String getHieNm() {
		return hieNm;
	}

	public void setHieNm(String hieNm) {
		this.hieNm = hieNm;
	}

	public String getHieTxtMd() {
		return hieTxtMd;
	}

	public void setHieTxtMd(String hieTxtMd) {
		this.hieTxtMd = hieTxtMd;
	}

	public String getHieTxtSh() {
		return hieTxtSh;
	}

	public void setHieTxtSh(String hieTxtSh) {
		this.hieTxtSh = hieTxtSh;
	}

	public String getHieType() {
		return hieType;
	}

	public void setHieType(String hieType) {
		this.hieType = hieType;
	}

	public String getHieVersion() {
		return hieVersion;
	}

	public void setHieVersion(String hieVersion) {
		this.hieVersion = hieVersion;
	}
	
	
}

//End of OdiSAPBWTableField.java

//Start of InfoArea.java

/**
 * High level InfoArea object
 * @author Prasanta.Paul
 *
 */
public class InfoArea extends OdiSAPBWData {
	
	private String Parent;
	private String Child;
	private String Next;
	
	public String getChild() {
		return Child;
	}
	public void setChild(String child) {
		Child = child;
	}
	public String getNext() {
		return Next;
	}
	public void setNext(String next) {
		Next = next;
	}
	public String getParent() {
		return Parent;
	}
	public void setParent(String parent) {
		Parent = parent;
	}

}
//End of InfoArea.java

//Start of InfoAreaNode.java
import java.util.Vector;


/**
 * InfoAreaNode- contains IndoArea, SubInfoarea and their childs
 * @author Prasanta.Paul
 *
 */
public class InfoAreaNode extends OdiSAPBWData {
	
	private InfoAreaNode parent; // will be used for InfoCube Search bottom to top
	private Vector childs;
	private Vector nexts; // is not in use
	/**
	 * list of infocubes only for the leaf infoarea
	 */
	private Vector infoCubes;
	/**
	 * list of infoobjects only for the leaf infoarea
	 */
	private Vector infoObjects;
	/**
	 * list of ODS/DSO only for the leaf infoarea
	 */
	private Vector odsdsos;
	
	public Vector getInfoCubes() {
		return infoCubes;
	}
	public void setInfoCubes(Vector infoCubes) {
		this.infoCubes = infoCubes;
	}
	public Vector getInfoObjects() {
		return infoObjects;
	}
	public void setInfoObjects(Vector infoObjects) {
		this.infoObjects = infoObjects;
	}
	public Vector getOdsdsos() {
		return odsdsos;
	}
	public void setOdsdsos(Vector odsdsos) {
		this.odsdsos = odsdsos;
	}
	public void set(InfoArea ia){
		setName(ia.getName());
		setDesc(ia.getDesc());
	}
	public Vector getChilds() {
		return childs;
	}
	public void setChilds(Vector childs) {
		this.childs = childs;
	}
	public Vector getNexts() {
		return nexts;
	}
	public void setNexts(Vector nexts) {
		this.nexts = nexts;
	}
	public InfoAreaNode getParent() {
		return parent;
	}
	public void setParent(InfoAreaNode parent) {
		this.parent = parent;
	}

}
//End of InfoAreaNode.java

//Start of InfoCube.java
import java.util.ArrayList;
import java.util.Vector;


public class InfoCube extends OdiSAPBWData {
	
	/**
	 * the infoarea/subinfoarea, this infocube belongs to
	 * if this is null, this infocube belongs to the generic list of
	 * infocubes
	 */
	InfoAreaNode infoArea = null;
	
	/**
	 * collection of Dimension instances
	 */
	ArrayList dimentions;
	/**
	 * collection of KeyField instances
	 */
	ArrayList keyFigures;
	/**
	 * collection of Time and Unit Dimension instances
	 */
	ArrayList tuDimension;
	
	/**
	 * Fact Table of the InfoCube
	 */
	String factTable = "";

	public ArrayList getDimentions() {
		return dimentions;
	}

	public void setDimentions(ArrayList dimentions) {
		this.dimentions = dimentions;
	}

	public ArrayList getKeyFigures() {
		return keyFigures;
	}

	public void setKeyFigures(ArrayList keyFields) {
		this.keyFigures = keyFields;
	}

	public InfoAreaNode getInfoArea() {
		return infoArea;
	}

	public void setInfoArea(InfoAreaNode infoArea) {
		this.infoArea = infoArea;
	}

	/**
	 * @return the factTable
	 */
	public String getFactTable() {
		return factTable;
	}

	/**
	 * @param factTable the factTable to set
	 */
	public void setFactTable(String factTable) {
		this.factTable = factTable;
	}
	
	/**
	 * 
	 * @return the Time and Unit Dimension
	 */
	public ArrayList getTimeUnitDim() {
		return tuDimension;
	}

	/**
	 * 
	 * @param timeUnitDim to Time and Unit Dimension
	 */
	
	public void setTimeUnitDim(ArrayList timeUnitDim) {
		this.tuDimension = timeUnitDim;
	}
}

//End of InfoCube.java

//Start of Dimension
import java.util.ArrayList;


public class Dimension extends OdiSAPBWData {

	/**
	 * collection of Characteristics
	 */
	ArrayList characteristics;
	
	InfoCube parent;

	public ArrayList getCharacteristics() {
		return characteristics;
	}

	public void setCharacteristics(ArrayList characteristics) {
		this.characteristics = characteristics;
	}

	public InfoCube getParent() {
		return parent;
	}

	public void setParent(InfoCube parent) {
		this.parent = parent;
	}
}
//End of Dimension

//Start of Characteristic

public class Characteristic extends OdiSAPBWData {
	/**
	 * SID Table Name
	 */
	String sidTable = "";

	/**
	 * @return the sidTable
	 */
	public String getSidTable() {
		return sidTable;
	}

	/**
	 * @param sidTable the sidTable to set
	 */
	public void setSidTable(String sidTable) {
		this.sidTable = sidTable;
	}
	
}
//End of Characteristic

//Start of KeyFigure.java

public class KeyFigure extends OdiSAPBWTableField {

	InfoCube parent;
	/**
	 * Changed on: 10th August, 2009
	 * This is the internal key figure field name. This will be 
	 * used for LKM during InfoCube data extraction
	 * e.g. ZQTY (Display Name) - /BIC/ZQTY (Internal Field Name)
	 * 
	 * FIXME: Remove Internal Field Name: ODI itself is handling special
	 * char.
	 * @deprecated
	 */
	String internalFieldName = "";
	public InfoCube getParent() {
		return parent;
	}

	public void setParent(InfoCube parent) {
		this.parent = parent;
	}

	/**
	 * @return the internalFieldName
	 * @deprecated
	 */
	public String getInternalFieldName() {
		return internalFieldName;
	}

	/**
	 * @param internalFieldName the internalFieldName to set
	 * @deprecated
	 */
	public void setInternalFieldName(String internalFieldName) {
		this.internalFieldName = internalFieldName;
	}
}
//End of KeyFigure.java

//Start of InfoObject.java
import java.util.ArrayList;
import java.util.Hashtable;


/**
 * hashCode() and equals() methods are overwritten to consider repeated associted InfoObjects
 * while InfoCube reverse
 */
public class InfoObject extends OdiSAPBWData {

	/**
	 * the infoarea/subinfoarea, this infoobject belongs to
	 * if this is null, this infoobject belongs to the generic list of
	 * infoobjects
	 */
	InfoAreaNode infoArea = null;
	/**
	 * List of tables comprising InfoObject: (We are considering P, Q and Text Tables)
	 */
	ArrayList tables = null;
	
	ArrayList textNodeTables = null;
	
	
	/**
	 * List of tables comprising InfoObject: (We are considering P, Q and Text Tables)
	 */
	/**
	 *  For Hierarchy Table
	 */
	ArrayList hierTables = null;
	
	/**
	 * For Hirarchy Structure i.e. Structure for Hierarchies details
	 */
	ArrayList hierTabStructure = null;
	
	
	/**
	 * List of InfoObject attributes
	 */
	ArrayList attributes = null;
	/**
	 * Combination of P and Q tables
	 */
	InfoObjTable mergedTable;
	/**
	 * Mapping between Merge Table field name and corresponding Attribute instance
	 * This mapping will be used during meta data reverse to read extra properties of attributes e.g. 
	 * navigation, display and time dependency.
	 */
	Hashtable fieldAttributeMap;
	/**
	 * this is the key field of the complete info object. This field should be used to join
	 * InfoCube or TextField.
	 */
	String sidKeyField = "";
	int hashCode = -1;
	/**
	 * Do we need new hashCode ? 
	 * Everytime you set new InfoObject name, hashCode should
	 * be recalculated
	 */
	boolean refresh = false;
    
	
  /*  public int hashCode(){
    	
    	//System.out.println("hashCode()");
    	return hashCode; 
    }*/
    
 /* public boolean equals(Object obj){
	   //System.out.println("##InfoObject-equals()");
	  
	   if(hashCode == obj.hashCode())
		   return true;
	   return false;
    }*/
    
   	/*
	 * (non-Javadoc)
	 * 
	 * @see OdiSAPBWData#setName(java.lang.String)
	 */
	public void setName(String name) {
		super.setName(name);
		// Calculate hashCode for this new InfoObject Name
		/*refresh = true;
		this.hashCode();*/
		//this.hashCode = this.name.hashCode();
	}
	
	public InfoAreaNode getInfoArea() {
		return infoArea;
	}
	
	public void setInfoArea(InfoAreaNode infoArea) {
		this.infoArea = infoArea;
	}
	
	public ArrayList getAttributes() {
		return attributes;
	}
	
	public void setAttributes(ArrayList attributes) {
		this.attributes = attributes;
	}
	
	public ArrayList getTables() {
		return tables;
	}
	
	public void setTables(ArrayList tables) {
		this.tables = tables;
	}
	
	// added to fix postable node issue
	public ArrayList getNodeTextTables() {
		return textNodeTables;
	}
	
	public void setNodeTextTables(ArrayList tables) {
		this.textNodeTables = tables;
	}
	// end of code added
	
	
	
	public InfoObjTable getMergedTable() {
		return mergedTable;
	}
	
	public void setMergedTable(InfoObjTable mergedTable) {
		this.mergedTable = mergedTable;
	}

	/**
	 * @return the sidKeyField
	 */
	public String getSidKeyField() {
		return sidKeyField;
	}

	/**
	 * @param sidKeyField the sidKeyField to set
	 */
	public void setSidKeyField(String sidKeyField) {
		this.sidKeyField = sidKeyField;
	}
	
	public int countAttribute(){
		if(attributes == null)
			return 0;
		else
			return attributes.size();
	}
	
	public int countTables(){
		if(tables == null)
			return 0;
		else
			return tables.size();
	}
	/**
	 * Copy InfoObject properties (except name and description)-
	 * -Attributes
	 * -Tables
	 * -Merge Table
	 * -SID Key Field
	 * @param iobj
	 */
	public void copyInfoObject(InfoObject iobj){
		setAttributes(iobj.getAttributes());
		setFieldAttributeMap(iobj.getFieldAttributeMap());
		setTables(iobj.getTables());
		setMergedTable(iobj.getMergedTable());
		setSidKeyField(iobj.getSidKeyField());
		/**
		 * Added by anupam for the BW- Hierarchy Table
		 * 
		 * BW- Hierarchy Table(Set the Property of the Table)
		 */
		
		setHierTables(iobj.getHierTables());
		
		/**
		 * Added for postable node bug
		 */
		setNodeTextTables(iobj.getNodeTextTables());
		
		/**
		 * Added for the Structure for Hierarchies 
		 */
		setHierTabStructure(iobj.getHierTables());
	}

	/**
	 * @return the fieldAttributeMap
	 */
	public Hashtable getFieldAttributeMap() {
		return fieldAttributeMap;
	}

	/**
	 * @param fieldAttributeMap the fieldAttributeMap to set
	 */
	public void setFieldAttributeMap(Hashtable fieldAttributeMap) {
		this.fieldAttributeMap = fieldAttributeMap;
	}

	public ArrayList getHierTables() {
		return hierTables;
	}

	public void setHierTables(ArrayList hierTables) {
		this.hierTables = hierTables;
	}

	public ArrayList getHierTabStructure() {
		return hierTabStructure;
	}

	public void setHierTabStructure(ArrayList hierTabStructure) {
		this.hierTabStructure = hierTabStructure;
	}

	
}


//End of InfoObject.java

// Start of InfoObjectWraper.java

/**
 *This class holds InfoObject instance and is used to track unique
 *InfoObject instance during InfoCube reverse process. Check OdiSAPBWSnpRevHandler.java
 *for it's usage.
 */
public class InfoObjectWraper {

	InfoObject iobj;
	int hashCode = -1;

	/**
	 * @return the iobj
	 */
	public InfoObject getIobj() {
		return iobj;
	}

	/**
	 * @param iobj the iobj to set
	 */
	public void setIobj(InfoObject iobj) {
		this.iobj = iobj;
		hashCode();
	}
	
	public int hashCode(){
		hashCode = iobj.getName().hashCode();
		return hashCode;
	}
	
	public boolean equals(Object obj){
		if(iobj == null)
			return false;
		if(!(obj instanceof InfoObjectWraper))
			return false;
		InfoObjectWraper iow = (InfoObjectWraper) obj;
		if(this.hashCode() == iow.hashCode)
			return true;
		else 
			return false;
		/*
		InfoObject newiobj = iow.getIobj();
		if(newiobj == null)
			return false;
		if(iobj.getName().equals(newiobj.getName()))
			return true;
		else
			return false;*/
	}
}
// End of InfoObjectWraper.java

//Start of InfoObjTable.java


import java.util.ArrayList;


/**
 * TODO: Remove instances of 3 tables P, S and T. We will be using only one merged table.
 */
public class InfoObjTable extends OdiSAPBWData {

	/*
	 * Tables relevent to InfoObject
	 */
	/*public static int P_TABLE = 0,
	                  Q_TABLE = 1,
	                  T_TABLE = 2,
	                  M_TABLE = 3;
	  */
	//Added for the BW- Hierarchy*******************************************************@Anupam****************************
	public static int P_TABLE = 0,
    Q_TABLE = 1,
    T_TABLE = 2,
    M_TABLE = 3,
    H_TABLE = 4,
	R_TABLE = 5;  // Added for Postable node issue
	//=================================================================End of Hierarchy Table===============@Anupam===========
	/**
	 * multiple keys will be seperated by ,
	 * e.g. APO_LOCNO,LANGU
	 */
	String keys = "";
	/**
	 * We will handle only 3 tables P, S and T Tables
	 */
	int tableType = -1;
	
	private ArrayList cols;
	
	private ArrayList colsHStru;

	public String getKeys() {
		return keys;
	}

	public void setKeys(String keys) {
		this.keys = keys;
	}

	public ArrayList getCols() {
		return cols;
	}

	public void setCols(ArrayList cols) {
		//List of OdiSAPBWData- Col_Name, Col_Dec, Col_DataType, Col_Len, Mandatory
		this.cols = cols;
	}

	public int getTableType() {
		return tableType;
	}

	public void setTableType(int tableType) {
		this.tableType = tableType;
	}

	public ArrayList getColsHStru() {
		return colsHStru;
	}

	public void setColsHStru(ArrayList colsHStru) {
		this.colsHStru = colsHStru;
	}
}

//End of InfoObjTable.java

//Start of InfoObjAtt.java

public class InfoObjAtt extends OdiSAPBWData {

	/**
	 * multiple keys will be seperated by ,
	 * e.g. APO_LOCNO,APO_SUBLOC
	 */
	String keys = "";
	/**
	 * Field Name on P or Q Table corresponding to this attribute
	 */
	String fieldName = "";
	public static final int NAVIGATION = 0;
	public static final int DISPLAY = 1;
	
	int attType = -1;
	boolean isTimeDependent = false;

	public String getKeys() {
		return keys;
	}

	public void setKeys(String keys) {
		this.keys = keys;
	}

	/**
	 * @return the attType
	 */
	public int getAttType() {
		return attType;
	}

	/**
	 * @param attType the attType to set
	 */
	public void setAttType(int attType) {
		this.attType = attType;
	}

	/**
	 * @return the isTimeDependent
	 */
	public boolean isTimeDependent() {
		return isTimeDependent;
	}

	/**
	 * @param isTimeDependent the isTimeDependent to set
	 */
	public void setTimeDependent(boolean isTimeDependent) {
		this.isTimeDependent = isTimeDependent;
	}

	/**
	 * @return the fieldName
	 */
	public String getFieldName() {
		return fieldName;
	}

	/**
	 * @param fieldName the fieldName to set
	 */
	public void setFieldName(String fieldName) {
		this.fieldName = fieldName;
	}
}
//End of InfoObjAtt.java

//Start of ODSDSO.java
import java.util.ArrayList;

/**
 * TODO: Update ODS/DSO Field details with- FIELD_POS, DATATYPE, DDLEN, DECIMALS
 *
 */
public class ODSDSO extends OdiSAPBWData{

	/**
	 * the infoarea/subinfoarea, this ODS/DSO belongs to
	 * -if this is null, this ODS/DSO belongs to the generic list of
	 * ODS/DSO
	 */
	InfoAreaNode infoArea;
	
	/**
	 * ODS/DSO Key Fields
	 */
	ArrayList keyFields;
	/**
	 * ODS/DSO Data Fields
	 */
	ArrayList dataFields;
	
	/**
	 * ODS/DSO SAP Table name- used during LKM 
	 */
	String odsoTableName;
	private String odsType;
	String odsTypeUI;
	
	public InfoAreaNode getInfoArea() {
		return infoArea;
	}
	public void setInfoArea(InfoAreaNode infoArea) {
		this.infoArea = infoArea;
	}
	public ArrayList getDataFields() {
		return dataFields;
	}
	public void setDataFields(ArrayList dataFields) {
		this.dataFields = dataFields;
	}
	public ArrayList getKeyFields() {
		return keyFields;
	}
	public void setKeyFields(ArrayList keyFields) {
		this.keyFields = keyFields;
	}
	public String getOdsoTableName() {
		return odsoTableName;
	}
	public void setOdsoTableName(String odsoTableName) {
		this.odsoTableName = odsoTableName;
	}
	public String getOdsType() {
		try {
		//	OdiSAPBWLogger.getLogger().log("ODSDSO.getOdsType() invoked, returned: "+odsType, OdiSAPBWLogger.FINEST);
		} catch (Exception ex){
			
		}
		return odsType;
	}
	public void setOdsType(String odsType) {
		try {
		//	OdiSAPBWLogger.getLogger().log("ODSDSO.setOdsType() invoked, value set to: "+odsType, OdiSAPBWLogger.FINEST);
		} catch (Exception ex){
			
		}
		this.odsType = odsType;
	}
	public String getOdsTypeUI() {
		try {
		//	OdiSAPBWLogger.getLogger().log("ODSDSO.getOdsType() invoked, returned: "+odsTypeUI, OdiSAPBWLogger.FINEST);
		} catch (Exception ex){
			
		}
		return odsTypeUI;
	}
	public void setOdsTypeUI(String odsTypeUI) {
		try {
		//	OdiSAPBWLogger.getLogger().log("ODSDSO.setOdsTypeUI() invoked, value set to: "+odsTypeUI, OdiSAPBWLogger.FINEST);
		} catch (Exception ex){
			
		}
		this.odsTypeUI = odsTypeUI;
	}
	
	
	
}
//End of ODSDSO.java 

//Start of ODSDSOKeyField

public class ODSDSOKeyField extends OdiSAPBWTableField {

	ODSDSO parent;

	public ODSDSO getParent() {
		return parent;
	}

	public void setParent(ODSDSO parent) {
		this.parent = parent;
	}
}
//End of ODSDSOKeyField

//Start of ODSDSODataField

public class ODSDSODataField extends OdiSAPBWTableField {

	ODSDSO parent;

	public ODSDSO getParent() {
		return parent;
	}

	public void setParent(ODSDSO parent) {
		this.parent = parent;
	}
}
//End of ODSDSODataField

//Start of OpenHubData.java
/**
 *	This class is used to display OHD node on TreeBrowser
 */
public class OpenHubData extends OdiSAPBWData {
}
//End of OpenHubData.java

//Start of OpenHubDestination.java
/**
 * This class representa Open Hub Destination information
 */
public class OpenHubDestination extends OdiSAPBWData {
	
	private OpenHubTable oht;

	public OpenHubTable getOht() {
		return oht;
	}

	public void setOht(OpenHubTable oht) {
		this.oht = oht;
	}
}
//End of OpenHubDestination.java

//Start of OpenHubTable.java
import java.util.Vector;

/**
 * This class represents Open Hub Destination Table information
 */
public class OpenHubTable extends OdiSAPBWData {
	
	String OhDest;
	
	Vector columns  = new Vector();

	public Vector getColumns() {
		return columns;
	}

	public void setColumns(Vector columns) {
		this.columns = columns;
	}

	public String getOhDest() {
		return OhDest;
	}

	public void setOhDest(String ohDest) {
		OhDest = ohDest;
	}

}
//End of OpenHubTable.java

//Start of OpenHubColumn.java
/**
 * Represents Open Hub Destination Table columns and their meta data
 */
public class OpenHubColumn extends OdiSAPBWTableField {
	
}
// End of OpenHubColumn.java

//Start of FlexField

public class FlexField {
	
	/*
	 * Refer RKM Design document to get more details about FlexFields
	 * and their usage.
	 */
	//DataStore- FlexFields
	public static String SAPBW_OBJECT_TYPE = "SAPBW_OBJECT_TYPE"; //"SAPBW_OBJECT_TYPE";
	public static String SAPBW_TABLE_NAME = "SAPBW_TABLE_NAME"; //"SAP_BW_TABLE_NAME";
	public static String SAPBW_FACT_TABLE_NAME = "SAPBW_FACT_TABLE_NAME"; //"SAP_BW_FACT_TABLE_NAME";
	
	// Column- FlexFields
	public static String SAPBW_SID_TABLE_NAME = "SAPBW_SID_TABNAME";//"SAP_BW_SID_TABLE_NAME";
	public static String SAPBW_COLUMN_TYPE = "SAPBW_COLTYPE";//"SAP_BW_COLUMN_TYPE";
	/**
	 * Applicable for IOPK and KF columns of InfoCube
	 */
	public static String SAPBW_COLUMN_NAME = "SAPBW_COLNAME";//"SAP_BW_COLUMN_NAME";
	public static String SAPBW_PTABLE_NAME = "SAPBW_PTABLE_NAME"; //"SAP_BW_PTABLE_NAME";
	public static String SAPBW_QTABLE_NAME = "SAPBW_QTABLE_NAME"; //"SAP_BW_QTABLE_NAME";
	public static String SAPBW_NAVIGATION_ATTRIBUTE = "SAPBW_NAVIGATION_ATTRIBUTE"; //"SAP_BW_NAVIGATION_ATTRIBUTE";
	public static String SAPBW_TIME_DEPENDENT_ATTRIBUTE = "SAPBW_TIME_DEPENDENT_ATTRIBUTE"; //"SAP_BW_TIME_DEPENDENT_ATTRIBUTE";
						
	/**
	 * Flexfield code
	 */
	String ffCode;
	
	/**
	 * Flexfield value
	 */
	String ffValue;
	
	public String getFfCode() {
		return ffCode;
	}
	public void setFfCode(String ffCode) {
		this.ffCode = ffCode;
	}
	public String getFfValue() {
		return ffValue;
	}
	public void setFfValue(String ffValue) {
		this.ffValue = ffValue;
	}
}
//End of FlexField

//Start of FlexFieldObject
import java.util.ArrayList;


/**
 * FlexFieldObject can be either Data Store or Column
 * This might have multiple FlexField instances
 */
public class FlexFieldObject {
	
	public static int DATASTORE = 1,
					  COLUMN = 2;
	/**
	 * Table or Column name for which this FlexField information
	 * need to be stored
	 */
	private String objName;
	
	/**
	 * ODI Object ID
	 */
	private int objID;
	
	/**
	 * Type of Object- 
	 * For our implementation types are DATASTORE and COLUMN
	 * DATASTORE is default object type
	 * Data Store: 2400
	 * Column: 2600
	 */
	private int objType;
	
	/**
	 * DATASTORE and COLUMN ODI internal ID- every data store and column will have
	 * different internal id
	 */
	int instanceID;
	
	/**
	 * Object can have multiple FlexFields
	 */
	private ArrayList flexfields;
	
	public int getObjID() {
		return objID;
	}
	public String getObjName() {
		return objName;
	}
	public void setObjName(String objName) {
		this.objName = objName;
	}
	public int getObjType() {
		return objType;
	}
	
	public void setObjType(int objType) {
		if(objType == COLUMN){
			this.objType = COLUMN;
			this.objID = 2600;
		}
		else{
			//Default value is Data Store
			this.objType = DATASTORE;
			this.objID = 2400;
		}
	}
	
	public ArrayList getFlexfields() {
		return flexfields;
	}
	
	public void setFlexfields(ArrayList flexfields) {
		this.flexfields = flexfields;
	}
}
//End of FlexFieldObject

//Start of MyNode.java
import javax.swing.tree.DefaultMutableTreeNode;



public class MyNode extends DefaultMutableTreeNode {
	
	OdiSAPBWData node;
	//selected status
	boolean selected;
	
	public MyNode(String name, String desc, boolean selected){
		//this.name = name;
		//this.desc = desc;
		super(name);
		this.selected = selected;
	}
	
	public MyNode(OdiSAPBWData node){
		super(node.getName());
		this.node = node;
		this.selected = false;
	}
	public boolean isSelected() {
		return selected;
	}
	public void setSelected(boolean selected) {
		this.selected = selected;
	}

	public OdiSAPBWData getNode() {
		return node;
	}

	public void setNode(OdiSAPBWData node) {
		this.node = node;
	}

}
//End of MyNode.java

//Start of TimeUnitDimension.java

public class TimeUnitDimension extends OdiSAPBWTableField {

	InfoCube parent;
	/**
	 * Changed on: 10th August, 2009
	 * This is the internal key figure field name. This will be 
	 * used for LKM during InfoCube data extraction
	 * e.g. ZQTY (Display Name) - /BIC/ZQTY (Internal Field Name)
	 */
	String internalFieldName = "";
	public InfoCube getParent() {
		return parent;
	}

	public void setParent(InfoCube parent) {
		this.parent = parent;
	}

	/**
	 * @return the internalFieldName
	 */
	public String getInternalFieldName() {
		return internalFieldName;
	}

	/**
	 * @param internalFieldName the internalFieldName to set
	 */
	public void setInternalFieldName(String internalFieldName) {
		this.internalFieldName = internalFieldName;
	}
}


//End of TimeUnitDimension.java]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6349]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cc4806a3-4fee-46f9-ac2e-1fc01e2f627e]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3492]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[40]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java BW Connectivity Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cb474ca4-9644-4076-8140-078dc80f1dd0]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6349]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Start of UIListener.java
import java.util.ArrayList;
import java.util.Vector;


public interface UIListener {
	
	/**
	 * retrieve List of InfoAreas
	 * @return
	 */
	public Vector getInfoAreaListRFC();
	/**
	 * retrieve InfoAreaDetails List
	 * @param parent
	 * @return
	 */
	public Vector getInfoAreaDetails(InfoAreaNode parent);
	
	/**
	 * retrieve selected infocube details
	 * @param infoArea
	 * @return
	 */
	public Vector getInfoCubeDetails(String infoCubeName);
	
	/**
	 * retrive all InfoObjects
	 * @return
	 */
	public Vector getAllInfoObjects();
	/**
	 * retrieve info object details
	 * @param infoObjName
	 * @return
	 */
	public InfoObject getInfoObjectDetails(String infoObjName);
	
	
	/**
	 * @author Anupam.Srivastava
	 * 
	 * retrive Hierarchy Structure 
	 * Date : 16,June,2010
	 * 
	 */
	public ArrayList getHierStructureName(String infoObjName);
	
	
	/**
	 * retrieve ODS/DSO details- 
	 * if odsName == null, fetch all ODS/DSO details
	 * otherwise details of specified ODS/DSO
	 * @param odsName
	 * @return
	 */
	public Vector getODSDSODetails(String odsName);

	/**
	 * Data for the OpenHub
	 * Get List of Open Hub Destinations
	 */
	public Vector getOpenHubDestinations();
	
	/**
	 * Data for the OpenHub Tables And Columns 
	 */
	public OpenHubTable getOpenHubData(String ohd);
	
	/**
	 * Look up for InfoCubes matching search criteria
	 * @param srchStr
	 * @return
	 */
	//public Vector lookupInfoCube(String srchStr);
	
	/**
	 * Look up for InfoObjects matching search criteria
	 * @param srchStr
	 * @return
	 */
	public Vector lookupInfoObject(String infoObjName, String infoObjDesc);
	
	/**
	 * Look up for ODS/DSO objects matching search criteria
	 * @param srchStr
	 * @return
	 */
	public Vector lookupODSDSO(String odsoName, String odsoDesc);
	
	/**
	 * Look up for InfoCube and its associated InfoArea
	 * @param infoCName
	 * @param infoCDesc
	 * @return
	 */
	public Vector getLookupIcubeIarea(String infoCName, String infoCDesc);
	
	/**
	 * Look up for Open Hub Destinations
	 * @param ohName
	 * @param ohDesc
	 * @return
	 */
	public Vector getLookupOhDestination(String ohName, String ohDesc);
}

//End of UIListener.java



// Start of OdiSAPBWConnection.java
import java.util.Vector;


/**
 * This is the base class 
 */
public abstract class OdiSAPBWConnection implements UIListener {
	
	protected boolean NO_GUI = false;
	protected String SAP_JCO_REP = "SAP_BW_JCO_REP";
	protected String CONNECTION_POOL = "";
	
	// JOC Connection properties 
	public static  final String SID = "SID";
	public static  final String SAP_CLIENT = "SAP_CLIENT";
	public static  final String SAP_USER_ID = "SAP_USER_ID";
	public static  final String SAP_PASSWORD = "SAP_PASSWORD";
	public static  final String SAP_HOST = "SAP_HOST";
	public static  final String SAP_SYS_NUM = "SAP_SYS_NUM";
	public static  final String SAP_LN = "SAP_LN";
	public static  final String POOL_SIZE = "POOL_SIZE";
	
	
	/*
	 ******************************************************
	 ******************************************************
	 * RFCs to extract SAP BW Meta Data
	 * *****************************************************
	 * *****************************************************
	 */
	/**
	 * RFC: Get list of InfoAreas
	 */
	protected final String SAP_INFOAREA_GETLIST_RFC = "ZODI_INFOAREA_GETLIST";//"Z_ODI_INFOAREA_GETLIST";
	/**
	 * RFC: Get list of InfoObjects: Standard BAPI
	 */
	protected final String SAP_IOBJ_GETLIST_RFC = "BAPI_IOBJ_GETLIST";
	/**
	 * RFC: Get list of Open Hub destinations
	 */
	protected final String SAP_RSB_API_OHS_DEST_GETLIST ="ZODI_OHDEST_SEARCH";
	/**
	 * RFC: Get details of InfoArea (list of associated InfoObjects, InfoCubes and ODS/DSO)
	 */
	protected final String SAP_INFOAREA_DETAILS_RFC = "ZODI_INFOAREA_GETDETAILS";//"Z_ODI_INFOAREA_GETDETAILS";
	/**
	 * RFC: Get details of InfoObject
	 */
	 //Hierarchy
	//protected final String SAP_IOBJ_GETDET_RFC = "ZODI_IOBJ_GETDETAILS";
	//=============================================================================Added for the Hieracghy=============@Anupam=============
	//Added for the Hierarchy Specially:
	//protected final String SAP_IOBJ_GETDET_RFC = "ZODI_IOBJ_GETDETAILS1";
protected final String SAP_IOBJ_GETDET_RFC = "ZODI_IOBJ_GETDETAILS";//For Hierarchy Structure and Hierarchy Data
	
	//=============================================================================End of Added for the Hieracghy===========@Anupam===============
	/**
	 * RFC: Get List of ODS/DSO objects (if executed without input parameter)
	 * otherwise get details of a specific ODS/DSO object
	 */
	protected final String SAP_ODS_DETAILS_RFC = "ZODI_ODS_GETDETAILS";//"Z_ODI_ODS_GETDETAILS";
	/**
	 * RFC: Get details of an InfoCube
	 */
	protected final String SAP_ODI_CUBE_DETAILS_RFC = "ZODI_CUBE_GETDETAILS";
	//protected final String SAP_ODI_CUBE_DETAILS_RFC = "ZODI_CUBE_GETDETAILS_UT_CHAR";
	/**
	 * RFC: Get details of a Open Hub Destination (OHD Table and Column meta data)
	 */
	protected final String SAP_RSB_API_OHS_DEST_GETDETAIL="RSB_API_OHS_DEST_GETDETAIL";
	/**
	 * RFC: Lookup/Search InfoObject and return list of InfoObjects matching selection
	 * criteria
	 */
	protected final String SAP_ODI_IOBJ_SEARCH = "ZODI_IOBJ_SEARCH";//"Z_ODI_IOBJ_SEARCH";
	/**
	 * RFC: Lookup/Search ODS/DSO and return list of ODS/DSO matching selection
	 * criteria
	 */
	protected final String SAP_ODI_ODSO_SEARCH = "ZODI_ODSO_SEARCH";//"Z_ODI_ODSO_SEARCH";
	/**
	 * RFC: Lookup/Search InfoCube and return list of InfoCubes matching selection
	 * criteria
	 */
	protected final String SAP_ODI_CUBE_SEARCH = "ZODI_CUBE_SEARCH";//"Z_ODI_CUBE_SEARCH";
	/**
	 * RFC: Lookup/Search OpenHub Destinations and return list of OHD Tables matching selection
	 * criteria
	 */
	protected final String SAP_Z_ODI_OHDEST_SEARCH = "ZODI_OHDEST_SEARCH";//"Z_ODI_OHDEST_SEARCH";
	
	Vector infoAreaList = new Vector();
	/**
	 * This will be used for InfoCube search: Bottom to top tree branch
	 */
	Vector infoAreaLeafNodes = new Vector();
	
	/**
	 * List of ODS/DSO nodes user has selected to reverse
	 */
	Vector revODSDSOList = new Vector();
	
	/**
	 * List of InfoObject nodes user has selected to reverse
	 */
	Vector revInfoObjList = new Vector();
	
	/**
	 * List of InfoCube nodes user has selected to reverse
	 */
	Vector revInfoCubeList = new Vector();

	/**
	 * List of OpenHub nodes user has selected to reverse
	 */
	Vector revOpenHubList = new Vector();
	
	protected MetaDataBrowserUI ui;

	abstract public void disconnect() throws Exception;
}
// End of OdiSAPBWConnection.java

//  Start of OdiSAPBWAdapter.java
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Date;
import java.util.HashMap;
import java.util.ResourceBundle;

/**
 * This class will select appropriate JCO connector (JCO2 or JCO3)
 * and Launch the GUI
 * IMPORTANT: Only JCO3 is supported
 */
public class OdiSAPBWAdapter extends WindowAdapter{
	private ResourceBundle resourceBundle = null;
//	private OdiSapBwResourceBundle odiSapBwResourceBundle;
	private OdiSAPBWLang odiSapBwLang;
	protected String version = "1.0";
	public boolean NO_GUI = false;
	/**
	 * ODI Logger
	 */
	private OdiSAPBWLogger logger;
	String className = OdiSAPBWAdapter.class.getName();
	
	
	/**
	 * Browser window & UI handling
	 */
	MetaDataBrowserUI ui = null;
	OdiSAPBWConnection sapCon = null;
	/**
	 * SAP JCO connection properties
	 */
	HashMap connectionProp = new HashMap();
	
	
	public OdiSAPBWAdapter(String logFile,
			   OdiSAPBWLang odiSapBwLang,oracle.odi.sap.km.OdiSapConnection sapConnection) throws Exception
	{
		logger =  OdiSAPBWLogger.getLogger();
		//this.resourceBundle=odiSapBwResourceBundle;
		this.odiSapBwLang = odiSapBwLang;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Logger1111"+logger});
		sapCon = new OdiSAPBWConn3(sapConnection, odiSapBwLang);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Logger2222"+logger});
	}
	 
	
	public OdiSAPBWAdapter(String logFile,
	                       OdiSAPBWLang odiSapBwLang,
				           String sid,			
				           String sap_client,
				           String sap_user_id,
				           String sap_password,
				           String sap_host,
				           String sap_sys_num,
				           String sap_ln,			
				           String pool_size) throws Exception{
		
		// Initialize the logger
	//	this.logger = logger;
		logger =  OdiSAPBWLogger.getLogger();
	//	this.resourceBundle=odiSapBwResourceBundle;
		this.odiSapBwLang = odiSapBwLang;
		connectionProp.put(OdiSAPBWConnection.SID, sid);		
		connectionProp.put(OdiSAPBWConnection.SAP_CLIENT,sap_client);
		connectionProp.put(OdiSAPBWConnection.SAP_USER_ID,sap_user_id);
		connectionProp.put(OdiSAPBWConnection.SAP_PASSWORD,sap_password);
		connectionProp.put(OdiSAPBWConnection.SAP_HOST,sap_host);		
		connectionProp.put(OdiSAPBWConnection.SAP_SYS_NUM,sap_sys_num);
		connectionProp.put(OdiSAPBWConnection.SAP_LN, sap_ln);		
		connectionProp.put(OdiSAPBWConnection.POOL_SIZE,pool_size);
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"the connectionMap - host:" + sap_host +", "+"user id: "+sap_user_id+", client: "+sap_client+", system no: "+sap_sys_num});
		
		// Create JCO3 connector
		sapCon = new OdiSAPBWConn3(connectionProp, odiSapBwLang);
		/*
		 * *****************************************************
		 * Connector switch based on availability (JCO2 or JCO3)
		 * *****************************************************
		 */
		/*if(connector == null)
			sapCon = createAvailableJCOConnector(connectionProp);
		else{
			if(connector.trim().equals(""))
				sapCon = createAvailableJCOConnector(connectionProp);
			else{
				if(connector.trim().toUpperCase().startsWith("JCO2")){
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("JCO2 Connector....", className, OdiSAPBWLogger.FINEST);
					sapCon = new OdiSAPBWConn(connectionProp);
				}
				else
					sapCon = new OdiSAPBWConn3(connectionProp);
			}
		}*/
	}
	
	public OdiSAPBWConnection getSAPConnector(){
		return sapCon;
	}
	
	/**
	 * Dynamically check the availability of JCO3 API. If it doesn't exist
	 * return instance of JCO2
	 * @deprecated- only JCO3 is required
	 * @return
	 * @throws Exception
	 */
	/*private OdiSAPBWConnection createAvailableJCOConnector(HashMap connProp) throws Exception {
		try{
			
			Class jco3Class = Class.forName("com.sap.conn.jco.JCo");
			if(jco3Class != null) {
				//log("JCO3 Libraray available!!");
				try{
					return new OdiSAPBWConn3(connProp);
				} catch(Exception ex){
					// log("Error in creating JCO3 connection: "+ ex.toString());
					throw ex;
				}
			}
		}catch(ClassNotFoundException ex){
			//log("Unable to load Class: "+ ex.toString());
			//Don't throw the exception
		}
		//log("Creating JCO2 Instance...");
		return new OdiSAPBWConn(connProp);
	}*/
	
	/**
	 * ODI Command: "Get SAP Metadata" 
	 */
	public boolean launchGUI() throws Exception{
	
		//checking ODI option "USE_GUI"
		String useUI = "<%=odiRef.getOption("USE_GUI")%>";
		if(useUI.equals("1")){
			// Reverse with GUI
			ui = new MetaDataBrowserUI(this, sapCon,odiSapBwLang);
			sapCon.ui = ui;
			return true;
		}
		else{
			// Reverse with "NO GUI"
			// Read ODI Option parameter for search
			 //* : InfoCube name
			 //* : InfoObject name
			 //* : ODS/DSO name
			 //*
			 logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"NO GUI Option Selected !!"}); // logger.log("NO GUI Option Selected !!", className, OdiSAPBWLogger.DEBUG);
			 NO_GUI = true;
			 sapCon.NO_GUI = true;
			 String infoCName = "<%=odiRef.getOption("INFOCUBE_NAME")%>";
			 String infoOName = "<%=odiRef.getOption("INFOOBJECT_NAME")%>";
			 String odsName = "<%=odiRef.getOption("ODS_DSO_NAME")%>";
			 String ohdName = "<%=odiRef.getOption("OHD_TABLE_NAME")%>";
			 logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"infoCName="+ infoCName +" infoOName="+ infoOName +" odsName="+ odsName}); // logger.log("infoCName="+ infoCName +" infoOName="+ infoOName +" odsName="+ odsName, OdiSAPBWLogger.FINEST);
			 
			 OdiSAPBWNoGuiHandler noGuiHandler = new OdiSAPBWNoGuiHandler(sapCon);
                         //Fix for throwing OdiKMException if no table name is selected to reverse
                         if(infoCName.trim().equals("") && 
                         infoOName.trim().equals("") &&
                         odsName.trim().equals("") && 
                         ohdName.trim().equals("")) { 
                                OdiSapUtil.throwODIException("No object selected to reverse!");
                                }
			 
			 if(!infoCName.trim().equals(""))
				 noGuiHandler.createInfoCubesRevList(infoCName);
			 if(!infoOName.trim().equals(""))
				 noGuiHandler.createInfoObjectsRevList(infoOName);
			 if(!odsName.trim().equals(""))
				 noGuiHandler.createODSDSORevList(odsName);
			 if(!ohdName.trim().equals(""))
				 noGuiHandler.createOHDRevList(ohdName);
				 
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"["+ getClass().getName()+ "] App Execution without GUI"}); // logger.log("["+ getClass().getName()+ "] App Execution without GUI", OdiSAPBWLogger.FINEST);
			return false;
		}
	}
	
	
	//	Windows closing event
	public void windowClosing(WindowEvent we){
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Adapter closing window... END!"}); // logger.log("Adapter closing window... END!", className, OdiSAPBWLogger.FINEST);
		disconnect();
		/*
		 * Don't use System.exit(), it will close the ODI
		 */
		//System.exit(0);
	}
	
	/**
	 * Release Resource
	 * Disconnect SAP JCO client connection and release any other resource
	 * before exiting...
	 */
	public void disconnect(){
		try{
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Release Resource..."}); // logger.log("Release Resource...", className, OdiSAPBWLogger.DEBUG);
			if(ui != null && !NO_GUI){
				ui.destroyScreen();
				ui.exit();
			}
			sapCon.disconnect();
			//exit();
			System.gc();
			
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("", className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"******************* (End of Adapter Processing) *******************"}); // logger.log("******************* (End of Adapter Processing) *******************", className, OdiSAPBWLogger.FINEST);
		}catch(Exception ex){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Error: "+ ex.getMessage()}); // logger.log("Error: "+ ex.getMessage(), className, OdiSAPBWLogger.FINEST);
			ex.printStackTrace();
		}/*finally{
			logger.close();
		}*/
	}
}
// End of OdiSAPBWAdapter.java

// Start of OdiSAPJCO3DataProvider.java

// End of OdiSAPJCO3DataProvider.java
//Start of OdiSAPBWConnectionException.java
public class OdiSAPBWConnectionException extends Exception {

	
	/**
	 * @param arg0
	 */
	public OdiSAPBWConnectionException(String msg) {
		super(msg);
		
	}

}
//End of the OdiSAPBWConnectionException.java
// Start of OdiSAPBWConn3.java
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Properties;
import java.util.Vector;

import com.sap.conn.jco.JCo;
import com.sap.conn.jco.JCoDestination;
import com.sap.conn.jco.JCoDestinationManager;
import com.sap.conn.jco.JCoException;
import com.sap.conn.jco.JCoFunction;
import com.sap.conn.jco.JCoParameterList;
import com.sap.conn.jco.JCoRepository;
import com.sap.conn.jco.JCoTable;
import com.sap.conn.jco.ext.DestinationDataProvider;
import com.sap.conn.jco.ext.Environment;
import oracle.odi.sap.km.OdiSapDestinationDataProvider;

/**
 * JCO3 Connector 
 *
 */
public class OdiSAPBWConn3 extends OdiSAPBWConnection {
		

	//OdiSAPJCO3DataProvider dataProvider;
	JCoRepository repository;
	JCoDestination dest;
	//Logger
	OdiSAPBWLogger logger;
	oracle.odi.sap.km.OdiSapConnection sapConnection;
	//private OdiSapBwResourceBundle odiSapBwResourceBundle;
	//private OdiSapBwResourceBundle odiSapBwResourceBundle;
	String className = OdiSAPBWConn3.class.getName();
	OdiSAPBWLang odiLang;
	
	/**
	 * This will be called from ODI Java Bean Shell
	 * @throws Exception
	 */
	public OdiSAPBWConn3(HashMap connProp, OdiSAPBWLang odiSapBwLang) throws Exception {
	    logger =  OdiSAPBWLogger.getLogger();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InOdiConn2"});
		odiLang = odiSapBwLang;
	//	odiLang = OdiSAPBWLang.getInstance(odiSapBwResourceBundle);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InOdiConn3"});
		connect(connProp);		
	}
	
	// Constructor added for Setting SAP Connection
	
	public OdiSAPBWConn3(oracle.odi.sap.km.OdiSapConnection sapConnection, OdiSAPBWLang odiSapBwLang) throws Exception
	{
		this.sapConnection = sapConnection;
		logger =  OdiSAPBWLogger.getLogger();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InOdiConn2"});
		odiLang = odiSapBwLang;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InOdiConn3"});
		 try {
	            switch (sapConnection.getSAP_CONNECTION_TYPE()) {
	                case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:
	                	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"SAP Pool Connection is requested.."});
	                    break;
	                case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:
	                	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"SAP SNC Connection is requested.."});
	                    break;
	                case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION:
	                	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"SAP Message Server Connection is requested.."});
	                    break;
	            }
	            this.dest = sapConnection.getDestination();
	            logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Destination : " + dest});
	            logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Successfully Created SAP Connection"});
	            logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"SAP Connection attributes :" + dest.getAttributes()});
				repository = dest.getRepository();
	        } catch (JCoException e) {
	        	logger.severe("ODIKM-SAPBW-RKM-10000", new Object[]{"Error in creating the SAP Connection: " + e.getMessage()});
				
				OdiSapUtil.throwODIException("Error in creating the SAP Connection: " + e.getMessage());
	            //throw new RuntimeException("Error in creating the SAP Connection: " + e.getMessage());
	            //chainedSAPException(e, "setSAPConnection");
	        } catch (Exception e) {
	        	logger.severe("ODIKM-SAPBW-RKM-10000", new Object[]{"Error in creating the SAP Connection: " + e.getMessage()});
				
				OdiSapUtil.throwODIException("Error in creating the SAP Connection: " + e.getMessage());
	            //throw new RuntimeException("Error in creating the SAP Connection: " + e.getMessage());
	            //chainedSAPException(e, "setSAPConnection");
	        }
	}
	
	// end of constructor added for setting SAP Connection
	
	

	private void connect(HashMap connProp) throws Exception {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"JCO3 Connection setup...."}); // logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("JCO3 Connection setup....", className, OdiSAPBWLogger.FINEST);
		CONNECTION_POOL = (String)connProp.get(SID);
		//TODO: Add code to take dynamic connection parameters from FlexFields
		Properties connectProperties = new Properties();
        connectProperties.setProperty(DestinationDataProvider.JCO_ASHOST, (String)connProp.get(SAP_HOST));
        connectProperties.setProperty(DestinationDataProvider.JCO_SYSNR,  (String)connProp.get(SAP_SYS_NUM));
        connectProperties.setProperty(DestinationDataProvider.JCO_CLIENT, (String)connProp.get(SAP_CLIENT));
        connectProperties.setProperty(DestinationDataProvider.JCO_USER,   (String)connProp.get(SAP_USER_ID));
        connectProperties.setProperty(DestinationDataProvider.JCO_PASSWD, (String)connProp.get(SAP_PASSWORD));
        connectProperties.setProperty(DestinationDataProvider.JCO_LANG,   (String)connProp.get(SAP_LN));
        connectProperties.setProperty(DestinationDataProvider.JCO_POOL_CAPACITY, (String)connProp.get(POOL_SIZE));
         
        OdiSapDestinationDataProvider.defineDestination(CONNECTION_POOL,connectProperties);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"get destination.."}); // logger.log("get destination...", className, OdiSAPBWLogger.FINEST);
    //	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
        try {
        	 // Define repository
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"get REPO.."}); // logger.log("get REPO...", className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"et Connection Pool"}); // logger.log("get Connection Pool..."+CONNECTION_POOL, className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"get Destination..."+dest.getRepository()}); // logger.log("get Destination..."+dest.getRepository(), className, OdiSAPBWLogger.FINEST);
            repository = dest.getRepository();
            // Testing: get JCO Destination instance
            dest.ping();
		} catch (Exception e) {
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"JCO Exception is raised during the execution,Connect to SAP gateway failed Thrown "}); // logger.log("JCO Exception is raised during the execution,Connect to SAP gateway failed Thrown !!!");
			logger.severe("ODIKM-SAPBW-RKM-10031", new Object[]{odiLang.getValue(OdiSAPBWLang.JCO_CONNECTION_EXCEPTION)});
			throw new OdiSAPBWConnectionException(odiLang.getValue(OdiSAPBWLang.JCO_CONNECTION_EXCEPTION));
						
		}
        logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"JCO Version: "+ JCo.getVersion()}); // logger.log("JCO Version: "+ JCo.getVersion(), className, OdiSAPBWLogger.FINEST);
        logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"SAP Attributes: "+ dest.getAttributes()}); // logger.log("SAP Attributes: "+ dest.getAttributes(), className, OdiSAPBWLogger.FINEST);
	}
	
		/**
		 * This method checks SAP for required permissions.
		 * 
		 * Author: Chanpreet
		 */
		public void getETReturnValues(JCoFunction function)throws RuntimeException{
			try{

				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Outside if! --- fxn name "+function});
						
				if(function.getExportParameterList()!=null&&function.getExportParameterList().getMetaData().hasField("RETURN")){
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"From getETReturnValues::in IF LOOP, no permission check"+function.getExportParameterList().getMetaData().hasField("RETURN")});
			
						//ie. BAPI_IOBJ_GETLIST RFC is being called
						//OR RSB rfc is called - no permission handling for OHS
						
						//JCoRecord structure = function.getExportParameterList().getStructure("RETURN");
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"From getETReturnValues::"+function.getExportParameterList().getStructure("RETURN").getValue("TYPE")});
							
					}else {
						
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getETReturnValues::ELSE LOOP"});
						/*if(function.getTableParameterList()!=null&&function.getTableParameterList().getMetaData().hasField("T_MESSAGES")){
							errorTable = function.getTableParameterList().getTable("T_MESSAGES");	
						}else{*/
						JCoTable errorTable = function.getTableParameterList().getTable("ET_RETURN");
						//}	
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table empty check :"+errorTable.isEmpty()+"::number of rows in table ET_RETURN::"+errorTable.getNumRows()});
							
						if(errorTable.isEmpty()||errorTable.getNumRows()==0){
							return;
						}		
				
						String type = (String) errorTable.getValue("TYPE");
						//Print ET_RETURN messages to Log File
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ET FILE RETURN TYPE :"+type});
						
						//Messagen no and Message id
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ET msg id:"+errorTable.getValue("ID")+"::number ::"+errorTable.getValue("NUMBER")+":"});
			
						//If error encountered in permissions, throw exception on ODI Console		
						if(type.equals("E")){
							
							String message = errorTable.getValue("MESSAGE")+
								"::"+errorTable.getValue("MESSAGE_V1")+
								"::"+errorTable.getValue("MESSAGE_V2")+
								"::"+errorTable.getValue("MESSAGE_V3")+
								"::"+errorTable.getValue("MESSAGE_V4");
								
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ET FILE RETURN MESSAGE :"+message});
						
							if(message.contains("Infoarea not found")&& errorTable.getValue("MESSAGE_V1").equals("InfoAreas")){
								logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Info area node traversed :"});	
								return;
							}
							OdiSapUtil.throwODIException(message);
						}
					}
					
			}catch(JCoException e){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"JCo Exception encountered :"+e.toString()});
				OdiSapUtil.throwODIException(e.toString());
			}
			catch(Exception e){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"From getETReturnValues::ET method Exception encountered :"+e.toString()});
				OdiSapUtil.throwODIException(e.toString());
			}
		}
	/* (non-Javadoc)
	 * @see UIListener#getInfoAreaListRFC()
	 */
	public Vector getInfoAreaListRFC(){
		Vector parents = new Vector();
		infoAreaList.removeAllElements();
		try {
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_INFOAREA_GETLIST_RFC);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getInfoAreaListRFC(): Function Module "+SAP_INFOAREA_GETLIST_RFC+" not found in SAP system"}); // logger.log("getInfoAreaListRFC(): Function Module "+SAP_INFOAREA_GETLIST_RFC+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
				
				OdiSapUtil.throwODIException("Function Module "+SAP_INFOAREA_GETLIST_RFC+" not found in SAP system.");
				//throw new Exception("Function Module "+SAP_INFOAREA_GETLIST_RFC+" not found in SAP system.");
			}
			//execute the function
			function.execute(dest);
			
				//Check SAP authorizations
				getETReturnValues(function);
			//process the RFC output
			JCoTable table = function.getTableParameterList().getTable("ET_INFOAREA_LIST");
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table: \n"+table}); // logger.log("Table: \n"+table, className, OdiSAPBWLogger.DEBUG); 
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Num of Table Rows: "+table.getNumRows()}); // logger.log("Num of Table Rows: "+table.getNumRows(), className, OdiSAPBWLogger.DEBUG);
					
			//read table rows
			if(table.getNumRows() > 0) {
				for(int r=0; r < table.getNumRows(); r++) {
					table.setRow(r);
					InfoArea ia = new InfoArea();
					ia.setName(table.getString("INFOAREA"));
					ia.setDesc(table.getString("INFOAREA_DESC"));
					ia.setParent(table.getString("INFOAREA_P"));
					ia.setChild(table.getString("INFOAREA_C"));
					ia.setNext(table.getString("INFOAREA_N"));
					infoAreaList.add(ia);
				}
			}
			
			//Extracting InfoArea parent nodes
			for(int i=0; i<infoAreaList.size(); i++){
				InfoArea ia = (InfoArea)infoAreaList.elementAt(i);
				if(ia.getParent().trim().equals("")){
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoArea Name :"+ia.getName()}); // logger.log("InfoArea Name :"+ia.getName(), className, OdiSAPBWLogger.DEBUG);
					InfoAreaNode iaNode = new InfoAreaNode();
					iaNode.setName(ia.getName());
					iaNode.setDesc(ia.getDesc());
					parents.add(iaNode);
				}
			}
			
			//Collecting child nodes
			for(int i=0; i<parents.size(); i++){
				getInfoChilds((InfoAreaNode)parents.elementAt(i));
			}
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of Parents="+ parents.size()}); // logger.log("Number of Parents="+ parents.size(), className, OdiSAPBWLogger.DEBUG);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of Leaf InfoAreas="+ infoAreaLeafNodes.size()}); // logger.log("__Number of Leaf InfoAreas="+ infoAreaLeafNodes.size(), className, OdiSAPBWLogger.DEBUG);
			String infoA = "";
			for(int i=0; i<infoAreaLeafNodes.size(); i++){
				infoA += ((InfoAreaNode)infoAreaLeafNodes.get(i)).getName() + " ";
			}
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"List of Leaf InfoAreas: "+ infoA}); // logger.log("List of Leaf InfoAreas: "+ infoA, className, OdiSAPBWLogger.DEBUG);
		} catch (Exception ex) {
			//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(OdiSAPLogger.INFO, "Error: "+ex.getMessage() +"\n"+ ex.toString());
			ex.printStackTrace();
			
				OdiSapUtil.throwODIException(ex.toString());
			//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
		}finally {
			/*
			 * FIXME: Prasanta: find out ways to release dest object
			 * dest = null; 
			 */
		//	dest = null;
		//	System.gc();
		}
		return parents;
	}
	
	/**
	 * Recursive method to group child nodes for every parent nodes of InfoAreas
	 * i.e. the output of Z_ODI_INFOAREA_GETLIST RFC
	 * @param node
	 */
	private void getInfoChilds(InfoAreaNode node){
		InfoAreaNode child = null;
		Vector childs = new Vector();
		for(int i=0; i<infoAreaList.size(); i++){
			InfoArea ia = (InfoArea) infoAreaList.elementAt(i);
			if(ia.getParent().equals(node.getName())){
				child = new InfoAreaNode();
				child.set(ia);
				child.setParent(node);
				childs.add(child);
			}
		}
		if(childs.size() == 0){
			//END Of one round of recursion
			//add leaf InfoAreas
			infoAreaLeafNodes.add(node);
			return;
		}
		node.setChilds(childs);
		for(int i=0; i<childs.size(); i++){
			InfoAreaNode ia = (InfoAreaNode) childs.elementAt(i);
			getInfoChilds(ia);
		}
	}
	
	/* (non-Javadoc)
	 * @see UIListener#getInfoAreaDetails(InfoAreaNode)
	 */
	public Vector getInfoAreaDetails(InfoAreaNode pNode) {
		
		Vector infoCubes = new Vector();
		Vector odsdsos = new Vector();
		Vector infoObjects = new Vector();
		Vector infoDetails = new Vector();
		
		try{
			String parent = pNode.getName();
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Parent name from - getInfoAreaDetails(InfoAreaNode pNode)"+parent}); // logger.log("InfoArea Parent :"+ pNode.getName(), className, OdiSAPBWLogger.DEBUG);
				//Set the UI in Wait State
			if(!NO_GUI)
				ui.waitState();
			
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_INFOAREA_DETAILS_RFC);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getInfoAreaDetails(): Function Module "+SAP_INFOAREA_DETAILS_RFC+" not found in SAP system"}); // logger.log("getInfoAreaDetails(): Function Module "+SAP_INFOAREA_DETAILS_RFC+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	            
				OdiSapUtil.throwODIException("Function Module "+SAP_INFOAREA_DETAILS_RFC+" not found in SAP system.");
				//throw new Exception("Function Module "+SAP_INFOAREA_DETAILS_RFC+" not found in SAP system.");
			}
			// Set Input Parameters
			JCoParameterList input = function.getImportParameterList();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"input="+ input}); // logger.log("input="+ input, className, OdiSAPBWLogger.DEBUG);
			input.setValue("IV_INFOAREA", parent.trim()); // setValue(name, value)
			
			// execute the function
			function.execute(dest);
			
				//Check SAP authorizations
				getETReturnValues(function);
				
			//process RFC output, Extract Table ** ET_IAREA_OBJ **
			JCoTable table = function.getTableParameterList().getTable("ET_IAREA_OBJ");
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table: \n"+table}); // logger.log("Table: \n"+table, className, OdiSAPBWLogger.DEBUG); 
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Num of Table Rows: "+table.getNumRows()}); // logger.log("Num of Table Rows: "+table.getNumRows(), className, OdiSAPBWLogger.DEBUG);
			
			//Read Table rows
			if(table.getNumRows() > 0) {
				String rowType = "";
				for(int r=0; r < table.getNumRows(); r++) {
					//set the index
					table.setRow(r);
					//entry type
					rowType = table.getString("DATA_TARGET_TYP");
					if(rowType.equals("CUB")){
						//InfoCubes
						InfoCube ic = new InfoCube();
						ic.setName(table.getString("DATA_TARGET"));
						ic.setDesc(table.getString("DESCRIPTION"));
						ic.setInfoArea(pNode);
						infoCubes.add(ic);
					}
					else if(rowType.equals("IOB")){
						//InfoObjects
						InfoObject io = new InfoObject();
						io.setName(table.getString("DATA_TARGET"));
						io.setDesc(table.getString("DESCRIPTION"));
						infoObjects.add(io);
					}
					else if(rowType.equals("ODS") || rowType.equals("DSO")){
						//ODS/DSO
						ODSDSO od = new ODSDSO();
						od.setName(table.getString("DATA_TARGET"));
						od.setDesc(table.getString("DESCRIPTION"));
						odsdsos.add(od);
					}
				}
			}
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"num of infoCubes="+ infoCubes.size()}); // logger.log("num of infoCubes="+ infoCubes.size(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"num of infoObjects="+ infoObjects.size()}); // logger.log("num of infoObjects="+ infoObjects.size(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"num of ODS/DSO="+ odsdsos.size()}); // logger.log("num of ODS/DSO="+ odsdsos.size(), className, OdiSAPBWLogger.FINEST);
			//InfoArea Details
			infoDetails.add(infoCubes);
			infoDetails.add(infoObjects);
			infoDetails.add(odsdsos);
			//Set the cursor back to normal
			if(!NO_GUI)
				ui.normalState();
		}catch (JCoException je) {
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getInfoAreaDetails() JCoException: While getting Info Area details "+je.getMessage()}); // logger.log("getInfoAreaDetails() JCoException: While getting Info Area details "+je.getMessage(), className, OdiSAPBWLogger.FINEST);
            ui.exit();
            ui.destroyScreen();
			
			OdiSapUtil.throwODIException(je.getMessage());
			//throw new RuntimeException(je.getMessage());//throw error in ODI Operator window
		}catch(Exception ex){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getInfoAreaDetails() Exception: While getting Info Area details "+ex.getMessage()}); // logger.log("getInfoAreaDetails() Exception: While getting Info Area details "+ex.getMessage(), className, OdiSAPBWLogger.FINEST);
				if(ui!=null){
				ui.exit();
				ui.destroyScreen();
				}
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After destroy Screen "+ex}); 
				OdiSapUtil.throwODIException(ex.toString());
	            //throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
			}finally {
			}
			return infoDetails;
		}
		
		/* (non-Javadoc)
		 * @see UIListener#getInfoCubeDetails(java.lang.String)
		 */
		public Vector getInfoCubeDetails(String infoCubeName) {
			Vector infoCubeDetails = new Vector();
			try {
				if (infoCubeName == null)
					return infoCubeDetails;
				
				// get JCO function name from RFC function name
			//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
				JCoFunction function = repository.getFunction(SAP_ODI_CUBE_DETAILS_RFC);
				if(function == null) {
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getInfoCubeDetails(): Function Module "+SAP_ODI_CUBE_DETAILS_RFC+" not found in SAP system"}); // logger.log("getInfoCubeDetails(): Function Module "+SAP_ODI_CUBE_DETAILS_RFC+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
		           
					OdiSapUtil.throwODIException("Function Module "+SAP_ODI_CUBE_DETAILS_RFC+" not found in SAP system.");
					//throw new Exception("Function Module "+SAP_ODI_CUBE_DETAILS_RFC+" not found in SAP system.");
				}
				
				// Set Input Parameters
				JCoParameterList input = function.getImportParameterList();
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"input="+ input}); // logger.log("input="+ input, className, OdiSAPBWLogger.DEBUG);
				input.setValue("IV_INFOCUBE", infoCubeName); // setValue(name, value)
				
				// execute the function
				function.execute(dest);
				
				//Check SAP authorizations
				getETReturnValues(function);
				
				//Get Dimensions and Characteristics
				JCoTable table = function.getTableParameterList().getTable("ET_CUBE_DETAIL");
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table: \n" + table}); // logger.log("Table: \n" + table, className, OdiSAPBWLogger.DEBUG);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Num of Table Rows: " + table.getNumRows()}); // logger.log("Num of Table Rows: " + table.getNumRows(), className, OdiSAPBWLogger.DEBUG);
				
				String factTable = function.getExportParameterList().getString("EV_FACT_TABLE");
				infoCubeDetails.add(factTable);
				//reading table data
				if(table.getNumRows() > 0){
					ArrayList dims = new ArrayList();
					ArrayList chars = new ArrayList();
					String selDim = "";
					Dimension dm = null;
					
					for(int r=0; r<table.getNumRows(); r++){
						//set the index
						table.setRow(r);
						String fieldType = table.getString("CHARACS_TYP");
						if(fieldType.equals("KYF"))
							continue;
						/*
						 * this row is Dimention
						 */
						String curDim = table.getString("DIMENSION"); 
						if(!curDim.equals(selDim)){
							//this is a new Dimension entry
							if(!selDim.equals("")){
								//store previous DIM data
								dm.setCharacteristics(chars);
								dims.add(dm);
							}
							dm = new Dimension();
							dm.setName(curDim);
							dm.setDesc(table.getString("DIM_DESC"));
							chars = new ArrayList();
							selDim = curDim;
						}
						
						Characteristic chr = new Characteristic();
						chr.setName(table.getString("DIM_CHARACS"));
						chr.setDesc(table.getString("CHARACS_DESC"));
						chr.setSidTable(table.getString("SID_TABLE"));
						chars.add(chr);
					}
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"chars.size()"+ chars.size()});
					//Last Dim entry
					dm.setCharacteristics(chars);
					dims.add(dm);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Num of Dimensions: "+ dims.size()}); // logger.log("___________ Num of Dimensions: "+ dims.size(), className, OdiSAPBWLogger.DEBUG);
					// Add Dimensions
					infoCubeDetails.add(dims);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"infoCubeDetails.toString()1111>>>"+ infoCubeDetails.toString()});
					table = null;
				}
				
				// Get Key Figures
				JCoTable kftable = function.getTableParameterList().getTable("ET_KEYFIG_TAB");
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table ET_KEYFIG_TAB: \n"+ kftable}); // logger.log("Table ET_KEYFIG_TAB: \n"+ kftable, className, OdiSAPBWLogger.DEBUG);
				
				// reading table data
				if(kftable.getNumRows() > 0){
					ArrayList keyFigures = new ArrayList();
					for(int r=0; r<kftable.getNumRows(); r++){
						//Set the Index
						kftable.setRow(r);
						KeyFigure kf = new KeyFigure();
						kf.setName(kftable.getString("FIELDNAME"));
						kf.setInternalFieldName(kftable.getString("KFFIELD"));
						kf.setDesc(kftable.getString("FIELDTEXT"));
						kf.setDataType(kftable.getString("DATATYPE"));
						kf.setFieldLen(Integer.parseInt(kftable.getString("DDLEN").trim()));
					//	if(kf.getDataType().toUpperCase().startsWith("DEC"))
							kf.setDecLen(Integer.parseInt(kftable.getString("DECIMALS").trim())); // Decimal
						keyFigures.add(kf);
					}
					// Add Key Figures
					infoCubeDetails.add(keyFigures);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"infoCubeDetails.toString()2222>>>"+ infoCubeDetails.toString()});
				}
				
				//Get Time and Unit Dimension
				//Development and Debug
				JCoTable tudtable = function.getTableParameterList().getTable("ET_UNITTIM_TAB");
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table ET_UNITTIM_TAB: \n"+ tudtable}); // logger.log("Table ET_UNITTIM_TAB: \n"+ tudtable, className, OdiSAPBWLogger.FINEST);
				
				// reading table data
				if(tudtable.getNumRows() > 0){
					ArrayList tuDimension = new ArrayList();
					for(int r=0; r<tudtable.getNumRows(); r++){
						//Set the Index
						tudtable.setRow(r);
						TimeUnitDimension tud = new TimeUnitDimension();
						tud.setName(tudtable.getString("FIELDNAME"));
						tud.setInternalFieldName(tudtable.getString("KFFIELD"));
						tud.setDesc(tudtable.getString("FIELDTEXT"));
						tud.setDataType(tudtable.getString("DATATYPE"));
						tud.setFieldLen(Integer.parseInt(tudtable.getString("DDLEN").trim()));
						//if(kf.getDataType().toUpperCase().startsWith("DEC"))
						tud.setDecLen(Integer.parseInt(tudtable.getString("DECIMALS").trim())); // Decimal
						tuDimension.add(tud);
					}//End of for(int r=0; r<tudtable.getNumRows(); r++) 
					// Add Time Unit Dimension
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"###Create Time and Unit Dimension Adding into Arraylist###"+tuDimension.size()}); // logger.log("###Create Time and Unit Dimension Adding into Arraylist###"+tuDimension.size(), className, OdiSAPBWLogger.FINEST);
					infoCubeDetails.add(tuDimension);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"infoCubeDetails.toString()333>>>"+ infoCubeDetails.toString()});
				}//End of if(tudtable.getNumRows() > 0)
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table ET_UNITTIM_TAB completed adding: \n"}); // logger.log("Table ET_UNITTIM_TAB completed adding: \n", className, OdiSAPBWLogger.FINEST);
			} catch (Exception ex) {
				ex.printStackTrace();
				
				OdiSapUtil.throwODIException(ex.toString());
				//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
			} finally {
			}
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"infoCubeDetails.toString()4444>>>"+ infoCubeDetails.toString()});
			return infoCubeDetails;
		}

	/* (non-Javadoc)
	 * @see UIListener#getAllInfoObjects()
	 */
	public Vector getAllInfoObjects() {
		Vector infoObjs = new Vector();
		try{
			// Set the UI in Wait State
			if(!NO_GUI)
				ui.waitState();
			
			// get the JCO function name from RFC function
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Get JCO function.."}); // logger.log("Get JCO function....", className, OdiSAPBWLogger.DEBUG);
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_IOBJ_GETLIST_RFC);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getAllInfoObjects(): Function Module "+SAP_IOBJ_GETLIST_RFC+" not found in SAP system"}); // logger.log("getAllInfoObjects(): Function Module "+SAP_IOBJ_GETLIST_RFC+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	            
				OdiSapUtil.throwODIException("Function Module "+SAP_IOBJ_GETLIST_RFC+" not found in SAP system.");
				//throw new Exception("Function Module "+SAP_IOBJ_GETLIST_RFC+" not found in SAP system.");
			}
			// Set Input Parameters
			JCoParameterList input = function.getImportParameterList();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"input="+ input}); // logger.log("input="+ input, className, OdiSAPBWLogger.DEBUG);
			input.setValue("VERSION", "A"); // setValue(name, value)
			input.setValue("TYPE", "CHA"); // setValue(name, value)
			
			// execute the function
			function.execute(dest);
			
				//Check SAP authorizations
				getETReturnValues(function);
				
			//process RFC output, extract table
			JCoTable table = function.getTableParameterList().getTable("INFOOBJECTLIST");
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table: \n" + table}); // logger.log("Table: \n" + table, className, OdiSAPBWLogger.DEBUG);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Num of Table Rows: " + table.getNumRows()}); // logger.log("Num of Table Rows: " + table.getNumRows(), className, OdiSAPBWLogger.DEBUG);
			// Fields: INFOOBJECT & TEXTLONG
			// Read Table rows
			if (table.getNumRows() > 0) {
				for (int r = 0; r < table.getNumRows(); r++) {
					// set the index
					table.setRow(r);
					InfoObject io = new InfoObject();
					io.setName(table.getString("INFOOBJECT"));
					io.setDesc(table.getString("TEXTLONG"));
					infoObjs.add(io);
				}
			}
			//Set the cursor back to normal
			if(!NO_GUI)
				ui.normalState();
		}catch(Exception ex){
			//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(OdiSAPLogger.INFO, "Error: "+ex.getMessage() +"\n"+ ex.toString());
			ex.printStackTrace();
			
				OdiSapUtil.throwODIException(ex.toString());
				//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
		}finally {
		}
		return infoObjs;
	}

	/* (non-Javadoc)
	 * @see UIListener#getInfoObjectDetails(java.lang.String)
	 */
	public InfoObject getInfoObjectDetails(String infoObjName) {
		/*
		 * Updated InfoObject Reverse Approach (Text Table seperate)
		 * Date: 6th July, 2009
		 * 
		 * Output consists of 4 Extract Tables and 1 Export Parameters
		 * 4 Extract Tables-
		 * 1. Attribute details-
		 * 2. List of supported tables and their description
		 * 3. Merged Table
		 * 4. Text Table details
		 * 
		 * Export Parameters:
		 * 1. Key Field of CONNECTION_POOL Table. InfoCube or TextTable should be joined
		 * using this field 
		 */
		
		InfoObject iobj = new InfoObject();
		try{
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"infoObjName In info Object is : "+ infoObjName}); // logger.log("infoObjName In info Object is : "+ infoObjName, className, OdiSAPBWLogger.FINEST);
			// Set the UI in Wait State
			if(!NO_GUI)
				ui.waitState();
			
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_IOBJ_GETDET_RFC);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getInfoObjectDetails(): Function Module "+SAP_IOBJ_GETDET_RFC+" not found in SAP system"}); // logger.log("getInfoObjectDetails(): Function Module "+SAP_IOBJ_GETDET_RFC+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	         
				OdiSapUtil.throwODIException("Function Module "+SAP_IOBJ_GETDET_RFC+" not found in SAP system.");
				//throw new Exception("Function Module "+SAP_IOBJ_GETDET_RFC+" not found in SAP system.");
			}
			// Set Input Parameters
			JCoParameterList input = function.getImportParameterList();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"input="+ input}); // logger.log("input="+ input, className, OdiSAPBWLogger.FINEST);
			input.setValue("IV_INFOOBJ", infoObjName); // setValue(name, value)
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"dest="+ dest});
			// execute the function
			function.execute(dest);
			//Check SAP authorizations
			getETReturnValues(function);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling execute "});
			/*
			 * Process RFC output, Extract Table
			 */
			// 1. Read Key Field of CONNECTION_POOL Table
			String sidKeyField = function.getExportParameterList().getString("EV_SID_KEY");
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"CONNECTION_POOL Key Field: "+ sidKeyField}); // logger.log("CONNECTION_POOL Key Field: "+ sidKeyField, className, OdiSAPBWLogger.FINEST);
			iobj.setSidKeyField(sidKeyField);
			
			// 2. Read Attributes & Create field and Attribute instance mapping
			JCoTable attrTable = function.getTableParameterList().getTable("ET_ATTR_TAB");
			ArrayList attributes = new ArrayList();
			Hashtable fieldAttributeMap = new Hashtable();
			
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Attr Table: "+ attrTable}); // logger.log("Attr Table: "+ attrTable, className, OdiSAPBWLogger.FINEST);
			if(attrTable.getNumRows() > 0){
				for(int r=0; r<attrTable.getNumRows(); r++){
					// set the index
					attrTable.setRow(r);
					InfoObjAtt attr = new InfoObjAtt();
					// Attribute name
					attr.setName(attrTable.getString("ATTR_NAME"));
					// Attribute Field Name
					String fieldName = attrTable.getString("FIELDNM").trim();
					attr.setFieldName(fieldName);
					// Attribute description
					attr.setDesc(attrTable.getString("ATTR_DESC"));
					// Attribute Type
					String attrType = attrTable.getString("ATTR_TYPE");
					if(attrType.toUpperCase().startsWith("NAV"))
						attr.setAttType(InfoObjAtt.NAVIGATION);
					else
						attr.setAttType(InfoObjAtt.DISPLAY);
					//  Attribute Time Dependent
					String tdFlag = attrTable.getString("FLAG_TIMDEP");
					if(!tdFlag.equals("0"))
						attr.setTimeDependent(true);
					
					fieldAttributeMap.put(fieldName, attr);
					attributes.add(attr);
				}
			}
			iobj.setAttributes(attributes);
			iobj.setFieldAttributeMap(fieldAttributeMap);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of Attr: "+ iobj.countAttribute()}); // logger.log("Number of Attr: "+ iobj.countAttribute(), className, OdiSAPBWLogger.FINEST);
			
			attrTable = null; // let the GC pick it
			
			// 3. Read Tables associated to InfoObject (P, Q and T Table)
			JCoTable iobjTables = function.getTableParameterList().getTable("ET_TABLES");
			ArrayList tables = new ArrayList();
			//ArrayList tablesHierStruct = new ArrayList();
			InfoObjTable tTable = null;
			InfoObjTable nodeTextTable = null; // added for postable node issue -
			InfoObjTable hTable = null;
			InfoObjTable hStructTable = null;
			
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoObject Tables: "+ iobjTables}); // logger.log("InfoObject Tables: "+ iobjTables, className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoObject No. of Tables: "+ iobjTables.getNumRows()}); // logger.log("InfoObject No. of Tables: "+ iobjTables.getNumRows());
			if(iobjTables.getNumRows() > 0){
				for(int r=0; r<iobjTables.getNumRows(); r++){
					// set the index
					iobjTables.setRow(r);
					InfoObjTable iotable = new InfoObjTable();
					iotable.setName(iobjTables.getString("TABNAME"));
					iotable.setDesc(iobjTables.getString("DDTEXT"));
					String type = iobjTables.getString("TAB_TYP");
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table Name to be reversed: "+iobjTables.getString("TABNAME")}); // logger.log(">>>>>Table Name to be reversed: "+iobjTables.getString("TABNAME"));
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Checking the Table Type for all the table ...."+type}); // logger.log("Checking the Table Type for all the table ...."+type, className, OdiSAPBWLogger.FINEST);	
					if(type.toUpperCase().startsWith("P"))
						iotable.setTableType(InfoObjTable.P_TABLE);
					else if(type.toUpperCase().startsWith("Q"))
						iotable.setTableType(InfoObjTable.Q_TABLE);
					else if(type.toUpperCase().startsWith("T")){
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"type is for TEXT Table ...."+type}); // logger.log("type is for TEXT Table ...."+type, className, OdiSAPBWLogger.FINEST);	
						iotable.setTableType(InfoObjTable.T_TABLE);
						tTable = iotable;
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"tTable is in TEXT Table...."+tTable+".....&& iotable"+iotable}); // logger.log("tTable is in TEXT Table...."+tTable+".....&& iotable"+iotable, className, OdiSAPBWLogger.FINEST);	
					}
					// condition added for postable node issue
					else if(type.toUpperCase().startsWith("R")){
						iotable.setTableType(InfoObjTable.R_TABLE);
						nodeTextTable = iotable;
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Hier TextTable is  ...."+nodeTextTable+".....&& iotable"+iotable}); 
					}
					//@Added by ANUPAM,Need to be removed after proper Comments ***********
					else if(type.toUpperCase().startsWith("H")){
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"type is for H Table ...."+type}); // logger.log("type is for H Table ...."+type, className, OdiSAPBWLogger.FINEST);		
						iotable.setTableType(InfoObjTable.H_TABLE);
						hTable = iotable;
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"hTable is  ...."+hTable+".....&& iotable"+iotable}); // logger.log("hTable is  ...."+hTable+".....&& iotable"+iotable, className, OdiSAPBWLogger.FINEST);	
			            
						//TODO:NEED TO BE REMOVED :::::::::::HIERARCHY STRUCTURE:-
			/*			
						//LET US TEST FOR THE HIERARCHY STRUCTURE:-NEED TO BE REMOVED 
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(">>>>>>>>>>>>>Type is for H Structure >>>>>>>>>>>>>>...."+type, className, OdiSAPBWLogger.FINEST);		
						//iotable.setTableType(InfoObjTable.H_TABLE);
						hStructTable = iotable;
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(">>>>>>>>>>> hStructTable is  ....>>>>>>>>>>>>>>>"+hStructTable+".....&& iotable"+iotable, className, OdiSAPBWLogger.FINEST);	
			*/		}
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"IO TABLE  ...."+iotable}); // logger.log("IO TABLE  ...."+iotable, className, OdiSAPBWLogger.FINEST);
					tables.add(iotable);	
				//	tablesHierStruct.add(hStructTable);
				}
			}
			iobjTables = null; // let GC pick it
			
			// 4. Read Merge Table details
			JCoTable mTableDet = function.getTableParameterList().getTable("ET_MRGD_TAB");
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Merge Table: "+ mTableDet}); // logger.log("Merge Table: "+ mTableDet, className, OdiSAPBWLogger.DEBUG);
			
			if(mTableDet.getNumRows() > 0){
				InfoObjTable mTable = new InfoObjTable();
				// Store M Table Name
				String mTableName = function.getExportParameterList().getString("EV_MTABS_VIEW");
				mTable.setName(mTableName);
				mTable.setTableType(InfoObjTable.M_TABLE);
				ArrayList cols = new ArrayList();
				
				for(int r=0; r<mTableDet.getNumRows(); r++){
					// set the index
					mTableDet.setRow(r);
					
					OdiSAPBWTableField col = new OdiSAPBWTableField();
					col.setName(mTableDet.getString("FIELDNAME"));
					col.setDesc(mTableDet.getString("FIELDTEXT"));
					col.setSapTableName(mTableDet.getString("TABNAME"));
					String tabType = mTableDet.getString("TAB_TYP");
					if(tabType.toUpperCase().startsWith("P"))
						col.setSapTableType(OdiSAPBWTableField.P_TABLE);
					else if(tabType.toUpperCase().startsWith("Q"))
						col.setSapTableType(OdiSAPBWTableField.Q_TABLE);
					
					if(mTableDet.getString("KEYFLAG").trim().toUpperCase().equals("X"))
						col.setMandatory(true); // Mandatory field
					col.setDataType(mTableDet.getString("DATATYPE"));
					col.setFieldLen(Integer.parseInt(mTableDet.getString("DDLEN").trim()));
				//	if(col.getDataType().toUpperCase().startsWith("DEC"))
						col.setDecLen(Integer.parseInt(mTableDet.getString("DECIMALS").trim()));
					cols.add(col);
				}
				mTable.setCols(cols);
				iobj.setMergedTable(mTable);
			}
			mTableDet = null; //let GC pick it
			
			// 5. Read Text Table details
			JCoTable tTableDet = function.getTableParameterList().getTable("ET_TEXT_TAB");
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Text Table: "+ tTableDet}); // logger.log("Text Table: "+ tTableDet, className, OdiSAPBWLogger.DEBUG);
			if(tTableDet.getNumRows() > 0){
				ArrayList cols = new ArrayList();
				for(int r=0; r<tTableDet.getNumRows(); r++){
					// set the index
					tTableDet.setRow(r);
					OdiSAPBWTableField col = new OdiSAPBWTableField();
					col.setName(tTableDet.getString("FIELDNAME"));
					col.setDesc(tTableDet.getString("FIELDTEXT"));
					if(tTableDet.getString("KEYFLAG").trim().toUpperCase().equals("X"))
						col.setMandatory(true); // Mandatory field
					col.setDataType(tTableDet.getString("DATATYPE"));
					col.setFieldLen(Integer.parseInt(tTableDet.getString("DDLEN").trim()));
					//if(col.getDataType().toUpperCase().startsWith("DEC"))
						col.setDecLen(Integer.parseInt(tTableDet.getString("DECIMALS").trim()));
					cols.add(col);
				}
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"# Get the TEXT Table details TABLE:########### "+ tTable}); // logger.log("# Get the TEXT Table details TABLE:########### "+ tTable, className, OdiSAPBWLogger.FINEST);
				tTable.setCols(cols);
			}
		tTableDet = null; // let GC pick it
		iobj.setTables(tables);

		// Code added to solve Hier Text Postable issue
		/**
		 * Additional Code for 
		 */
		 // 5. Read Text Table details
			JCoTable tTableDetNodetxt = function.getTableParameterList().getTable("ET_NODE_TXT");
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Node Text Table: "+ tTableDetNodetxt}); // logger.log("Text Table: "+ tTableDet, className, OdiSAPBWLogger.DEBUG);
			if(tTableDetNodetxt.getNumRows() > 0){
				ArrayList cols = new ArrayList();
				for(int r=0; r<tTableDetNodetxt.getNumRows(); r++){
					// set the index
					tTableDetNodetxt.setRow(r);
					OdiSAPBWTableField col = new OdiSAPBWTableField();
					col.setName(tTableDetNodetxt.getString("FIELDNAME"));
					col.setDesc(tTableDetNodetxt.getString("FIELDTEXT"));
					if(tTableDetNodetxt.getString("KEYFLAG").trim().toUpperCase().equals("X"))
						col.setMandatory(true); // Mandatory field
					col.setDataType(tTableDetNodetxt.getString("DATATYPE"));
					col.setFieldLen(Integer.parseInt(tTableDetNodetxt.getString("DDLEN").trim()));
					//if(col.getDataType().toUpperCase().startsWith("DEC"))
						col.setDecLen(Integer.parseInt(tTableDetNodetxt.getString("DECIMALS").trim()));
					cols.add(col);
				}
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"# Get the NODE TEXT Table details TABLE:########### "+ nodeTextTable}); // logger.log("# Get the TEXT Table details TABLE:########### "+ tTable, className, OdiSAPBWLogger.FINEST);
				nodeTextTable.setCols(cols);
			}
			tTableDetNodetxt = null; // let GC pick it
		iobj.setNodeTextTables(tables);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"num of Tables: "+ iobj.countTables()}); // logger.log("num of Tables: "+ iobj.countTables(), className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Hier Tables: "+ iobj.getNodeTextTables()});
		 
		// End of Code added to solve Heir Text Postable issue 
		 
		 /* Additional Code for Heirarchy Implementation
		 * @author Anupam.Srivastava
		 * 
		 */
		//6. Read Heirarchy Table details
		JCoTable tTableDetHei = function.getTableParameterList().getTable("ET_HIER_TAB");
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Heirarchy Table:::::::::: "+ tTableDetHei}); // logger.log("Heirarchy Table:::::::::: "+ tTableDetHei, className, OdiSAPBWLogger.FINEST);
		
		if(tTableDetHei.getNumRows() > 0){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Heirarchy Table details  Section, tTableDetHei.getNumRows() is : "+ tTableDetHei.getNumRows()}); // logger.log("Heirarchy Table details  Section, tTableDetHei.getNumRows() is : "+ tTableDetHei.getNumRows(), className, OdiSAPBWLogger.FINEST);
			//System.out.println(" "+tTableDetHei.getNumRows());
			ArrayList cols = new ArrayList();
			for(int r=0; r<tTableDetHei.getNumRows(); r++){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"tTableDet.getNumRows()  for Heirarchy is :"+tTableDetHei.getNumRows()}); // logger.log("tTableDet.getNumRows()  for Heirarchy is :"+tTableDetHei.getNumRows(), className, OdiSAPBWLogger.FINEST);
				// set the index
				tTableDetHei.setRow(r);
				OdiSAPBWTableField col = new OdiSAPBWTableField();
			//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("FIELD NAME IS :"+tTableDetHei.getString("FIELDNAME"), className, OdiSAPBWLogger.FINEST);
			//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("FIELDTEXT IS :"+tTableDetHei.getString("FIELDTEXT"), className, OdiSAPBWLogger.FINEST);
				
				col.setName(tTableDetHei.getString("FIELDNAME"));
				col.setDesc(tTableDetHei.getString("FIELDTEXT"));
				
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"tTableDetHei.getString is :->"+tTableDetHei.getString("KEYFLAG")}); // logger.log("tTableDetHei.getString is :->"+tTableDetHei.getString("KEYFLAG"), className, OdiSAPBWLogger.FINEST);
				if(tTableDetHei.getString("KEYFLAG").trim().toUpperCase().equals("X"))
					col.setMandatory(true); // Mandatory field
				col.setDataType(tTableDetHei.getString("DATATYPE"));
				col.setFieldLen(Integer.parseInt(tTableDetHei.getString("DDLEN").trim()));
				//if(col.getDataType().toUpperCase().startsWith("DEC"))
					col.setDecLen(Integer.parseInt(tTableDetHei.getString("DECIMALS").trim()));
				cols.add(col);
				
			}
			hTable.setCols(cols);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"# Get the Heirarchy Table details TABLE:########### "+ hTable}); // logger.log("# Get the Heirarchy Table details TABLE:########### "+ hTable, className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"# Get the Heirarchy Table details (From the Method of tTable.getCols(cols);):########### "+ hTable.getCols()}); // logger.log("# Get the Heirarchy Table details (From the Method of tTable.getCols(cols);):########### "+ hTable.getCols(), className, OdiSAPBWLogger.FINEST);
		}
		tTableDetHei = null; // let GC pick it
		
		iobj.setHierTables(tables);
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"num of Tables: "+ iobj.countTables()}); // logger.log("num of Tables: "+ iobj.countTables(), className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Hier Tables: "+ iobj.getHierTables()}); // logger.log("Hier Tables: "+ iobj.getHierTables(), className, OdiSAPBWLogger.FINEST);
		
		
			
		//Set the cursor back to normal
		if(!NO_GUI)
			ui.normalState();
		
		}catch(Exception ex){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Error: "+ ex.getMessage()}); // logger.log("Error: "+ ex.getMessage(), className, OdiSAPBWLogger.FINEST);
			ex.printStackTrace();
			throw new RuntimeException(ex.toString());//throw error in ODI Operator window
		}finally {
		}
		return iobj;
	}
	
	/**
	 * @throws JCoException 
	 * 
	 */
	public ArrayList getHierStructureName(String infoObjName) {
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"infoObjName In info Object is getHierStructureName: "+ infoObjName}); // logger.log("infoObjName In info Object is getHierStructureName: "+ infoObjName, className, OdiSAPBWLogger.FINEST);
		ArrayList arrHStr = new ArrayList();
		try {
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_IOBJ_GETDET_RFC);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getHierStructureName: Function Module "+SAP_IOBJ_GETDET_RFC+" not found in SAP system"}); // logger.log("getHierStructureName: Function Module "+SAP_IOBJ_GETDET_RFC+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	            
				OdiSapUtil.throwODIException("Function Module "+SAP_IOBJ_GETDET_RFC+" not found in SAP system.");
				//throw new Exception("Function Module "+SAP_IOBJ_GETDET_RFC+" not found in SAP system.");
			}
			// Set Input Parameters
			JCoParameterList input = function.getImportParameterList();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"input="+ input}); // logger.log("input="+ input, className, OdiSAPBWLogger.DEBUG);
			input.setValue("IV_INFOOBJ", infoObjName); // setValue(name, value)
			
			// execute the function
			function.execute(dest);
			JCoTable tTableDetHeiStruct = function.getTableParameterList().getTable("ET_HIER_LIST");
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Heirarchy Structure is  :::::::::: "+ tTableDetHeiStruct}); // logger.log("Heirarchy Structure is  :::::::::: "+ tTableDetHeiStruct, className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"tTableDetHeiStruct.getNumRows() "+ tTableDetHeiStruct.getNumRows()}); // logger.log("tTableDetHeiStruct.getNumRows() "+ tTableDetHeiStruct.getNumRows(), className, OdiSAPBWLogger.FINEST);
			ArrayList colsHSt = new ArrayList();
			if(tTableDetHeiStruct.getNumRows() > 0){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Heirarchy Table details  Section, tTableDetHei.getNumRows() is : "+ tTableDetHeiStruct.getNumRows()}); // logger.log("Heirarchy Table details  Section, tTableDetHei.getNumRows() is : "+ tTableDetHeiStruct.getNumRows(), className, OdiSAPBWLogger.FINEST);
				//System.out.println(" "+tTableDetHei.getNumRows());
				
				for(int r=0; r<tTableDetHeiStruct.getNumRows(); r++){
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"tTableDet.getNumRows()  for Heirarchy  Structure is :"+tTableDetHeiStruct.getNumRows()}); // logger.log("tTableDet.getNumRows()  for Heirarchy  Structure is :"+tTableDetHeiStruct.getNumRows(), className, OdiSAPBWLogger.FINEST);
					// set the index
					tTableDetHeiStruct.setRow(r);
					
					OdiSAPBWTableField col = new OdiSAPBWTableField();
					
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Heirarchy HIENM IS:"+tTableDetHeiStruct.getString("HIENM")}); // logger.log("Heirarchy HIENM IS:"+tTableDetHeiStruct.getString("HIENM"), className, OdiSAPBWLogger.FINEST);
					
					String hierachyName = tTableDetHeiStruct.getString("HIENM");//Hierarchy Name
					String hierachyVers = tTableDetHeiStruct.getString("VERSION");//Hierarchy Version

					arrHStr.add(hierachyName+" versions: "+hierachyVers);
					//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"HHHHHHHHH TABLE :"+arrHStr}); // logger.log("HHHHHHHHH TABLE :"+arrHStr, className, OdiSAPBWLogger.FINEST);
				}
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Heirarchy HIENM IS:============================>>>>>"+arrHStr}); // logger.log("Heirarchy HIENM IS:============================>>>>>"+arrHStr, className, OdiSAPBWLogger.FINEST);
			}
		} catch(Exception ex){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Error: "+ ex.getMessage()}); // logger.log("Error: "+ ex.getMessage(), className, OdiSAPBWLogger.FINEST);
			ex.printStackTrace();
				
			OdiSapUtil.throwODIException(ex.toString());
			//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
		}finally {
		}
	
		return arrHStr;
	}

	/* (non-Javadoc)
	 * @see UIListener#getODSDSODetails(java.lang.String)
	 */
	public Vector getODSDSODetails(String odsName) {
		//TODO: Update ODS/DSO Field details with- FIELD_POS, DATATYPE, DDLEN, DECIMALS
		Vector ods = new Vector();
		try {
			// Set the UI in Wait State
			if(!NO_GUI)
				ui.waitState();
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_ODS_DETAILS_RFC);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getODSDSODetails(): Function Module "+SAP_ODS_DETAILS_RFC+" not found in SAP system"}); // logger.log("getODSDSODetails(): Function Module "+SAP_ODS_DETAILS_RFC+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	            
				OdiSapUtil.throwODIException("Function Module "+SAP_ODS_DETAILS_RFC+" not found in SAP system.");
				//throw new Exception("Function Module "+SAP_ODS_DETAILS_RFC+" not found in SAP system.");
			}
			if(odsName != null){
				// Set Input Parameters
				JCoParameterList input = function.getImportParameterList();
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"input="+ input}); // logger.log("input="+ input, className, OdiSAPBWLogger.DEBUG);
				input.setValue("IV_ODSOBJECT", odsName); // setValue(name, value)
			}
			
			// execute the function
			function.execute(dest);
				
			//Check SAP authorizations
			getETReturnValues(function);
			// process RFC output, Extract Table ** ET_IAREA_OBJ **
			//JCO.ParameterList export = function.getExportParameterList();
			//log.log("Export Parm: "+ export.getValue("EV_ODS_TABNAME"));
			
			JCoTable table = function.getTableParameterList().getTable("ET_ODS_DET");
			//log.log("ODSDSO##Table: \n" + table);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Num of Table Rows22222: " + table.getNumRows()}); // logger.log("Num of Table Rows22222: " + table.getNumRows(), className, OdiSAPBWLogger.DEBUG);

			// Read Table rows
			if (table.getNumRows() > 0) {
				String name = "";
				ODSDSO od = null;
				ArrayList keyFields = null;
				ArrayList dataFields = null;
				String key;
				boolean isKeyField;

				for (int r = 0; r < table.getNumRows(); r++) {
					// set the index
					table.setRow(r);
					name = table.getString("ODS_OBJ_NAME");
					if (!name.trim().equals("")) {
						if (od != null) {
							od.setKeyFields(keyFields);
							od.setDataFields(dataFields);
							ods.add(od);
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ODS/DSO Name: "+ od.getName()}); // logger.log("ODS/DSO Name: "+ od.getName(), className, OdiSAPBWLogger.DEBUG);
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Num of Key Fields="+ keyFields.size()}); // logger.log("Num of Key Fields="+ keyFields.size(), className, OdiSAPBWLogger.DEBUG);
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Num of Data Fields="+ dataFields.size()}); // logger.log("Num of Data Fields="+ dataFields.size(), className, OdiSAPBWLogger.DEBUG);
						}
						od = new ODSDSO();
						keyFields = new ArrayList();
						dataFields = new ArrayList();
						od.setName(name);
						od.setDesc(table.getString("ODS_OBJ_DESC"));
						od.setOdsoTableName(table.getString("ODS_TAB_NAME"));
						od.setOdsTypeUI(table.getString("ODSOTYPE"));
					}
					key = table.getString("KEY_FLAG").trim().toUpperCase();
					isKeyField = (key.equals("X") ? true : false);

					if(isKeyField){
						ODSDSOKeyField field = new ODSDSOKeyField();
						field.setName(table.getString("FIELD"));
						field.setDesc(table.getString("FIELD_DESC"));
						field.setDataType(table.getString("DATATYPE"));
						int len = Integer.parseInt(table.getString("DDLEN").trim());
						field.setFieldLen(len);
						//if(field.getDataType().toUpperCase().startsWith("DEC")){
							int decLen = Integer.parseInt(table.getString("DECIMALS").trim());
							field.setDecLen(decLen);
						//}
						
						keyFields.add(field);
					}
					else{
						ODSDSODataField field = new ODSDSODataField();
						field.setName(table.getString("FIELD"));
						field.setDesc(table.getString("FIELD_DESC"));
						field.setDataType(table.getString("DATATYPE"));
						int len = Integer.parseInt(table.getString("DDLEN").trim());
						field.setFieldLen(len);
						//if(field.getDataType().toUpperCase().startsWith("DEC")){
							int decLen = Integer.parseInt(table.getString("DECIMALS").trim());
							field.setDecLen(decLen);
						//}
						
						dataFields.add(field);
					}
				}
				//Enter ODS/DSO element
				od.setKeyFields(keyFields);
				od.setDataFields(dataFields);
				ods.add(od);
			}

			// Set the cursor back to normal
			if(!NO_GUI)
				ui.normalState();
		} catch (Exception ex) {
			/*logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(OdiSAPLogger.INFO, "Error: " + ex.getMessage() + "\n"
					+ ex.toString());*/
			if(ui!=null){		
				ui.exit();
				ui.destroyScreen();
			}
			ex.printStackTrace();
			OdiSapUtil.throwODIException(ex.toString());
			//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
		}finally {
		}
		return ods;
	}

	/**
	 * Code for the OpenHub
	 * Get List of Open Hub destinations
	 */
	/* (non-Javadoc)
	 * @see UIListener#getOpenHubDestinations()
	 */
	public Vector getOpenHubDestinations() {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"OdiSAPBWConn: Get OHD Destination List"}); // logger.log("OdiSAPBWConn: Get OHD Destination List....", className, OdiSAPBWLogger.FINEST);
		 String strOHDEST ="%";
		 String strDESC = "%";
		Vector vectOpenHub = new Vector();
		try {
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_RSB_API_OHS_DEST_GETLIST);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getOpenHubDestinations(): Function Module "+SAP_RSB_API_OHS_DEST_GETLIST+" not found in SAP system"}); // logger.log("getOpenHubDestinations(): Function Module "+SAP_RSB_API_OHS_DEST_GETLIST+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	           
				OdiSapUtil.throwODIException("Function Module "+SAP_RSB_API_OHS_DEST_GETLIST+" not found in SAP system.");
				//throw new Exception("Function Module "+SAP_RSB_API_OHS_DEST_GETLIST+" not found in SAP system.");
			}
			// Set Input Parameters
			JCoParameterList input = function.getImportParameterList();
			input.setValue("IV_OHDEST", strOHDEST); // setValue(name, value)
			input.setValue("IV_OHD_DESC", strDESC); 
			
			// Execute the function
			function.execute(dest);
			//Check SAP authorizations
			getETReturnValues(function);
			// process the output of the RFC Fucntion execution
			JCoTable listOfTables = function.getTableParameterList().getTable(
					"ET_OHDEST"); //Export Table 
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Destination Info: "+ listOfTables}); // logger.log("Destination Info: "+ listOfTables, className, OdiSAPBWLogger.DEBUG);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Num of Table Rows: "+listOfTables.getNumRows()}); // logger.log("Num of Table Rows: "+listOfTables.getNumRows(), className, OdiSAPBWLogger.DEBUG);
			
			if (listOfTables.getNumRows() > 0) {
				for (int r = 0; r < listOfTables.getNumRows(); r++) {
					listOfTables.setRow(r);
					OpenHubDestination openHub = new OpenHubDestination();
					openHub.setName(listOfTables.getString("OHDEST"));
					openHub.setDesc(listOfTables.getString("TXTLG"));
					vectOpenHub.add(openHub);
				}
			}
		} catch (Exception ex) {
			/*
			 * logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(OdiSAPLogger.INFO, "Error: " + ex.getMessage() + "\n" +
			 * ex.toString());
			 */
			ex.printStackTrace();
				
			OdiSapUtil.throwODIException(ex.toString());
			//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
		} finally {
		}
		return vectOpenHub;
	}
	/**
	 * Get List for OpenHubMetaData Fetching 
	 */
	/* (non-Javadoc)
	 * @see UIListener#getOpenHubData(java.lang.String)
	 */
	public OpenHubTable getOpenHubData(String strOhd) {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"OdiSAPBWConn: Get OHD Destination Table List.."}); // logger.log("OdiSAPBWConn: Get OHD Destination Table List....", className, OdiSAPBWLogger.FINEST);
		OpenHubTable ohtab = new OpenHubTable();
		Vector allOhColumn = new Vector();//Contains data for column name
		try {
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_RSB_API_OHS_DEST_GETDETAIL);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getOpenHubData(): Function Module "+SAP_RSB_API_OHS_DEST_GETDETAIL+" not found in SAP system"}); // logger.log("getOpenHubData(): Function Module "+SAP_RSB_API_OHS_DEST_GETDETAIL+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	            
				OdiSapUtil.throwODIException("Function Module "+SAP_RSB_API_OHS_DEST_GETDETAIL+" not found in SAP system.");
				//throw new Exception("Function Module "+SAP_RSB_API_OHS_DEST_GETDETAIL+" not found in SAP system.");
			}
			// Set Input Parameters
			JCoParameterList input = function.getImportParameterList();
			input.setValue("OHDEST", strOhd); // setValue(name, value)
			
			function.execute(dest);
			
			//Check SAP authorizations
			//extend support
			getETReturnValues(function);
				
			// process the output of the RFC Fucntion execution
			JCoTable listOfTables = function.getTableParameterList().getTable("DBTAB_STRUCTURE"); //Export Table
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"OHD Table Info: "+ listOfTables}); // logger.log("OHD Table Info: "+ listOfTables, className, OdiSAPBWLogger.DEBUG);
			JCoParameterList exParam = function.getExportParameterList();
            String ohdTableName = (String)exParam.getValue("RFCDATABASETABLENAME");
            ohtab.setName(ohdTableName);// Set the name of the Table 
            ohtab.setDesc("");// No description is coming from BAPI
            ohtab.setOhDest(strOhd);
            
            if (listOfTables.getNumRows() > 0) {
				for (int r = 0; r < listOfTables.getNumRows(); r++) {
					listOfTables.setRow(r);
					OpenHubColumn openHubColumn = new OpenHubColumn();
					openHubColumn.setName(listOfTables.getString("FIELDNM"));
					openHubColumn.setDesc(listOfTables.getString("TXTSH"));
					openHubColumn.setDataType(listOfTables.getString("DATATYPE"));
					openHubColumn.setFieldLen(Integer.parseInt(listOfTables.getString("LENGTH")));
					if(listOfTables.getString("KEYFLAG").trim().toUpperCase().equals("X"))
						openHubColumn.setMandatory(true); // Mandatory field
				//	if(openHubColumn.getDataType().toUpperCase().startsWith("DEC"))
						openHubColumn.setDecLen(Integer.parseInt(listOfTables.getString("DECIMALS").trim()));
					
				    allOhColumn.add(openHubColumn);
				}
				ohtab.setColumns(allOhColumn);
			}
		} catch (Exception ex) {
			/*
			 * logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(OdiSAPLogger.INFO, "Error: " + ex.getMessage() + "\n" +
			 * ex.toString());
			 */
			ex.printStackTrace();
				
			OdiSapUtil.throwODIException(ex.toString());
			//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
		} finally {
		}
		return ohtab;
	}

	/* (non-Javadoc)
	 * @see UIListener#lookupInfoObject(java.lang.String, java.lang.String)
	 */
	public Vector lookupInfoObject(String infoObjName, String infoObjDesc) {
		Vector infoObjectLookupList = new Vector();
		try {
			InfoObject lookupData = null;
			if(!NO_GUI)
				ui.waitState();
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_ODI_IOBJ_SEARCH);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"lookupInfoObject(): Function Module "+SAP_ODI_IOBJ_SEARCH+" not found in SAP system"}); // logger.log("lookupInfoObject(): Function Module "+SAP_ODI_IOBJ_SEARCH+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	            
				OdiSapUtil.throwODIException("Function Module "+SAP_ODI_IOBJ_SEARCH+" not found in SAP system.");	
				//throw new Exception("Function Module "+SAP_ODI_IOBJ_SEARCH+" not found in SAP system.");
			}
			// Set input parameters
			JCoParameterList input = function.getImportParameterList();
			// InfoObject Name
			input.setValue("IV_IOBJECT", infoObjName);
			input.setValue("IV_IOBJ_DESC", infoObjDesc);
			
			// execute the function
			function.execute(dest);
			
			// process the output of the RFC Fucntion execution
			JCoTable listOfTables = function.getTableParameterList().getTable("ET_IOBJECT");

			if (listOfTables.getNumRows() > 0) {
				for (int r = 0; r < listOfTables.getNumRows(); r++) {
					listOfTables.setRow(r);
					lookupData = new InfoObject();

					lookupData.setName((String) listOfTables.getString("IOBJNM"));
					lookupData.setDesc((String) listOfTables.getString("TXTLG"));
					infoObjectLookupList.add(lookupData);
				}
			}
		} catch (Exception ex) {
			/*
			 * logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(OdiSAPLogger.INFO, "Error: " + ex.getMessage() + "\n" +
			 * ex.toString());
			 */
			ex.printStackTrace();
				
			OdiSapUtil.throwODIException(ex.toString());
			//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
		} finally {
			
		}
		return infoObjectLookupList;
	}

	/* (non-Javadoc)
	 * @see UIListener#lookupODSDSO(java.lang.String, java.lang.String)
	 */
	public Vector lookupODSDSO(String odsoName, String odsoDesc) {
		Vector odsdsoLookupList = new Vector();
		try {
			ODSDSO lookupData = null;
			if(!NO_GUI)
				ui.waitState();
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_ODI_ODSO_SEARCH);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"lookupODSDSO(): Function Module "+SAP_ODI_ODSO_SEARCH+" not found in SAP system"}); // logger.log("lookupODSDSO(): Function Module "+SAP_ODI_ODSO_SEARCH+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	         
				OdiSapUtil.throwODIException("Function Module "+SAP_ODI_ODSO_SEARCH+" not found in SAP system.");
			//	throw new Exception("Function Module "+SAP_ODI_ODSO_SEARCH+" not found in SAP system.");
			}
			// Set Input Parameters
			JCoParameterList input = function.getImportParameterList();
			// ODSO name
			input.setValue("IV_ODSOBJECT", odsoName);
			// ODSO Desc
			input.setValue("IV_ODSO_DESC", odsoDesc);

			// execute the function
			function.execute(dest);
			
			// process the output of the RFC Fucntion execution
			JCoTable listOfTables = function.getTableParameterList().getTable("ET_ODSOBJECT");

			if (listOfTables.getNumRows() > 0) {
				for (int r = 0; r < listOfTables.getNumRows(); r++) {
					listOfTables.setRow(r);
					lookupData = new ODSDSO();
					// ODSO Name
					lookupData.setName((String) listOfTables.getString("ODSOBJECT"));
					// ODSO Description
					lookupData.setDesc((String) listOfTables.getString("TXTLG"));
					lookupData.setOdsType((String) listOfTables.getString("ODSOTYPE"));
					odsdsoLookupList.add(lookupData);
				}
			}
		} catch (Exception ex) {
			/*
			 * logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(OdiSAPLogger.INFO, "Error: " + ex.getMessage() + "\n" +
			 * ex.toString());
			 */
			ex.printStackTrace();
				
			OdiSapUtil.throwODIException(ex.toString());
			//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
		} finally {
		}
		return odsdsoLookupList;
	}

	/* (non-Javadoc)
	 * @see UIListener#getLookupIcubeIarea(java.lang.String, java.lang.String)
	 */
	public Vector getLookupIcubeIarea(String infoCName, String infoCDesc) {
		Vector vectInfoCubeArea = new Vector();
		try {
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_ODI_CUBE_SEARCH);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getLookupIcubeIarea(): Function Module "+SAP_ODI_CUBE_SEARCH+" not found in SAP system"}); // logger.log("getLookupIcubeIarea(): Function Module "+SAP_ODI_CUBE_SEARCH+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	           
				OdiSapUtil.throwODIException("Function Module "+SAP_ODI_CUBE_SEARCH+" not found in SAP system.");
				//throw new Exception("Function Module "+SAP_ODI_CUBE_SEARCH+" not found in SAP system.");
			}
			// Set input parameters
			JCoParameterList input = function.getImportParameterList();
			input.setValue("IV_INFOCUBE", infoCName);
			input.setValue("IV_CUBE_DESC", infoCDesc);

			// execute the function
			function.execute(dest);
			
			// process the output of the RFC Fucntion execution
			JCoTable listOfTables = function.getTableParameterList().getTable("ET_CUBE_IAERA");

			if (listOfTables.getNumRows() > 0) {
				for (int r = 0; r < listOfTables.getNumRows(); r++) {
					listOfTables.setRow(r);
					InfoAreaNode iaNode = new InfoAreaNode();
					iaNode.setName(listOfTables.getString("INFOAREA"));
					InfoCube ic = new InfoCube();
					ic.setName(listOfTables.getString("INFOCUBE"));
					ic.setDesc(listOfTables.getString("DESCRIPTION"));
					ic.setInfoArea(iaNode);
					vectInfoCubeArea.add(ic);
				}
			}
		} catch (Exception ex) {
			/*
			 * logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(OdiSAPLogger.INFO, "Error: " + ex.getMessage() + "\n" +
			 * ex.toString());
			 */
			ex.printStackTrace();
				
			OdiSapUtil.throwODIException(ex.toString());
			//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
		} finally {
		}
		return vectInfoCubeArea;
	}
	
	/**
	 * For Look up of the Open Hub Destination
	 * Get the Open Hub Destination Based on the input value 
	 */
	/* (non-Javadoc)
	 * @see UIListener#getLookupOhDestination(java.lang.String, java.lang.String)
	 */
	public Vector getLookupOhDestination(String ohName, String ohDesc) {
		Vector vectLookupOHubDest = new Vector();
		try {
			// get JCO function name from RFC function name
		//	dest = JCoDestinationManager.getDestination(CONNECTION_POOL);
			JCoFunction function = repository.getFunction(SAP_Z_ODI_OHDEST_SEARCH);
			if(function == null) {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getLookupOhDestination(): Function Module "+SAP_Z_ODI_OHDEST_SEARCH+" not found in SAP system"}); // logger.log("getLookupOhDestination(): Function Module "+SAP_Z_ODI_OHDEST_SEARCH+" not found in SAP system", className, OdiSAPBWLogger.FINEST);
	           
				OdiSapUtil.throwODIException("Function Module "+SAP_Z_ODI_OHDEST_SEARCH+" not found in SAP system.");
				//throw new Exception("Function Module "+SAP_Z_ODI_OHDEST_SEARCH+" not found in SAP system.");
			}
			// Set input parameters
			JCoParameterList input = function.getImportParameterList();
			input.setValue("IV_OHDEST", ohName);//Import Parameter
			input.setValue("IV_OHD_DESC", ohDesc);//Import Parameter

			// Execute the function
			function.execute(dest);
			
			// process the output of the RFC Fucntion execution
			JCoTable listOfTables = function.getTableParameterList().getTable("ET_OHDEST"); //Export Table
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("Destination Info: "+ listOfTables,  className, OdiSAPBWLogger.DEBUG);
			
			if (listOfTables.getNumRows() > 0) {
				for (int r = 0; r < listOfTables.getNumRows(); r++) {
					listOfTables.setRow(r);
					OpenHubDestination openHub = new OpenHubDestination();
					
					openHub.setName(listOfTables.getString("OHDEST"));
					openHub.setDesc(listOfTables.getString("TXTLG"));//TXTLG
					vectLookupOHubDest.add(openHub);
				}
			}
		} catch (Exception ex) {
			/*
			 * logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(OdiSAPLogger.INFO, "Error: " + ex.getMessage() + "\n" +
			 * ex.toString());
			 */
			ex.printStackTrace();
				
			OdiSapUtil.throwODIException(ex.toString());
			//throw new RuntimeException(ex.getMessage());//throw error in ODI Operator window
		} finally {
		}
		return vectLookupOHubDest;
	}
	/**
	 *  IMPORTANT:-@author Anupam.Srivastava
	 *  
	 *   When this Class is pested to the ODI then the method disconnect()need to be Disabled.
	 *   
	 *   Otherwise in case of Running in the Eclipse, this method needs to be Enabled
	 */
	public void disconnect() throws Exception {
		// TODO Auto-generated method stub
		
	}

	
	/* (non-Javadoc)
	 * @see OdiSAPBWConnection#disconnect()
	 */
	/*public void disconnect() throws Exception {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("JCO3 Disconnect", className, OdiSAPBWLogger.DEBUG);
		if(dataProvider != null){
			dataProvider.changeProperties(null);
			Environment.unregisterDestinationDataProvider(dataProvider);
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("JCO3 Connector disconnected !!", className, OdiSAPBWLogger.FINEST);
	}*/
}


// End of OdiSAPBWConn3.java
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6350]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5bb1c4cf-6b9a-4503-b25e-bb315d633534]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3493]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[50]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java GUI Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[92333749-6150-43b5-9323-c8dc58ccdcfd]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6350]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
//Start of OdiSAPBWLang.java
import java.util.Date;
import java.util.Locale;
import java.util.ResourceBundle;

/**
 * OdiSAPBWLang.java
 * This class is used for getting the values from corresponding language property file.
 */
public class OdiSAPBWLang {
	
	//public static final String ENG="EN";
	//public static final String DUT="DE";
	ResourceBundle rb = null;
	
	//Constant Variable Declaration
	public static final String NAME = "label_name";
	public static final String DESCRIPTION = "label_desc";
	public static final String TARGET_DATA= "label_target_data";
	public static final String INFO_CUBE = "label_info_cube";
	public static final String INFO_OBJECT = "label_info_object";
	public static final String INFO_OBJECTS = "label_info_objects";
	public static final String ODS_DSO = "label_ods_dso";
	public static final String INFO_AREAS = "label_info_areas";
	public static final String DESTINATION = "label_destination";
	public static final String DESTINATION_DESC = "label_destination_desc";
	public static final String OPENHUB = "label_openHub";
	public static final String DIMENSIONS = "label_dimensions";
	public static final String KEY_FIGURES = "label_key_figures";
	public static final String KEY_FIELDS = "label_key_fields";
	public static final String DATA_FIELDS = "label_data_fields";	
	public static final String LOOKUP = "button_lookup";
	public static final String CANCEL = "button_cancel";
	public static final String SEARCH = "button_search";
	public static final String CLOSE = "button_close";
	public static final String OK = "button_ok";
	public static final String REVERSE = "button_reverse";
	public static final String SAP_METADATA = "sap_bw_metadata";
	public static final String SAP_METADATA_BROWSER = "sap_metadata_browser";
	public static final String NOTHING_TO_REVERSE = "nothing_to_reverse";
	public static final String REVERSING_SELECTED_BW_BI_METADATA = "reversing_selected_BW_BI_metadata";
	public static final String SAP_BW_BI_LOOKUP = "sap_bw_bi_lookup";
	public static final String PLEASE_ENTER_VALID_NAME = "please_enter_valid_name";
	public static final String PLEASE_ENTER_WILD_CARD = "please_enter_wild_card";
	public static final String JCO_CONNECTION_EXCEPTION = "ODIKM-SAPBW-RKM-10031";
	
	//property files
	//public static final String MESSAGE_ENGLISH = "sap_rkm_bw_EN";
	//public static final String MESSAGE_GERMAN = "sap_rkm_bw_DE";
	public static final String PROPERTY_FILE = "sap_rkm_bw";
	
	public static final String EMPTY_STRING = "EMPTY STRING";
	public static final String NO_TRANSLATION = "NO TRANSLATION";
	public static final boolean NO_PROPERTY_FILE = true;	
	private boolean resourceMessage = false;
	private oracle.odi.sap.km.CommonResourceBundle commonResourceBundle;
	
	/*
	 *Logger 
	 */	
	private OdiSAPBWLogger logger;
	private static OdiSAPBWLang lang;
	public static OdiSAPBWLang getInstance(oracle.odi.sap.km.CommonResourceBundle commonResourceBundle){
			if(lang == null)
			{
				//resourceBundle = resourceBundle;
			lang = new OdiSAPBWLang(commonResourceBundle);
			}
			return lang;
		}
	
	// Constructor for ODI
	public OdiSAPBWLang(oracle.odi.sap.km.CommonResourceBundle commonResourceBundle) {
			this.commonResourceBundle = commonResourceBundle;
			try {
				logger =  OdiSAPBWLogger.getLogger();
			} catch (Exception e) {
				e.printStackTrace();
			}
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"OdiSAPBWLang object created"});
			//rb = ResourceBundle.getBundle("oracle/odi/sap/km/"+PROPERTY_FILE, Locale.getDefault(), this.caller.getClass().getClassLoader());//class loader changed due to 12c issue
			// rb = ResourceBundle.getBundle("oracle/odi/sap/km/"+PROPERTY_FILE, Locale.getDefault(), this.getClass().getClassLoader());
			//this.rb = odiSapBwResourceBundle;
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"2222222222222222222222222222"});
	}

	
	public String getValue(String pKeyName) {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getResourceString() -  resourceMessage: "+resourceMessage}); // logger.log(">>>>> getResourceString() -  resourceMessage: "+resourceMessage,OdiSAPBWLogger.DEBUG );
		if (resourceMessage) {
			return NO_TRANSLATION;
		} else {
			return commonResourceBundle.getResourceString(pKeyName);
		}
	}
	
	private void setMessages(boolean resourceMsg) {
		this.resourceMessage = resourceMsg;
	}
	
}
// End of OdiSAPBWLang.java
//Start of MyEditor.java
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.net.URL;
import java.util.Date;

import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JTree;
import javax.swing.tree.TreeCellRenderer;
import javax.swing.tree.TreePath;

public class MyEditor implements TreeCellRenderer {
//	Logger
	OdiSAPBWLogger logger;
	String className = MyEditor.class.getName();

	JCheckBox check;
	MyLabel label;
	/*ImageIcon modelIcon = new ImageIcon("C:\\OraHome_1\\oracledi\\lib\\icons\\obj_model.gif");
	ImageIcon subModelIcon = new ImageIcon("C:\\OraHome_1\\oracledi\\lib\\icons\\obj_submodel.gif");
	ImageIcon tableIcon = new ImageIcon("C:\\OraHome_1\\oracledi\\lib\\icons\\obj_table.gif");
	ImageIcon colIcon = new ImageIcon("C:\\OraHome_1\\oracledi\\lib\\icons\\obj_column.gif");*/
	
	ImageIcon modelIcon;
	ImageIcon subModelIcon;
	ImageIcon tableIcon;
	ImageIcon colIcon;
	
	String cusLabel1 = "<html><table cellpadding=0><tr><td><img src=file:///c:\\prasanta\\icons\\obj_model.gif/></td><td>";
	String cusLabel2 = "</td></tr></table></html>";
	
	MetaDataBrowserUI ui;
	
	public MyEditor(MetaDataBrowserUI ui) throws Exception {
		logger =  OdiSAPBWLogger.getLogger();
		this.ui = ui;
		check = new JCheckBox();
		label = new MyLabel();
		URL obj_model = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_model.gif");
	//	URL obj_model = getClass().getResource("com/sunopsis/graphical/gif/obj_model.gif");
		modelIcon = new ImageIcon(obj_model);
		URL obj_submodel = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_submodel.gif");
	//	URL obj_submodel = getClass().getResource("com/sunopsis/graphical/gif/obj_submodel.gif");
		subModelIcon = new ImageIcon(obj_submodel);
		URL obj_column = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_column.gif");
	//	URL obj_column = getClass().getResource("com/sunopsis/graphical/gif/obj_column.gif");
		colIcon = new ImageIcon(obj_column);
		URL obj_table = this.caller.namespace.getClassManager().getResource("/com/sunopsis/graphical/gif/obj_table.gif");
	//	URL obj_table = getClass().getResource("com/sunopsis/graphical/gif/obj_table.gif");
		tableIcon = new ImageIcon(obj_table);
	}
	
	public Component getTreeCellRendererComponent(JTree tree,
            Object value,
            boolean selected,
            boolean expanded,
            boolean leaf,
            int row,
            boolean hasFocus) {
		try{
			MyNode node = (MyNode)value;			
			OdiSAPBWData data = (OdiSAPBWData) node.getNode();				
			 if(selected){
					if(MetaDataBrowserUI.mouseClickStatus){
						// Mouse Event						
						TreePath path = tree.getPathForRow(row);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Selected value........................... " + path}); // logger.log("Selected value........................... " + path,className, OdiSAPBWLogger.DEBUG);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"data Value &&&&&&&&&&&&&&&&&&&&&& " + data.getName()}); // logger.log("data Value &&&&&&&&&&&&&&&&&&&&&& " + data.getName(),className, OdiSAPBWLogger.DEBUG);
						ui.clearSelection(path);						
						if (ui.updateRevList(data)) {
							// Update Reverse Element List
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Update Reverse EL List....."}); // logger.log("_________Update Reverse EL List.....", className, OdiSAPBWLogger.DEBUG);
							node.setSelected(!node.isSelected());
						}
					}
					else{
						// Program Event
						if (ui.updateRevList(data)) {
							// Update Reverse Element List
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Update Reverse EL List....."}); // logger.log("_________Update Reverse EL List.....", className, OdiSAPBWLogger.DEBUG);
							if(!node.isSelected())
								node.setSelected(true);
						}
					}
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Selected Node="+ data.getName()}); // logger.log("Selected Node="+ data.getName(), className, OdiSAPBWLogger.DEBUG);
					
					/*
					 * Clear Node Selection cache
					 */
					tree.clearSelection();
			 }				
			 
			label.setSelected(node.isSelected());			
			label.setText(data.getName()+ "        "+data.getDesc());
			
			ImageIcon icon = null;
			
			if(node.isRoot()){
				//top most root "SAP BW Metadata"
				icon = modelIcon;
			}
			else if(data instanceof InfoAreaNode)
				icon = subModelIcon;
			else if(data instanceof InfoCube){
				if(((InfoCube)data).isRoot())
					icon = subModelIcon;
				else
					icon = tableIcon;
			}
			else if(data instanceof Dimension)
				icon = colIcon;
			else if(data instanceof Characteristic)
				icon = colIcon;
			else if(data instanceof KeyFigure)
				icon = colIcon;
			else if(data instanceof InfoObject){
				if(((InfoObject)data).isRoot())
					icon = subModelIcon;
				else
					icon = tableIcon;
			}
			else if(data instanceof InfoObjTable)
				icon = tableIcon;
			else if(data instanceof InfoObjAtt)
				icon = colIcon;
			else if(data instanceof ODSDSO){
				if(((ODSDSO)data).isRoot())
					icon = subModelIcon;
				else
					icon = tableIcon;
			}
			else if(data instanceof ODSDSOKeyField)
				icon = colIcon;
			else if(data instanceof ODSDSODataField)
				icon = colIcon;
			//TODO: Shaow it to Prashanta 
			else if (data instanceof OpenHubData)
				if(((OpenHubData)data).isRoot())
					icon = subModelIcon;
				else
					icon = tableIcon;
			else if(data instanceof OpenHubDestination)
				if(((OpenHubDestination)data).isRoot())
					icon = subModelIcon;
				else
					icon = subModelIcon;
			else if(data instanceof OpenHubTable)
				if(((OpenHubTable)data).isRoot())
					icon = subModelIcon;
				else
					icon = tableIcon;
			else if(data instanceof OpenHubColumn)
				if(((OpenHubColumn)data).isRoot())
					icon = subModelIcon;
				else
					icon = colIcon;
			label.setIcon(icon);
			label.setFont(tree.getFont());
			return label;
		}catch(Exception ex){
			ex.printStackTrace();
			return null;
		}
	}

	public class MyLabel extends JLabel{
		
		Color lightGray = new Color(211, 211, 211);
		boolean selected;
		public MyLabel(){
			super();
		}
		
		public void setSelected(boolean selected){
			this.selected = selected;
		}
		
		public void paint(Graphics g){
			if(selected){
				g.setColor(lightGray);
				g.fillRect(0, 0, getWidth(), getHeight());
			}
			super.paint(g);
		}
	}
}
//End of MyEditor.java

//Start of OdiSAPBWTreeModel.java

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.Vector;

import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;

import com.sap.conn.jco.util.SapLoggingTrace;

//import org.apache.tools.ant.types.resources.selectors.InstanceOf;
/**
 *This class will handle Tree browsing data
 * Every InfoArea/Sub Infoarea Data targets (Infocube, Infoobjects and ODS/DSO)
 * will be stored in 3 different vectors. Each vector will contain a headre node
 * which will specify the node type i.e. "InfoObjects" etc.
 * 
 * TODO: Individual ODS/DSO details fetch, for nodes under InfoArea
 *
 */
//import org.apache.tools.ant.types.resources.selectors.InstanceOf;
/**
 *This class will handle Tree browsing data
 * Every InfoArea/Sub Infoarea Data targets (Infocube, Infoobjects and ODS/DSO)
 * will be stored in 3 different vectors. Each vector will contain a headre node
 * which will specify the node type i.e. "InfoObjects" etc.
 * 
 * TODO: Individual ODS/DSO details fetch, for nodes under InfoArea
 *
 */
   /** @author Anupam.Srivastava
     * 
     *  X=====================X
	 *  |  SAP META DATA      |
	 *  X=====================X
	 *  |         |
	 *  |         X=====================X
	 *  |         |   INFO-AREA         |   
	 *  |         x=====================X
	 *  |         |         |
	 *  |         |         |
	 *  |         x----------------X         
	 *  |         | INFOCUBE[1*]   |
	 *  |         X----------------X
 	 *  |         |         |
 	 *  |         |         |
	 *  |         |         X---------------------X
	 *  |         |         |    SUB-INFO-AREA    |
	 *  |         |         |-----------|---------X
	 *  |         |         |           |
	 *  |         |         |           |
	 *  |         |         X-----------------X
	 *  |         |         | INFOCUBE [2*]   |
	 *  |         |         X-----------------X
	 *  |         |         |           |
	 *  |         |         |           X---------------------X
	 *  |         |         |           |   INFOCUBE[3*]      |
	 *  |         |         |           X---------------------X
	 *  |         |         |           |         
	 *  |         |         |           |
	 *  |         |         |           |
	 *  |         |         |           X---------------------X
	 *  |         |         |           |   INFOOBJECT        |
	 *  |         |         |           X---------------------X
	 *  |         |         |           |
	 *  |         |         |           |
	 *  |         |         |           X---------------------X
	 *  |         |         |           |   ODS-DSO           |
	 *  |         |         |           X---------------------X
	 *  |         |         |           |
	 *  |         |         |           |
	 *  |         X=====================X
	 *  |         |   INFOOBJECT        |
	 *  |         X=====================X
	 *  |         |         |           |
	 *  |         |         |           |
	 *  |         |         |           |
	 *  |         X=====================X
	 *  |         |   ODS-DSO           |
	 *  |         X=====================X
	 *  |         |         |           |
	 *  |         |         |           |
	 *  
 */

public class OdiSAPBWTreeModel implements TreeModel {

	/**
	 * executes appropriate RFC and fetch data from SAP BW/BI system
	 */
	UIListener listener;

	/**
	 * Local data structure for holding all InfoArea/SubInfoArea and their
	 * relation
	 */
	Vector infoAreas = new Vector();

	/**
	 * Local data structure for holding all InfoObjects
	 */
	Vector allInfoObjects = new Vector();

	Vector vectInfoCubeLvl1 = new Vector();

	/**
	 * Local data structure for holding all ODS/DSO details
	 */
	Vector allODSDSO = new Vector();

	/**
	 * Local data structure for holding all Open Hub Destinations
	 */
	Vector allOpenHubDestination = new Vector();

	/**
	 * Local variable to hold child count of a node
	 */
	int childCount = 0;

	/*
	 *Logger 
	 */
	//private OdiSapBwResourceBundle odiSapBwResourceBundle;
	OdiSAPBWLogger logger;

	OdiSAPBWLang odiLang;

	String className = OdiSAPBWTreeModel.class.getName();

	public static String INFOCUBE_NODE = "";

	String INFOOBJECT_NODE = "";

	String ODSDSO_NODE = "";

	String OHD = "";

	String INFO_AREAS = "";

	String INFO_OBJECTS = "";

	String INFO_CUBE = "";

	public boolean NO_GUI = false;

	public OdiSAPBWTreeModel(UIListener listener, Vector infoAreas,OdiSAPBWLang odiLang)
			throws Exception {
	//	this.logger = logger;
		logger = OdiSAPBWLogger.getLogger();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Tree Model......"}); // logger.log("Tree Model.......", className, OdiSAPBWLogger.FINEST);
		this.listener = listener;
		this.infoAreas = infoAreas;
		this.odiLang = odiLang;
		// Node Lavels
		INFOCUBE_NODE = odiLang.getValue(OdiSAPBWLang.INFO_CUBE);
		INFOOBJECT_NODE = odiLang.getValue(OdiSAPBWLang.INFO_OBJECT);
		ODSDSO_NODE = odiLang.getValue(OdiSAPBWLang.ODS_DSO);
		OHD = odiLang.getValue(OdiSAPBWLang.OPENHUB);
		INFO_AREAS = odiLang.getValue(OdiSAPBWLang.INFO_AREAS);
		INFO_OBJECTS = odiLang.getValue(OdiSAPBWLang.INFO_OBJECTS);
	}

	public Object getRoot() {
		//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getRoot()"}); // logger.log("getRoot()");
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"<<<Get Root>>>"}); // logger.log("<<<Get Root>>>", className, OdiSAPBWLogger.FINEST);
		OdiSAPBWData root = new OdiSAPBWData();
		root.setName(odiLang.getValue(OdiSAPBWLang.SAP_METADATA));
		root.setDesc("");
		root.setRoot(true);
		return new MyNode(root); //start at root
	}

	public int getChildCount(Object parent) {
	
		OdiSAPBWData pnode = ((MyNode) parent).getNode();

		//OdiSAPBWData pnode1 = ((OdiSAPBWData) parent).getName();
		childCount = 0;

		if (pnode instanceof InfoAreaNode) { // InfoAreas
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Get InfoAreaNodes..."}); // logger.log("Get InfoAreaNodes...", className, OdiSAPBWLogger.DEBUG);
			InfoAreaNode node = (InfoAreaNode) pnode;

			Vector childs = node.getChilds();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"222 Node Name=" + node.getName()}); // logger.log("Node Name=" + node.getName(), className,OdiSAPBWLogger.DEBUG);
			if (childs != null) {
				childCount = childs.size();
			}
			
			if(node.getInfoCubes() == null){
				/*
				 * This node's details hasn't been fetched. Read node details
				 * from SAP BW
				 */
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Read InfoArea details..."}); // logger.log("Read InfoArea details....", className, OdiSAPBWLogger.DEBUG);
				Vector dataTargets = listener.getInfoAreaDetails(node);
				node.setInfoCubes((Vector)dataTargets.elementAt(0));
				node.setInfoObjects((Vector)dataTargets.elementAt(1));
				node.setOdsdsos((Vector)dataTargets.elementAt(2));
				
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of ICs:"+ node.getInfoCubes().size()}); // logger.log("Number of ICs:"+ node.getInfoCubes().size(),className, OdiSAPBWLogger.DEBUG);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of IOs:"+ node.getInfoObjects().size()}); // logger.log("Number of IOs:"+ node.getInfoObjects().size(), className, OdiSAPBWLogger.DEBUG);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of ODS:"+ node.getOdsdsos().size()}); // logger.log("Number of ODS:"+ node.getOdsdsos().size(), className, OdiSAPBWLogger.DEBUG);
				
			}
		
            if (node.getInfoCubes().size() > 0)
				childCount = childCount+3;
            else if (node.getInfoObjects().size() > 0)
            	childCount = childCount+3;			
            else if (node.getOdsdsos().size() > 0)
            	childCount = childCount+3;

		} else if (pnode instanceof InfoCube) { // InfoCubes
			InfoCube node = (InfoCube) pnode;
			if (node.isRoot()) { // node.getInfoArea() != null
				InfoAreaNode ioNode = node.getInfoArea();
				childCount = ioNode.getInfoCubes().size();

			} else {
				// 2 Number of attributes of InfoCube
				// Key Figure and Characteristic
				// childCount = node.getInfoObjs().size();
				// fetch InfoCube Details
				Vector infoCubeDetails = new Vector();
				ArrayList dims = node.getDimentions();

				if (dims == null) {
					infoCubeDetails = listener.getInfoCubeDetails(node.getName());

					if (infoCubeDetails == null || infoCubeDetails.size() == 0) {
						node.setDimentions(new ArrayList()); // empty place
						// holder to
						// skip repeated
						// RFC call
						node.setKeyFigures(new ArrayList()); // empty place
						// holder to
						// skip repeated
						// RFC call
						childCount = 0;
					} else {
						node.setFactTable((String) infoCubeDetails.elementAt(0));
						node.setDimentions((ArrayList) infoCubeDetails.elementAt(1));
						node.setKeyFigures((ArrayList) infoCubeDetails.elementAt(2));
						//=======================TIME and Unit Dimension=======================
						node.setTimeUnitDim((ArrayList) infoCubeDetails.elementAt(3));
						childCount = 2;
					}
				} else {
					if (dims.size() == 0)
						childCount = 0;
					else
						childCount = 2;
				}
			}
		} else if (pnode instanceof Dimension) {
			Dimension node = (Dimension) pnode;
			if (node.isRoot()) {
				// Dimension label node
				InfoCube ic = node.getParent();
				childCount = ic.getDimentions().size();
			} else
				childCount = node.getCharacteristics().size();
		} else if (pnode instanceof KeyFigure) {
			KeyFigure node = (KeyFigure) pnode;
			if (node.isRoot()) {
				// KeyField Label node
				InfoCube ic = node.getParent();
				childCount = ic.getKeyFigures().size();
			}
		} else if (pnode instanceof InfoObject) {
			InfoObject node = (InfoObject) pnode;
			if (node.getInfoArea() == null) {
				//Top most InfoObject node- Get All InfoObjects
				if (allInfoObjects.size() == 0) {

					allInfoObjects = listener.getAllInfoObjects();

				}
				if (node.isRoot())
					childCount = allInfoObjects.size();
				else {
					//Show the details of Info Object
					if (node.getTables() == null) {

						// Retrieve details from SAP BW/BI server
						//Vector details = listener.getInfoObjectDetails(node.getName());

						InfoObject io = listener.getInfoObjectDetails(node
								.getName());
						node.copyInfoObject(io);

					}
					//childCount = node.getTables().size() + node.getAttributes().size();
					childCount = node.countAttribute() + node.countTables();
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoObject: " + node.getName()}); // logger.log("InfoObject: " + node.getName(), className,OdiSAPBWLogger.FINE);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of Child: " + childCount}); // logger.log("Number of Child: " + childCount, className,OdiSAPBWLogger.FINE);
				}
			} else {
				//Get List of InfoObjects of selected InfoArea
				InfoAreaNode ioNode = node.getInfoArea();
				childCount = ioNode.getInfoObjects().size();
			}

		} else if (pnode instanceof ODSDSO) { //ODS/DSO
			ODSDSO node = (ODSDSO) pnode;

			if (node.getInfoArea() == null) {
				//Top Most ODS/DSO
				//Fetch all ODS/DSO List
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"@instance of odsdso__________________@"}); // logger.log("@__________________@", className,OdiSAPBWLogger.FINE);
				if (allODSDSO.size() == 0){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"111"}); 
				try{
					allODSDSO = listener.getODSDSODetails(null);
					}catch(Exception e){
				JOptionPane.showMessageDialog(null,
						e.toString(),"Error", JOptionPane.OK_OPTION);
		
				}
				}
				if (node.isRoot()){
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"222"});
				childCount = allODSDSO.size();
				
				}else {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"333"});
					Vector details = getODSDetails(node.getName());
					node.setKeyFields((ArrayList) details.elementAt(0));
					node.setDataFields((ArrayList) details.elementAt(1));
					childCount = 2;
				}
			} else {
				//It is associated with InfoArea
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"@+++++++++++++++++++@"}); // logger.log("@+++++++++++++++++++@", className,OdiSAPBWLogger.FINEST);
				InfoAreaNode ioNode = node.getInfoArea();
				if (node.isRoot())
					childCount = ioNode.getOdsdsos().size();
				else {
					//Fetch details for this ODS/DSO
					Vector details = getODSDetails(node.getName());
					node.setKeyFields((ArrayList) details.elementAt(0));
					node.setDataFields((ArrayList) details.elementAt(1));
					childCount = 2;
				}
			}
		} else if (pnode instanceof ODSDSOKeyField) {
			ODSDSOKeyField keyField = (ODSDSOKeyField) pnode;
			ODSDSO od = keyField.getParent();
			return od.getKeyFields().size();
		} else if (pnode instanceof ODSDSODataField) {
			ODSDSODataField dataField = (ODSDSODataField) pnode;
			ODSDSO od = dataField.getParent();
			return od.getDataFields().size();
		} else if (pnode instanceof OpenHubData) {
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Get List of OpenHub Destination...."}); // logger.log("Get List of OpenHub Destination....", className,OdiSAPBWLogger.FINEST);
			if (allOpenHubDestination.size() == 0)
				allOpenHubDestination = listener.getOpenHubDestinations();// Data For Open Hub Destination
			return allOpenHubDestination.size();
		} else if (pnode instanceof OpenHubDestination) {
			String desName = pnode.getName();
			OpenHubDestination ohd = (OpenHubDestination) pnode;
			if (ohd.getOht() != null)
				return 1;
			OpenHubTable ohTable = listener.getOpenHubData(desName);
			ohd.setOht(ohTable);
			return 1;
		} else if (pnode instanceof OpenHubTable) {
			OpenHubTable table = (OpenHubTable) pnode;
			//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"table-------------->"+ table.getOhDest()}); // logger.log("table-------------->"+ table.getOhDest(),OdiSAPBWLogger.DEBUG);
			Vector OhCol = table.getColumns();
			return OhCol.size();
		} else {// Root: SAP_BW_META_DATA
			//childs = {InfoAreas, InfoObjects, ODS/DSO}
			childCount = 4;// Childs: "InfoArea", "InfoObjects", "ODS/DSO" and "Open Hub"

		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ChildCount is =" + childCount}); // logger.log("ChildCount is =" + childCount, className, OdiSAPBWLogger.DEBUG);
		return childCount;
	}

	/**
	 * find out ODS/DSO node details- either from All ODS/DSO local data 
	 * structure or through RFC call 
	 * 
	 * @param name
	 * @return
	 */
	private Vector getODSDetails(String name) {

		Vector details = new Vector();
		if (allODSDSO.size() != 0) {
			/*
			 * All ODS/DSO details have already been fetched, pick data from 
			 * local data structure
			 */
			for (int i = 0; i < allODSDSO.size(); i++) {
				ODSDSO od = (ODSDSO) allODSDSO.elementAt(i);
				if (od.getName().equals(name)) {
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"%%%%%%%%%%%MATCH FOUND%%%%%%%%%%" + name}); // logger.log("%%%%%%%%%%%MATCH FOUND%%%%%%%%%%" + name,className, OdiSAPBWLogger.DEBUG);
					details.add(od.getKeyFields());
					details.add(od.getDataFields());
					return details;
				}
			}
		}
		//Fetching details for this ODS/DSO node
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"%%%%%%%%%%%%Fetching Details of ODS: " + name}); // logger.log("%%%%%%%%%%%%Fetching Details of ODS: " + name, className,OdiSAPBWLogger.DEBUG);

		Vector odsDetails = listener.getODSDSODetails(name);

		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Num of ODS=" + odsDetails.size()}); // logger.log("Num of ODS=" + odsDetails.size(), className,OdiSAPBWLogger.DEBUG);
		ODSDSO od = (ODSDSO) odsDetails.elementAt(0);
		details.add(od.getKeyFields());
		details.add(od.getDataFields());
		return details;
	}

	/* (non-Javadoc)
	 * @see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
	 */
	public Object getChild(Object parent, int index) {

		/*MyNode pnode = (MyNode) parent;
		 InfoAreaNode node = (InfoAreaNode)pnode.getNode();*/
		OdiSAPBWData pnode = ((MyNode) parent).getNode();
		OdiSAPBWData child = null;
		//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("Get Child of :"+ pnode.getName()+ " Index="+ index);
		if (pnode instanceof InfoAreaNode) {
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Parent=" + pnode.getName() + "; Index=" + index}); // logger.log("Parent=" + pnode.getName() + "; Index=" + index,className, OdiSAPBWLogger.DEBUG);
			InfoAreaNode node = (InfoAreaNode) pnode;
			              
			Vector childs = node.getChilds();
			int childNum = 0;
			if (childs != null)
				childNum = childs.size();
			
			if (index < childNum) {
				 child = (InfoAreaNode) childs.elementAt(index);

			} else {
				    index = index-childNum;
			
				//if(childNum == 0){
				//Last level of InfoArea/SubInfoArea 
				//There should be 3 data targets ""
				/*
				 * At the last level of InfoArea/Sub InfoArea there should be 
				 * 3 data target root nodes- "Info Cubes", "Info Objects" and
				 * "ODS/DSO".
				 * BW-3.5 (ODS)
				 * BI-7.0 (DSO)
				 */
				    
				switch (index) {
			 				
				case 0:// InfoCube
					child = new InfoCube();
					//child.setName(INFOCUBE_NODE);
					child.setName(INFOCUBE_NODE);
					child.setDesc("");
					child.setRoot(true);
					// this infocube belongs to an InfoArea "node"
					((InfoCube) child).setInfoArea(node);
					break;
				case 1:// InfoObjects
					child = new InfoObject();
					child.setName(INFOOBJECT_NODE);
					child.setDesc("");
					child.setRoot(true);
					//this infobject belongs to InfoArea "node"
					((InfoObject) child).setInfoArea(node);
					break;
					
				case 2://ODSDSO
					child = new ODSDSO();
					child.setName(ODSDSO_NODE);
					child.setDesc("");
					child.setRoot(true);
					//This ODS/DSO belongs to InfoArea "node"
					((ODSDSO) child).setInfoArea(node);
					break;
				
				}
			}
			
		} else if (pnode instanceof InfoCube) {
			InfoCube node = (InfoCube) pnode;

			if (node.isRoot()) { //node.getInfoArea() != null
				InfoAreaNode iaNode = node.getInfoArea();
				child = (InfoCube) iaNode.getInfoCubes().elementAt(index);
			} else {
				switch (index) {
				case 0:
					Dimension dim = new Dimension();
					dim.setRoot(true);
					dim.setParent(node);
					dim.setName(odiLang.getValue(OdiSAPBWLang.DIMENSIONS));
					dim.setDesc("");
					dim.setRoot(true);
					child = dim;
					break;
				case 1:
					KeyFigure kf = new KeyFigure();
					kf.setRoot(true);
					kf.setParent(node);
					kf.setName(odiLang.getValue(OdiSAPBWLang.KEY_FIGURES));
					kf.setDesc("");
					kf.setRoot(true);
					child = kf;
					break;
				}
			}
		} else if (pnode instanceof Dimension) {
			Dimension dim = (Dimension) pnode;
			if (dim.isRoot()) {
				//display dim names
				InfoCube ic = dim.getParent();
				ArrayList dims = ic.getDimentions();
				child = (Dimension) dims.get(index);
			} else {
				//display characteristics
				child = (Characteristic) dim.getCharacteristics().get(index);
			}
		} else if (pnode instanceof KeyFigure) {
			KeyFigure kf = (KeyFigure) pnode;
			InfoCube ic = kf.getParent();
			child = (KeyFigure) ic.getKeyFigures().get(index);
		} else if (pnode instanceof InfoObject) {

			InfoObject node = (InfoObject) pnode;
			if (node.getInfoArea() == null) {

				//getInfoArea() == null
				//Top Most InfoObject node
				//Show list of all InfoObject
				//if(node.getName().toUpperCase().startsWith("INFOOB"))

				if (node.isRoot()) {
					child = (InfoObject) allInfoObjects.elementAt(index);
				} else {
					//first read tables and than attributes
					int numOfTables = node.getTables().size();
					if (index < numOfTables) {
						//return table child
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table Index=" + index}); // logger.log("Table Index=" + index, className,OdiSAPBWLogger.FINEST);
						child = (InfoObjTable) node.getTables().get(index);
					} else {

						//return attribute child
						if (node.getAttributes().size() > 0) {
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Attribute Index=" + index}); // logger.log("Attribute Index=" + index, className,OdiSAPBWLogger.FINEST);
							child = (InfoObjAtt) node.getAttributes().get(
									index - numOfTables);
						}
					}
				}

			} else {
				InfoAreaNode iaNode = node.getInfoArea();
				child = (InfoObject) iaNode.getInfoObjects().elementAt(index);
			}
		} else if (pnode instanceof ODSDSO) {
			ODSDSO node = (ODSDSO) pnode;
			if (node.getInfoArea() == null) {
				//Top Most ODS/DSO node
				//Show list of all ODS/DSO
				//if(node.getName().toUpperCase().startsWith("ODS"))
				if (node.isRoot())
					child = (ODSDSO) allODSDSO.elementAt(index);
				else {
					switch (index) {
					case 0:
						ODSDSOKeyField kf = new ODSDSOKeyField();
						kf.setRoot(true);
						kf.setParent(node);
						kf.setName(odiLang.getValue(OdiSAPBWLang.KEY_FIELDS));
						kf.setDesc("");
						child = kf;
						break;
					case 1:
						ODSDSODataField df = new ODSDSODataField();
						df.setRoot(true);
						df.setParent(node);
						df.setName(odiLang.getValue(OdiSAPBWLang.DATA_FIELDS));
						df.setDesc("");
						child = df;
						break;
					}
				}
			} else {
				InfoAreaNode iaNode = ((ODSDSO) pnode).getInfoArea();
				child = (ODSDSO) iaNode.getOdsdsos().elementAt(index);
				//((ODSDSO)child).setInfoArea(iaNode);
			}
		} else if (pnode instanceof ODSDSOKeyField) {
			ODSDSOKeyField kf = (ODSDSOKeyField) pnode;
			ODSDSO od = kf.getParent();
			child = (ODSDSOKeyField) od.getKeyFields().get(index);
		} else if (pnode instanceof ODSDSODataField) {
			ODSDSODataField df = (ODSDSODataField) pnode;
			ODSDSO od = df.getParent();
			child = (ODSDSODataField) od.getDataFields().get(index);
		} else if (pnode instanceof OpenHubData) {
			child = (OpenHubDestination) allOpenHubDestination.get(index);
		} else if (pnode instanceof OpenHubDestination) {
			OpenHubDestination des = (OpenHubDestination) pnode;
			child = des.getOht();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"___________________OpenHub Table: " + child}); // logger.log("___________________OpenHub Table: " + child, className,OdiSAPBWLogger.FINER);
		} else if (pnode instanceof OpenHubTable) {
			//Set the Column Name
			OpenHubTable tab = (OpenHubTable) pnode;
			Vector cols = tab.getColumns();
			child = (OpenHubColumn) cols.get(index);
		} else {
			//Root: SAP_BW_METADATA
			switch (index) {
			case 0:
				//Top Level: InfoArea node
				child = new InfoAreaNode();
				child.setName(INFO_AREAS);
				child.setDesc("");
				child.setRoot(true);
				((InfoAreaNode) child).setChilds(infoAreas);
				break;
			case 1:
				//Top Level: InfoObject node
				child = new InfoObject();
				child.setName(INFO_OBJECTS);
				child.setDesc("");
				child.setRoot(true);
				//This is top most root
				((InfoObject) child).setRoot(true);
				//allInfoObjects;
				break;
			case 2:
				//Top Level: ODS/DSO node
				child = new ODSDSO();
				child.setName(ODSDSO_NODE);
				child.setDesc("");
				child.setRoot(true);
				//This is top most root
				((ODSDSO) child).setRoot(true);
				//allODSDSO;
				break;
			case 3:
				child = new OpenHubData();
				child.setName(OHD);
				child.setDesc("");
				//This is top most root of the Open Hub
				child.setRoot(true);
				break;

			}
		}
		//Creating the relation to be used during searching
		MyNode cn = new MyNode(child);
		((MyNode) parent).add(cn);
		return cn;
	}

	public int getIndexOfChild(Object parent, Object child) {

		/*
		 * return the index of the child node from the set of 
		 * childs of this parent
		 */
		OdiSAPBWData pnode = ((MyNode) parent).getNode();
		OdiSAPBWData cnode = ((MyNode) child).getNode();
		//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("getIndexOfChild() Parent=" + pnode.getName() + "; child="+ cnode.getName(), className, OdiSAPBWLogger.DEBUG);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Class of the Parent Node "}); // logger.log("Class of the Parent Node ============================>"+pnode.getClass().getName() +"&& Child Class is Form:===>"+cnode.getClass().getName());
		if (pnode instanceof InfoAreaNode /*&& cnode instanceof InfoAreaNode*/) {
			/**
			 * If the parent node is : InfoAreaNode then Child MAy come in the Following favours:
			 * 1.Child Node may be ----> InfoAreaNode
			 * 2.Child Node may be ----> InfoCube
			 * 3.1.Child Node may be ----> InfoObject
			 * 4.Child Node may be ----> ODS -DSO  
			 */
			InfoAreaNode pn = (InfoAreaNode) pnode;
			
			
			if(cnode instanceof InfoAreaNode){
				InfoAreaNode cn = (InfoAreaNode) cnode;
				Vector childs = pn.getChilds();
				int childCount = childs.size();
				// return childs.indexOf(cn) == 0 ? 3 : childs.indexOf(cn);
				// Bug fixed during InfoCube search: error in expanding tree
				//return childs.indexOf(cn) == 0 ? 0 : childs.indexOf(cn);
				/*
				 * Added New for the Sub Info Area
				 */
				if (childCount > 0) {
					if (childs.indexOf(cn) != 0) {
						return childs.indexOf(cn) == 0 ? 0 : childs.indexOf(cn);
					} else {
						if (cnode instanceof InfoCube) {
							return childs.indexOf(cn) == 0 ? 0 : (childCount);
						} else if (cnode instanceof InfoObject) {
							childCount = childCount + 1;
							return childs.indexOf(cn) == 0 ? 0 : (childCount);
						} else if (cnode instanceof ODSDSO) {
							childCount = childCount + 2;
							return childs.indexOf(cn) == 0 ? 0 : (childCount);
						}
					}
				}
			}else if (cnode instanceof InfoCube){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"INSIDE OF THE INFO CUBE ### ---------------------------------->>>>cnode instanceof InfoCube"}); // logger.log("INSIDE OF THE INFO CUBE ### ---------------------------------->>>>cnode instanceof InfoCube");
				
				if(pn.getChilds()== null){
					return 0;
				}else{
					return pn.getChilds().size();	//Nothing will be added,Child Count will be ZERO
				}
				
			}else if (cnode instanceof InfoObject){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"INSIDE OF THE INFO CUBE ### ---------------------------------->>>>cnode instanceof InfoObject"}); // logger.log("INSIDE OF THE INFO CUBE ### ---------------------------------->>>>cnode instanceof InfoObject");
				if(pn.getChilds()== null){
					return 0;
				}else{
					return pn.getChilds().size()+1;	//Add 1 
				}
			}else if (cnode instanceof ODSDSO){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"INSIDE OF THE INFO CUBE ### ---------------------------------->>>>cnode instanceof ODS-DSO"}); // logger.log("INSIDE OF THE INFO CUBE ### ---------------------------------->>>>cnode instanceof ODS-DSO");
				if(pn.getChilds()== null){
					return 0;
				}else{
					return pn.getChilds().size()+2;	//Add 2 
				}		
			}
			
		
		} else if (pnode instanceof InfoCube && cnode instanceof InfoCube) {
			InfoCube node = (InfoCube) pnode;
			InfoAreaNode iaNode = node.getInfoArea();
			return iaNode.getInfoCubes().indexOf((InfoCube) cnode);
		} else if (pnode instanceof InfoCube && cnode instanceof Dimension) {
			//Dimention label node
			return 0;
		} else if (pnode instanceof InfoCube && cnode instanceof KeyFigure) {
			//Key Figures label node
			return 1;
		} else if (pnode instanceof Dimension && cnode instanceof Dimension) {
			Dimension node = (Dimension) pnode;
			InfoCube ic = node.getParent();
			ArrayList dims = ic.getDimentions();
			return dims.indexOf((Dimension) cnode);
		} else if (pnode instanceof Dimension
				&& cnode instanceof Characteristic) {
			Dimension dim = (Dimension) pnode;
			ArrayList chars = dim.getCharacteristics();
			chars.indexOf((Characteristic) cnode);
		} else if (pnode instanceof KeyFigure && cnode instanceof KeyFigure) {
			KeyFigure kf = (KeyFigure) pnode;
			InfoCube ic = kf.getParent();
			ArrayList keyFigures = ic.getKeyFigures();
			return keyFigures.indexOf((KeyFigure) cnode);
		} else if (pnode instanceof InfoObject && cnode instanceof InfoObject) {

			InfoObject node = (InfoObject) pnode;
			if (node.getInfoArea() == null) {
				//if(node.getName().toUpperCase().startsWith("INFOOB"))
				if (node.isRoot()) {
					//Top Most InfoObject node
					return allInfoObjects.indexOf((InfoObject) cnode);
				} else {
					//check to which category this child node belongs
					int index = node.getTables().indexOf((InfoObjTable) cnode);
					if (index != -1)
						return index;
					return node.getAttributes().indexOf((InfoObject) cnode);
				}
			} else {
				InfoAreaNode iaNode = node.getInfoArea();
				return iaNode.getInfoObjects().indexOf((InfoObject) cnode);
			}

		} else if (pnode instanceof ODSDSO && cnode instanceof ODSDSO) {
			ODSDSO node = (ODSDSO) pnode;
			if (node.getInfoArea() == null) {
				//Top Most ODS/DSO node
				//if(node.getName().toUpperCase().startsWith("ODS"))
				if (node.isRoot())
					return allODSDSO.indexOf((ODSDSO) cnode);
				/*else
				 //return field index
				 return node.getFields().indexOf((ODSDSOField)cnode);*/
			} else {
				InfoAreaNode iaNode = node.getInfoArea();
				return iaNode.getOdsdsos().indexOf((ODSDSO) cnode);
			}
		} else if (pnode instanceof ODSDSO && cnode instanceof ODSDSOKeyField) {
			return 0;
		} else if (pnode instanceof ODSDSO && cnode instanceof ODSDSODataField) {
			return 1;
		} else if (pnode instanceof ODSDSOKeyField
				&& cnode instanceof ODSDSOKeyField) {
			ODSDSOKeyField kf = (ODSDSOKeyField) pnode;
			ODSDSO od = kf.getParent();
			return od.getKeyFields().indexOf((ODSDSOKeyField) cnode);
		} else if (pnode instanceof ODSDSODataField
				&& cnode instanceof ODSDSODataField) {
			ODSDSODataField df = (ODSDSODataField) pnode;
			ODSDSO od = df.getParent();
			return od.getDataFields().indexOf((ODSDSODataField) cnode);
		}

		else if (pnode instanceof OpenHubData) {
			OpenHubDestination ohd = (OpenHubDestination) cnode;
			return allOpenHubDestination.indexOf(ohd);
		} else if (pnode instanceof OpenHubDestination) {
			/*
			 * Display the Table
			 */
			return 0;
		} else if (pnode instanceof OpenHubTable) {
			/*
			 * Display the Columns
			 */
			OpenHubColumn ohc = (OpenHubColumn) cnode;
			OpenHubTable tab = (OpenHubTable) pnode;
			Vector cols = tab.getColumns();
			return cols.indexOf(ohc);
		} else {
			//Root: SAP_BW_META_DATA
			if (cnode instanceof InfoAreaNode)
				return 0;
			else if (cnode instanceof InfoObject)
				return 1;
			else if (cnode instanceof ODSDSO)
				return 2;
			else if (cnode instanceof OpenHubData)
				return 3;
		}

		//return -1;
		// Bug fixed during InfoCube search: error in expanding tree
		return 0;
	}

	public boolean isLeaf(Object node) {
		//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("isLeaf()");
		OdiSAPBWData pnode = ((MyNode) node).getNode();

		if (pnode instanceof InfoAreaNode) {
			// InfoAreaNode iaNode = (InfoAreaNode)pnode;
			InfoAreaNode infoA = (InfoAreaNode) pnode;

			if (infoA.getChilds() == null) {
				/*
				 * if getChilds() returns "null", Node's details need to be
				 * fetched
				 */
				int childCount = getChildCount(node);
				if (childCount > 0) {
					if (infoA.getInfoCubes() != null
							&& infoA.getInfoCubes().size() > 0) {
						return false;
					} else if (infoA.getInfoObjects() != null
							&& infoA.getInfoObjects().size() > 0) {
						return false;
					} else if (infoA.getOdsdsos() != null
							&& infoA.getOdsdsos().size() > 0) {
						return false;
					}
					return false;
				} else
					return true;
			}
			else if (infoA.getChilds().size() > 0)
				return false;
			else
				return true;

		} else if (pnode instanceof InfoCube) {
			if (pnode.isRoot()) {
				InfoAreaNode iaNode = ((InfoCube) pnode).getInfoArea();
				if (iaNode != null) {
					/*
					 * This node is associated with InfoArea/SubInfoArea
					 * Don't show + sign for nodes which doesn't have children
					 */
					if (iaNode.getInfoCubes().size() == 0)
						return true;
				}
			}
		} else if (pnode instanceof InfoObject) {
			if (pnode.isRoot()) {
				InfoAreaNode iaNode = ((InfoObject) pnode).getInfoArea();
				if (iaNode != null) {
					/*
					 * This node is associated with InfoArea/SubInfoArea
					 * Don't show + sign for nodes which doesn't have children
					 */
					if (iaNode.getInfoObjects().size() == 0)
						return true;
				}
			}
		} else if (pnode instanceof ODSDSO) {
			if (pnode.isRoot()) {
				InfoAreaNode iaNode = ((ODSDSO) pnode).getInfoArea();
				if (iaNode != null) {
					/*
					 * This node is associated with InfoArea/SubInfoArea
					 * Don't show + sign for nodes which doesn't have children
					 */
					if (iaNode.getOdsdsos().size() == 0)
						return true;

				}
			}
		} else if (pnode instanceof OpenHubData) {
			return false;
		} else if (pnode instanceof OpenHubDestination) {
			if (pnode.isRoot()) {
				return true;
			}
			return false;
		} else if (pnode instanceof OpenHubTable) {
			if (pnode.isRoot()) {
				return true;
			}
			return false;
		} else if (pnode instanceof OpenHubColumn) {

			return true;
		} else if (pnode instanceof InfoObjTable) {
			return true;
		} else if (pnode instanceof InfoObjAtt) {
			return true;
		} else if (pnode instanceof Characteristic) {
			return true;
		} else if (pnode instanceof KeyFigure) {
			KeyFigure kf = (KeyFigure) pnode;
			if (!kf.isRoot())
				return true;
		} else if (pnode instanceof ODSDSOKeyField) {
			if (!((ODSDSOKeyField) pnode).isRoot())
				return true;
		} else if (pnode instanceof ODSDSODataField) {
			if (!((ODSDSODataField) pnode).isRoot())
				return true;
		}

		return false; // Default: Node is not a leaf 
	}

	// stubbed out methods not needed for display though for any real
	// application at least the listener methods should be implemented.
	public void addTreeModelListener(javax.swing.event.TreeModelListener l) {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"addTreeModelListener()"}); // logger.log("addTreeModelListener()", className, OdiSAPBWLogger.DEBUG);
	}

	public void removeTreeModelListener(javax.swing.event.TreeModelListener l) {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"removeTreeModelListener()"}); // logger.log("removeTreeModelListener()", className,OdiSAPBWLogger.DEBUG);
	}

	public void valueForPathChanged(TreePath path, Object newValue) {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"valueForPathChanged()"}); // logger.log("valueForPathChanged()", className, OdiSAPBWLogger.DEBUG);
	}

	public void exit() {
		infoAreas = null;
		allInfoObjects = null;
		allODSDSO = null;
	}

	private void log(String msg) {
		//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{msg}); // logger.log(msg);
	}
}

//End of OdiSAPBWTreeModel.java

//Start of SearchPanel.java
import java.awt.BorderLayout;
import java.awt.Checkbox;
import java.awt.CheckboxGroup;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Panel;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Iterator;
import java.util.Vector;

import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;

/**
 * TODO: Update code to take data directly from lookup Vector
 * for serching and tree expand
 */
public class SearchPanel implements ActionListener, ItemListener, ListSelectionListener {
	
	OdiSAPBWLang odiLang; 
	String strCheckBox;// ByDefaut InfoCube true
	// strCheckBox = odiLang.getValue(OdiSAPBWLang.INFO_CUBE);
	// buttonLookup = new JButton(odiLang.getValue(OdiSAPBWLang.LOOKUP));
	// buttonCancel = new JButton(odiLang.getValue(OdiSAPBWLang.CANCEL));
	// buttonSearch = new JButton(odiLang.getValue(OdiSAPBWLang.SEARCH));
	// jButtonClose = new JButton(odiLang.getValue(OdiSAPBWLang.CLOSE));
	// jButtonOK = new JButton(odiLang.getValue(OdiSAPBWLang.OK));	
	
	CheckboxGroup CG = new CheckboxGroup();
	ImageIcon lookupIcon;
	// TextFields-
	JTextField jTxtFieldName = null;
	JTextField jTxtFieldDescription= null;
	JTextField jTxtFieldInfoArea;
	
	// Buttons
	JButton buttonLookup; //lang.getString(lang.label_name)
	JButton buttonCancel;
	JButton buttonSearch;
	JButton jButtonClose;
	JButton jButtonOK;	
	
	// Screen containers-
	Panel panelJTable = new Panel();
	JFrame jFrameLookup;
	JTable jTableLookup;
	
	MetaDataBrowserUI ui;
	OdiSAPBWConnection con;
//	OdiSapBwResourceBundle odiSapBwResourceBundle;
	
	Vector lookupData = new Vector();
	
	ArrayList selectedPaths = new ArrayList();
//	Logger
	OdiSAPBWLogger logger;
	String className = SearchPanel.class.getName();
	/**
	 * SearchPanel Constructor
	 * @param ui
	 * @param con
	 */
	public SearchPanel(MetaDataBrowserUI ui, OdiSAPBWConnection con,OdiSAPBWLang odiLang) throws Exception {
	//	this.logger = logger;
		
		 this.odiLang	= odiLang; 
		strCheckBox = odiLang.getValue(OdiSAPBWLang.INFO_CUBE);
		buttonLookup = new JButton(odiLang.getValue(OdiSAPBWLang.LOOKUP));
		buttonCancel = new JButton(odiLang.getValue(OdiSAPBWLang.CANCEL));
		buttonSearch = new JButton(odiLang.getValue(OdiSAPBWLang.SEARCH));
		jButtonClose = new JButton(odiLang.getValue(OdiSAPBWLang.CLOSE));
		jButtonOK = new JButton(odiLang.getValue(OdiSAPBWLang.OK));
		logger =  OdiSAPBWLogger.getLogger();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Inside searchPanel"});
	    logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Inside searchPanel11"+odiLang});
		this.ui = ui;
		this.con = con;
		lookupIcon = ui.screenIcon;
	}
	/**
	 * Create search panel
	 * @return
	 */
	public JPanel createSearchPanel() {
		JPanel topPanel = new JPanel();
		JPanel searchPanel = new JPanel();
		JPanel searchTextPanel = new JPanel();
		JPanel searchRadioPanel = new JPanel();
		JPanel searchButtonPanel = new JPanel();
		JPanel addCheckBoxPanel = new JPanel();
		addCheckBoxPanel.setFont(MetaDataBrowserUI.normalFont);

		/**
		 * Setting Layout for Searchpanel (Base Panel)
		 */
		searchPanel.setFont(MetaDataBrowserUI.normalFont);
		searchPanel.setLayout(new GridBagLayout());
		searchPanel.setBorder(BorderFactory.createTitledBorder(odiLang.getValue(OdiSAPBWLang.SEARCH)));

		/**
		 * Setting Layout for searchTextPanel 
		 * The TextBox Panel
		 */
		searchTextPanel.setFont(MetaDataBrowserUI.normalFont);
		searchTextPanel.setLayout(new GridBagLayout());

		/**
		 * Setting Layout for searchRadioPanel
		 * The Radio Panel
		 */
		searchRadioPanel.setFont(MetaDataBrowserUI.normalFont);
		searchRadioPanel.setLayout(new GridBagLayout());
		//searchRadioPanel.setBorder(BorderFactory.createTitledBorder(""));

		/**
		 * Setting Layout for searchButtonPanel
		 * The Button Panel
		 */
		searchButtonPanel.setFont(MetaDataBrowserUI.normalFont);
		searchButtonPanel.setLayout(new GridBagLayout());
		//searchButtonPanel.setBorder(BorderFactory.createTitledBorder(""));

		panelJTable.add(jButtonOK);
		panelJTable.add(jButtonClose);
		//Set Font
		jButtonOK.setFont(MetaDataBrowserUI.normalFont);
		jButtonClose.setFont(MetaDataBrowserUI.normalFont);
		jButtonOK.addActionListener(this);
		jButtonClose.addActionListener(this);

		//Set layout constraints
		GridBagConstraints gBC = new GridBagConstraints();
		gBC.fill = GridBagConstraints.HORIZONTAL;

		/**
		 * GridBagConstraints for Search Textbox 
		 */
		GridBagConstraints gBCTextPanel = new GridBagConstraints();
		gBCTextPanel.fill = GridBagConstraints.HORIZONTAL;

		/**
		 * GridBagConstraints for Search RadioButtons 
		 */
		GridBagConstraints gBCRadioPanel = new GridBagConstraints();
		gBCRadioPanel.fill = GridBagConstraints.HORIZONTAL;

		/**
		 * GridBagConstraints for Search Buttons 
		 */
		GridBagConstraints gBCButtonPanel = new GridBagConstraints();
		gBCButtonPanel.fill = GridBagConstraints.HORIZONTAL;

		// ****** First row of search panel ********
		// Adding Label- Technical Name label
		
		
		gBCTextPanel.gridx = 0;
		gBCTextPanel.gridy = 0;
		gBCTextPanel.gridwidth = 1;
		//gBCTextPanel.weightx = 0.1;
		//searchTextPanel.add(new JLabel("                              "),	gBCTextPanel);
		
		gBCTextPanel.gridx = 1;
		gBCTextPanel.gridy = 0;
		gBCTextPanel.weightx = 0.1;		
		JLabel jLabelName = new JLabel(odiLang.getValue(OdiSAPBWLang.NAME));		
		jLabelName.setFont(MetaDataBrowserUI.normalFont);
		searchTextPanel.add(jLabelName, gBCTextPanel);

		// Adding TextField- Technical Name
		gBCTextPanel.gridx = 2;
		gBCTextPanel.gridy = 0;
		jTxtFieldName = new JTextField(8);
	
		//jTxtFieldName.addFocusListener(this);
		//Tool Tip
		//jTxtFieldName.setToolTipText("Use '%' Wildcard character for specifying lookup tables");
		//jTxtFieldName.setText("0GL_ACC%");
		searchTextPanel.add(jTxtFieldName, gBCTextPanel);

		// Adding the GAP
		// Gap
		gBCTextPanel.gridx = 3;
		gBCTextPanel.gridy = 0;
		gBCTextPanel.gridwidth = 1;
		//gBCTextPanel.weightx = 0.1;
		searchTextPanel.add(new JLabel("                        "),
				gBCTextPanel);
		// Gap
		gBCTextPanel.gridx = 4;
		gBCTextPanel.gridy = 0;
		//gBCTextPanel.weightx = 0.1;
		searchTextPanel.add(new JLabel("                        "),
				gBCTextPanel);
		// Gap
		gBCTextPanel.gridx = 5;
		gBCTextPanel.gridy = 0;
		//gBCTextPanel.weightx = 0.1;
		searchTextPanel.add(new JLabel("                        "),
				gBCTextPanel);
				

		// Adding gap between name and description
		gBCTextPanel.gridx = 0;
		gBCTextPanel.gridy = 1;
		//gBCTextPanel.weightx = 0.1;
		searchTextPanel.add(new JLabel("                        "),
				gBCTextPanel);

		//Adding Label- Name Description
		gBCTextPanel.gridx = 1;
		gBCTextPanel.gridy = 1;
		gBCTextPanel.weightx = 0.1;
		gBCTextPanel.weighty = 0.1;

		JLabel jLabelDescription = new JLabel(odiLang.getValue(OdiSAPBWLang.DESCRIPTION));
		jLabelDescription.setFont(MetaDataBrowserUI.normalFont);
		searchTextPanel.add(jLabelDescription, gBCTextPanel);

		//Adding TextField- InfoCube
		gBCTextPanel.gridx = 2;
		gBCTextPanel.gridy = 1;
		//gBCTextPanel.gridwidth = 2;
		jTxtFieldDescription = new JTextField(8);
		gBCTextPanel.weightx = 0.0;
		//jTxtFieldDescription.addFocusListener(this);
		//jTxtFieldDescription.setToolTipText("Use '%' Wildcard character for specifying lookup tables");
		searchTextPanel.add(jTxtFieldDescription, gBCTextPanel);

//		 Adding the GAP
		// Gap
		gBCTextPanel.gridx = 3;
		gBCTextPanel.gridy = 1;
		gBCTextPanel.gridwidth = 1;
		gBCTextPanel.weightx = 0.1;
		searchTextPanel.add(new JLabel("                        "),
				gBCTextPanel);
		// Gap
		gBCTextPanel.gridx = 4;
		gBCTextPanel.gridy = 1;
		gBCTextPanel.weightx = 0.1;
		searchTextPanel.add(new JLabel("                        "),
				gBCTextPanel);
		// Gap
		gBCTextPanel.gridx = 5;
		gBCTextPanel.gridy = 1;
		gBCTextPanel.weightx = 0.1;
		searchTextPanel.add(new JLabel("                        "),
				gBCTextPanel);
				
		//Add Data Target Label
		
		/*gBCRadioPanel.gridx = 1;
		gBCRadioPanel.gridy = 2;
		//gBCRadioPanel.weightx = 0.1;
		//gBCRadioPanel.weighty = 0.1;
		//JLabel jLabelDataTargetBlank = new JLabel(".............................");
		JLabel jLabelDataTargetBlank = new JLabel("                            ");

		jLabelDataTargetBlank.setFont(MetaDataBrowserUI.normalFont);
		searchTextPanel.add(jLabelDataTargetBlank, gBCRadioPanel);*/

		gBCRadioPanel.gridx = 1;
		gBCRadioPanel.gridy = 2;
		//gBCRadioPanel.weightx = 0.1;
		//gBCRadioPanel.weighty = 0.1;				
		JLabel jLabelDataTarget = new JLabel(odiLang.getValue(OdiSAPBWLang.TARGET_DATA));		
		jLabelDataTarget.setFont(MetaDataBrowserUI.normalFont);
		searchTextPanel.add(jLabelDataTarget, gBCRadioPanel);
		//checkBoxPanel.add(jLabelDataTarget,gBC2);
		//Add Radio Button for InfoCube
		gBCRadioPanel.gridx = 2;
		gBCRadioPanel.gridy = 2;
		//gBCRadioPanel.weightx = 0.1;
		Checkbox cgInfoCube = new Checkbox(odiLang.getValue(OdiSAPBWLang.INFO_CUBE), true, CG);
		cgInfoCube.addItemListener(this);
		searchTextPanel.add(cgInfoCube, gBCRadioPanel);
		//checkBoxPanel.add(cgInfoCube,gBC2);

		//Add Radio Button for InfoObject
		gBCRadioPanel.gridx = 3;
		gBCRadioPanel.gridy = 2;
		Checkbox cgInfoObject = new Checkbox(odiLang.getValue(OdiSAPBWLang.INFO_OBJECT), false, CG);
		cgInfoObject.addItemListener(this);
		searchTextPanel.add(cgInfoObject, gBCRadioPanel);
		//checkBoxPanel.add(cgInfoObject,gBC);

		//Add Radio Button for ODS/DSO
		gBCRadioPanel.gridx = 4;
		gBCRadioPanel.gridy = 2;
		Checkbox cgOdsDso = new Checkbox(odiLang.getValue(OdiSAPBWLang.ODS_DSO), false, CG);
		cgOdsDso.addItemListener(this);
		searchTextPanel.add(cgOdsDso, gBCRadioPanel);
		//checkBoxPanel.add(cgOdsDso);

		//Add Radio Button for OpenHub Destination
		gBCRadioPanel.gridx = 5;
		gBCRadioPanel.gridy = 2;
		Checkbox cgOpenHub = new Checkbox(odiLang.getValue(OdiSAPBWLang.OPENHUB), false, CG);
		cgOpenHub.addItemListener(this);
		searchTextPanel.add(cgOpenHub, gBCRadioPanel);
		//checkBoxPanel.add(cgOpenHub);

	   	//------------------------------------------------------------------------------  
		//Add a gap for creating the Distance between Name and Description
		gBC.gridx = 0;
		gBC.gridy = 9;
		gBC.weightx = 0.1;
		searchPanel.add(new JLabel(" "), gBC);
		//-------------------------------------------------------------------
		//  End of  the gap 

		//Add the Lookup Button
		/**
		 * Adding first column in searchButtonPanel
		 */
		gBCButtonPanel.gridx = 3;
		gBCButtonPanel.gridy = 0;
		gBCButtonPanel.gridwidth = 2;
		gBCButtonPanel.weightx = 0.1;
		gBCButtonPanel.weighty = 0.1;
		JLabel jLabelData1 = new JLabel("                     ");
		jLabelData1.setFont(MetaDataBrowserUI.normalFont);
		searchButtonPanel.add(jLabelData1, gBCButtonPanel);

		/**
		 * Adding Second column in searchButtonPanel
		 */
		gBCButtonPanel.gridx = 0;
		gBCButtonPanel.gridy = 1;
		gBCButtonPanel.gridwidth = 2;
		gBCButtonPanel.weightx = 0.1;
		gBCButtonPanel.weighty = 0.1;
		JLabel jLabelDataBlank = new JLabel("                     ");
		jLabelDataBlank.setFont(MetaDataBrowserUI.normalFont);
		searchButtonPanel.add(jLabelDataBlank, gBCButtonPanel);

		gBCButtonPanel.gridx = 2;
		gBCButtonPanel.gridy = 1;
		gBCButtonPanel.gridwidth = 1;
		//gBCButtonPanel.weightx = 0.0;
		buttonLookup.setFont(MetaDataBrowserUI.normalFont);

		searchButtonPanel.add(buttonLookup, gBCButtonPanel);
		buttonLookup.addActionListener(this);

		gBCButtonPanel.gridx = 3;
		gBCButtonPanel.gridy = 1;
		gBCButtonPanel.gridwidth = 2;
		gBCButtonPanel.weightx = 0.1;
		gBCButtonPanel.weighty = 0.1;
		JLabel jLabelDataBlank1 = new JLabel("                     ");
		jLabelDataBlank.setFont(MetaDataBrowserUI.normalFont);

		searchButtonPanel.add(jLabelDataBlank1, gBCButtonPanel);

		//Add the Search Button
		gBCButtonPanel.gridx = 5;
		gBCButtonPanel.gridy = 1;
		gBCButtonPanel.gridwidth = 1;
		//gBCButtonPanel.weightx = 0.0;
		buttonSearch.setFont(MetaDataBrowserUI.normalFont);
		buttonSearch.addActionListener(this);

		searchButtonPanel.add(buttonSearch, gBCButtonPanel);

		gBCButtonPanel.gridx = 6;
		gBCButtonPanel.gridy = 1;
		gBCButtonPanel.gridwidth = 2;
		gBCButtonPanel.weightx = 0.1;
		gBCButtonPanel.weighty = 0.1;
		JLabel jLabelDataBlank2 = new JLabel("                     ");
		jLabelDataBlank2.setFont(MetaDataBrowserUI.normalFont);

		searchButtonPanel.add(jLabelDataBlank2, gBCButtonPanel);

		//Adding searchTextPanel panel to searchPanel
		gBC.gridx = 0;
		gBC.gridy = 1;
		gBC.weightx = 0.0;
		searchPanel.add(searchTextPanel, gBC);

		//Adding searchRadioPanel panel to searchPanel
		gBC.gridx = 0;
		gBC.gridy = 2;
		gBC.weightx = 0.0;
		searchPanel.add(searchRadioPanel, gBC);

		//Adding searchButtonPanel panel to searchPanel
		gBC.gridx = 0;
		gBC.gridy = 3;
		gBC.weightx = 0.0;
		searchPanel.add(searchButtonPanel, gBC);

		//Adding search panel to top panel
		topPanel.add(searchPanel);

		// topPanel.add(checkBoxPanel);

		topPanel.setBorder(BorderFactory.createLoweredBevelBorder());
		topPanel.setLayout(new BoxLayout(topPanel, BoxLayout.LINE_AXIS));

		return topPanel;
	}

	/**
	 * This Method is for validating Lookup 
	 * @param searchValue
	 * @return
	 */
	private boolean validateLookup(JTextField searchValue) {

		boolean flag = false;

		if (!searchValue.getText().trim().equalsIgnoreCase("")) {

			if (!(searchValue.getText().trim().equalsIgnoreCase(""))) { //Table Name
				if (searchValue.getText().indexOf("%") == 0
						|| searchValue.getText().indexOf("%") != -1) {
					flag = true;
				}
			} else {
				return false;
			}
			return flag;
		} else {
			return false;
		}
	}
	
	/**
	 *  This method will show the result of Look up button 
	 *  
	 * @param criteria
	 */
	private void displayLookupResult() {
		jFrameLookup = new JFrame(odiLang.getValue(OdiSAPBWLang.SAP_BW_BI_LOOKUP));
		jFrameLookup.setIconImage(lookupIcon.getImage());
		String srchName = null;
		String srchDescription = null;

		DefaultTableModel model = new DefaultTableModel();
		jTableLookup = new JTable(model);
		// lookup table col data
		String[] data = new String[2];
		try {
			if (strCheckBox.equalsIgnoreCase(odiLang.getValue(OdiSAPBWLang.INFO_CUBE))) {
				lookupData.clear();// Remove all existing elements
				srchName = jTxtFieldName.getText().toUpperCase();
				srchDescription = jTxtFieldDescription.getText().toUpperCase();
				lookupData = con.getLookupIcubeIarea(srchName, srchDescription);
				
				//Create Lookup Table
				model.addColumn(odiLang.getValue(OdiSAPBWLang.INFO_CUBE));
				model.addColumn(odiLang.getValue(OdiSAPBWLang.DESCRIPTION));
				for (int i = 0; i < lookupData.size(); i++) {
					InfoCube dt = (InfoCube) lookupData.elementAt(i);
					data[0] = dt.getName();
					// data[1] = dt.getInfoArea().getName();
					data[1] = dt.getDesc();
					model.addRow(data);
				}
			}
			if (strCheckBox.equalsIgnoreCase(odiLang.getValue(OdiSAPBWLang.INFO_OBJECT))) {
				lookupData.clear();
				srchName = jTxtFieldName.getText().toUpperCase();
				srchDescription = jTxtFieldDescription.getText().toUpperCase();
				// Get matching InfoObject list
				lookupData = con.lookupInfoObject(srchName, srchDescription);
				model.addColumn(odiLang.getValue(OdiSAPBWLang.INFO_OBJECT));
				model.addColumn(odiLang.getValue(OdiSAPBWLang.DESCRIPTION));
				for (int i = 0; i < lookupData.size(); i++) {
					OdiSAPBWData dt = (OdiSAPBWData) lookupData.elementAt(i);
					data[0] = dt.getName();
					data[1] = dt.getDesc();
					model.addRow(data);
				}
			}

			if (strCheckBox.equalsIgnoreCase(odiLang.getValue(OdiSAPBWLang.ODS_DSO))) {
				lookupData.clear();// Remove all the Elements
				srchName = jTxtFieldName.getText().toUpperCase();
				srchDescription = jTxtFieldDescription.getText().toUpperCase();
				// Get matching ODS/DSO list
				lookupData = con.lookupODSDSO(srchName, srchDescription);
				model.addColumn(odiLang.getValue(OdiSAPBWLang.ODS_DSO));
				model.addColumn(odiLang.getValue(OdiSAPBWLang.DESCRIPTION));
				for (int i = 0; i < lookupData.size(); i++) {
					OdiSAPBWData dt = (OdiSAPBWData) lookupData.elementAt(i);
					data[0] = dt.getName();
					data[1] = dt.getDesc();
					model.addRow(data);
				}
			}
			if (strCheckBox.equalsIgnoreCase(odiLang.getValue(OdiSAPBWLang.OPENHUB))) {
				lookupData.clear();// Remove all the Elements
				srchName = jTxtFieldName.getText().toUpperCase();
				srchDescription = jTxtFieldDescription.getText().toUpperCase();
				// Get matching Open Hub list
				lookupData = con.getLookupOhDestination(srchName,srchDescription);//Need to be changed 
				model.addColumn(odiLang.getValue(OdiSAPBWLang.DESTINATION));
				model.addColumn(odiLang.getValue(OdiSAPBWLang.DESTINATION_DESC));
				for (int i = 0; i < lookupData.size(); i++) {
					OdiSAPBWData dt = (OdiSAPBWData) lookupData.elementAt(i);
					data[0] = dt.getName();
					data[1] = dt.getDesc();
					model.addRow(data);
				}
			}

			ListSelectionModel cellSelectionModel = jTableLookup.getSelectionModel();
			cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
			cellSelectionModel.addListSelectionListener(this);

			JPanel jTableDisplay = new JPanel();
			JPanel FinalDisplayPanel = new JPanel();

			// Adding Lookup table into ScrollPane
			JScrollPane scrollPane = new JScrollPane(jTableLookup);
			jTableDisplay.add(scrollPane);

			// Setting Layout
			FinalDisplayPanel.add(jTableDisplay, BorderLayout.NORTH);
			FinalDisplayPanel.add(panelJTable, BorderLayout.SOUTH);

			// Adding Lookup table into Lookup Screen
			jFrameLookup.getContentPane().add(FinalDisplayPanel);

			Toolkit tk = Toolkit.getDefaultToolkit();
			java.awt.Dimension screenSize = tk.getScreenSize();
			int screenHeight = screenSize.height;
			int screenWidth = screenSize.width;

			// Lookup Screen size
			jFrameLookup.setSize(490, 510);
			// Lookup Screen position
			jFrameLookup.setLocation(screenWidth / 3, screenHeight / 4);
			jFrameLookup.setResizable(true);
			// Make the screen visible
			jFrameLookup.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
			// logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("*ERROR*"+e);
		} finally {
		}
	}// end of the Method
	
	/**
	 * Method for fetching all the InfoCube Name * and for the highliting the
	 * tree
	 */
	
	public ArrayList getInfoCubePath(String selInfoCubeName, Vector infoCubeList) {
		//System.out.println("selInfoCubeName="+selInfoCubeName);
		//System.out.println("infoCubeList="+infoCubeList);
		ArrayList listNodesForPathTwo = new ArrayList();
		// Create "InfoCube" Tree node
		InfoCube infoCubeRoot = new InfoCube();
		//OdiSAPBWData infoCubeRoot = new OdiSAPBWData();
		infoCubeRoot.setName(OdiSAPBWTreeModel.INFOCUBE_NODE);// For Info Cube
		MyNode icRootNode = new MyNode(infoCubeRoot);
		listNodesForPathTwo.add(icRootNode);
		
		//Find out the selected InfoCube Node
		for (int i = 0; i < infoCubeList.size(); i++) {
			InfoCube ic = (InfoCube)infoCubeList.get(i);
			if (ic.getName().equals(selInfoCubeName)) {
				//InfoCube icData = new InfoCube();
				/*OdiSAPBWData icData = new OdiSAPBWData();
				icData.setName(selInfoCubeName);
				MyNode icNode = new MyNode(icData);*/
				MyNode icNode = new MyNode(ic);
				listNodesForPathTwo.add(icNode);
				break;
			}
		}
		return listNodesForPathTwo;
	}
	/**
	 * Method for the OK Button is clicked of the Lookup Frame
	 */
	public void closeFrameForOK() {
		jFrameLookup.setVisible(false);
	}

	/**
	 * Closing the frame when "Close" button is clicked
	 */
	public void closeFrameForCancel() {
		jFrameLookup.setVisible(false);
	}
	
	/**
	 * Node look up
	 * Assumption: Lookup SHOULD be used before searching any node
	 * @param strJTxtFieldName
	 * @param strCheckBox
	 *
	 */

	public void searchNodeLookUp(OdiSAPBWData data) {
		TreePath path = ui.tree.getPathForRow(0);
		// Getting the Root of Meta Data Tree
		MyNode root = (MyNode) path.getPathComponent(0);//ODiSAP META DATA ROOT
		MyNode result = null;
		
		if (data instanceof InfoCube) {
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"searchNodeLookUp: InfoCube"}); // logger.log("searchNodeLookUp: InfoCube", className, OdiSAPBWLogger.FINEST);
			//Path1
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Constructing Path1"}); // logger.log("Constructing Path1...", className, OdiSAPBWLogger.DEBUG);
			boolean flagForSearch = true;
			
			TreePath infoPathOne = new TreePath(root);
			TreePath infoPathIALevelSearch = new TreePath(root);
			//Need to be Rechecked again for the Sun InfoArea Level
			TreePath infoPathIASearch = new TreePath(root);
			//List of Nodes for Path2
			ArrayList arrayPathTwo = new ArrayList();
			ArrayList listNodes = new ArrayList();
			InfoCube selInfoCube = (InfoCube) data;
			String selInfoArea = selInfoCube.getInfoArea().getName();
			//Vector vectIALeafNodes = con.infoAreaLeafNodes;
			
			/*
			 * Info Area Node Search (Construct Path1)
			 * Scenario1: IA is in leaf nodes
			 * Scenario2: IA is in intermediate node
			 * 
			 * Step1: Loop through leaf nodes 
			 */
			boolean found = false;
			for (int i = 0; i < con.infoAreaLeafNodes.size(); i++) {
				InfoAreaNode iaNode = (InfoAreaNode) con.infoAreaLeafNodes.get(i);
				if (iaNode.getName().equals(selInfoArea)) {
					/*
					 * Find out child to parent hierarchy
					 * InfoA1
					 *       - InfoA1.1
					 *                - InfoA1.1.1 (Node we currently have)
					 */
					InfoAreaNode parent = iaNode.getParent();
					while (parent != null) {
						listNodes.add(new MyNode(iaNode));
						iaNode = parent;
						parent = iaNode.getParent();
					}
					listNodes.add(new MyNode(iaNode));
					found = true;
					/*
					 * We have collected the required InfoArea hierarchy, so 
					 * break from the FOR look
					 */ 
					break;
				}
			 }
			
			/*
			 * Step2: Loop through leaf nodes and find out the selected
			 * intermediate node
			 */
			if(!found){
				InfoAreaNode matchedIANode = null;
				for (int i = 0; i < con.infoAreaLeafNodes.size(); i++) {
					InfoAreaNode iaNode = (InfoAreaNode) con.infoAreaLeafNodes.get(i);
					InfoAreaNode parent = iaNode.getParent();
					while(parent != null){
						iaNode = parent;
						parent = iaNode.getParent();
						if(iaNode.getName().equals(selInfoArea)){
							// this leaf node hierarchy is the selected path
							matchedIANode = iaNode;
							// come out from the WHILE loop
							break;
						}
					}
					if(matchedIANode != null)
						// come out from FOR loop
						break;
				}
				
				// find out the complete hierarchy of the matched IA node
				InfoAreaNode parent = matchedIANode.getParent();
				while (parent != null) {
					listNodes.add(new MyNode(matchedIANode));
					matchedIANode = parent;
					parent = matchedIANode.getParent();
				}
				listNodes.add(new MyNode(matchedIANode));
			}
			
             //Add the top most root "SAP BW Metadata"
			 listNodes.add(root.getChildAt(0));
			Collections.reverse(listNodes);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"##########listNodes is:########## "+listNodes}); // logger.log("##########listNodes is:########## "+listNodes);
			ArrayList arrPathOneSearch = new ArrayList();
			for (int j = 0; j < listNodes.size(); j++) {
				infoPathOne = infoPathOne.pathByAddingChild(listNodes.get(j));
			}
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"##########infoPathOne##########"+infoPathOne}); // logger.log("##########infoPathOne##########"+infoPathOne);
			
			/*
			 * InfoCube Node Search (Construct Path2)
			 */
			//Creating Path2: details of the selected InfoCube which belongs to Path1
			//Create selected InfoAreaNode
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Constructing Path2."}); // logger.log("Constructing Path2...",  className, OdiSAPBWLogger.DEBUG);
			InfoAreaNode pNode = (InfoAreaNode)((MyNode)infoPathOne.getLastPathComponent()).getNode();
				
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"pNode name: "+ pNode.getName()}); // logger.log("pNode name: "+ pNode.getName(), className,  OdiSAPBWLogger.DEBUG);
			//Get List of InfoCubes belong to the selected InfoArea
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"TreeModel getChildCount of "+ selInfoArea}); // logger.log("TreeModel getChildCount of "+ selInfoArea,  className, OdiSAPBWLogger.DEBUG);
			
			try{
			// Get InfoArea details
			Vector dataTargets = con.getInfoAreaDetails(pNode);
			//System.out.println("dataTargets"+dataTargets+"##pNode="+pNode);
			pNode.setInfoCubes((Vector)dataTargets.elementAt(0));
			pNode.setInfoObjects((Vector)dataTargets.elementAt(1));
			pNode.setOdsdsos((Vector)dataTargets.elementAt(2));
			
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Get InfoArea details for InfoCube search"}); // logger.log("Get InfoArea details for InfoCube search",  className, OdiSAPBWLogger.DEBUG);
			Vector infoCubeList = pNode.getInfoCubes();
			//Get list of nodes for Path2
			arrayPathTwo = getInfoCubePath(selInfoCube.getName(), infoCubeList);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Path2:="+ arrayPathTwo}); // logger.log("Path2:="+ arrayPathTwo, className, OdiSAPBWLogger.DEBUG);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ath2 Size="+ arrayPathTwo.size()}); // logger.log("Path2 Size="+ arrayPathTwo.size(),  className, OdiSAPBWLogger.DEBUG);
			//Creating complete path = Path1 + Path2
			for (int j = 0; j < arrayPathTwo.size(); j++) {
				infoPathOne = infoPathOne.pathByAddingChild(arrayPathTwo.get(j));
			}
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("Path1+Path2: "+ infoPathOne,  className, OdiSAPBWLogger.DEBUG);
			
			if (infoPathOne != null)
				path = infoPathOne;
		}catch(Exception ex){
		JOptionPane.showMessageDialog(null,
						ex.toString(),"Error", JOptionPane.OK_OPTION);
		
		}			
		
		}else if (data instanceof InfoObject) {
			// For InfoObject
			MyNode infoObj = (MyNode) root.getChildAt(1);
			result = searchNode(infoObj, data.getName().trim());
			path = new TreePath(result.getPath());

		} else if (data instanceof ODSDSO) {
			// For ODS/DSO
			MyNode ods = (MyNode) root.getChildAt(2);
			result = searchNode(ods, data.getName().trim());
			path = new TreePath(result.getPath());
		} 
		else if (data instanceof OpenHubDestination) {
			// For Open Hub
			ArrayList arrayOhTab = new ArrayList();
			MyNode ohdest = (MyNode) root.getChildAt(3);
			result = searchNode(ohdest, data.getName().trim());
			path = new TreePath(result.getPath());
				
			OpenHubDestination openHubDes = (OpenHubDestination) data;
			OpenHubTable oht= con.getOpenHubData(openHubDes.getName());
			arrayOhTab.add(new MyNode(oht));
			for (int i = 0; i < arrayOhTab.size(); i++) {
			path = path.pathByAddingChild(arrayOhTab.get(i));
			}
		} else
			return;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"####### Path-------------------------############"+path}); // logger.log("####### Path-------------------------############"+path, className, OdiSAPBWLogger.DEBUG);
		
		expandSelectedNode(path);		
	}
	
	/**
	 * Expand selected path
	 * 
	 * @param path
	 */
	private void expandSelectedNode(TreePath path){
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Expand Selected Path."}); // logger.log("Expand Selected Path...", className, OdiSAPBWLogger.DEBUG);
		// Get the hash code of the Path's information
		Integer hashCode = new Integer(path.toString().hashCode());		
 		if(!selectedPaths.contains(hashCode)){
        	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Set Selected Path............ "+ path}); // logger.log("Set Selected Path............ "+ path, className, OdiSAPBWLogger.DEBUG);
        	// Store the hashCode of this path
        	selectedPaths.add(hashCode);
        	// Select this Path
        	ui.tree.setSelectionPath(path);
        }
        ui.tree.setSelectionPath(path);
        //Colllapse the path 
        ui.tree.collapsePath(path);
        ui.tree.setSelectionPath(path);
        // Expand the searched node and path
		ui.tree.expandPath(path);
        // Bring the element within visable window
        logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"## Meta Data Browser Tree Search Path: ##"+path}); // logger.log("## Meta Data Browser Tree Search Path: ##"+path, className, OdiSAPBWLogger.FINEST);
        ui.tree.scrollPathToVisible(path);       
       
    }

	//	 Clearing the Selected Path if mouse Click event is Triggered
	public void removeSelectedPath(TreePath pathClearSel) throws Exception {
		Integer hashCode = new Integer(pathClearSel.toString().hashCode());
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Path=" + pathClearSel + " Path Hash=" + hashCode}); // logger.log("Path=" + pathClearSel + " Path Hash=" + hashCode, className, OdiSAPBWLogger.DEBUG);
		if (selectedPaths.size() > 0) {
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"SelectedPathArray Size=" + selectedPaths.size()}); // logger.log("SelectedPathArray Size=" + selectedPaths.size(), className, OdiSAPBWLogger.DEBUG);
			if (selectedPaths.contains(hashCode)){
				int index = selectedPaths.indexOf(hashCode);
				if(index != -1)
					selectedPaths.remove(index);
			}
		}
	}
	
	/**
	 * Search MetaData Tree node matching search string
	 * @param node
	 * @param srch
	 * @return
	 */
	private MyNode searchNode(MyNode node, String srch){
		MyNode result = null;
		OdiSAPBWTreeModel model = null;
		int count = node.getChildCount();
		if(count == 0){
		
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"1111 Node Name="+ node.getNode().getName()}); // logger.log("**Node Name="+ node.getNode().getName(), className, OdiSAPBWLogger.FINEST);
			model = (OdiSAPBWTreeModel)ui.tree.getModel();
			count = model.getChildCount(node);
		}
		//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of Childs="+ count}); // logger.log("Number of Childs="+ count);
		for(int i=0; i<count; i++){
			MyNode child;
			if(model == null){
				/*
				 * this node has already been expanded
				 */
				child = (MyNode) node.getChildAt(i);
			}
			else{
				/*
				 * childs yet to linked with parent
				 */
				child = (MyNode) model.getChild(node,i);
			}
			
			if(child.getNode().getName().trim().startsWith(srch)){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Found Match!!"}); // logger.log("Found Match!!",  className, OdiSAPBWLogger.FINEST);
				result = child;
				break;
			}
		}
		return result;
	}
	
	/*
	 * Action Listener :
	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
	 */
	public void actionPerformed(ActionEvent ae) {

		String cmdName = ae.getActionCommand();
		//For Close Button
		if (cmdName.equals(jButtonClose.getActionCommand())) {
			closeFrameForCancel();
		}
		//For OK Button
		if (cmdName.equals(jButtonOK.getActionCommand())) {
			closeFrameForOK();
			/*
			 * 1. Get Index of selected row e.g. i
			 * 2. selData = lookupData.get(i);
			 */
		}
		if (cmdName.equals(buttonLookup.getActionCommand())) {
			// Set the UI in Wait State
			ui.waitState();
			//Handle Lookup.
			if (validateLookup(jTxtFieldName)) {
				displayLookupResult();
				
			} 
			else if (validateLookup(jTxtFieldDescription)) {
				//displayLookupResultForDescription();
				displayLookupResult();
			}
			else {
				JOptionPane.showMessageDialog(null,
						odiLang.getValue(OdiSAPBWLang.PLEASE_ENTER_WILD_CARD),"Error", JOptionPane.OK_OPTION);
			}
			
			// Set UI in Normal State
			ui.normalState();
		}

		if (cmdName.equals(buttonSearch.getActionCommand())) {
			//Handle Search
			String strJTxtFieldName = null;
			OdiSAPBWData selData = null;
			if(jTableLookup!=null){
				int selIndex = jTableLookup.getSelectedRow();
				selData = (OdiSAPBWData)lookupData.get(selIndex);
				strJTxtFieldName = selData.getName();
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{":if Jtablelookup is null :::"+selData+" :: string ::"+strJTxtFieldName});
			}
			if (strJTxtFieldName == null) {
			
				JOptionPane.showMessageDialog(null, odiLang.getValue(OdiSAPBWLang.PLEASE_ENTER_VALID_NAME),"Error", JOptionPane.OK_OPTION);

			} else{
				if(selData!=null){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"last else loop::"});
					searchNodeLookUp(selData);
				}
			}
		}
	}

	/* (non-Javadoc)
	 * @see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
	 */
	public void itemStateChanged(ItemEvent e) {
		if (e.getItem().equals(odiLang.getValue(OdiSAPBWLang.INFO_CUBE))) {
			strCheckBox = (String) e.getItem(); // For info Cube

		} else if (e.getItem().equals(odiLang.getValue(OdiSAPBWLang.INFO_OBJECT))) {
			strCheckBox = (String) e.getItem(); // For info Object
		} else if (e.getItem().equals(odiLang.getValue(OdiSAPBWLang.ODS_DSO))) {
			strCheckBox = (String) e.getItem();// For DSO/ODS
		}
		else {			
			strCheckBox = (String) e.getItem();// For Open Hub
		}
	}
	/* (non-Javadoc)
	 * @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
	 */
	public void valueChanged(ListSelectionEvent e) {
		String selectedData = null;
		int selectedRow = jTableLookup.getSelectedRow();
		selectedData = (String) jTableLookup.getValueAt(selectedRow, 0);
		jTxtFieldName.setText(selectedData);
	}
}

//End of SearchPanel.java

//Start of MetaDataBrowserUI.java
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Iterator;
import java.util.Vector;

import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.ScrollPaneConstants;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.TreePath;

public class MetaDataBrowserUI extends MouseAdapter implements ActionListener, 
															   TreeSelectionListener {
	/**
	 * Logger
	 */
	OdiSAPBWLogger logger;
//	private OdiSapBwResourceBundle odiSapBwResourceBundle;
	String className = MetaDataBrowserUI.class.getName();
	
	OdiSAPBWLang odiLang; 
	
	JFrame browser;
	JPanel topPanel = new JPanel();
	JPanel bodyPanel = new JPanel();
	JPanel bottomPanel = new JPanel();
	JTree tree;
	static boolean mouseClickStatus;
	JButton buttonReverse;
	JButton buttonCancel;
	
	OdiSAPBWTreeModel treeModel;
	
	public static final Color BG_COLOR = new Color(255, 255, 255);
	public static final Font normalFont = new Font ("Helvetica", 4, 11);
	ImageIcon screenIcon;

	int width = 550;
	int height = 630;
        public boolean isCancle = false;	
	Vector infoAreas = new Vector();
	ArrayList revList = new ArrayList();
	
	OdiSAPBWConnection con;
	OdiSAPBWAdapter adapter;
	SearchPanel searchPanel;
	
	public MetaDataBrowserUI(OdiSAPBWAdapter adapter, OdiSAPBWConnection con,OdiSAPBWLang odiLang) throws Exception {
		logger =  OdiSAPBWLogger.getLogger();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Inside MetaDataBrowserUI 1"}); //
		this.odiLang = odiLang;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"MetaDataBrowserUI 2"}); //
	//	odiLang = OdiSAPBWLang.getInstance(odiSapBwResourceBundle);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"MetaDataBrowserUI 3"}); //
		buttonReverse = new JButton(odiLang.getValue(OdiSAPBWLang.REVERSE));
		buttonCancel = new JButton(odiLang.getValue(OdiSAPBWLang.CANCEL));
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log(":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::++++++++++++++++++++++++++++++++++++++");
		//Set Windows Look & Feel
		try{
			/*
			 * ODI screen freezes on exit if you use UIManager
			 */
			//UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
		}catch(Exception ex){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{ex.getMessage()}); // logger.log(ex.getMessage(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"::::::::::::::::::::::::::::::::::::"}); // logger.log(":::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::++++++++++++++++++++++++++++++++++++++");
			ex.printStackTrace();
		}
		
		this.adapter = adapter;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"########Connection #######==>"+con}); // logger.log("########Connection #######==>"+con);
		this.con = con;
		screenIcon = new ImageIcon("C:\\OraHome_1\\oracledi\\lib\\icons\\designer.gif");
		//URL designerIconUrl = getClass().getResource("com/sunopsis/graphical/gif/toolbar/designer_16.gif");
		//screenIcon = new ImageIcon(designerIconUrl);
		browser = new JFrame(odiLang.getValue(OdiSAPBWLang.SAP_METADATA_BROWSER));
		browser.setSize(width, height);
		//frame icon
		browser.setIconImage(screenIcon.getImage());
		browser.setFont(normalFont);
		//browser.setResizable(false);
		//browser.setBackground(BG_COLOR);
	    activateUI();
		/*
		 * Don't use browser.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)
		 * it closes the ODI
		 */
		//browser.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}


	/**
	 * Activate the browser screen and display
	 * @param con
	 * @param infoAreas
	 */
	public void activateUI() throws Exception {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Inside activate UI block"+"con:="+con}); // logger.log("MMMMMMMMMMMMMMMMMMMMMM before calling con.getInfoAreaListRFC() method");
		try{
		this.infoAreas = con.getInfoAreaListRFC();		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling con.getInfoAreaListRFC() method"}); // logger.log("NNNNNNNNNNNNNNNNNNNN After calling con.getInfoAreaListRFC() method");
		}catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.toString());
		}
		
		//add panels to main window
		createSearchPanel();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling ccreateSearchPanel() method"});
		createTreePanel();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling createTreePanel() method"});
		createBottomPanel();
		
		browser.setLocationRelativeTo(null);
		browser.setVisible(true);
		browser.addWindowListener(adapter);
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Completion of activate UI method"});
	}
	
	/**
	 * Search Panel- top
	 */
	public void createSearchPanel() throws Exception {
	    logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Before Executing SearchPanel() constructor"});
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"value of odiLang object"+odiLang});
		this.searchPanel = new SearchPanel(this, con,this.odiLang); //Creating the Object of the class
		topPanel = searchPanel.createSearchPanel();
		topPanel.setBorder(BorderFactory.createEmptyBorder());
		browser.getContentPane().add(topPanel, BorderLayout.NORTH);
	}
		
	/**
	 * Tree Browser- body
	 */
	public void createTreePanel() throws Exception {
	    logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Before calling OdiSAPBWTreeModel"});
		treeModel = new OdiSAPBWTreeModel(con,infoAreas,odiLang);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling OdiSAPBWTreeModel"});
		tree = new JTree(treeModel);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling OdiSAPBWTreeModel"});
		//Plus Sign on JTree
		tree.putClientProperty("JTree.lineStyle", "Angled");
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling tree.putClientProperty"});
		tree.setFont(normalFont);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling tree.setFont"});
		//tree.setBackground(BG_COLOR);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling tree.setBackground"});
		tree.addMouseListener(this);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling tree.addMouseListener"});
		tree.addTreeSelectionListener(this);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling tree.addTreeSelectionListener"});
		tree.setCellRenderer(new MyEditor(this));
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After calling tree.setCellRenderer"});
		JScrollPane sp = new JScrollPane(tree, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
		bodyPanel.setLayout(new BoxLayout(bodyPanel, BoxLayout.LINE_AXIS));
		bodyPanel.setBorder(BorderFactory.createEtchedBorder());
		bodyPanel.setBackground(BG_COLOR);
		bodyPanel.add(sp);
		//Adding bodyPanel to Frame Window
		browser.getContentPane().add(bodyPanel, BorderLayout.CENTER);
	}
	
	/**
	 * Bottom Panel
	 */
	public void createBottomPanel(){
		//bottomPanel.setBackground(BG_COLOR);
		buttonCancel.setFont(normalFont);
		buttonCancel.addActionListener(this);
		buttonReverse.setFont(normalFont);
		buttonReverse.addActionListener(this);
		bottomPanel.add(buttonCancel);
		bottomPanel.add(buttonReverse);
		
		//bottomPanel.setBorder(BorderFactory.createLoweredBevelBorder());
		bottomPanel.setBorder(BorderFactory.createEmptyBorder());
		//Adding bottomPanel to Frame Window
		browser.getContentPane().add(bottomPanel, BorderLayout.SOUTH);
	}
	
	//Tree Selection Listener
	public void valueChanged(TreeSelectionEvent te){
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Tree Selection value changed.."}); // logger.log(" Tree Selection value changed....",  className, OdiSAPBWLogger.DEBUG);
		TreePath path = te.getPath();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Path Count="+path.getPathCount()}); // logger.log("Path Count="+path.getPathCount(),  className, OdiSAPBWLogger.DEBUG);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Last Path Component()"+ path.getLastPathComponent()}); // logger.log("Last Path Component()"+ path.getLastPathComponent(), className,  OdiSAPBWLogger.DEBUG);
	}
	
	/**
	 * Update List of nodes to be reversed
	 * @param data
	 */
	public boolean updateRevList(OdiSAPBWData data){
		//TreePath path = tree.getPathForRow();
		if(data.isRoot())
			//Root nodes can't be reversed
			return false;
		if(data instanceof InfoCube ||
		   data instanceof InfoObject ||
		   data instanceof ODSDSO ||
		   data instanceof OpenHubTable){
		
		//************Nodes which can be Reversed***************
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Update Reverse List with Node: "+ data.getName()}); // logger.log("Update Reverse List with Node: "+ data.getName(), className, OdiSAPBWLogger.DEBUG);
		// Insert into revList
		if(!revList.contains(data)){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Add New Node: "+ data.getName()}); // logger.log("Add New Node: "+ data.getName(), className, OdiSAPBWLogger.DEBUG);
			revList.add(data);
		}
		else{
			//2nd time click, user want to deselect, remove from revList
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Deselect Node: "+ data.getName()}); // logger.log("Deselect Node: "+ data.getName(), OdiSAPBWLogger.DEBUG);					
			revList.remove(data);					
			}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Size of Reverse List: "+ revList.size()}); // logger.log("Size of Reverse List: "+ revList.size(), className, OdiSAPBWLogger.FINEST);
		return true;
		}
		else 
			return false;
	}	
	
	//Clearing the Selected Path if mouse Click event is triggered 
	public void clearSelection(TreePath pathClearSel) throws Exception {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Clear Selection >>>>>>>>>>>>>>>>>>>>>>> "+pathClearSel }); // logger.log("Clear Selection >>>>>>>>>>>>>>>>>>>>>>> "+pathClearSel , className, OdiSAPBWLogger.DEBUG);		
		mouseClickStatus = false;		
		searchPanel.removeSelectedPath(pathClearSel);
	}
	
	/**
	 * Distribute reverse list into different data structures
	 */
	private void distributeRevList(){
		//remove previous data
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"RevInfoCubeList==>"+con.revInfoCubeList}); // logger.log("RevInfoCubeList==>"+con.revInfoCubeList);
		con.revODSDSOList.clear();
		con.revInfoObjList.clear();
		con.revInfoCubeList.clear();
		con.revOpenHubList.clear();//For open hub
		
		for(int i=0; i<revList.size(); i++){
			OdiSAPBWData data = (OdiSAPBWData) revList.get(i);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"data=>"+data.getName()}); // logger.log("data=>"+data.getName());
			
			if(data instanceof ODSDSO)
				con.revODSDSOList.add(data);
			else if(data instanceof InfoObject)
				con.revInfoObjList.add(data);
			else if(data instanceof InfoCube){
				InfoCube ic = (InfoCube)data;
				System.out.println("->Associated InfoArea Name: "+ ic.getInfoArea().getName());
				System.out.println("->Associated InfoArea Parent: "+ ic.getInfoArea().getParent());
				System.out.println("->Associated InfoArea Childs: "+ ic.getInfoArea().getChilds());
				System.out.println("->Associated InfoCube Name: "+ ic.getInfoArea().getChilds());
				con.revInfoCubeList.add(data);
			}
			else if(data instanceof OpenHubTable){
				con.revOpenHubList.add(data);
			}
		}
	}
	
	/**
	 * Set the cursor in UI in wait state
	 *  JProgressBar p = new JProgressBar( );
     * 	p.setIndeterminate(true);
     * 	f.getContentPane( ).add(p);
	 */
	public void waitState(){
		browser.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
		//JOptionPane.showMessageDialog(browser, "Please wait...");
	}
	
	/**
	 * Set the UI back to normal state
	 */
	public void normalState(){
		browser.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
	}
	
	//****************Handle Events***************************
	//********************************************************
	
	//Handling mouse press events
	public void mousePressed(MouseEvent me){		
		//JOptionPane.showMessageDialog(browser, "Mouse Click Count="+ me.getClickCount());
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Mouse Click Count="+ me.getClickCount()}); // logger.log("Mouse Click Count="+ me.getClickCount(),  className, OdiSAPBWLogger.DEBUG);	
		if(me.getClickCount()==1) {
			mouseClickStatus = true;			
		}
	}
	//Handling different button press events
	/* (non-Javadoc)
	 * @see UIListener#actionPerformed(java.awt.event.ActionEvent)
	 */
	public void actionPerformed(ActionEvent ae){
		
		String cmdName = ae.getActionCommand();
		
		if(cmdName.equals(buttonCancel.getActionCommand())){
                        isCancle = true;
			destroyScreen();
		}
		else if(cmdName.equals(buttonReverse.getActionCommand())){
			if(revList.size()==0){
				JOptionPane.showMessageDialog(browser, odiLang.getValue(OdiSAPBWLang.NOTHING_TO_REVERSE));
				return;
			}
			
			JOptionPane.showMessageDialog(browser, odiLang.getValue(OdiSAPBWLang.REVERSING_SELECTED_BW_BI_METADATA));
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("",  className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"SAP BW Meta Data Reverse Summary)"}); // logger.log("*********** (SAP BW Meta Data Reverse Summary) ***********",  className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("",  className, OdiSAPBWLogger.FINEST);
			// Reverse metadata
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of Elements to be Reversed ["+ revList.size()+"]"}); // logger.log("Number of Elements to be Reversed ["+ revList.size()+"]",  className, OdiSAPBWLogger.FINEST);
			String nodes = "[ ";
			for(int i=0; i<revList.size(); i++)
				nodes += ((OdiSAPBWData)revList.get(i)).getName() + " ";
			nodes += "]";
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Nodes to be Reversed: "+ nodes}); // logger.log("Nodes to be Reversed: "+ nodes, className, OdiSAPBWLogger.DEBUG);
			
			// Distribute Rev List into different data structures
			distributeRevList();
			
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of ODS/DSO nodes to be Reversed: ["+ con.revODSDSOList.size()+"]"}); // logger.log("Number of ODS/DSO nodes to be Reversed: ["+ con.revODSDSOList.size()+"]", className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of InfoObject nodes to be Reversed: ["+ con.revInfoObjList.size()+"]"}); // logger.log("Number of InfoObject nodes to be Reversed: ["+ con.revInfoObjList.size()+"]", className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of InfoCube nodes to be Reversed: ["+ con.revInfoCubeList.size()+"]"}); // logger.log("Number of InfoCube nodes to be Reversed: ["+ con.revInfoCubeList.size()+"]", className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of OpenHub nodes to be Reversed: ["+ con.revOpenHubList.size()+"]"}); // logger.log("Number of OpenHub nodes to be Reversed: ["+ con.revOpenHubList.size()+"]", className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("",  className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"*****************************"}); // logger.log("***********************************************************",  className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("",  className, OdiSAPBWLogger.FINEST);
			// Flush revList
			revList.clear();
			
			// Destroy Screen
			destroyScreen();
		}
	}
	
	private MyNode searchNode(MyNode node, String srch){
		MyNode result = null;
		OdiSAPBWTreeModel model = null;
		int count = node.getChildCount();
		if(count == 0){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"**Node Name="+ node.getNode().getName()}); // logger.log("**Node Name="+ node.getNode().getName(), className, OdiSAPBWLogger.DEBUG);
			model = (OdiSAPBWTreeModel)tree.getModel();
			count = model.getChildCount(node);
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"**Node Name="+ node.getNode().getName()}); // logger.log("Number of Childs="+ count, className, OdiSAPBWLogger.DEBUG);
		for(int i=0; i<count; i++){
			MyNode child;
			if(model == null){
				/*
				 * this node has already been expanded
				 */
				child = (MyNode) node.getChildAt(i);
			}
			else{
				/*
				 * childs yet to linked with parent
				 */
				child = (MyNode) model.getChild(node,i);
			}
			
			if(child.getNode().getName().trim().startsWith(srch)){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Found Match!!"}); // logger.log("Found Match!!", OdiSAPBWLogger.DEBUG);
				result = child;
				break;
			}
		}
		return result;
	}
	
	public boolean isVisible(){
		return browser.isVisible();
	}
	
	public void destroyScreen(){
		browser.setVisible(false);
	}
	
	public void exit(){
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"MetaDataBrowserUI Exit...."}); // logger.log("MetaDataBrowserUI Exit....", OdiSAPBWLogger.FINEST);
		tree = null;
		topPanel = null;
		bodyPanel = null;
		bottomPanel = null;
		treeModel.exit();
	}
}

//End of MetaDataBrowserUI.java
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6351]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e4d3d962-278d-4115-b6a0-7ceb7604d667]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3494]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[60]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java No GUI Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e98ec149-f29a-441b-aac6-93f1383369eb]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6351]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Start of OdiSAPBWNoGuiHandler.java
import java.util.Date;
import java.util.Iterator;
import java.util.ResourceBundle;
import java.util.Vector;



/**
 * Handles all necessary steps to reverse metadata without GUI option
 */
public class OdiSAPBWNoGuiHandler {
//	Logger
	OdiSAPBWLogger logger;
//	private OdiSapBwResourceBundle odiSapBwResourceBundle;
	String className = OdiSAPBWNoGuiHandler.class.getName();
	
	OdiSAPBWConnection con;
	
	public OdiSAPBWNoGuiHandler(OdiSAPBWConnection con) throws Exception {
		this.con = con;
		logger =  OdiSAPBWLogger.getLogger();
	}
	
	/**
	 * TODO: Call getInfoAreaDetails() to gather infoarea hierarchy information
	 * Find out bottom to Top InfoArea hierarchy to be used for creating sub Model
	 *  
	 * Input Type:-
	 * Single Name: 0ABC_Class
	 * Multiple Name: 0ABC_Class,0ACCNT_GRP,0ACCNT_GRPV
	 * Matching String: 0ABC%
	 * 
	 * @param infoCName
	 * @throws Exception
	 */
	public void createInfoCubesRevList(String infoCName) throws Exception {
		if(!validate(infoCName))
			return;
		//Populate reverse InfoCube list- con.revInfoCubeList
		con.revInfoCubeList.clear();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"No GUI Create InfoCube Rev List: "+ infoCName}); // logger.log("No GUI Create InfoCube Rev List: "+ infoCName, className, OdiSAPBWLogger.FINEST);
		if(infoCName.indexOf(',') != -1){
			/*
			 * User has type in multiple InfoCube names seperated by ,
			 */
			String[] infoCubes = infoCName.split(",");
			for(int i=0; i<infoCubes.length; i++){
				Vector infoCubeDetails = con.getLookupIcubeIarea(infoCubes[i].trim(), "");//null);
				if(infoCubeDetails.size() > 0)
					con.revInfoCubeList.add((InfoCube) infoCubeDetails.elementAt(0));
			}
		}
		else
			// Populate Rev List of InfoCubes: Wild Card search
			con.revInfoCubeList = con.getLookupIcubeIarea(infoCName, "");
	}
	
	/**
	 * Input Type:
	 * Single Name: 0ABC_Class
	 * Multiple Name: 0ABC_Class,0ACCNT_GRP,0ACCNT_GRPV
	 * Matching String: 0ABC%
	 * 
	 * @param infoOName
	 * @throws Exception
	 */
	public void createInfoObjectsRevList(String infoOName) throws Exception {
		//Populate con.revInfoObjectList
		if(!validate(infoOName))
			return;
		con.revInfoObjList.clear();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"No GUI Create InfoObject Rev List: "+ infoOName}); // logger.log("No GUI Create InfoObject Rev List: "+ infoOName, className, OdiSAPBWLogger.FINEST);
		if(infoOName.indexOf(',') != -1){
			/*
			 * User has type in multiple InfoObject names seperated by ,
			 */
			String[] infoObjs = infoOName.split(",");
			for(int i=0; i<infoObjs.length; i++){
				Vector infoObjDetails = con.lookupInfoObject(infoObjs[i].trim(), "");//null);
				if(infoObjDetails.size() > 0)
					con.revInfoObjList.add((InfoObject) infoObjDetails.elementAt(0));
			}
		}
		else
			// Populate Rev List of InfoObjects
			con.revInfoObjList = con.lookupInfoObject(infoOName, "");
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of InfoObject to reverse: "+ con.revInfoObjList.size()}); // logger.log("Number of InfoObject to reverse: "+ con.revInfoObjList.size(), className, OdiSAPBWLogger.DEBUG);
	}
	
	/**
	 * Input Type:
	 * Single Name: 0ABC_Class
	 * Multiple Name: 0ABC_Class,0ACCNT_GRP,0ACCNT_GRPV
	 * Matching String: 0ABC%
	 * 
	 * @param odsName
	 * @throws Exception
	 */
	public void createODSDSORevList(String odsName) throws Exception {
		// Populate con.revODSDSOList
		if(!validate(odsName))
			return;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"No GUI Create ODS/DSO Rev List: "+ odsName}); // logger.log("No GUI Create ODS/DSO Rev List: "+ odsName, className, OdiSAPBWLogger.FINEST);
		con.revODSDSOList.clear();
		
		if(odsName.indexOf(',') != -1){
			/*
			 * User has type in multiple InfoObject names seperated by ,
			 */
			String[] odsdso = odsName.split(",");
			for(int i=0; i<odsdso.length; i++){
				Vector odsDetails = con.lookupODSDSO(odsdso[i].trim(), "");//null);
				if(odsDetails.size() > 0)
					con.revODSDSOList.add((ODSDSO) odsDetails.elementAt(0));
			}
		}
		else
			// Populate Rev List of ODS/DSO
			con.revODSDSOList = con.lookupODSDSO(odsName, "");
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of ODS/DSO to reverse: "+ con.revODSDSOList.size()}); // logger.log("Number of ODS/DSO to reverse: "+ con.revODSDSOList.size(), className, OdiSAPBWLogger.DEBUG);
	}
	
	/**
	 * Description: Returns OpenHub Destination Data
	 * 
	 * @param ohdName
	 * @throws Exception
	 */	
	public void createOHDRevList(String ohdName) throws Exception {
		// Populate con.revODSDSOList
		if(!validate(ohdName))
			return;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"No GUI Create OHD Rev List: "+ ohdName}); // logger.log("No GUI Create OHD Rev List: "+ ohdName, className, OdiSAPBWLogger.FINEST);
		con.revOpenHubList.clear();
		 Vector vectOHD = null;
		
		if(ohdName.indexOf(',') != -1){
			/*
			 * User has type in multiple InfoObject names seperated by ,
			 */
			String[] ohdNameList = ohdName.split(",");
			for(int i=0; i<ohdNameList.length; i++){
				Vector ohdDetails = con.getLookupOhDestination(ohdNameList[i].trim(), "");//null);
				if(ohdDetails.size() > 0){
					addOHtoVector(ohdDetails);
				}
			}
		}
		else{
			// Populate Rev List of OHD
		    vectOHD = con.getLookupOhDestination(ohdName, "");// null
			addOHtoVector(vectOHD);
		}
	}
	
	/**
	 * Description: Adds OpenHub Data into Vector
	 * 
	 * @param vecOHDest
	 */
	public void addOHtoVector(Vector vecOHDest)
	{
		  for (Iterator iter = vecOHDest.iterator(); iter.hasNext();) {
			 OpenHubDestination OHD = (OpenHubDestination) iter.next();
			 try{
				 OpenHubTable ohTable = con.getOpenHubData(OHD.getName());
				 if(ohTable != null)
					 con.revOpenHubList.add(ohTable);
			}catch(Exception e){
				e.printStackTrace();
			}
		}
	}	
	
	private boolean validate(String name) {
		if(name.indexOf('!') != -1)
		if(name.indexOf('@') != -1)
		if(name.indexOf('#') != -1)
		if(name.indexOf('$') != -1)
		if(name.indexOf('^') != -1)
		if(name.indexOf('&') != -1)
		if(name.indexOf('*') != -1)
		if(name.indexOf('(') != -1)
		if(name.indexOf(')') != -1)
		if(name.indexOf('/') != -1)
		if(name.indexOf('-') != -1)
		if(name.indexOf('_') != -1)
		if(name.indexOf('+') != -1)
		if(name.indexOf('=') != -1)
		if(name.indexOf('<') != -1)
		if(name.indexOf('>') != -1)
		if(name.indexOf('.') != -1){
			//throw new Exception(" Invalid Charecter usage in: "+ name);
			return false;
		}
		return true;
	}
}
//End of OdiSAPBWNoGuiHandler.java
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6352]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f3a71bfd-661e-436c-b732-296f23bb1b36]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3495]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java SNP REV Handler Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f1a02e31-7f1d-4a16-bc7e-9fb7852e1542]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6352]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Start of OdiSAPBWSnpRevHandler.java
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.Stack;
import java.util.Vector;
import java.util.HashMap;


/**
 * This class will do all data retrieval and insertion operations 
 * to SNP REV table
 * INFOCUBE REVERSE- while reversing an InfoCube, we need to reverse all related
 * InfoObjects identified by Dimension name. 
 * We also need to check whether these infoObjects have already been reversed.
 * 
 */

public class OdiSAPBWSnpRevHandler {

	private final String ODS_SUB_MODEL = "ODS-DSO",
	                     INFO_OBJ_SUB_MODEL = "InfoObjects",
	                     INFO_CUBE_SUB_MODEL = "InfoCubes",
	                     OPEN_HUB_SUB_MODEL="OpenHub",
	                     KEY_FIELD = "KEY_FIELD";
	String modelID = "";
	Connection repCon;
	PreparedStatement subModelPStmt;
	PreparedStatement tablePStmt;
	PreparedStatement colPStmt;
	PreparedStatement keyPStmt;
	PreparedStatement keyColPStmt;
	PreparedStatement joinPStmt;
	PreparedStatement joinColPStmt;
	PreparedStatement flexfieldPStmt;
	PreparedStatement flexfieldRevTable;
	PreparedStatement flexfieldRevCol;
	
	
	/**
	 * Unique list of InfoObjects to reverse- This will be used during InfoCube
	 * reverse. InfoCubes can share InfoObjects, so InfoObject reverse should happen only once
	 */
	LinkedHashSet internalInfoObjRevList = new LinkedHashSet();
	/**
	 * Keep track of duplicate Sub Model creation
	 */
	private Vector localSubModelCache = new Vector();
	private ArrayList ffObjList = new ArrayList(); 
	private OdiSAPBWConnection odiCon;
	/**
	 * Col Pos of InfoCube Cols (KF, IOPK etc.)
	 */
	int infoCubeColPos = 0;
	/**
	 * Col Pos for InfoCube Primary Keys
	 */
	int infoCPKIndex = 0;
	/**
	 * I_Table- internal table ID for FlexField entry
	 */
	int tinterID = 0;
	/**
	 * I_Col- internal column ID for FlexField entry
	 */
	int cinterID = 0;
	//Logger
	OdiSAPBWLogger logger;
	
	//HashMap to Store Sid of InfoCubes
	HashMap hsInfocubeSid = new HashMap();
	String className = OdiSAPBWSnpRevHandler.class.getName();
	
	//Check the ODI Release
	<%boolean isOdi10gOr11g = odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION");%>
	
	public OdiSAPBWSnpRevHandler(OdiSAPBWConnection odiCon) throws Exception {
	logger =  OdiSAPBWLogger.getLogger();
		try{
			this.odiCon = odiCon;
			
			//TODO:VERY IMPORTANT POINT( Running the Code in the ODI AND Eclipse Instruction
			/**
			 * @author Anupam.Srivastava
			 * 
			 *   The following piece code need to be Enabled when executed in the ODI:-
			 *   1.this.repCon = odiRef.getJDBCConnection("DEST");
			 *   2.modelID = < %=odiRef.getModel("ID")% >;
			 *   
			 *   
			 *   But When we want to see the MetaData Browser in Eclipse,
			 *   Then the following piece of code need to be Disabled.
			 *   like:-
			 *   //1.this.repCon = odiRef.getJDBCConnection("DEST");
			 *   //2.modelID = < %=odiRef.getModel("ID")% >;
			 */
			this.repCon = odiRef.getJDBCConnection("DEST");
			//modelID = odiRef.getModel("ID");
			logger.fine("ODIKM-SAPBW-RKM-10000", "11", new Object[]{"Model ID="+modelID}); 
			logger.fine("ODIKM-SAPBW-RKM-10000", "11", new Object[]{"SNP_REV_Con="+ repCon.toString()}); 
		}catch(Exception ex){
			logger.fine("ODIKM-SAPBW-RKM-10000", "11", new Object[]{"Error in SNP REV Connection: "+ ex.getMessage()});
			ex.printStackTrace();
		}
	}
	
	/**
	 * ODI Command for this function: snprevHandler.storeODSDSO();
	 * Store ODS/DSO data into SNP REV table 
	 * Store data present in revODSDSOList into SNP_Rev table
	 * @param revList
	 */
	public void storeODSDSO() throws Exception {

		try {
			
			// Get list of ODS-DSO need to reverse
			Vector ods_dso = odiCon.revODSDSOList;
			//incase of ODI 12c clear previous ffObject data from the list before 
			//putting flexfield value for this particular object
			<% if(!isOdi10gOr11g) {%> //if ODI 12c
				if(ffObjList.size() > 0)
					ffObjList.clear();
			<%}%>
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing ODS/DSO nodes........."});
		//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); 
			if (ods_dso.size() == 0){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ODS/DSO node list is Empty !!"});
				return;
			}
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of ODS/DSO nodes to be Reversed: "+ ods_dso.size()});
			// Create Root Sub Model- "ODS-DSO"
			createSubModel(ODS_SUB_MODEL, null);//Top most Sub Model, No Parent Sub Model
			
			/*
			 * Create Data Stores for ODS/DSO nodes
			 */
			for (int i = 0; i < ods_dso.size(); i++) {
				ArrayList dataStoreFFs = new ArrayList();
				
				ODSDSO od = (ODSDSO) ods_dso.get(i);
                logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"RevHandler: od.getName: "+od.getName()+", od.getODSTypeUI(): "+od.getOdsTypeUI()});  // logger.log("RevHandler: od.getName: "+od.getName()+", od.getODSTypeUI(): "+od.getOdsTypeUI(), OdiSAPBWLogger.FINEST);
                
		if ((od.getOdsType()!=null && "W".equals(od.getOdsType())) || (od.getOdsTypeUI()!=null && "W".equals(od.getOdsTypeUI()))) {
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"FlexField: "+ff.getFfCode()+": "+ff.getFfValue()});  // logger.log("****** SETTING FLEXFIELD  SAPW_OBJECT_TYPE = WO-DSO", OdiSAPBWLogger.FINEST);
					
					//FlexField ff = getFlexField(FlexField.SAPBW_OBJECT_TYPE, "WO-DSO");
					dataStoreFFs.add(getFlexField(FlexField.SAPBW_OBJECT_TYPE, "WO-DSO"));
					//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****** FlexField: "+ff.getFfCode()+": "+ff.getFfValue(), OdiSAPBWLogger.DEBUG);										
				} else {
					
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{" FLEXFIELD  SAPW_OBJECT_TYPE = ODS-DSO"}); // logger.log("****** FLEXFIELD  SAPW_OBJECT_TYPE = ODS-DSO", OdiSAPBWLogger.FINEST);
					//FlexField ff = getFlexField(FlexField.SAPBW_OBJECT_TYPE, "ODS-DSO");
					dataStoreFFs.add(getFlexField(FlexField.SAPBW_OBJECT_TYPE, "ODS-DSO"));
					//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****** FlexField: "+ff.getFfCode()+": "+ff.getFfValue(), OdiSAPBWLogger.FINEST);					
				}
				// Fetch ODS/DSO details if it is not available
				
				//dataStoreFFs.add(getFlexField(FlexField.SAPBW_OBJECT_TYPE, "ODS-DSO"));
				// FlexField- SAP BW Table (One to One Mapping)
				if(od.getKeyFields() == null){
					// Retrieve details from SAP BW/BI server
					Vector details = odiCon.getODSDSODetails(od.getName());		
				  od = (ODSDSO) details.elementAt(0);
				}
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"RevHandler: od.getName before: "+od.getName()+", od.getOdsoTableName(): "+od.getOdsoTableName()});  // logger.log("RevHandler: od.getName before: "+od.getName()+", od.getOdsoTableName(): "+od.getOdsoTableName(), OdiSAPBWLogger.FINEST);
		        dataStoreFFs.add(getFlexField(FlexField.SAPBW_TABLE_NAME, od.getOdsoTableName()));
				//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("RevHandler: od.getName before: "+od.getName()+", od.getOdsoTableName(): "+od.getOdsoTableName(), OdiSAPBWLogger.FINEST);
				  String tableName = od.getName();
				  if(od.getHeading() != null)
						tableName += " "+ od.getHeading();   
				  
				  createFFObject(tableName, FlexFieldObject.DATASTORE, dataStoreFFs);
				
				//Create Table
				createTable(tableName, od.getDesc(), ODS_SUB_MODEL);
				
				
				//Get Cols- 
				ArrayList keyFields = od.getKeyFields();
				ArrayList dataFields = od.getDataFields();
				
				//Create PK Table
				if(keyFields.size() > 0){
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating PK entry in SNP_REV_KEY"});  // logger.log("Creating PK entry in SNP_REV_KEY", className, OdiSAPBWLogger.DEBUG);
					createPK(tableName);
				}
				
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Key Fields"});  // logger.log("Storing Key Fields....", className, OdiSAPBWLogger.DEBUG);
				//Create Cols- Key Fields
				int j = 0;
				for(j=0; j<keyFields.size(); j++){
					ArrayList colFFs = new ArrayList();
					ODSDSOKeyField kField = (ODSDSOKeyField) keyFields.get(j);
					//Create Columns
					createColumn(tableName, 
						     	 kField.getName(), 
						         kField.getHeading(), 
						         kField.getDesc(), 
						         kField.getDataType(), 
						         j, 
						         kField.getFieldLen(),
						         kField.getDecLen(),
						         "1"); //Key Fields are mandatory
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Primary Key value in SNP_REV_KEY_COL"});  // logger.log("Storing Primary Key value in SNP_REV_KEY_COL", className, OdiSAPBWLogger.DEBUG);
					//Create Primary Key Cols
					createPKCol(tableName, 
								kField.getName(), 
							    j);
					colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_TYPE, KEY_FIELD));
					createFFObject(kField.getName(), FlexFieldObject.COLUMN, colFFs);
				}
				
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Data Fields.."});  // logger.log("Storing Data Fields....", className, OdiSAPBWLogger.DEBUG);
				//Create Cols- Data Fields
				for(int k=0; k<dataFields.size(); k++){
					ODSDSODataField dField = (ODSDSODataField) dataFields.get(k);
					//Create Columns
					createColumn(tableName, 
							     dField.getName(), 
							     dField.getHeading(), 
							     dField.getDesc(), 
							     dField.getDataType(), 
							     k+j, 
							     dField.getFieldLen(), 
							     dField.getDecLen(),
							     "0"); //Data Fields are not mandatory
				}
				}
			
			executeSQLBatch();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing ODS/DSO: Done!!"});  // logger.log("Storing ODS/DSO: Done!!", className, OdiSAPBWLogger.FINEST);
		}
		catch (Exception e) {
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Error in reversing ODS/DSO...."+ e.getMessage()});  // logger.log("Error in reversing ODS/DSO...."+ e.getMessage(), className, OdiSAPBWLogger.DEBUG);
			e.printStackTrace();
			throw e;
		} 
	}
	/**
	 * ODI Command for this function: snprevHandler.storeOpenHub();
	 * Store OpenHub data into SNP REV table 
	 * Store data present in revOpenHubList into SNP_Rev table
	 * @param revList
	 */
	public void storeOpenHub() throws Exception {
		try {
			// Get list of Open Hub need to reverse
			Vector open_hub = odiCon.revOpenHubList;
			//incase of ODI 12c clear previous ffObject data from the list before 
			//putting flexfield value for this particular object
			<% if(!isOdi10gOr11g) {%> //if ODI 12c
				if(ffObjList.size() > 0)
					ffObjList.clear();
			<%}%>
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing OHD Tables:."});  // logger.log("Storing OHD Tables:....", className, OdiSAPBWLogger.FINEST);
			/*logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("odiCon.revOpenHubList:------------------>"+ odiCon, className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("odiCon.revOpenHubList------------------>"+ odiCon.revOpenHubList, className, OdiSAPBWLogger.FINEST);*/
			if (open_hub.size() == 0){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"OHD Table list is Empty!"});  // logger.log("OHD Table list is Empty!!", className, OdiSAPBWLogger.FINEST);
				return;
			}
			
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of OpenHub tables to be Reversed: " + open_hub.size()});  // logger.log("Number of OpenHub tables to be Reversed: " + open_hub.size(), className, OdiSAPBWLogger.DEBUG);
			// Create Root Sub Model- "OpenHub"
			createSubModel(OPEN_HUB_SUB_MODEL, null);

			/*
			 * Create Data Stores for Open Hub nodes
			 */
			for (int i = 0; i < open_hub.size(); i++) {
				ArrayList dataStoreFFs = new ArrayList();
				OpenHubTable ohTable = (OpenHubTable) open_hub.get(i);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Reversing OHD Table: "+ ohTable.getName()});  // logger.log("Reversing OHD Table: "+ ohTable.getName(), className, OdiSAPBWLogger.DEBUG);
				// Get Destination Name
				String strOhDest = ohTable.getOhDest();
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"OH Destination: "+ strOhDest});  // logger.log("OH Destination: "+ strOhDest, className, OdiSAPBWLogger.DEBUG);
				
				String tableName = ohTable.getOhDest();
				if(ohTable.getHeading() != null)
					tableName += " "+ ohTable.getHeading();
				
				// Create Table
				createTable(tableName, ohTable.getDesc(), OPEN_HUB_SUB_MODEL);
				
				// Create PK
				createPK(tableName);
				
				// Get Col-
				Vector cols = ohTable.getColumns();
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of Cols: "+ cols.size()});  // logger.log("Number of Cols: "+ cols.size(), className, OdiSAPBWLogger.DEBUG);
				// Create Cols- Key Fields
				for (int j = 0; j < cols.size(); j++) {
					OpenHubColumn ohC = (OpenHubColumn) cols.get(j);
					// Create Columns
					createColumn(tableName, 
								 ohC.getName(),
								 // ohC.getHeading(),
								 ohC.getHeading(), 
								 ohC.getDesc(), 
								 ohC.getDataType(), 
								 j,
								 ohC.getFieldLen(),
								 // ohC.getDecLen(),
								 ohC.getDecLen(), 
								 ohC.getMandatory()); // Key Fields are mandatory
					
					if(ohC.getMandatory().equals("1")){
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Primary Key value in SNP_REV_KEY_COL"});  // logger.log("Storing Primary Key value in SNP_REV_KEY_COL", className, OdiSAPBWLogger.DEBUG);
						// It is a Mandatory Field, create Primary Key Col
						createPKCol(tableName, ohC.getName(), j);
					}
				}
				/*
				 * DataStore FlexFields
				 */
				// FlexField- Object Type
				dataStoreFFs.add(getFlexField(FlexField.SAPBW_OBJECT_TYPE, "OHDT"));
				// FlexField- SAP BW Table (One to One Mapping)
				dataStoreFFs.add(getFlexField(FlexField.SAPBW_TABLE_NAME, ohTable.getName()));
				createFFObject(tableName, FlexFieldObject.DATASTORE, dataStoreFFs);
			}
			executeSQLBatch();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing OHD Tables: Done!!"});  // logger.log("Storing OHD Tables: Done!!", className, OdiSAPBWLogger.FINEST);
		} catch (Exception e) {
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Error in reversing OHD Tables...."+ e.getMessage()});  // logger.log("Error in reversing OHD Tables...."+ e.getMessage(), className, OdiSAPBWLogger.DEBUG);
			e.printStackTrace();
			throw e;
		}
	}
	
	/**
	 * TODO: 
	 * IMPORTANT: REVERSE ALL 3 TABLES S_TABLE, P_TABLE AND T_TABLE
	 * Issues- 
	 * 1. Reference Objects e.g. 0APO_LOCFR- has attributes but no PTable
	 * 2. Navigational Attribute column comes under P_Table. (We are not considering Nav Attributes)
	 * 
	 * Store InfoObject Details present in revInfoObjectList into SNP_REV_XX
	 * tables
	 * 
	 */
	public void storeInfoObject() throws Exception {
		try{
			int hier_txt_table_counter = 1;
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing InfoObjects: ..."});  // logger.log("Storing InfoObjects: ....", className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"odiCon.revInfoObjList-------INFOOBJECT------------>"+ odiCon.revInfoObjList});  // logger.log("odiCon.revInfoObjList-------INFOOBJECT------------>"+ odiCon.revInfoObjList, className, OdiSAPBWLogger.FINEST);
			//incase of ODI 12c clear previous ffObject data from the list before 
			//putting flexfield value for this particular object
			<% if(!isOdi10gOr11g) {%> //if ODI 12c
				if(ffObjList.size() > 0)
					ffObjList.clear();
			<%}%>
			// Get list of InfoObjects to reverse
			Vector infoObjs = odiCon.revInfoObjList;
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"infoObjs-------INFOOBJECT------------>"+ infoObjs+"..&& The Size is :------>"+infoObjs.size()});  // logger.log("infoObjs-------INFOOBJECT------------>"+ infoObjs+"..&& The Size is :------>"+infoObjs.size(), className, OdiSAPBWLogger.FINEST);
			if(infoObjs.size() == 0){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoObject List is Empty!!"});  // logger.log("InfoObject List is Empty!!", className, OdiSAPBWLogger.FINEST);
				return;
			}
			
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of InfoObjects going to be Reversed: "+ infoObjs.size()});  // logger.log("Number of InfoObjects going to be Reversed: "+ infoObjs.size(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of InfoObjects going to be Reversed: "+ infoObjs.size()});  // logger.log("INFO_OBJ_SUB_MODEL is :- "+ INFO_OBJ_SUB_MODEL, className, OdiSAPBWLogger.FINEST);
			// Create Root Sub Model- "InfoObjects"
			createSubModel(INFO_OBJ_SUB_MODEL, null);//Top most Sub Model
			
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"After Creating the Sub Model"});  // logger.log("After Creating the Sub Model", className, OdiSAPBWLogger.FINEST);
			//Store InfoObjects
			for(int i=0; i<infoObjs.size(); i++){
				
				InfoObject iobj = (InfoObject) infoObjs.get(i);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoObject to Store: "+ iobj.getName()});  // logger.log("InfoObject to Store: "+ iobj.getName(), className, OdiSAPBWLogger.FINEST);
				//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("111111111111111 iobj.getTables(): "+ iobj.getTables(), className, OdiSAPBWLogger.FINEST);
				//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("222222222222222 iobj.getMergedTable(): "+ iobj.getMergedTable(), className, OdiSAPBWLogger.FINEST);//iobj.getTables().size()
				//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("333333333333333 iobj.getTables().size(): "+ iobj.getTables().size(), className, OdiSAPBWLogger.FINEST);
				//Fetch InfoObject details if it is not available
				if(iobj.getTables() == null){
					// Retrieve details from SAP BW/BI server
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Calling getInfoObjectDetails() from rev handler class"});  // logger.log("Calling getInfoObjectDetails() from rev handler class");
					InfoObject io = odiCon.getInfoObjectDetails(iobj.getName());
					iobj.copyInfoObject(io);
				}
				
				// is this infoobject empty?
				if(iobj.getTables().size() == 0 && iobj.getMergedTable() == null){
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Empty InfoObject...nothing to reverse!!"});  // logger.log("Empty InfoObject...nothing to reverse!!", className, OdiSAPBWLogger.FINEST);
					/*
					 * Date: 9 Nov, 2009
					 * It was a bug and was skipping rest of the valid InfoObjects
					 * "continue" will keep the loop moving till the end of the list.
					 * -Prasanta Paul
					 */
					//return;
					continue;
				}
					
                //Create Sub Model- "InfoObject Name" e.g. "Vendor", under "InfoObjects"
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoObject to reverse: "+ iobj.getName()});  // logger.log("InfoObject to reverse: "+ iobj.getName(), className, OdiSAPBWLogger.FINEST);
				createSubModel(iobj.getName(), INFO_OBJ_SUB_MODEL); 
				
				// We need a single table merging all tables column
				// Create merged table
				String mergeTableName = null;//defined outside of if condition by Anzar
				if(iobj.getMergedTable() != null) {//if condition added by Anzar
					InfoObjTable mTable = iobj.getMergedTable();
					mergeTableName = iobj.getName();
					createInfoObjTable(mergeTableName, iobj, mTable, mergeTableName);
				}
				// Create Text Table
				ArrayList tables = iobj.getTables();
				InfoObjTable txtTable = null;
				
				for(int j=0; j<tables.size(); j++){
					InfoObjTable iot = (InfoObjTable) tables.get(j);
					if(iot.getTableType() == InfoObjTable.T_TABLE){
						txtTable = iot;
						break;
					}
				}
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"txtTable: "+ txtTable});  // logger.log(">>>>>>>> txtTable: "+ txtTable, className, OdiSAPBWLogger.FINEST);
				
				/*
				 * Code added for postable text node bug 
				 */
				InfoObjTable nodeTextTable = null;
				for(int j=0; j<iobj.getNodeTextTables().size(); j++){
					InfoObjTable iot = (InfoObjTable) iobj.getNodeTextTables().get(j);
					if(iot.getTableType() == InfoObjTable.R_TABLE){
						nodeTextTable = iot;
						break;
					}
				}
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"nodeTextTable: "+ nodeTextTable.getTableType()});  // logger.log(">>>>>>>> txtTable: "+ txtTable, className, OdiSAPBWLogger.FINEST);
				// end of code added for postable text node bug
				
				/* 
				 * Added for Hierarchy Table
				 */
				InfoObjTable hierTable = null;
				/*
				 * Added for the Hierarchy Table by Anupam for Hierarchy 
				 */
				
				for(int j=0; j<iobj.getHierTables().size(); j++){
					InfoObjTable iot1 = (InfoObjTable) iobj.getHierTables().get(j);
					
					/*
					 * Added for the Hierarchy Table by Anupam for Hierarchy 
					 */
				 if(iot1.getTableType() == InfoObjTable.H_TABLE){
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Value of the : "+ InfoObjTable.H_TABLE+".......&&iot.getTableType() is :- "+iot1.getTableType()});  // logger.log("Value of the : "+ InfoObjTable.H_TABLE+".......&&iot.getTableType() is :- "+iot1.getTableType(), className, OdiSAPBWLogger.FINEST);
						hierTable = iot1;
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"hierTable Here is : "+ hierTable});  // logger.log("hierTable Here is : "+ hierTable, className, OdiSAPBWLogger.FINEST);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"HierTable Heading is #### : "+ hierTable.getHeading()});  // logger.log("#### HierTable Heading is #### : "+ hierTable.getHeading(), className, OdiSAPBWLogger.FINEST);
						break;
					}
					
				}
				//if(txtTable == null)
					// Reverse process complete of this InfoObject
					/*
					 * Date: 9 Nov, 2009
					 * It was a bug and was skipping rest of the valid InfoObjects
					 * "continue" will keep the loop moving till the end of the list.
					 * -Prasanta Paul
					 */
					//return;
					//continue;
				/*
				 * Added for the Hierarchy Table
				 */
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{" hierTable: "+ hierTable});  // logger.log(">>>>>>>> hierTable: "+ hierTable, className, OdiSAPBWLogger.FINEST);
				//if(hierTable == null) {
					//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("inside hierTable == null condition: "+ hierTable, className, OdiSAPBWLogger.FINEST);
					// Reverse process complete of this InfoObject
					
					 /* Date: 9 June,2010
					 * It was a bug and was skipping rest of the valid InfoObjects
					 * "continue" will keep the loop moving till the end of the list.
					 * -@Anupam Srivastava
					 */
					//return;
					//continue;
				//}
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Before entry of merge or table condition: "+ txtTable}); // logger.log("Before entry of merge or table condition: "+ txtTable, className, OdiSAPBWLogger.FINEST);
				if(mergeTableName != null) { //if condition added by Anzar
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"If Master table is available - mergeTableName : "+ mergeTableName}); // logger.log("If Master table is available - mergeTableName : "+ mergeTableName, className, OdiSAPBWLogger.FINEST);
					//....Working on Hierarchy table, if available
					if(hierTable != null) {
						//Create the Hirrarchy Table:
						//Hirrarchy Table Name Formate: "HIER_"<InfoObject Name>
						String hierTableName = "HIER_"+ mergeTableName;
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"The Hierarchy Table Name is : "+ hierTableName}); // logger.log("The Hierarchy Table Name is : "+ hierTableName, className, OdiSAPBWLogger.FINEST);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Calling the createInfoObjTable Method  : "+ hierTableName}); // logger.log("Calling the createInfoObjTable Method  : "+ hierTableName, className, OdiSAPBWLogger.FINEST);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"hierTable  : "+ hierTable+"####### hierTable Heading Name #######"+hierTable.getHeading()}); // logger.log("hierTable  : "+ hierTable+"####### hierTable Heading Name #######"+hierTable.getHeading(), className, OdiSAPBWLogger.FINEST);
						//createInfoObjTable(hierTableName, iobj, txtTable, mergeTableName);
						createInfoObjTable(hierTableName, iobj, hierTable, mergeTableName);
						//Added for the Hierarchy Table 
						if(hierTable.getHeading() != null) {
							hierTableName += " "+ hierTable.getHeading();
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"#hierTable.getHeading() "}); // logger.log("############hierTable.getHeading() ################-----> "+ hierTable.getHeading(), className, OdiSAPBWLogger.FINEST);
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Final hierTableName(After Adding the getHeading()is :):-----> "+ hierTableName}); // logger.log("Final hierTableName(After Adding the getHeading()is :):-----> "+ hierTableName, className, OdiSAPBWLogger.FINEST);
						}
					}//end of if(hierTable != null) 
					
					
					// Start of Code fix for text postable node
					
					String nodeTxtTableName = null;
					if(nodeTextTable != null && hier_txt_table_counter>0) {
						//Text Table Name Formate: "TXT_"<InfoObject Name>
						nodeTxtTableName = "HIERNODE_TEXT";
					// INFO_OBJ_SUB_MODEL	createInfoObjTable(nodeTxtTableName, iobj, txtTable, mergeTableName);
						createInfoObjTable(nodeTxtTableName, iobj, nodeTextTable, INFO_OBJ_SUB_MODEL);
						// Create RI constraints between Merge Table and Text Table
						if(nodeTextTable.getHeading() != null)
							nodeTxtTableName += " "+ nodeTextTable.getHeading();
						
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"@@@@@@@@@@@@@@@@@@@mergeTableName@@@@@@@@@@@@@@@@@@-----> "+ mergeTableName}); // logger.log("@@@@@@@@@@@@@@@@@@@mergeTableName@@@@@@@@@@@@@@@@@@-----> "+ mergeTableName, className, OdiSAPBWLogger.FINEST);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"@@@@@@@@@@@@@@@@@@@txtTableName@@@@@@@@@@@@@@@@@@-----> "+ nodeTxtTableName}); // logger.log("@@@@@@@@@@@@@@@@@@@txtTableName@@@@@@@@@@@@@@@@@@-----> "+ txtTableName, className, OdiSAPBWLogger.FINEST);
						
						//NEED TO CHECK :--------
						createFK(mergeTableName, nodeTxtTableName);
						
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"@@@@@@@@@@@@@@@@@@@iobj.getSidKeyField()@@@@@@@@@@@@@@@@@@-----> "+ iobj.getSidKeyField()}); // logger.log("@@@@@@@@@@@@@@@@@@@iobj.getSidKeyField()@@@@@@@@@@@@@@@@@@-----> "+ iobj.getSidKeyField(), className, OdiSAPBWLogger.FINEST);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"@@@@@@@@@@@@@@@@@@@iobj.getSidKeyField() PART 2 is :;;;;@@@@@@@@@@@@@@@@@@-----> "+ iobj.getSidKeyField()}); // logger.log("@@@@@@@@@@@@@@@@@@@iobj.getSidKeyField() PART 2 is :;;;;@@@@@@@@@@@@@@@@@@-----> "+ iobj.getSidKeyField(), className, OdiSAPBWLogger.FINEST);
						
						// create FK column: link 2 tables using SID KEY FIELD
						createFKCol(mergeTableName, nodeTxtTableName, iobj.getSidKeyField(), iobj.getSidKeyField(), 0);
						hier_txt_table_counter--;
						//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("-------------TEST METHOD createFKCol successful -------------> ", className, OdiSAPBWLogger.FINEST);
					}//end of if(txtTable != null)
					
					// End of code fix for text postable node
					
					//....Working on Text table, if available
					String txtTableName = null;
					if(txtTable != null) {
						//Text Table Name Formate: "TXT_"<InfoObject Name>
						txtTableName = "TXT_"+ mergeTableName;
						createInfoObjTable(txtTableName, iobj, txtTable, mergeTableName);
						
						// Create RI constraints between Merge Table and Text Table
						if(iobj.getHeading() != null)
							mergeTableName += " "+ iobj.getHeading();
						if(txtTable.getHeading() != null)
							txtTableName += " "+ txtTable.getHeading();
						
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"@@@@@@@@@@@@@@@@@@@mergeTableName@@@@@@@@@@@@@@@@@@-----> "+ mergeTableName}); // logger.log("@@@@@@@@@@@@@@@@@@@mergeTableName@@@@@@@@@@@@@@@@@@-----> "+ mergeTableName, className, OdiSAPBWLogger.FINEST);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"@@@@@@@@@@@@@@@@@@@txtTableName@@@@@@@@@@@@@@@@@@-----> "+ txtTableName}); // logger.log("@@@@@@@@@@@@@@@@@@@txtTableName@@@@@@@@@@@@@@@@@@-----> "+ txtTableName, className, OdiSAPBWLogger.FINEST);
						
						//NEED TO CHECK :--------
						createFK(mergeTableName, txtTableName);
						
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"@@@@@@@@@@@@@@@@@@@iobj.getSidKeyField()@@@@@@@@@@@@@@@@@@-----> "+ iobj.getSidKeyField()}); // logger.log("@@@@@@@@@@@@@@@@@@@iobj.getSidKeyField()@@@@@@@@@@@@@@@@@@-----> "+ iobj.getSidKeyField(), className, OdiSAPBWLogger.FINEST);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"@@@@@@@@@@@@@@@@@@@iobj.getSidKeyField() PART 2 is :;;;;@@@@@@@@@@@@@@@@@@-----> "+ iobj.getSidKeyField()}); // logger.log("@@@@@@@@@@@@@@@@@@@iobj.getSidKeyField() PART 2 is :;;;;@@@@@@@@@@@@@@@@@@-----> "+ iobj.getSidKeyField(), className, OdiSAPBWLogger.FINEST);
						
						// create FK column: link 2 tables using SID KEY FIELD
						createFKCol(mergeTableName, txtTableName, iobj.getSidKeyField(), iobj.getSidKeyField(), 0);
						//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("-------------TEST METHOD createFKCol successful -------------> ", className, OdiSAPBWLogger.FINEST);
					}//end of if(txtTable != null)
				}else if(txtTable != null || hierTable != null || nodeTextTable !=null) {//else condition added by Anzar if only Txt or Hierarchy table are available
					
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{">>>>>> into else condition if only Txt & Hier..... "+ iobj.getName()}); // logger.log(">>>>>> into else condition if only Txt & Hier..... "+ iobj.getName(), className, OdiSAPBWLogger.FINEST);
					String subModelName = iobj.getName();
					//start of code change for text postable node
					if(nodeTextTable != null && hier_txt_table_counter>0){
						 //Text Table Name Formate: "TXT_"<InfoObject Name>
						//String txtTableName = "TXT_"+ iobj.getName();
						String txtTableName = "HIERNODE_TEXT"+ iobj.getName();
						createInfoObjTable(txtTableName, iobj, nodeTextTable, subModelName);
						hier_txt_table_counter--;
					}//end of if(txtTable != null)  
					// end of code change for text for postable node
					
					if(txtTable != null) {
						 //Text Table Name Formate: "TXT_"<InfoObject Name>
						String txtTableName = "TXT_"+ iobj.getName();
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"The Text Table Name is : "+ txtTableName});
						createInfoObjTable(txtTableName, iobj, txtTable, subModelName);
					}//end of if(txtTable != null)  
					if(hierTable != null) {
						//Create the Hirrarchy Table:
						 //Hirrarchy Table Name Formate: "HIER_"<InfoObject Name>
						String hierTableName = "HIER_"+ iobj.getName();
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"The Hierarchy Table Name is : "+ hierTableName}); // logger.log("The Hierarchy Table Name is : "+ hierTableName, className, OdiSAPBWLogger.FINEST);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Calling the createInfoObjTable Method  : "+ hierTableName}); // logger.log("Calling the createInfoObjTable Method  : "+ hierTableName, className, OdiSAPBWLogger.FINEST);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"hierTable  : "+ hierTable+"####### hierTable Heading Name #######"+hierTable.getHeading()}); // logger.log("hierTable  : "+ hierTable+"####### hierTable Heading Name #######"+hierTable.getHeading(), className, OdiSAPBWLogger.FINEST);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"txtTable  : "+ txtTable+"####### txtTable Heading Name ##########"+txtTable.getHeading()}); // logger.log("txtTable  : "+ txtTable+"####### txtTable Heading Name ##########"+txtTable.getHeading(), className, OdiSAPBWLogger.FINEST);
						//createInfoObjTable(hierTableName, iobj, txtTable, mergeTableName);
						createInfoObjTable(hierTableName, iobj, hierTable, subModelName);
						//Added for the Hierarchy Table 
						if(hierTable.getHeading() != null) {
							hierTableName += " "+ hierTable.getHeading();
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"############hierTable.getHeading() ################-----> "+ hierTable.getHeading()}); // logger.log("############hierTable.getHeading() ################-----> "+ hierTable.getHeading(), className, OdiSAPBWLogger.FINEST);
							logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Final hierTableName(After Adding the getHeading()is :):-----> "+ hierTableName}); // logger.log("Final hierTableName(After Adding the getHeading()is :):-----> "+ hierTableName, className, OdiSAPBWLogger.FINEST);
						}
					}//end of if(hierTable != null)
				}//end of else if(txtTable != null && hierTable != null) 
			}// End of all InfoObject Reverse
			
			/*
			 * Execute SQL batch for all InfoObjects
			 */
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"TEST METHOD ODI"}); // logger.log("-------------TEST METHOD ODI------------------------> ", className, OdiSAPBWLogger.FINEST);
			executeSQLBatch();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"-TEST METHOD ODI Exit-"}); // logger.log("-------------TEST METHOD ODI Exit------------------------> ", className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing InfoObject: Done!!"}); // logger.log("Storing InfoObject: Done!!", className, OdiSAPBWLogger.FINEST);
		} catch(Exception ex){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Error in reversing InfoObject: "+ ex.getMessage()}); // logger.log("Error in reversing InfoObject: "+ ex.getMessage(), className, OdiSAPBWLogger.FINEST);
			ex.printStackTrace();
			throw ex;
		} 
	}
	
	/**
	 * Create InfoObject Table (Merge Table and Text Table)
	 * 
	 * @param tableName- table name to be stored
	 * @param attrs- to extract extra Meta Data specific to attributes
	 * @param table- table object containing table meta data information
	 * @param subModelCode- ODI sub model name
	 * @throws Exception
	 */
	private void createInfoObjTable(String tableName, InfoObject iobj, InfoObjTable table, String subModelCode) throws Exception {
		/**
		 * @author Anupam.Srivastava
		 * Date: 30,June,2010
		 * 
		 * The flagChekHier will Check the Hierarchy Structure for a perticular Info Object,
		 * if the Hierarchy Data Structure i.e. odiCon.getHierStructureName(iobj.getName()); comes Zero,
		 * Then we will not display the Hierarchy Structure and Hierarchy Table,In this case the Merge Table and Text Table will come only,
		 * Other wise we will display the Hierarchy Structure and Hierarchy Table.
		 * 
		 * 
		 * This is possible that in the meta data browser the Hierarchy Table will come,but if there is no data in the Hierarchy Structure 
		 * for a perticular InfoObject(odiCon.getHierStructureName(iobj.getName())==0),Then only the Merge Table And Text Table will be reversed.
		 *  
		 */
		boolean flagChekHier = false;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating InfoObject Table Name : "+ tableName}); // logger.log("Creating InfoObject Table Name : "+ tableName, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating InfoObject is : "+ iobj.getName()}); // logger.log("Creating InfoObject is : "+ iobj.getName(), className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating InfoObjTable is : "+ table.getName()}); // logger.log("Creating InfoObjTable is : "+ table.getName(), className, OdiSAPBWLogger.FINEST);
		ArrayList attrs = iobj.getAttributes();
		ArrayList dataStoreFFs = new ArrayList();
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Checking the Table Type: "+ table.getTableType()}); // logger.log("Checking the Table Type: "+ table.getTableType(), className, OdiSAPBWLogger.FINEST);
		
		if(table.getTableType() == InfoObjTable.M_TABLE){
			if(iobj.getHeading() != null)
				tableName += " "+ iobj.getHeading();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"############Checking the Table Name for M-Table :########### "+tableName}); // logger.log("############Checking the Table Name for M-Table :########### "+tableName, className, OdiSAPBWLogger.FINEST);
		}
		// code added for posable node bug
		else if(table.getTableType() == InfoObjTable.R_TABLE){
			if(table.getHeading() != null)
				tableName += " "+ table.getHeading();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"############Checking the Table Name for J-Table :########### "+tableName}); // logger.log("############Checking the Table Name for M-Table :########### "+tableName, className, OdiSAPBWLogger.FINEST);
		}
		// end of code added
		
		else if(table.getTableType() == InfoObjTable.T_TABLE){
			if(table.getHeading() != null)
				tableName += " "+ table.getHeading();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"############Checking the Table Name for T-Table:########### "+tableName}); // logger.log("############Checking the Table Name for T-Table:########### "+tableName, className, OdiSAPBWLogger.FINEST);
		}
		/*
		 * Added for the Hierarchy Table
		 * @Anupam Srivastava
		 */
		else if(table.getTableType() == InfoObjTable.H_TABLE){
			if(table.getHeading() != null)
				tableName += " "+ table.getHeading();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Checking the Table Name for H - Table :########### "+tableName}); // logger.log("############Checking the Table Name for H - Table :########### "+tableName, className, OdiSAPBWLogger.FINEST);
		}
		
	//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("######@@ TABLE NAME FOR ODI IS : @@########### "+tableName, className, OdiSAPBWLogger.FINEST);
		
		
		ArrayList arryHieSt = odiCon.getHierStructureName(iobj.getName());
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@ arryHieSt : @@########### "+arryHieSt}); // logger.log("######@@ arryHieSt : @@########### "+arryHieSt, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@ arryHieSt.size() : @@########### "+arryHieSt.size()}); // logger.log("######@@ arryHieSt.size() : @@########### "+arryHieSt.size(), className, OdiSAPBWLogger.FINEST);
		if(arryHieSt.size()>0){
			flagChekHier = true;
		}
		
		
		if (table.getTableType() == InfoObjTable.M_TABLE || table.getTableType() == InfoObjTable.T_TABLE || table.getTableType() == InfoObjTable.R_TABLE) {    // changes done for postable node bug
		/*
		 * For Merge Table And Text TAble
		 */
			createTable(tableName, iobj.getDesc(), subModelCode);
		} else {
			
			if(flagChekHier){//ADDED
				/*
				 * For H-Table
				 */
				
				
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@ arryHieSt TEST : @@########### "+arryHieSt}); // logger.log("######@@ arryHieSt TEST : @@########### "+arryHieSt, className, OdiSAPBWLogger.FINEST);
				
				if(arryHieSt!=null && arryHieSt.size()>0){
					
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@ zzzzzzzzzzzzzzzzzzzzzzzz "+arryHieSt}); // logger.log("######@@ zzzzzzzzzzzzzzzzzzzzzzzz "+arryHieSt, className, OdiSAPBWLogger.FINEST);
				
					StringBuilder sb = new StringBuilder();
					
					for (Iterator iter = arryHieSt.iterator(); iter.hasNext();) {
						
						sb.append((String) iter.next()+System.getProperty("line.separator", "\n"));
					}
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@ SB  "+sb}); // logger.log("######@@ SB  "+sb, className, OdiSAPBWLogger.FINEST);
					createTable(tableName, "Hierarchy Names:-"+System.getProperty("line.separator", "\n")+sb.toString(), subModelCode);
				}
				//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("######@@ Element name is  : @@########### "+elementName, className, OdiSAPBWLogger.FINEST);
								
			}
		
			
		}
		//createTable(tableName, iobj.getDesc(), subModelCode);
		//Create Columns
		ArrayList cols = table.getCols();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@ EEEEEEEE Hierarchy Column List : @@########### "+cols}); // logger.log("######@@ EEEEEEEE Hierarchy Column List : @@########### "+cols, className, OdiSAPBWLogger.FINEST);
		
		//Create PK 
		createPK(tableName);
		
		/*
		 * DataStore FlexField
		 * IMPORTANT: Data Store flexFields should be stored before column flexfields
		 */
		if(table.getTableType() == InfoObjTable.T_TABLE){
			// FlexField- Object type
			dataStoreFFs.add(getFlexField(FlexField.SAPBW_OBJECT_TYPE, "InfoObject_TXT"));
			// FlexField- SAP BW Table (One to One Mapping)
			dataStoreFFs.add(getFlexField(FlexField.SAPBW_TABLE_NAME, table.getName())); // e.g. /BIC/T_ABC
			createFFObject(tableName, FlexFieldObject.DATASTORE, dataStoreFFs);
		}
		// code added for posatble node bug
		if(table.getTableType() == InfoObjTable.R_TABLE){
			// FlexField- Object type
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@ FlexField.SAPBW_OBJECT_TYPE JTABLE########### "+FlexField.SAPBW_OBJECT_TYPE});
			dataStoreFFs.add(getFlexField(FlexField.SAPBW_OBJECT_TYPE, "InfoObject_HIERTXT"));
			// FlexField- SAP BW Table (One to One Mapping)
			dataStoreFFs.add(getFlexField(FlexField.SAPBW_TABLE_NAME, table.getName())); // e.g. /BIC/T_ABC
			createFFObject(tableName, FlexFieldObject.DATASTORE, dataStoreFFs);
		}
		// end of code added for postbale bug
		else if(table.getTableType() == InfoObjTable.M_TABLE){
			// DataStore FlexFields
			// FlexField- Object type
			dataStoreFFs.add(getFlexField(FlexField.SAPBW_OBJECT_TYPE, "InfoObject"));
			// FlexField- M Table Name
			dataStoreFFs.add(getFlexField(FlexField.SAPBW_TABLE_NAME, table.getName()));
			createFFObject(tableName, FlexFieldObject.DATASTORE, dataStoreFFs);
		}
		else if(table.getTableType() == InfoObjTable.H_TABLE){
			if(flagChekHier){
				/*
				 * Added for the Hierarchy Table
				 */
		
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@ FlexField.SAPBW_OBJECT_TYPE ########### "+FlexField.SAPBW_OBJECT_TYPE}); // logger.log("######@@ FlexField.SAPBW_OBJECT_TYPE ########### "+FlexField.SAPBW_OBJECT_TYPE, className, OdiSAPBWLogger.FINEST);
//				 FlexField- Object type
				dataStoreFFs.add(getFlexField(FlexField.SAPBW_OBJECT_TYPE, "InfoObject_HIER"));//HIER_<>
				// FlexField- SAP BW Table (One to One Mapping)
				dataStoreFFs.add(getFlexField(FlexField.SAPBW_TABLE_NAME, table.getName())); // e.g. /BIC/T_ABC
				createFFObject(tableName, FlexFieldObject.DATASTORE, dataStoreFFs);
			}
		
		}
	
		
		// mapping between merge table field and attributes
		Hashtable fieldAttributeMap = iobj.getFieldAttributeMap();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@TEST ###########"}); // logger.log("######@@TEST ########### ", className, OdiSAPBWLogger.FINEST);
		int pos = 0;
		for(int k=0; k<cols.size(); k++){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@Lopping Columns DDDDDDDDDDDDDDDDDDDDDDDD ########### "}); // logger.log("######@@Lopping Columns DDDDDDDDDDDDDDDDDDDDDDDD ########### ", className, OdiSAPBWLogger.FINEST);
			ArrayList colFFs = new ArrayList();
			OdiSAPBWTableField col = (OdiSAPBWTableField) cols.get(k);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@  $$$$$$$$$$$- tableName -$$$$$$$$$$ ########### "+tableName}); // logger.log("######@@  $$$$$$$$$$$- tableName -$$$$$$$$$$ ########### "+tableName, className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@  $$$$$$$$$$$- col.getName() -$$$$$$$$$$ ########### "+col.getName()}); // logger.log("######@@  $$$$$$$$$$$- col.getName() -$$$$$$$$$$ ########### "+col.getName(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@  $$$$$$$$$$$-  col.getHeading() -$$$$$$$$$$ ########### "+ col.getHeading()}); // logger.log("######@@  $$$$$$$$$$$-  col.getHeading() -$$$$$$$$$$ ########### "+ col.getHeading(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@  $$$$$$$$$$$- col.getDesc() -$$$$$$$$$$ ########### "+col.getDesc()}); // logger.log("######@@  $$$$$$$$$$$- col.getDesc() -$$$$$$$$$$ ########### "+col.getDesc(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@  $$$$$$$$$$$- col.getDataType() -$$$$$$$$$$ ########### "+col.getDataType()}); // logger.log("######@@  $$$$$$$$$$$- col.getDataType() -$$$$$$$$$$ ########### "+col.getDataType(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@  $$$$$$$$$$$- tableName - col.getFieldLen() ########### "+ col.getFieldLen()}); // logger.log("######@@  $$$$$$$$$$$- tableName - col.getFieldLen() ########### "+ col.getFieldLen(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@  $$$$$$$$$$$-  col.getMandatory() -$$$$$$$$$$ ########### "+ col.getMandatory()}); // logger.log("######@@  $$$$$$$$$$$-  col.getMandatory() -$$$$$$$$$$ ########### "+ col.getMandatory(), className, OdiSAPBWLogger.FINEST);
			
			if(!(tableName.indexOf("HIER") != -1 && col.getName().trim().equalsIgnoreCase("SIGNCH"))) {//Added to remove SIGNCH col from HIER by Anzar
				//Create Column
				createColumn(tableName, 
						     col.getName(), 
						     col.getHeading(), 
						     col.getDesc(), 
						     col.getDataType(), 
						     k, 
						     col.getFieldLen(),
						     col.getDecLen(), 
						     col.getMandatory());
				
				if(col.getMandatory().equals("1")){
					//Create PK Col
					createPKCol(tableName, col.getName(), pos++);
				}
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@ Column FlexFields Check  ########### "+table.getTableType()}); // logger.log("######@@ Column FlexFields Check  ########### "+table.getTableType(), className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######@@ InfoObjTable.M_TABLE  ########### "+InfoObjTable.M_TABLE}); // logger.log("######@@ InfoObjTable.M_TABLE  ########### "+InfoObjTable.M_TABLE, className, OdiSAPBWLogger.FINEST);
				/*
				 * Column FlexFields
				 */
				if(table.getTableType() == InfoObjTable.M_TABLE){
					// Column FlexFields
					String sapTableName = col.getSapTableName();
					if(col.getSapTableType() == OdiSAPBWTableField.P_TABLE)
						// FlexField- P Table
						colFFs.add(getFlexField(FlexField.SAPBW_PTABLE_NAME, sapTableName));
					else if(col.getSapTableType() == OdiSAPBWTableField.Q_TABLE)
						// FlexField- Q Table
						colFFs.add(getFlexField(FlexField.SAPBW_QTABLE_NAME, sapTableName));
					
					String colName = col.getName();
					// Find out the Attribute matching to this column name
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"fieldAttrMapping: "+ fieldAttributeMap}); // logger.log("fieldAttrMapping: "+ fieldAttributeMap, className, OdiSAPBWLogger.DEBUG);
					InfoObjAtt ioAttr = (InfoObjAtt)fieldAttributeMap.get(colName);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Matched ioAttr: "+ ioAttr}); // logger.log("Matched ioAttr: "+ ioAttr, className, OdiSAPBWLogger.DEBUG);
					if(ioAttr != null){
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Matched Attribute: "+ ioAttr.getName()}); // logger.log("Matched Attribute: "+ ioAttr.getName(), className, OdiSAPBWLogger.DEBUG);
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"FlexField for NAV and Time Dependency"}); // logger.log("FlexField for NAV and Time Dependency", className, OdiSAPBWLogger.DEBUG);
						// FlexField- Nav Attr
						colFFs.add(getFlexField(FlexField.SAPBW_NAVIGATION_ATTRIBUTE, String.valueOf(ioAttr.getAttType())));
						// FlexField- Time Dept Attr
						colFFs.add(getFlexField(FlexField.SAPBW_TIME_DEPENDENT_ATTRIBUTE, String.valueOf(ioAttr.isTimeDependent() ? 1:0)));
					}
					
					createFFObject(colName, FlexFieldObject.COLUMN, colFFs);
				}
			}//end of condition to remove SIGNCH col from Hierarchy - by Anzar 
		}//end of for(int k=0; k<cols.size(); k++)
		if(tableName.indexOf("HIER") != -1) {//adding extra column in the last in case of Hierarchy table
			createColumn(tableName, 
				     "VERSION", 
				     "Version", 
				     "Hierarchy Version", 
				     "CHAR", 
				     cols.size(),//Column position 
				     3,
				     0, 
				     "0");
		}//end of if condition for adding extra column VERSION for Hierarchy table
	}
	
	/**
	 * Store InfoCube meta data into internal table of ODI
	 * @throws Exception
	 */
	public void storeInfoCube() throws Exception {
		try {
			
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing InfoCubes....."}); // logger.log("Storing InfoCubes.....", className, OdiSAPBWLogger.FINEST);
			// Get list of Info Cubes to reverse
			Vector infoCubes = odiCon.revInfoCubeList;
			//incase of ODI 12c clear previous ffObject data from the list before 
			//putting flexfield value for this particular object
			<% if(!isOdi10gOr11g) {%> //if ODI 12c
				if(ffObjList.size() > 0)
					ffObjList.clear();
			<%}%>
			if(infoCubes.size() == 0){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoCube List is Empty:"}); // logger.log("InfoCube List is Empty: ", className, OdiSAPBWLogger.FINEST);
				return;
			}
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of InfoCubes to be Reversed: " + infoCubes.size()}); // logger.log("Number of InfoCubes to be Reversed: " + infoCubes.size(), className, OdiSAPBWLogger.DEBUG);
			
			/*
			 * Reverse Info Cubes
			 */
			for (int i = 0; i < infoCubes.size(); i++) {
				ArrayList dataStoreFFs = new ArrayList();
				InfoCube ic = (InfoCube) infoCubes.get(i);
				// Reset the Column Position index
				infoCubeColPos = 0;
				
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Info Cube Name: " + ic.getName()}); // logger.log("Info Cube Name: " + ic.getName(), className, OdiSAPBWLogger.DEBUG);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Info Cube Name: " + ic.getName()}); // logger.log("Info Cube Name: " + ic.getName(), className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Get Key Figures: " + ic.getKeyFigures()}); // logger.log("Get Key Figures: " + ic.getKeyFigures(), className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Get Dimension: " + ic.getDimentions()}); // logger.log("Get Dimension: " + ic.getDimentions(), className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Get TIME and Unit: " + ic.getTimeUnitDim()}); // logger.log("Get TIME and Unit: " + ic.getTimeUnitDim(), className, OdiSAPBWLogger.FINEST);
				//Fetch InfoCube details if it is not available
				if(ic.getKeyFigures() == null && ic.getDimentions() == null && ic.getTimeUnitDim() == null){
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Retrieving InfoCube details.."}); // logger.log("Retrieving InfoCube details....", className, OdiSAPBWLogger.DEBUG);
					//Retrieve InfoCube details
					Vector infoCDetails = odiCon.getInfoCubeDetails(ic.getName());
					if(infoCDetails != null){
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoC Details size: "+ infoCDetails.size()}); // logger.log("InfoC Details size: "+ infoCDetails.size(), className, OdiSAPBWLogger.DEBUG);
						ic.setFactTable((String) infoCDetails.get(0));
						ic.setDimentions((ArrayList) infoCDetails.get(1));
						ic.setKeyFigures((ArrayList) infoCDetails.get(2));
						//Time and Unit Dimension
						ic.setTimeUnitDim((ArrayList) infoCDetails.get(3));
					}
				}
				
				// Put list of InfoObjects selected seperatly by user which also need to be reversed
				//internalInfoObjRevList.addAll(odiCon.revInfoObjList);
				copyRevIOListToInternalList();
				
				// Create InfoArea Sub Model
				InfoAreaNode iaNode = ic.getInfoArea();
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Info Area: "+ iaNode}); // logger.log("Info Area: "+ iaNode, className, OdiSAPBWLogger.DEBUG);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoArea: " + iaNode.getName()}); // logger.log("InfoArea: " + iaNode.getName(), className, OdiSAPBWLogger.DEBUG);
				/*
				 * TODO: need to implement following steps
				 * If NoGUI == true
				 * Fetch InfoArea hierarchy information
				 * odiCon.getInfoAreaListRFC();
				 * check odiCon.leafInfoAreaList
				 * use the InfoArea node instance present in leafInfoAreaList
				 */
				if(odiCon.NO_GUI){
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"NO GUI: Fetch InfoArea List explicitly.."}); // logger.log("NO GUI: Fetch InfoArea List explicitly...", className, OdiSAPBWLogger.DEBUG);
					// Fetch InfoArea hierarchy details
					odiCon.getInfoAreaListRFC();
					for(int j=0; j< odiCon.infoAreaLeafNodes.size(); j++){
						InfoAreaNode node = (InfoAreaNode) odiCon.infoAreaLeafNodes.get(j);
						if(node.getName().equals(iaNode.getName()))
							// Use the instance having details of its parent node
							iaNode = node;
					}
				}
				
				//We need Top to Bottom order
				Stack infoAList = new Stack();
				while (iaNode.getParent() != null) {
					infoAList.push(iaNode);
					iaNode = iaNode.getParent();
				}
				infoAList.push(iaNode);

				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoArea Hierarchy Size: "+ infoAList.size()}); // logger.log("InfoArea Hierarchy Size: "+ infoAList.size(), className, OdiSAPBWLogger.DEBUG);
				String parentSubModel = INFO_CUBE_SUB_MODEL;
				// Create InfoCube Root Sub Model
				createSubModel(parentSubModel, null);
				
				InfoAreaNode node;
				while(!infoAList.empty()){
					node = (InfoAreaNode) infoAList.pop();
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoA: "+ node.getName()}); // logger.log("InfoA: "+ node.getName(), className, OdiSAPBWLogger.DEBUG);
					// Create InfoArea/SubInfoArea Sub Model
					createSubModel(node.getName(), parentSubModel);
					parentSubModel = node.getName();
				}
				
				String tableName = ic.getName();
				if(ic.getHeading() != null)
					tableName += " "+ ic.getHeading();
					
				//Create Info Cube Master Data Store
				createTable(tableName, ic.getDesc(), parentSubModel);
				//Create PK of InfoCube
				createPK(tableName);
				
				/*
				 * DataStore FlexFields
				 */
				// FlexField- Object type
				dataStoreFFs.add(getFlexField(FlexField.SAPBW_OBJECT_TYPE, "InfoCube"));
				// FlexField- SAP BW InfoCube Fact Table
				dataStoreFFs.add(getFlexField(FlexField.SAPBW_FACT_TABLE_NAME, ic.getFactTable())); // e.g. /BIC/T_ABC
				createFFObject(tableName, FlexFieldObject.DATASTORE, dataStoreFFs);
				/*
				 * First Dimession & Characteristic, Then Request ID column ,Then Key Figure columns
				 * BUG-FIXED: 
				 */
				
                //Create Dimension & Characteristic column
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating dimension columns First...."}); // logger.log("Creating dimension columns First....", className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table Name is...."+tableName}); // logger.log("Table Name is...."+tableName, className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"et the Dimention Name...."+ic.getDimentions()}); // logger.log("Get the Dimention Name...."+ic.getDimentions(), className, OdiSAPBWLogger.FINEST);
			
				/*
				 * Added for the Hierarchy Table
				 */
				
				ArrayList arrCheckDim = new ArrayList();
				arrCheckDim = ic.getDimentions();
				if(arrCheckDim.size()>0){
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Inside the  arrCheckDim ---"}); // logger.log("Inside the  arrCheckDim --->",className, OdiSAPBWLogger.FINEST);
					for (Iterator iter = arrCheckDim.iterator(); iter.hasNext();) {
						Dimension dimCheck = (Dimension) iter.next();
						String StrDimName = (String)dimCheck.getName();
						logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"StrDimName -##????#-->"+StrDimName}); // logger.log("StrDimName -##????#-->"+StrDimName,className, OdiSAPBWLogger.FINEST);
					}
				}
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"tableName -##????#-->"+tableName}); // logger.log("tableName -##????#-->"+tableName,className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ic.getDimentions() -##????#-->"+ic.getDimentions()}); // logger.log("ic.getDimentions() -##????#-->"+ic.getDimentions(),className, OdiSAPBWLogger.FINEST);

				storeDimensions(tableName, ic.getDimentions()); // ic.getName()
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"##### tableName ### "+tableName}); // logger.log("##### tableName ### "+tableName,className, OdiSAPBWLogger.FINEST);
				
				//Create Time and Unit Dimension Columns
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"###Create Time and Unit Dimension Columns for the table....###"+tableName}); // logger.log("###Create Time and Unit Dimension Columns for the table....###"+tableName, className, OdiSAPBWLogger.FINEST);
				storeTimeUnitDim(tableName, ic.getTimeUnitDim(), ic.getDimentions());//Anzar
				
				 //Create Request ID column
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"##### Request ID column ###"}); // logger.log("##### Request ID column ### ",className, OdiSAPBWLogger.FINEST);
				storeRequestID(tableName);
				
							
				// Create Key Figure columns
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"###Creating Key Figure columns for the table....###"+tableName}); // logger.log("###Creating Key Figure columns for the table....###"+tableName, className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Get the  Key Figure columns names...."+tableName}); // logger.log("Get the  Key Figure columns names...."+tableName, className, OdiSAPBWLogger.FINEST);
				storeKeyFigures(tableName, ic.getKeyFigures()); // ic.getName()
				
				// Execute SQL Query batch
				executeSQLBatch();
				odiCon.revInfoObjList.clear();
				// Copy internal Rev List into Rev InfoObject List
				copyInternalListToRevIOList();
				//odiCon.revInfoObjList.addAll(internalInfoObjRevList);
				// Clear internal InfoObject list for this InfoCube
				internalInfoObjRevList.clear();
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"InfoCube Reverse... Done!!"}); // logger.log("InfoCube Reverse... Done!!", className, OdiSAPBWLogger.FINEST);
			}
		} catch (Exception ex) {
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Error in Reversing InfoCube: " + ex.getMessage()}); // logger.log("Error in Reversing InfoCube: " + ex.getMessage(), className, OdiSAPBWLogger.DEBUG);
			ex.printStackTrace();
			throw ex;
		} finally{
			odiCon.revInfoCubeList.clear();
			odiCon.revInfoCubeList = null;
			hsInfocubeSid.clear();
		}
	}
	
	/**
	 * Copy List of InfoObjects to be reversed into Internal Rev List
	 */
	private void copyRevIOListToInternalList(){
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Copy Rev InfoObject List into Internal List"}); // logger.log("[*] Copy Rev InfoObject List into Internal List", className, OdiSAPBWLogger.DEBUG);
		Vector list = odiCon.revInfoObjList;
		for(int i=0; i<list.size(); i++){
			InfoObjectWraper iow = new InfoObjectWraper();
			InfoObject iob = (InfoObject)list.get(i);
			iow.setIobj(iob);
			internalInfoObjRevList.add(iow);
		}
	}
	
	/**
	 * Copy Internal Rev List into List of InfoObjects to be reversed
	 */
	private void copyInternalListToRevIOList(){
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Copy Internal List into Rev InfoObject List"}); // logger.log("[*] Copy Internal List into Rev InfoObject List", className, OdiSAPBWLogger.DEBUG);
		Iterator it = internalInfoObjRevList.iterator();
		while(it.hasNext()){
			InfoObjectWraper iow = (InfoObjectWraper)it.next();
			odiCon.revInfoObjList.add(iow.getIobj());
		}
	}
	
	/**
	 * Create Time and Unit Dimension columns of the related InfoCube
	 * @param dataStoreName
	 * @param timeUnitDim
	 */
	private void storeTimeUnitDim(String dataStoreName, ArrayList timeUnitDim, ArrayList dims) throws Exception{
		if(timeUnitDim == null)
			return;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Show all time unit dimensions"+timeUnitDim+"Show all dimensions"+dims});
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Time Unit Dimension"}); // logger.log("Storing Time Unit Dimension...", className, OdiSAPBWLogger.FINEST);
		for(int i=0; i<timeUnitDim.size(); i++){
			ArrayList colFFs = new ArrayList();
			TimeUnitDimension tud = (TimeUnitDimension) timeUnitDim.get(i);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Time Dimension Name ="+ tud.getName()}); // logger.log("Time Dimension Name ="+ tud.getName(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Time Dimension Description ="+ tud.getDesc()}); // logger.log("Time Dimension Description ="+ tud.getDesc(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Time Dimension Get Heading="+ tud.getHeading()}); // logger.log("Time Dimension Get Heading="+ tud.getHeading(), className, OdiSAPBWLogger.FINEST);
			//String name = "IOPK_"+ tud.getName();
			/******** Added by Anzar ************///
			String dimNm = ""; //Getting Dimension Name
			for(int j = 0; j < dims.size(); j++){
				Dimension d = (Dimension) dims.get(j);
				ArrayList chars = d.getCharacteristics();
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{">>>>>>> storeTimeUnitDim - Characteristics size is: "+chars.size()}); // logger.log(">>>>>>> storeTimeUnitDim - Characteristics size is: "+chars.size(),className, OdiSAPBWLogger.FINEST);	
				for(int k = 0; k < chars.size(); k++){
					Characteristic c = (Characteristic) chars.get(k);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{">>>>>>> storeTimeUnitDim() - Characteristics is  #############"+c.getName()}); // logger.log(">>>>>>> storeTimeUnitDim() - Characteristics is  #############"+c.getName(),className, OdiSAPBWLogger.FINEST);	
					if(c.getName().equalsIgnoreCase(tud.getName())) {
						dimNm = d.getName();
						break;
					}
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######### Calling the createIOPKColumn Method with :##### c.getName(),c.getSidTable() ########"+c.getName()+"-"+c.getSidTable()}); // logger.log("######### Calling the createIOPKColumn Method with :##### c.getName(),c.getSidTable() ########"+c.getName()+"-"+c.getSidTable(),className, OdiSAPBWLogger.FINEST);
				}//end of inner for loop
			}//end of outer for loop
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{">>>>>>> storeTimeUnitDim() - Characteristics is  #############"+tud.getName()}); // logger.log(">>>>>>> storeTimeUnitDim() - Characteristics is  #############"+c.getName(),className, OdiSAPBWLogger.FINEST);
			String name =  "IOPK_"+dimNm+"_"+ tud.getName()+ "_PK_"+ tud.getInternalFieldName(); //Time dependent Dimension col name 
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{">>>>>>>>>>>>>>>> : storeTimeUnitDim()...Dimension name: "+name}); // logger.log(">>>>>>>>>>>>>>>> : storeTimeUnitDim()...Dimension name: "+name, className, OdiSAPBWLogger.FINEST);
logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{">>>>>>>>>>>>>>>> : Values of filed before create coloumn::dataStoreName= "+dataStoreName+"::name::="+name+"::tud.getName()::="+tud.getName()+"::tud.getDesc()::="+tud.getDesc()+"::tud.getFieldLen()::="+tud.getFieldLen()+"::tud.getDecLen()::+"+tud.getDecLen()});
			//***** END OF Added by Anzar *************
			
			createColumn(dataStoreName, 
						 name, 
						 tud.getName(),//tud.getHeading(), 
						 tud.getDesc(), 
						 tud.getDataType(), 
					     infoCubeColPos++, 
					     tud.getFieldLen(), 
					     tud.getDecLen(), 
					     "0");
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Time Unit Dimension : createColumn"}); // logger.log("Storing Time Unit Dimension : createColumn...", className, OdiSAPBWLogger.FINEST);
			// SAP BW Column Type- "KF"
			colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_TYPE, "IOPK"));
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Time Unit Dimension : colFFs.."}); // logger.log("Storing Time Unit Dimension : colFFs...", className, OdiSAPBWLogger.FINEST);
			// SAP BW Column Name- 
			colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_NAME, tud.getInternalFieldName()));
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Time Unit Dimension : colFFs2222.."}); // logger.log("Storing Time Unit Dimension : colFFs2222...", className, OdiSAPBWLogger.FINEST);
			//SAP BW SID Table
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Time Unit Dimension : FlexField for SID..."+getInfocubeSidForTimeUnit(tud.getName())}); // logger.log("Storing Time Unit Dimension : FlexField for SID..."+getInfocubeSidForTimeUnit(tud.getName()), className, OdiSAPBWLogger.FINEST);
	 	    colFFs.add(getFlexField(FlexField.SAPBW_SID_TABLE_NAME, getInfocubeSidForTimeUnit(tud.getName())));
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Time Unit Dimension : FlexField for SID"}); // logger.log("Storing Time Unit Dimension : FlexField for SID...", className, OdiSAPBWLogger.FINEST);
			createFFObject(name, FlexFieldObject.COLUMN, colFFs);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Time Unit Dimension : createFFObject"}); // logger.log("Storing Time Unit Dimension : createFFObject...", className, OdiSAPBWLogger.FINEST);
			/*
			 *   // SAP BW Column Type- "IOPK"
			 		colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_TYPE, "IOPK"));
			 	 //	SAP BW Column Name- 
			 	 	colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_NAME, col.getName()));
			 	 // SAP BW SID Table
			 	  c	olFFs.add(getFlexField(FlexField.SAPBW_SID_TABLE_NAME, sidTable));
			 */
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating Time Unit Dimension columns....Done!"}); // logger.log("Creating Time Unit Dimension columns....Done!!", className, OdiSAPBWLogger.FINEST);
	}

	 /**
	 * 
	 * @param fieldName
	 * @return Sid Table Name For Time Unit Dimension
	 */
	private String getInfocubeSidForTimeUnit(String fieldName){
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Getting Sid For Fieldname "+fieldName}); // logger.log("Getting Sid For Fieldname "+fieldName, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Getting Sid For Fieldname1111 "+hsInfocubeSid.get(fieldName)}); // logger.log("Getting Sid For Fieldname1111 "+hsInfocubeSid.get(fieldName), className, OdiSAPBWLogger.FINEST);
		if(fieldName != null && fieldName != ""){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Getting Sid Value For Fieldname"+hsInfocubeSid.get(fieldName)}); // logger.log("Getting Sid Value For Fieldname"+hsInfocubeSid.get(fieldName), className, OdiSAPBWLogger.FINEST);
			return hsInfocubeSid.get(fieldName).toString();
		}
		return "";
	}
	
	
	/**
	 * Create Key Figure columns of the related InfoCube
	 * @param dataStoreName
	 * @param keyFigures
	 */
	private void storeKeyFigures(String dataStoreName, ArrayList keyFigures) throws Exception{
		if(keyFigures == null)
			return;
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Key Figures"}); // logger.log("Storing Key Figures...", className, OdiSAPBWLogger.DEBUG);
		for(int i=0; i<keyFigures.size(); i++){
			ArrayList colFFs = new ArrayList();
			KeyFigure kf = (KeyFigure) keyFigures.get(i);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"KF Name="+ kf.getName()}); // logger.log("KF Name="+ kf.getName(), className, OdiSAPBWLogger.DEBUG);
			String name = "KF_"+ kf.getName();
			createColumn(dataStoreName, 
						 name, 
					     kf.getHeading(), 
					     kf.getDesc(), 
					     kf.getDataType(), 
					     infoCubeColPos++, 
					     kf.getFieldLen(), 
					     kf.getDecLen(), 
					     "0");
			// SAP BW Column Type- "KF"
			colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_TYPE, "KF"));
			// SAP BW Column Name- 
			colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_NAME, kf.getInternalFieldName()));
			createFFObject(name, FlexFieldObject.COLUMN, colFFs);
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating Key Figure columns....Done!!"}); // logger.log("Creating Key Figure columns....Done!!", className, OdiSAPBWLogger.DEBUG);
	}
	
	/**
	 * Store Request ID- will be used for delta extraction
	 * 
	 * @param dataStoreName
	 * @throws Exception
	 */
	private void storeRequestID(String dataStoreName) throws Exception {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing REQUEST ID.."}); // logger.log("Storing REQUEST ID... ", className, OdiSAPBWLogger.DEBUG);
		
		ArrayList colFFs = new ArrayList();
		String colName = "REQUID";
		createColumn(dataStoreName, 
				 colName, 
				 "0"+colName, 
			     "Request ID", 
			     "CHAR", 
			     infoCubeColPos++, 
			     30, 
			     0, 
			     "0");
		 // Reset the PK Col index to zero for this new InfoCube
		 //infoCPKIndex = 0;
		 
		// Add to PK Col
		createPKCol(dataStoreName, colName, infoCPKIndex++);
		
		// SAP BW Column Type- "IOPK"
		colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_TYPE, "IOPK"));
		// SAP BW Column Name- 
		colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_NAME, "REQUID"));
		// SAP BW SID Table
		colFFs.add(getFlexField(FlexField.SAPBW_SID_TABLE_NAME, "/BI0/SREQUID"));
		createFFObject(colName, FlexFieldObject.COLUMN, colFFs);
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing REQUEST ID... DONE!!"}); // logger.log("Storing REQUEST ID... DONE!!", className, OdiSAPBWLogger.DEBUG);
	}
	
	private void storeDimensions(String dataStoreName, ArrayList dims) throws Exception {
		// Add Dimension and Characteristic Columns
		// Reset the PK Col index to zero for this new InfoCube
		// infoCPKIndex = 0;
	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######### dims.size() #############"+dims.size()}); // logger.log("######### dims.size() #############"+dims.size(),className, OdiSAPBWLogger.FINEST);	
		for(int i=0; i<dims.size(); i++){
			Dimension d = (Dimension) dims.get(i);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######### Dim Name is  #############"+d.getName()}); // logger.log("######### Dim Name is  #############"+d.getName(),className, OdiSAPBWLogger.FINEST);	
			ArrayList chars = d.getCharacteristics();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######### Characteristics size is  #############"+chars.size()}); // logger.log("######### Characteristics size is  #############"+chars.size(),className, OdiSAPBWLogger.FINEST);	
			for(int j=0; j<chars.size(); j++){
				Characteristic c = (Characteristic) chars.get(j);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######### Characteristics is  #############"+c.getName()}); // logger.log("######### Characteristics is  #############"+c.getName(),className, OdiSAPBWLogger.FINEST);	
				InfoObject infoObj = new InfoObject();
				infoObj.setName(c.getName());
				infoObj.setDesc(c.getDesc());
				//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("######### Calling the createIOPKColumn Method with :##### d.getName() ########"+d.getName(),className, OdiSAPBWLogger.FINEST);
				//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("######### Calling the createIOPKColumn Method with :##### c.getSidTable() ########"+c.getSidTable(),className, OdiSAPBWLogger.FINEST);
				//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("######### Calling the createIOPKColumn Method with :##### dataStoreName ########"+dataStoreName,className, OdiSAPBWLogger.FINEST);
				//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("######### Calling the createIOPKColumn Method with :##### infoObj ########"+infoObj,className, OdiSAPBWLogger.FINEST);
				//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("######### Calling the createIOPKColumn Method with :##### c.getName() ########"+c.getName(),className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"######### Calling the createIOPKColumn Method with :##### c.getName(),c.getSidTable() ########"+c.getName()+"-"+c.getSidTable()}); // logger.log("######### Calling the createIOPKColumn Method with :##### c.getName(),c.getSidTable() ########"+c.getName()+"-"+c.getSidTable(),className, OdiSAPBWLogger.FINEST);
				createIOPKColumn(infoObj, dataStoreName, d.getName(), c.getSidTable());
				hsInfocubeSid.put(c.getName(),c.getSidTable());
			}
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of Associated InfoObjects: "+ internalInfoObjRevList.size()}); // logger.log("Number of Associated InfoObjects: "+ internalInfoObjRevList.size(), className, OdiSAPBWLogger.FINEST);
	}
	
	/**
	 * Create IOPK and FK Columns
	 * @param infoObj
	 * @param dimName
	 * @throws Exception
	 */
	private void createIOPKColumn(InfoObject infoObj, String dataStoreName, String dimName, String sidTable) throws Exception {
		
		ArrayList colFFs = new ArrayList();
		// Check if the InfoObject exists in the Internal List
		InfoObjectWraper iow = new InfoObjectWraper();
		iow.setIobj(infoObj);
		
		if(internalInfoObjRevList.contains(iow)){
			Iterator it = internalInfoObjRevList.iterator();
			while(it.hasNext()){
				InfoObjectWraper iow2 = (InfoObjectWraper) it.next();
				if(iow2.equals(iow))
					// Process object instance stored in the Internal List
					infoObj = iow2.getIobj();
			}
		}
		
		// Fetch InfoObject details if it is not available
		if(infoObj.getTables() == null){
			// Retrieve details from SAP BW/BI server
			InfoObject io = odiCon.getInfoObjectDetails(infoObj.getName());
			if(io.countTables() == 0){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Empty InfoObject: "+ infoObj.getName()}); // logger.log("Empty InfoObject: "+ infoObj.getName(), className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Don't create IOPK column for this InfoObject!!"}); // logger.log("Don't create IOPK column for this InfoObject!!", className, OdiSAPBWLogger.FINEST);
				return;
			}
			/*
			 * Check if it is an empty InfoObject- no Merge/P table
			 */
			if(io.getMergedTable() == null){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"There is no Merge Table, so no need of IOPK column!!"}); // logger.log("There is no Merge Table, so no need of IOPK column!!", className, OdiSAPBWLogger.FINEST);
				return;
			}
			
			infoObj.copyInfoObject(io);
		}
		
		//Add new InfoObject: If it is already added no action performed 
		iow.setIobj(infoObj);
		internalInfoObjRevList.add(iow);
		
		/*
		 * Add IOPK, FK columns for the InfoObject
		 */
		InfoObjTable infoTable = infoObj.getMergedTable();
			
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating RI Cols for InfoObjects "+ infoObj.getName()}); // logger.log("Creating RI Cols for InfoObjects "+ infoObj.getName(), className, OdiSAPBWLogger.FINEST);
		//Create FK referenced to this InfoObject
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating InfoCube FK."}); // logger.log("Creating InfoCube FK...", className, OdiSAPBWLogger.FINEST);
		// Referenced Table
		String referencedTable = infoObj.getName();
		if (infoObj.getHeading() != null)
			referencedTable += " " + infoObj.getHeading();
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"&&&&&&&&&&&&&&&&& infoObj.getName(): "+infoObj.getName()}); // logger.log("&&&&&&&&&&&&&&&&& infoObj.getName(): "+infoObj.getName());
		
		
			// columns of Merge Table
			ArrayList cols = infoTable.getCols();
			OdiSAPBWTableField sidKeyField = new OdiSAPBWTableField();
			sidKeyField.setName(infoObj.getSidKeyField());
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"SID Field: "+ sidKeyField.getName()}); // logger.log("SID Field: "+ sidKeyField.getName(), className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"SID Field: "+ sidKeyField.getName()}); // logger.log("Cols of Merge Table: "+ cols, className, OdiSAPBWLogger.FINEST);
			// Find out the SID Key Field column from Merge Table column list
			OdiSAPBWTableField col = null;
			if(!infoObj.getName().equalsIgnoreCase("0SOURSYSTEM")) {
			  	int index = cols.indexOf(sidKeyField);
	  			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Index of SID Field: "+ index}); // logger.log("Index of SID Field: "+ index, className, OdiSAPBWLogger.FINEST);
		  		//SID Key Field in Merge Table
			  	col = (OdiSAPBWTableField) cols.get(index);
		  } else {
  			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"0SOURSYSTEM InfoObject encountered"}); // logger.log("0SOURSYSTEM InfoObject encountered", className, OdiSAPBWLogger.FINEST);
	  		//SID Key Field in Merge Table
		  	col = new OdiSAPBWTableField();
		  	col.setName("SOURSYSTEM");
		  	col.setDesc("0SOURSYSTEM");
		  	col.setDataType("CHAR");
		  	col.setFieldLen(2);
		  	col.setDecLen(0); 
		  	col.setMandatory(true);
		  }
			
			/*
			 * 1. Create IOPK Column of InfoCube
			 * 2. Create PK Column of InfoCube
			 * 3. Create FK Column of InfoCube
			 * 4. FlexField
			 */
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating IOPK column"}); // logger.log("Creating IOPK column...", className, OdiSAPBWLogger.FINEST);
logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"infoCColName:::"+"IOPK_"+ dimName+ "_"+ infoObj.getName()+ "_PK_"+ col.getName()});
			// ADDED: "PK" prefix before InfoObject primary column
			String infoCColName = "IOPK_"+ dimName+ "_"+ infoObj.getName()+ "_PK_"+ col.getName(); 
			String heading = infoObj.getName();
			// Add PK cols of InfoObject into InfoCube data store
			createColumn(dataStoreName, 
						 infoCColName, 
						 heading, 
					     col.getDesc(), 
					     col.getDataType(), 
					     infoCubeColPos++, 
					     col.getFieldLen(),
					     col.getDecLen(), 
					     col.getMandatory()); // it will be "1"- mandatory field
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating PK for InfoCube"}); // logger.log("Creating PK for InfoCube...", className, OdiSAPBWLogger.FINEST);

			// PK Cols of InfoObjects will also be the PK of InfoCube Data Store
			createPKCol(dataStoreName, infoCColName, infoCPKIndex++);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating FK Col for InfoCube"}); // logger.log("Creating FK Col for InfoCube...", className, OdiSAPBWLogger.FINEST);


      // Do not create FK constraint for system IO
  		if(!infoObj.getName().equalsIgnoreCase("0SOURSYSTEM")) {

        // Create FK Constraint			
			  logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"inside condition to call createFK()"}); // logger.log("inside condition to call createFK() .....");
			  createFK(dataStoreName, referencedTable);
			  int pos = 0;
			  logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"infoTable.getName(): "+infoTable.getName()}); // logger.log("********>>>>>>>>>>>> infoTable.getName(): "+infoTable.getName());
			  // Create Foriegn Key Col: Link between IOPK of InfoCube and SID Key Field of InfoObject
			  createFKCol(dataStoreName, referencedTable, infoCColName, col.getName(), pos);
		  };

			/*
			 * Column FlexFields
			 */
			// SAP BW Column Type- "IOPK"
			colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_TYPE, "IOPK"));
			// SAP BW Column Name- 
		    colFFs.add(getFlexField(FlexField.SAPBW_COLUMN_NAME, col.getName()));
			// SAP BW SID Table
			colFFs.add(getFlexField(FlexField.SAPBW_SID_TABLE_NAME, sidTable));
			createFFObject(infoCColName, FlexFieldObject.COLUMN, colFFs);
					
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating RI Cols for InfoObjects "+ infoObj.getName()+"....Done!!"}); // logger.log("Creating RI Cols for InfoObjects "+ infoObj.getName()+"....Done!!", className, OdiSAPBWLogger.FINEST);
	}
	
	/**
	 * Create FlexField 
	 * 
	 * @param ffCode
	 * @param ffValue
	 * @return
	 */
	private FlexField getFlexField(String ffCode, String ffValue){
		FlexField ff = new FlexField();
		ff.setFfCode(ffCode);
		ff.setFfValue(ffValue);
		return ff;
	}
	
	/**
	 * Create FlexField object and insert it into FlexField List 
	 * 
	 * @param objName - Name of the Object containing FlexFields 
	 * @param objType - Object Type (DataStore/Column)
	 * @param ffs- List of FlexFields to store
	 * @return
	 */
	private void createFFObject(String objName, int objType, ArrayList ffs) {
		FlexFieldObject ffObj = new FlexFieldObject();
		ffObj.setObjName(objName);
		ffObj.setObjType(objType);
		ffObj.setFlexfields(ffs);
		ffObjList.add(ffObj);
	}
	
	/**
	 * Store FlexField meta data into internal table of ODI
	 * IMPORTANT: this function should be called after all meta data 
	 * insertion steps
	 * @throws Exception
	 */
	public void storeFlexFields() throws Exception {
		/*
		 * 1. Get I_Table or I_Col for every FlexFieldObject
		 * 2. Store FlexField data into SNP_FF_VALUEW
		 */
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"*********** (Storing FlexFields) ****************"}); // logger.log("*********** (Storing FlexFields) ****************", className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Number of FlexField Objects: "+ ffObjList.size()}); // logger.log("Number of FlexField Objects: "+ ffObjList.size(), className, OdiSAPBWLogger.FINEST);
		// Close all MetaData Statement instances
		closeUnUsedStmt();
		
		if(ffObjList.size() == 0)
			return;
		String dataStoreName = "";
		for(int i=0; i<ffObjList.size(); i++){
			FlexFieldObject ffObj = (FlexFieldObject) ffObjList.get(i);
		
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"DataStore- FlexField, Value of the ffObj"+ffObj}); // logger.log("DataStore- FlexField, Value of the ffObj"+ffObj, className, OdiSAPBWLogger.FINEST);

			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"DataStore- FlexFieldObject.DATASTORE"+FlexFieldObject.DATASTORE}); // logger.log("DataStore- FlexFieldObject.DATASTORE"+FlexFieldObject.DATASTORE, className, OdiSAPBWLogger.FINEST);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"DataStore- ffObj.getObjType()"+ffObj.getObjType()}); // logger.log("DataStore- ffObj.getObjType()"+ffObj.getObjType(), className, OdiSAPBWLogger.FINEST);
			
			if(ffObj.getObjType() == FlexFieldObject.DATASTORE){
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"DataStore- FlexField"}); // logger.log("DataStore- FlexField", className, OdiSAPBWLogger.FINEST);
				dataStoreName = ffObj.getObjName();//Added to get the tableName to insert data for SNP_REV_COL_FFV table				
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{">>>>> dataStoreName: "+ dataStoreName});
				
				<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
					tinterID = getTableID(ffObj.getObjName());
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing FF for Data Store: "+ ffObj.getObjName()+" Table_ID: "+ tinterID});
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing FF for DataStore: "+ ffObj.getObjName()}); // logger.log("Storing FF for DataStore: "+ ffObj.getObjName(), className, OdiSAPBWLogger.FINEST);
				
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Check for tinterID @@@@11111: "+ tinterID}); // logger.log("Check for tinterID @@@@11111: "+ tinterID, className, OdiSAPBWLogger.FINEST);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Check for ffObj.getObjID() @@@@22222: "+ ffObj.getObjID()}); // logger.log("Check for ffObj.getObjID() @@@@22222: "+ ffObj.getObjID(), className, OdiSAPBWLogger.FINEST);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Check for ffObj.getFlexfields()  @@@@33333: "+ ffObj.getFlexfields()}); // logger.log("Check for ffObj.getFlexfields()  @@@@33333: "+ ffObj.getFlexfields(), className, OdiSAPBWLogger.FINEST);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Going to call the  storeFF Method "+ ffObj.getFlexfields()}); // logger.log("Going to call the  storeFF Method "+ ffObj.getFlexfields(), className, OdiSAPBWLogger.FINEST);
					if(tinterID == 0 || tinterID < 0) {
						
						OdiSapUtil.throwODIException("Table internal ID is not available in SNP_TABLE!!!");
						//throw new Exception("Table internal ID is not available in SNP_TABLE!!!");
					}
					storeFF(tinterID, ffObj.getObjID(), ffObj.getFlexfields());
				<%}else {%>//else if ODI 12c
					storeRevTableFfv(ffObj.getObjName(), ffObj.getFlexfields());
				<%}%>
			}else if(ffObj.getObjType() == FlexFieldObject.COLUMN){
				/*
				 * IMPORTANT: make sure getTableID() has been already called
				 * to store DataStore specific flexfields. Col FlexFields
				 * should be stored only after Datastore flexfield.
				 * 
				 * This will help to reduce getTableID() call only once
				 */
				
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Column- FlexField"}); // logger.log("Column- FlexField", className, OdiSAPBWLogger.FINEST);
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"dataStoreName: "+dataStoreName});
				// Get I_Col
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing FF for Column: "+ ffObj.getObjName()}); // logger.log("Storing FF for Column: "+ ffObj.getObjName(), className, OdiSAPBWLogger.FINEST);
				
				<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
					cinterID = getColID(ffObj.getObjName(), tinterID);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{">>> Table internal ID: "+ tinterID}); // logger.log(">>> Table internal ID: "+ tinterID, className, OdiSAPBWLogger.FINEST);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{">>> column name: "+ ffObj.getObjName()}); // logger.log(">>> column name: "+ ffObj.getObjName(), className, OdiSAPBWLogger.FINEST);
					logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{">>> column internal ID: "+ cinterID}); // logger.log(">>> column internal ID: "+ cinterID, className, OdiSAPBWLogger.FINEST);
					if(cinterID == 0 || cinterID < 0) {
						
						OdiSapUtil.throwODIException("Column internal ID is not available in SNP_COL table!!!");
						//throw new Exception("Column internal ID is not available in SNP_COL table!!!");
					}
					storeFF(cinterID, ffObj.getObjID(), ffObj.getFlexfields());
				<%}else {%>//else if ODI 12c
					storeRevColFfv(dataStoreName, ffObj.getObjName(), ffObj.getFlexfields());
				<%}%>
			}
			else {
				logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Unsupported Object Type"}); // logger.log("Unsupported Object Type", className, OdiSAPBWLogger.FINEST);
			}
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"-->Execute Last Batch"}); // logger.log("-->Execute Last Batch", className, OdiSAPBWLogger.FINEST);
		//Execute SQL Batch: executing multiple SQL query to insert FlexFields
		if(flexfieldPStmt != null) {
			flexfieldPStmt.executeBatch();
			repCon.commit();
			flexfieldPStmt.close();
			flexfieldPStmt = null;
		}
		if(flexfieldRevTable != null) {
			flexfieldRevTable.executeBatch();
			repCon.commit();
			flexfieldRevTable.close();
			flexfieldRevTable = null;
		}
		if(flexfieldRevCol != null) {
			flexfieldRevCol.executeBatch();
			repCon.commit();
			flexfieldRevCol.close();
			flexfieldRevCol = null;
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing Flexfield details...(Done)!!"}); // logger.log("Storing Flexfield details...(Done)!!", className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("", className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"************************************************"}); // logger.log("************************************************", className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("", className, OdiSAPBWLogger.FINEST);
	}
	
	/**
	 * Store FlexField details 
	 * @param internalID
	 * @param objID
	 * @param ffs
	 * @throws Exception
	 */
	private void storeFF(int internalID, int objID, ArrayList ffs) throws Exception{
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"+++++++++OdiSAPBWSnpRevHandler.storeFF()++++++++++++"});
		String query;
		if(flexfieldPStmt == null){
			query = "INSERT INTO SNP_FF_VALUEW(FF_CODE, I_INSTANCE, I_OBJECTS, SHORT_TXT_VALUE) VALUES(?, ?, ?, ?)";
			flexfieldPStmt = repCon.prepareStatement(query);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"****************<    storeFF ---flexfieldPStmt  >**"});
		}
		for(int i=0; i<ffs.size(); i++){
			FlexField ff = (FlexField) ffs.get(i);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Storing FF: "+ ff.getFfCode()+ " Value="+ ff.getFfValue()});
			//Delete previous entry
			query = "DELETE FROM SNP_FF_VALUEW WHERE I_INSTANCE="+ internalID;
			Statement stmt = repCon.createStatement();
			stmt.execute(query);
			repCon.commit();
			/*Fix for Open Cursor Error: Close stmt.*/
			stmt.close();
			stmt = null;
			//Insert new values
			flexfieldPStmt.setString(1, ff.getFfCode());
			flexfieldPStmt.setInt(2, internalID);
			flexfieldPStmt.setInt(3, objID);
			flexfieldPStmt.setString(4, ff.getFfValue());
			flexfieldPStmt.addBatch();
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"----------- OdiSAPBWSnpRevHandler.storeFF() --------------"});
	}//end of storeFF() method
	
	
	/**
	 * Store data in SNP_REV_TABLE_FFV for ODI 12c
	 */
	private void storeRevTableFfv(String ObjectName, ArrayList ffs) throws Exception {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"+++++++++OdiSAPBWSnpRevHandler.storeRevTableFfv()++++++++++++"});
		String query = "";
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"**********< StoreRevTableFfv ---flexfieldRevTable >*******"+flexfieldRevTable});
		if(flexfieldRevTable == null){
			query = "INSERT INTO SNP_REV_TABLE_FFV(MOD_GUID,TABLE_NAME,FF_CODE, SHORT_TXT_VALUE) VALUES(?, ?, ?, ?)";
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"************< StoreRevTableFfv ---Query  >*********"+query});
			flexfieldRevTable = repCon.prepareStatement(query);
		}
		for(int i=0; i<ffs.size(); i++){
			FlexField ff = (FlexField) ffs.get(i);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"**********ObjectName: "+ObjectName});
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"**********ff.getFfCode(): "+ff.getFfCode()});
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"**********ff.getFfValue(): "+ff.getFfValue()});
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"----------------------------------------------"});
			//Insert new values
			<% if(!isOdi10gOr11g) {%> //if ODI 12c
				flexfieldRevTable.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>");//MOD_GUID
			<%}%>
			flexfieldRevTable.setString(2, ObjectName);//TABLE_NAME
			flexfieldRevTable.setString(3, ff.getFfCode());//FF_CODE
			flexfieldRevTable.setString(4, ff.getFfValue());//SHORT_TXT_VALUE
				
			flexfieldRevTable.addBatch();
		}//end of for loop
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"------------- OdiSAPBWSnpRevHandler.storeRevTableFfv()-------------"});
	}//end of StoreRevTableFfv() method
	
	/**
	 * Store data in SNP_REV_COL_FFV for ODI 12c
	 */
	private void storeRevColFfv(String dataStoreName, String ObjectName, ArrayList ffs) throws Exception {//SNP_REV_COL_FFV
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"+++++++++OdiSAPBWSnpRevHandler.storeRevColFfv()++++++++++++"});
		String query = "";
		if(flexfieldRevCol == null){
			query = "INSERT INTO SNP_REV_COL_FFV(MOD_GUID,TABLE_NAME, COL_NAME, FF_CODE, SHORT_TXT_VALUE) VALUES(?, ?, ?, ?, ?)";
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"StoreRevColFfv ---Query: : "+query});
			flexfieldRevCol = repCon.prepareStatement(query);
		}
		for(int i=0; i<ffs.size(); i++){
			FlexField ff = (FlexField) ffs.get(i);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"**********dataStoreName: "+dataStoreName});
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"**********ObjectName: "+ObjectName});
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"**********ff.getFfCode(): "+ff.getFfCode()});
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"**********ff.getFfValue(): "+ff.getFfValue()});
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"----------------------------------------------"});
			//Insert new values
			<% if(!isOdi10gOr11g) {%> //if ODI 12c
				flexfieldRevCol.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>");//MOD_GUID
			<%}%>
			flexfieldRevCol.setString(2, dataStoreName);//TABLE_NAME
			flexfieldRevCol.setString(3, ObjectName);//COL_NAME
			flexfieldRevCol.setString(4, ff.getFfCode());//FF_CODE
			flexfieldRevCol.setString(5, ff.getFfValue());//SHORT_TXT_VALUE
			flexfieldRevCol.addBatch();
		}//end of for loop
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"------------- OdiSAPBWSnpRevHandler.storeRevColFfv()-------------"});
	}//end of StoreRevTableFfv() method



	/**
	 * Get Table ID from SNP_Table internal ODI table
	 * @param tableName
	 * @return
	 * @throws Exception
	 */
	private int getTableID(String tableName) throws Exception{
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Calling the getTableID Method"}); // logger.log("Calling the getTableID Method ", className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table Name is :->"+tableName}); // logger.log("Table Name is :->"+tableName, className, OdiSAPBWLogger.FINEST);
		
		if(tableName.indexOf(' ') != -1)
			// tableName: Technical Name " " Short Description
			tableName = tableName.substring(0, tableName.indexOf(' '));
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table Name is :-"+tableName}); // logger.log("Table Name is :-"+tableName, className, OdiSAPBWLogger.FINEST);
		<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
		String query = "SELECT I_TABLE FROM SNP_TABLE WHERE RES_NAME='"+ tableName +"' AND I_MOD = "+ <%=odiRef.getModel("ID")%>; //Previous RES_NAME
		<%}%>
		//String query = "SELECT I_TABLE FROM SNP_TABLE WHERE RES_NAME='"+ tableName +"' AND I_MOD = "+ modelID; //Previous RES_NAME
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"QUERY IS  :->"+query}); // logger.log("QUERY IS  :->"+query, className, OdiSAPBWLogger.FINEST);
		Statement stmt = repCon.createStatement();
		ResultSet rs = stmt.executeQuery(query);
		int iTable = 0;
		if(rs.next())
			iTable = rs.getInt("I_TABLE");
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"The fetched iTable value: "+iTable}); // logger.log("The fetched iTable value: "+iTable, className, OdiSAPBWLogger.FINEST);
		/*
		 * Date: 9 Nov, 09
		 * Bug fixe for- ORA-01000: maximum open cursors exceeded
		 * - Prasanta Paul
		 */
		rs.close();
		stmt.close();
		rs = null;
		stmt = null;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"End of the ===========>>>>> getTableID Method"}); // logger.log("End of the ===========>>>>> getTableID Method ", className, OdiSAPBWLogger.FINEST);
		return iTable;
	}

		
	/**
	 * Get the Column ID from SNP_COL internal ODI table
	 * @param colName
	 * @param i_Table- table id of this column
	 * @return
	 * @throws Exception
	 */
	private int getColID(String colName, int i_Table) throws Exception {
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"getColID: colName:"+ colName+" I_Table:"+ i_Table}); // logger.log("getColID: colName:"+ colName+" I_Table:"+ i_Table, className, OdiSAPBWLogger.FINEST);
		String query = "SELECT I_COL FROM SNP_COL WHERE COL_NAME='"+ colName +"' AND I_TABLE="+ i_Table;
		Statement stmt = repCon.createStatement();
		ResultSet rs = stmt.executeQuery(query);
		int iCol = 0;
		if(rs.next())
			iCol = rs.getInt("I_COL");
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"The fetched value of iCol :"+ iCol}); // logger.log("The fetched value of iCol :"+ iCol, className, OdiSAPBWLogger.FINEST);
		/*
		 * Date: 9 Nov, 09
		 * Bug fixe for- ORA-01000: maximum open cursors exceeded
		 * - Prasanta Paul
		 */
		rs.close();
		stmt.close();
		rs = null;
		stmt = null;
		return iCol;
	}
	
	/**
	 * Execute SQL queries in Batch for efficiency and better usage of network 
	 * bandwidth.
	 * @throws Exception
	 */
	private void executeSQLBatch() throws Exception {
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Inside of the method of executeSQLBatch().."}); // logger.log("Inside of the method of executeSQLBatch()...", className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ODI->>>> subModelPStmt..."+subModelPStmt}); // logger.log("ODI->>>> subModelPStmt..."+subModelPStmt, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ODI->>>> tablePStmt..."+tablePStmt}); // logger.log("ODI->>>> tablePStmt..."+tablePStmt, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ODI->>>> colPStmt..."+colPStmt}); // logger.log("ODI->>>> colPStmt..."+colPStmt, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ODI->>>> keyPStmt..."+keyPStmt}); // logger.log("ODI->>>> keyPStmt..."+keyPStmt, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ODI->>>> keyColPStmt..."+keyColPStmt}); // logger.log("ODI->>>> keyColPStmt..."+keyColPStmt, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ODI->>>> joinPStmt..."+joinPStmt}); // logger.log("ODI->>>> joinPStmt..."+joinPStmt, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"ODI->>>> joinColPStmt..."+joinColPStmt}); // logger.log("ODI->>>> joinColPStmt..."+joinColPStmt, className, OdiSAPBWLogger.FINEST);
		
		if(subModelPStmt != null) {
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create SubModel)..."}); // logger.log("Executing Query (Create SubModel)...", className, OdiSAPBWLogger.FINEST);
			subModelPStmt.executeBatch();
			repCon.commit();
			subModelPStmt.clearBatch();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create SubModel): Done!!"}); // logger.log("Executing Query (Create SubModel): Done!!", className, OdiSAPBWLogger.FINEST);
		}
		if(tablePStmt != null){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create Table).."}); // logger.log("Executing Query (Create Table)...", className, OdiSAPBWLogger.FINEST);
			tablePStmt.executeBatch();
			repCon.commit();
			tablePStmt.clearBatch();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create Table): Done!"}); // logger.log("Executing Query (Create Table): Done!!", className, OdiSAPBWLogger.FINEST);
		}
		if(colPStmt != null){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create Col).."}); // logger.log("Executing Query (Create Col)...", className, OdiSAPBWLogger.FINEST);
			colPStmt.executeBatch();
			repCon.commit();
			colPStmt.clearBatch();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create Col): Done!"}); // logger.log("Executing Query (Create Col): Done!!", className, OdiSAPBWLogger.FINEST);
		}
		if(keyPStmt != null){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create PK)..."}); // logger.log("Executing Query (Create PK)...", className, OdiSAPBWLogger.FINEST);
			keyPStmt.executeBatch();
			repCon.commit();
			keyPStmt.clearBatch();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create PK): Done!"}); // logger.log("Executing Query (Create PK): Done!!", className, OdiSAPBWLogger.FINEST);
		}
		if(keyColPStmt != null){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create PK Col).."}); // logger.log("Executing Query (Create PK Col)...", className, OdiSAPBWLogger.FINEST);
			keyColPStmt.executeBatch();
			repCon.commit();
			keyColPStmt.clearBatch();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create PK Col): Done!"}); // logger.log("Executing Query (Create PK Col): Done!!", className, OdiSAPBWLogger.FINEST);
		}
		if(joinPStmt != null){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create FK)."}); // logger.log("Executing Query (Create FK)...", className, OdiSAPBWLogger.FINEST);
			joinPStmt.executeBatch();
			repCon.commit();
			joinPStmt.clearBatch();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create FK): Done!"}); // logger.log("Executing Query (Create FK): Done!!", className, OdiSAPBWLogger.FINEST);
		}
		if(joinColPStmt != null){
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create FK Col)"}); // logger.log("Executing Query (Create FK Col)...", className, OdiSAPBWLogger.FINEST);
			joinColPStmt.executeBatch();
			repCon.commit();
			joinColPStmt.clearBatch();
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Executing Query (Create FK Col): Done!"}); // logger.log("Executing Query (Create FK Col): Done!!", className, OdiSAPBWLogger.FINEST);
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"END END of the method of executeSQLBatch()."}); // logger.log("END END of the method of executeSQLBatch()...", className, OdiSAPBWLogger.FINEST);
	}
	
	private void closeUnUsedStmt() throws Exception {
		// Sub Model
		if(subModelPStmt != null){
			subModelPStmt.close();
			subModelPStmt = null;
		}
		// Table
		if(tablePStmt != null){
			tablePStmt.close();
			tablePStmt = null;
		}
		// Col
		if(colPStmt != null){
			colPStmt.close();
			colPStmt = null;
		}
		
		// PK
		if(keyPStmt != null){
			keyPStmt.close();
			keyPStmt = null;
		}
		// PK Col
		if(keyColPStmt != null){
			keyColPStmt.close();
			keyColPStmt = null;
		}
		// Join 
		if(joinPStmt != null){
			joinPStmt.close();
			joinPStmt = null;
		}
		// Join Col
		if(joinColPStmt != null){
			joinColPStmt.close();
			joinColPStmt = null;
		}
	}
	/**
	 * Create a sub model. We are assuming unique sub model name which is also
	 * used as Sub Model code. 
	 * 
	 * @param name- Sub Model name & code
	 * @return
	 */
	private void createSubModel(String name, String parent) throws Exception {
		/*
		 * Check whether this Sub Model details have already been 
		 * inserted into SNP_REV_SUB_MODEL table
		 */
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating Sub Model (Add to SQL Batch).."}); // logger.log("Creating Sub Model (Add to SQL Batch)...", className, OdiSAPBWLogger.FINEST);
		if(localSubModelCache.contains(name))
			return;
		localSubModelCache.add(name);
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"createSubModel Name ..."+name}); // logger.log("createSubModel Name ..."+name, className, OdiSAPBWLogger.FINEST);
		if(subModelPStmt == null){
			<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
				String query = "INSERT INTO SNP_REV_SUB_MODEL (I_MOD, SMOD_CODE, SMOD_NAME, SMOD_PARENT_CODE, IND_INTEGRATION,  REV_APPY_PATTERN) values (?, ?,?, ?, '0', '0')";
			<%} else {/* Code for ODI 12c and later */ %>
				String query = "INSERT INTO SNP_REV_SUB_MODEL (MOD_GUID, SMOD_CODE, SMOD_NAME, SMOD_PARENT_CODE, IND_INTEGRATION,  REV_APPY_PATTERN) values (?, ?,?, ?, '0', '0')";
			<%}%>
		//	String query = "INSERT INTO SNP_REV_SUB_MODEL (I_MOD, SMOD_CODE, SMOD_NAME, SMOD_PARENT_CODE, IND_INTEGRATION,  REV_APPY_PATTERN) values (?, ?,?, ?, '0', '0')";
			//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<   createSubModel ---Query  >********************************"+query, className, OdiSAPBWLogger.FINEST);
			subModelPStmt = repCon.prepareStatement(query);
			//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<   subModelPStmt ---Query  >********************************"+subModelPStmt, className, OdiSAPBWLogger.FINEST);
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"createSubModel MODEL ID  ..."+modelID}); // logger.log("createSubModel MODEL ID  ..."+modelID, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"createSubModel name   ..."+name}); // logger.log("createSubModel name   ..."+name, className, OdiSAPBWLogger.FINEST);
		// Set values
		<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
			subModelPStmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
		<%}else { /*if ODI 12C*/%>
			subModelPStmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
		<%}%>

		subModelPStmt.setString(2, name); // Sub Model Code
		subModelPStmt.setString(3, name); // Sub Model Description
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"createSubModel name 111111111111"}); // logger.log("createSubModel name 111111111111  ...", className, OdiSAPBWLogger.FINEST);
		if(parent != null)
			subModelPStmt.setString(4, parent);
		else
			subModelPStmt.setNull(4, java.sql.Types.VARCHAR);
		subModelPStmt.addBatch();
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"createSubModel name 111111111111"}); // logger.log("createSubModel name 111111111111  ...", className, OdiSAPBWLogger.FINEST);
	}
	
	/**
	 * Create Data Store
	 * 
	 * @param tableName
	 * @param tableDesc
	 * @param subModelCode
	 * @throws Exception
	 */
	private void createTable(String tableName,
							 String tableDesc, 
							 String subModelCode) throws Exception {
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating Table (Add to SQL Batch)"}); // logger.log("Creating Table (Add to SQL Batch)...", className, OdiSAPBWLogger.DEBUG);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"tableName..."+tableName}); // logger.log("tableName..."+tableName, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"tableDesc..."+tableDesc}); // logger.log("tableDesc..."+tableDesc, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"subModelCode..."+subModelCode}); // logger.log("subModelCode..."+subModelCode, className, OdiSAPBWLogger.FINEST);
		
		if(tablePStmt == null){
			<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
            	String query = "INSERT INTO SNP_REV_TABLE (I_MOD, TABLE_NAME, RES_NAME, TABLE_ALIAS, TABLE_TYPE, TABLE_DESC, SMOD_CODE, R_COUNT, IND_SHOW) values (?,?,?,?, 'T', ?, ?, 1, '1')";
            <%} else {/* Code for ODI 12c and later */ %>
            	String query = "INSERT INTO SNP_REV_TABLE (MOD_GUID, TABLE_NAME, RES_NAME, TABLE_ALIAS, TABLE_TYPE, TABLE_DESC, SMOD_CODE, R_COUNT, IND_SHOW) values (?,?,?,?, 'T', ?, ?, 1, '1')";
            <%}%>
		//	String query = "INSERT INTO SNP_REV_TABLE (I_MOD, TABLE_NAME, RES_NAME, TABLE_ALIAS, TABLE_TYPE, TABLE_DESC, SMOD_CODE, R_COUNT, IND_SHOW) values (?,?,?,?, 'T', ?, ?, 1, '1')";
		//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    Create Table ---Query  >********************************"+query, className, OdiSAPBWLogger.FINEST);
			tablePStmt = repCon.prepareStatement(query);
			logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"tablePStmt..."+tablePStmt});
		//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    Create Table ---tablePStmt  >***************************11*****"+tablePStmt, className, OdiSAPBWLogger.FINEST);
		}

		// Set values
	//	tablePStmt.setInt(1, modelID); // Model ID
		<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
        	tablePStmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
        <%}else { /*if ODI 12C*/%>
         	tablePStmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
         <%}%>
		tablePStmt.setString(2, tableName); // Table Name: Technical Name ' ' short description
		String techName = tableName;
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"techName...''''"+techName});
		if(techName.indexOf(' ') != -1)
			techName = techName.substring(0, techName.indexOf(' '));
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"techName... index is !=-1''''"+techName});
		
		tablePStmt.setString(3, techName); // Res Name: Technical Name
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"techName... setstring''''"+tablePStmt.setString(3, techName)});
		tablePStmt.setString(4, techName); // Table Alias: Technical Name
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"techName... setstring 4''''"+tablePStmt.setString(4, techName)});
		if(tableDesc.length() > 250)
			tableDesc = tableDesc.substring(0, 249);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"tableDesc..''''"+tableDesc});
		tablePStmt.setString(5, tableDesc); // Table Description
		tablePStmt.setString(6, subModelCode);// Code of the Sub Model it belongs to
		tablePStmt.addBatch();
	}
	
	/**
	 * Create Column
	 * 
	 * @param tableName
	 * @param colName
	 * @param colHeading
	 * @param colDesc
	 * @param colDataType
	 * @param colPos
	 * @param colLen
	 * @param colMan
	 * @throws Exception
	 */
	private void createColumn(String tableName, 
			                 String colName, 
			                 String colHeading, 
			                 String colDesc,
			                 String colDataType,
			                 int colPos,
			                 int colLen,
			                 int decLen,
			                 String colMan) throws Exception {

		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating Column (Add to SQL Batch).."}); // logger.log("Creating Column (Add to SQL Batch)...", className, OdiSAPBWLogger.DEBUG);
		if(colPStmt == null){
			<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
            	String query = "INSERT INTO SNP_REV_COL(I_MOD,TABLE_NAME,COL_NAME,COL_HEADING,COL_DESC,DT_DRIVER,POS,LONGC,SCALEC,BYTES,COL_MANDATORY,CHECK_FLOW,CHECK_STAT) values (?,?,?,?,?,?,?,?,?,?,?,?,?)";
            <%} else {/* Code for ODI 12c and later */ %>
            	String query = "INSERT INTO SNP_REV_COL(MOD_GUID,TABLE_NAME,COL_NAME,COL_HEADING,COL_DESC,DT_DRIVER,POS,LONGC,SCALEC,BYTES,COL_MANDATORY,CHECK_FLOW,CHECK_STAT) values (?,?,?,?,?,?,?,?,?,?,?,?,?)";
            <%}%>
		//	String query = "INSERT INTO SNP_REV_COL(I_MOD,TABLE_NAME,COL_NAME,COL_HEADING,COL_DESC,DT_DRIVER,POS,LONGC,SCALEC,BYTES,COL_MANDATORY,CHECK_FLOW,CHECK_STAT) values (?,?,?,?,?,?,?,?,?,?,?,?,?)";
		//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    Create Column ---Query  >********************************"+query, className, OdiSAPBWLogger.FINEST);
			colPStmt = repCon.prepareStatement(query);
		//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    Create Column ---colPStmt  >********************************"+colPStmt, className, OdiSAPBWLogger.FINEST);
		}
		
        // Set values
		<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
         	colPStmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
         <%}else { /*if ODI 12C*/%>
         	colPStmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
         <%}%>
		colPStmt.setString(2, tableName); //Table Name
		colPStmt.setString(3, colName); //Col Name
		colPStmt.setString(4, colHeading); // Col Heading (35 Char)
		colPStmt.setString(5, colDesc); //Col Desc
		colPStmt.setString(6, colDataType); // Col Data Type
		colPStmt.setInt(7, colPos); //Col Pos
		colPStmt.setInt(8, colLen); //Col Len
		colPStmt.setInt(9, decLen); //SCALEC
		colPStmt.setInt(10, 0); //BYTES
		colPStmt.setString(11, colMan);//COL_MANDATORY- "0" or "1"
		colPStmt.setString(12, "1"); //CHECK_FLOW
		colPStmt.setString(13, "1"); //CHECK_STAT
		colPStmt.addBatch();
	}
	
	/**
	 * Create PK entry to map for which table this Primary Key will be used
	 * @param tableName
	 * @throws Exception
	 */
	private void createPK(String tableName) throws Exception {
		
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating PK (Add to SQL Batch).."}); // logger.log("Creating PK (Add to SQL Batch)...", className, OdiSAPBWLogger.DEBUG);
		if(keyPStmt == null){
			<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
            	String query = "INSERT INTO SNP_REV_KEY(I_MOD, TABLE_NAME, KEY_NAME, CONS_TYPE, IND_ACTIVE, CHECK_FLOW, CHECK_STAT) values (?, ?,?,'PK', '1','1','1')";
            <%} else {/* Code for ODI 12c and later */ %>
            	String query = "INSERT INTO SNP_REV_KEY(MOD_GUID, TABLE_NAME, KEY_NAME, CONS_TYPE, IND_ACTIVE, CHECK_FLOW, CHECK_STAT) values (?, ?,?,'PK', '1','1','1')";
            <%}%>
		//	String query = "INSERT INTO SNP_REV_KEY(I_MOD, TABLE_NAME, KEY_NAME, CONS_TYPE, IND_ACTIVE, CHECK_FLOW, CHECK_STAT) values (?, ?,?,'PK', '1','1','1')";
			//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    create PK  ---Query  >********************************"+query, className, OdiSAPBWLogger.FINEST);
			keyPStmt = repCon.prepareStatement(query);
			//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    create PK  ---keyPStmt  >********************************"+keyPStmt, className, OdiSAPBWLogger.FINEST);
		}
		// Set values
		<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
			keyPStmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
		<%}else { /*if ODI 12C*/%>
			keyPStmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
		<%}%>
		keyPStmt.setString(2, tableName); //Table Name
		String pkName = "PK_"+ tableName;
		if(pkName.indexOf(' ') != -1)
			pkName = pkName.substring(0, pkName.indexOf(' '));
		keyPStmt.setString(3, pkName); //Unique Key Name- prefixed with "PK_"
		keyPStmt.addBatch();
	}
	
	/**
	 * Set details of the primary key
	 * @param tableName
	 * @param colName
	 * @param colPos
	 * @throws Exception
	 */
	private void createPKCol(String tableName, String colName, int colPos) throws Exception {

		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating PK Col (Add to SQL Batch)."}); // logger.log("Creating PK Col (Add to SQL Batch)...", className, OdiSAPBWLogger.DEBUG);
		if(keyColPStmt == null){
			<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
            	String query = "INSERT INTO SNP_REV_KEY_COL(I_MOD, TABLE_NAME, KEY_NAME, COL_NAME, POS) values (?,?,?,?,?)";
            <%} else {/* Code for ODI 12c and later */ %>
            	String query = "INSERT INTO SNP_REV_KEY_COL(MOD_GUID, TABLE_NAME, KEY_NAME, COL_NAME, POS) values (?,?,?,?,?)";
            <%}%>
		//	String query = "INSERT INTO SNP_REV_KEY_COL(I_MOD, TABLE_NAME, KEY_NAME, COL_NAME, POS) values (?,?,?,?,?)";
			//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    create PK Column ---Query  >********************************"+query, className, OdiSAPBWLogger.FINEST);
			keyColPStmt = repCon.prepareStatement(query);
			//logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    create PK Column ---keyColPStmt  >********************************"+keyColPStmt, className, OdiSAPBWLogger.FINEST);
		}
		
		// Set values
		<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
			keyColPStmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
		<%}else { /*if ODI 12C*/%>
			keyColPStmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
		<%}%>
		keyColPStmt.setString(2, tableName); //Table Name
		String pkName = "PK_"+ tableName;
		if(pkName.indexOf(' ') != -1)
			pkName = pkName.substring(0, pkName.indexOf(' '));
		keyColPStmt.setString(3, pkName); //Unique Key Name- prefixed with "PK_"
		keyColPStmt.setString(4, colName);
		keyColPStmt.setInt(5, colPos);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Table Name: "+ tableName}); // logger.log("Table Name: "+ tableName, className, OdiSAPBWLogger.DEBUG);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"PK Name: "+ "PK_"+ tableName}); // logger.log("PK Name: "+ "PK_"+ tableName, className, OdiSAPBWLogger.DEBUG);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Column Name: "+ colName}); // logger.log(" Column Name: "+ colName, className, OdiSAPBWLogger.DEBUG);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Column Pos: "+ colPos}); // logger.log("Column Pos: "+ colPos, className, OdiSAPBWLogger.DEBUG);
		keyColPStmt.addBatch();
	}
	
	/**
	 * Referenced Table- InfoObject Data Store
	 * Referencing Table- InfoCube Data Store
	 * name: "FK_<InfoCube>_<InfoObject>"
	 * @param referencingTable
	 * @param referencedTable
	 * @throws Exception
	 */
	private void createFK(String referencingTable, String referencedTable) throws Exception {

		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating FK (Add to SQL Batch).."}); // logger.log("Creating FK (Add to SQL Batch)...", className, OdiSAPBWLogger.FINEST);
		if(joinPStmt == null){
			<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
            	String query = "INSERT INTO SNP_REV_JOIN(I_MOD, FK_NAME, TABLE_NAME, FK_TYPE, PK_CATALOG, PK_SCHEMA, PK_TABLE_NAME, CHECK_STAT, CHECK_FLOW, IND_ACTIVE) values (?,?,?,'D','','',?,'1','1','0')";
            <%} else {/* Code for ODI 12c and later */ %>
            	String query = "INSERT INTO SNP_REV_JOIN(MOD_GUID, FK_NAME, TABLE_NAME, FK_TYPE, PK_CATALOG, PK_SCHEMA, PK_TABLE_NAME, CHECK_STAT, CHECK_FLOW, IND_ACTIVE) values (?,?,?,'D','','',?,'1','1','0')";
            <%}%>
		//  String query = "INSERT INTO SNP_REV_JOIN(I_MOD, FK_NAME, TABLE_NAME, FK_TYPE, PK_CATALOG, PK_SCHEMA, PK_TABLE_NAME, CHECK_STAT, CHECK_FLOW, IND_ACTIVE) values (?,?,?,'D','','',?,'1','1','0')";
		//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    create FK ---Query  >********************************"+query, className, OdiSAPBWLogger.FINEST);
			joinPStmt = repCon.prepareStatement(query);
		//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    create FK ---joinPStmt  >********************************"+joinPStmt, className, OdiSAPBWLogger.FINEST);
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Setting the Values of createFK Method"}); // logger.log("Setting the Values of createFK Method ...", className, OdiSAPBWLogger.FINEST);
		//Set Values
		<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
			joinPStmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
		<%}else { /*if ODI 12C*/%>
			joinPStmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
		<%}%>
		
		String fkName = "FK_";
		fkName += referencingTable;
		if(fkName.indexOf(' ') != -1)
			fkName = fkName.substring(0, fkName.indexOf(' ')).trim();
		fkName += "_"+ referencedTable;
		if(fkName.indexOf(' ') != -1)
			fkName = fkName.substring(0, fkName.indexOf(' ')).trim();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"K Name: "+ fkName}); // logger.log("FK Name: "+ fkName, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"referencingTable: "+ referencingTable}); // logger.log("referencingTable: "+ referencingTable, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"referencedTable: "+ referencedTable}); // logger.log("referencedTable: "+ referencedTable, className, OdiSAPBWLogger.FINEST);

		joinPStmt.setString(2, fkName); //FK Name
		joinPStmt.setString(3, referencingTable); // Referencing Table
		joinPStmt.setString(4, referencedTable); // Referenced Table
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Referencing Table: "+ referencingTable}); // logger.log("Referencing Table: "+ referencingTable, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Referenced Table: "+ referencedTable}); // logger.log("Referenced Table: "+ referencedTable, className, OdiSAPBWLogger.FINEST);
		
		joinPStmt.addBatch();
	//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("End of the method createFK : ", className, OdiSAPBWLogger.FINEST);
	}
	
	/**
	 * Referenced Table- InfoObject Data Store
	 * Referencing Table- InfoCube Data Store
	 * name: "FK_<InfoCube>_<InfoObject>"
	 * @param referencingTable
	 * @param referencedTable
	 * @param fkColName- Referencing Column
	 * @param pkColName- Referenced Column
	 * @param colPos
	 * @throws Exception
	 */
	private void createFKCol(String referencingTable, String referencedTable, String fkColName, String pkColName, int colPos) throws Exception {

		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Creating FK Col (Add to SQL Batch)"}); // logger.log("Creating FK Col (Add to SQL Batch)...", className, OdiSAPBWLogger.FINEST);
		if(joinColPStmt == null){
			<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
            	String query = "INSERT INTO SNP_REV_JOIN_COL(I_MOD, FK_NAME, FK_COL_NAME, FK_TABLE_NAME, PK_COL_NAME, PK_TABLE_NAME, POS) values (?,?,?,?,?,?,?)";
            <%} else {/* Code for ODI 12c and later */ %>
            	String query = "INSERT INTO SNP_REV_JOIN_COL(MOD_GUID, FK_NAME, FK_COL_NAME, FK_TABLE_NAME, PK_COL_NAME, PK_TABLE_NAME, POS) values (?,?,?,?,?,?,?)";
            <%}%>
		//	String query = "INSERT INTO SNP_REV_JOIN_COL(I_MOD, FK_NAME, FK_COL_NAME, FK_TABLE_NAME, PK_COL_NAME, PK_TABLE_NAME, POS) values (?,?,?,?,?,?,?)";
		//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    create FKCol ---Query  >********************************"+query, className, OdiSAPBWLogger.FINEST);
			joinColPStmt = repCon.prepareStatement(query);
		//	logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{""}); // logger.log("****************<    create FKCol ---joinColPStmt  >********************************"+joinColPStmt, className, OdiSAPBWLogger.FINEST);
		}
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"modelID "+ modelID}); // logger.log("modelID "+ modelID, className, OdiSAPBWLogger.FINEST);
		// Set Values
		<% if(isOdi10gOr11g) {%> //if ODI 10g/11g
			joinColPStmt.setInt(1, <%=odiRef.getModel("ID")%>); //I_MOD
		<%}else { /*if ODI 12C*/%>
			joinColPStmt.setString(1, "<%=odiRef.getModel("GLOBAL_ID")%>"); //MOD_GUID
		<%}%>
		String fkName = "FK_";
		fkName += referencingTable;
		if(fkName.indexOf(' ') != -1)
			fkName = fkName.substring(0, fkName.indexOf(' ')).trim();
		fkName += "_"+ referencedTable;
		if(fkName.indexOf(' ') != -1)
			fkName = fkName.substring(0, fkName.indexOf(' ')).trim();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"FK Name: "+ fkName}); // logger.log("FK Name: "+ fkName, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"fkColName: "+ fkColName}); // logger.log("fkColName: "+ fkColName, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"referencingTable: "+ referencingTable}); // logger.log("referencingTable: "+ referencingTable, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"pkColName: "+ pkColName}); // logger.log("pkColName: "+ pkColName, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"referencedTable: "+ referencedTable}); // logger.log("referencedTable: "+ referencedTable, className, OdiSAPBWLogger.FINEST);
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"colPos: "+ colPos}); // logger.log("colPos: "+ colPos, className, OdiSAPBWLogger.FINEST);
			
		
		joinColPStmt.setString(2, fkName); //FK Name
		//joinColPStmt.setString(2, "FK_"+ referencingTable + "_"+ referencedTable); //FK Name
		joinColPStmt.setString(3, fkColName); //FK Col Name
		joinColPStmt.setString(4, referencingTable); //Referencing Table
		joinColPStmt.setString(5, pkColName); // PK Col Name
		joinColPStmt.setString(6, referencedTable); // Referenced Table 
		joinColPStmt.setInt(7, colPos); // Col Position
		
		joinColPStmt.addBatch();
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"End of the method createFKCol"}); // logger.log("End of the method createFKCol : ", className, OdiSAPBWLogger.FINEST);
	}
	public void closeOracleConnection()
	{
	    logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Inside closeOracleConnection"});
	    <% if(isOdi10gOr11g) {%>
			repCon.close();
		<%}%>
		logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"Connection Info After Closing is:"+repCon.isClosed()});
	}
}

//End of OdiSAPBWSnpRevHandler.java]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6353]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[dd3cc37e-3c57-4171-a1af-53b6fd280a22]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3496]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[120]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install BASE PROGRAM]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f8dce6dc-7c4b-4773-8cbd-ca962768fdaa]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6353]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_CREATE_DEV_CLASS" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT  ZODI_CREATE_DEV_CLASS.
TABLES : tdevc.
CONSTANTS : c_devclass  LIKE tadir-devclass
VALUE '<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>',
c_shorttext LIKE trdevclass-ctext   VALUE
'Package for ODI-BW ',
c_reqtext  LIKE e07t-as4text   VALUE
'ODI SAP DEVELOPMENT OBJECTS',
c_msgclass LIKE rsdag-arbgb VALUE
'ZODIBW_MSGCL',
c_msgtext LIKE t100a-stext VALUE
'Message class for ODI-BW (Testing)',
c_fungrp LIKE rsnewleng-area VALUE
'<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>',
c_fgrptext LIKE tftit-stext VALUE
'Func Group for ODI-BW (Testing)' ,
c_task  TYPE e070-trfunction VALUE 'S'.
DATA : trans_req_no LIKE e070-trkorr,
obj_name     LIKE  tadir-obj_name,
es_tadir     LIKE  tadir,
e071         TYPE STANDARD TABLE OF e071,
wa_e071      TYPE  e071,
et_log       TYPE  sprot_u_tab,
task_number         TYPE e070-trkorr.
DATA:   it_bdcdata  TYPE STANDARD TABLE
OF  bdcdata    WITH HEADER LINE.
DATA:   it_messtab  TYPE STANDARD TABLE
OF  bdcmsgcoll WITH HEADER LINE.
DATA:  wa_headerstruct LIKE dd02v.
DATA : BEGIN OF struct OCCURS 0,
tabname TYPE tabname,
END OF struct.
DATA : wa_struct LIKE LINE OF struct.
DATA  t_structure TYPE STANDARD TABLE
OF dd03p WITH HEADER LINE.
DATA t_version TYPE cvers.
DATA ls_devclass TYPE trdevclass.
DATA lv_something_changed LIKE trpari-flag.
DATA lv_request LIKE e070-trkorr.
DATA:exception_list	TYPE TABLE OF rsexc,
export_parameter  TYPE TABLE OF rsexp,
import_parameter  TYPE TABLE OF rsimp,
parameter_docu  TYPE TABLE OF rsfdo,
tables_parameter  TYPE TABLE OF rstbl,
changing_parameter  TYPE TABLE OF rscha.
DATA : wa_exp TYPE rsexp,
wa_imp TYPE rsimp,
wa_tab TYPE rstbl,
wa_tdevc TYPE  tdevc.
DATA: cg_rep_tab  LIKE abaptext OCCURS 20.
DATA : include_name TYPE rs38l-include.
DATA: cg_tabix LIKE sy-tabix.

DATA: ls_ret TYPE  BAPIRET2,
      ls_task TYPE BAPISCTS07,
      lt_task TYPE TABLE OF BAPISCTS07,
      ls_author TYPE BAPISCTS12,
    lt_author TYPE TABLE OF BAPISCTS12,
       ERRORMESSAGE  type SYMSGV.
	   
DATA: TRAN_LAYER type BAPISCTS02.

*Developer Check
 CALL FUNCTION 'DEVELOPER_CHECK'
 EXPORTING
   SUPPRESS_DIALOG       = 'X'
 EXCEPTIONS
   ACCESS_DENIED         = 1
   DISPLAY_ONLY          = 2
   OTHERS                = 3.
IF sy-subrc <> 0. 
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
ENDIF.

PERFORM create_transport_req_no.
PERFORM create_dev_class.
PERFORM create_message_class.
PERFORM structure.
*&---------------------------------------------------------------------*
*&      Form  create_transport_req_no
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM create_transport_req_no.
  CLEAR trans_req_no. 

ls_task-type = 'K'.
ls_task-author = sy-uname.
APPEND ls_task TO lt_task.

ls_author-task_owner = sy-uname.
APPEND ls_author TO lt_author.

tran_layer-LAYER_SET = 'X'.
tran_layer-LAYER = '<?=sapTransportLayerName?>'.

 CALL FUNCTION 'BAPI_CTREQUEST_CREATE'
   EXPORTING
    REQUEST_TYPE       = 'K'
    AUTHOR             = sy-uname
    TEXT               = c_reqtext
	TRANSLAYER         = tran_layer
  IMPORTING
    REQUESTID          = trans_req_no
    RETURN             = ls_ret
   TABLES
     AUTHORLIST         = lt_author
     TASK_LIST          = lt_task.
  IF sy-subrc <> 0.
   ERRORMESSAGE = ls_ret-message.
   WRITE: ERRORMESSAGE.
   EXIT.
  ELSE.
   READ TABLE lt_task INTO ls_task INDEX 2.
   IF sy-subrc = 0.
    task_number = ls_task-taskid.
   ENDIF.
  ENDIF.
ENDFORM.
FORM create_dev_class .
  ls_devclass-devclass  =  c_devclass.
  ls_devclass-ctext     =  c_shorttext.
  ls_devclass-as4user   =  sy-uname.
  ls_devclass-pdevclass = '<?=sapTransportLayerName?>'.
  ls_devclass-dlvunit   = 'HOME'.
  CALL FUNCTION 'PA_REPLACE_MODIFY_DEVCLASS'
    EXPORTING
      iv_action            = 'CREA'
      iv_dialog            = ''
      is_devclass          = ls_devclass
      iv_request           = trans_req_no
    IMPORTING
      es_devclass          = ls_devclass
      ev_something_changed = lv_something_changed
      ev_request           = lv_request.
  IF sy-subrc <> 0.
    EXIT.
  ENDIF.
ENDFORM.
FORM create_message_class.
  CLEAR it_bdcdata[].
  PERFORM bdc_dynpro      USING
  'SAPLWBMESSAGES'     '0100'.
  PERFORM bdc_field       USING
  'BDC_CURSOR'         'RSDAG-ARBGB'.
  PERFORM bdc_field       USING
  'BDC_OKCODE'         '=WB_CREATE'.
  PERFORM bdc_field       USING
  'RSDAG-ARBGB'        c_msgclass.
  PERFORM bdc_field       USING
  'RSDAG-MSGFLAG'      'X'.
  PERFORM bdc_dynpro      USING
  'SAPLWBMESSAGES'     '1000'.
  PERFORM bdc_field       USING
  'BDC_OKCODE'         '=WB_SAVE'.
  PERFORM bdc_field       USING
  'BDC_CURSOR'         'T100A-STEXT'.
  PERFORM bdc_field       USING
  'T100A-RESPUSER'     sy-uname.
  PERFORM bdc_field       USING
  'T100A-STEXT'        c_msgtext.
  PERFORM bdc_dynpro      USING
  'SAPLSTRD'           '0100'.
  PERFORM bdc_field       USING
  'BDC_CURSOR'  'KO007-L_DEVCLASS'.
  PERFORM bdc_field       USING
  'BDC_OKCODE'         '=ADD'.
  PERFORM bdc_field       USING
  'KO007-L_DEVCLASS'   c_devclass.
  PERFORM bdc_field       USING
  'KO007-L_AUTHOR'     sy-uname.
  PERFORM bdc_dynpro      USING
  'SAPLSTRD'           '0300'.
  PERFORM bdc_field       USING
  'BDC_CURSOR'         'KO008-TRKORR'.
  PERFORM bdc_field       USING
  'BDC_OKCODE'         '=LOCK'.
  PERFORM bdc_field       USING
  'KO008-TRKORR'       trans_req_no.
  PERFORM bdc_dynpro      USING
  'SAPLWBMESSAGES'     '1000'.
  PERFORM bdc_field       USING
  'BDC_OKCODE'         '=MESS'.
  PERFORM bdc_field       USING
  'BDC_CURSOR'         'T100A-RESPUSER'.
  PERFORM bdc_field       USING
  'T100A-RESPUSER'     sy-uname.
  PERFORM bdc_field       USING
  'T100A-STEXT'   c_msgtext.
  PERFORM bdc_dynpro      USING
  'SAPLWBMESSAGES' '1000'.
  PERFORM bdc_field       USING
  'BDC_OKCODE'     '=ALMA'.
  PERFORM bdc_field       USING
  'BDC_CURSOR'         'T100-TEXT(01)'.
  PERFORM bdc_field       USING
  'NUMMER' '000'.
  PERFORM bdc_dynpro      USING
  'SAPLWBMESSAGES' '1000'.
  PERFORM bdc_field       USING
  'BDC_OKCODE'        '=WB_EDIT'.
  PERFORM bdc_field       USING
  'BDC_CURSOR'  'NUMMER'.
  PERFORM bdc_field       USING
  'NUMMER' '000'.
  PERFORM bdc_dynpro      USING
  'SAPLSPO1' '0100'.
  PERFORM bdc_field       USING
  'BDC_OKCODE' '=YES'.
  PERFORM bdc_dynpro      USING
  'SAPLWBMESSAGES' '1000'.
  PERFORM bdc_field       USING
  'BDC_OKCODE' '=ENTR'.
  PERFORM bdc_field       USING
  'BDC_CURSOR' 'T100-TEXT(04)'.
  PERFORM bdc_field       USING
  'NUMMER' '000'.
  PERFORM bdc_field       USING
  'T100-TEXT(01)' 'No Infoareas are available!'.
  PERFORM bdc_field       USING
  'T100-TEXT(02)'
  'No data Targets available in this Infoarea!'.
  PERFORM bdc_field       USING
  'T100-TEXT(03)'
  'No Attributes available for this InfoObject!'.
  PERFORM bdc_field       USING
  'T100-TEXT(04)'
  'No Text table available for this Infoobject!'.
  PERFORM bdc_field       USING
  'T100-TEXT(05)'
  'No Active ODS Objects available!'.
  PERFORM bdc_field       USING
  'T100-TEXT(06)'
  'Metadata extraction is successful!'.
  PERFORM bdc_field       USING
  'T100-TEXT(07)'
  'Error in passing FTP command!'.
  PERFORM bdc_field       USING
  'T100-TEXT(08)'
  'Error in opening data File!'.
  PERFORM bdc_field       USING
  'T100-TEXT(09)'
  'Error in passing data to FTP server!'.
  PERFORM bdc_field       USING
  'T100-TEXT(10)'
  'Error in passing FTP command!'.
  PERFORM bdc_field       USING
  'T100-TEXT(11)'
  'Data file transfer to FTP successful!'.
  PERFORM bdc_field       USING
  'T100-TEXT(12)' 'No data Available!'.
  PERFORM bdc_field       USING
  'T100-TEXT(13)'
  'Error in closing RFC connection!'.
  PERFORM bdc_dynpro      USING
  'SAPLWBMESSAGES' '1000'.
  PERFORM bdc_field       USING 'BDC_OKCODE'
          '=WB_SAVE'.
  PERFORM bdc_field       USING 'BDC_CURSOR'
          'NUMMER'.
  PERFORM bdc_field       USING 'NUMMER'
          '000'.
  PERFORM bdc_dynpro      USING
  'SAPLWBMESSAGES' '1000'.
  PERFORM bdc_field       USING 'BDC_OKCODE'
          '=WB_BACK'.
  PERFORM bdc_field       USING 'BDC_CURSOR'
          'NUMMER'.
  PERFORM bdc_field       USING 'NUMMER'
          '000'.
  PERFORM bdc_dynpro      USING
  'SAPLWBMESSAGES' '0100'.
  PERFORM bdc_field       USING 'BDC_CURSOR'
          'RSDAG-ARBGB'.
  PERFORM bdc_field       USING 'BDC_OKCODE'
          '=WB_BACK'.
  PERFORM bdc_field       USING 'RSDAG-MSGFLAG'
          'X'.
  PERFORM bdc_transaction USING 'SE91'.
ENDFORM.
FORM bdc_dynpro USING program dynpro.
  CLEAR it_bdcdata.
  it_bdcdata-program  = program.
  it_bdcdata-dynpro   = dynpro.
  it_bdcdata-dynbegin = 'X'.
  APPEND it_bdcdata.
ENDFORM.
FORM bdc_field USING fnam fval.
  CLEAR it_bdcdata.
  it_bdcdata-fnam = fnam.
  it_bdcdata-fval = fval.
  APPEND it_bdcdata.
ENDFORM.
FORM bdc_transaction USING tcode.
  REFRESH it_messtab.
  CALL TRANSACTION tcode USING it_bdcdata
  MODE   'N'
  UPDATE 'A'
  MESSAGES INTO it_messtab.
  IF sy-subrc = 0.
  ENDIF.
ENDFORM.
FORM structure.
  CALL FUNCTION 'RS_FUNCTION_POOL_INSERT'
    EXPORTING
      function_pool       = c_fungrp
      short_text          = c_fgrptext
      responsible         = sy-uname
      devclass            = c_devclass
      corrnum             = trans_req_no
      suppress_corr_check = space.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZIOBJ_S_SEARCH'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext =
  'Structure for InfoObject list (ODI-BW)'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'IOBJNM'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'RSDIOBJNM'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'TXTLG'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR wa_headerstruct.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZIAREA_S_LIST'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext
  = 'Structure for Infoarea List: (ODI-BW)'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'INFOAREA'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'RSINFOAREA'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'INFOAREA_DESC'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'INFOAREA_P'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'RSINFOAREA'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'INFOAREA_C'.
  t_structure-position  = '4'.
  t_structure-rollname  = 'RSINFOAREA'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'INFOAREA_N'.
  t_structure-position  = '5'.
  t_structure-rollname  = 'RSINFOAREA'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  IF sy-subrc <> 0.
  ENDIF.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  IF sy-subrc <> 0.
  ENDIF.
  CLEAR wa_headerstruct.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZODS_S_DETAILS'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext   =
  'Structure for ODS/DSO Details: (ODI-BW)'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'ODS_OBJ_NAME'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'RSDODSOBJECT'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'ODS_OBJ_DESC'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'ODS_TAB_NAME'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'TABNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'ODSOTYPE'.
  t_structure-position  = '4'.
  t_structure-rollname  = 'RSDODSOTYPE'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELD'.
  t_structure-position  = '5'.
  t_structure-rollname  = 'FIELDNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELD_DESC'.
  t_structure-position  = '6'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'KEY_FLAG'.
  t_structure-position  = '7'.
  t_structure-rollname  = 'CHAR1'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELD_POS'.
  t_structure-position  = '8'.
  t_structure-rollname  = 'TABFDPOS'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DATATYPE'.
  t_structure-position  = '9'.
  t_structure-rollname  = 'DATATYPE_D'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DDLEN'.
  t_structure-position  = '10'.
  t_structure-rollname  = 'DDLENG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DECIMALS'.
  t_structure-position  = '11'.
  t_structure-rollname  = 'DECIMALS'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR wa_headerstruct.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZIAREA_S_DETAILS'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext   =
  'ODI-BW: Struc for Data Targets of a Infoarea'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DATA_TARGET'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'CHAR30'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DESCRIPTION'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DATA_TARGET_TYP'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'CHAR3'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR wa_headerstruct.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZIOBJ_S_ATTR'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext   =
  'ODI-BW:List of Attributes/Tables of InfoObject'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'ATTR_NAME'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'RSDIOBJNM'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'ATTR_DESC'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDNM'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'RSDIOBJFIELDNM'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'ATTR_TYPE'.
  t_structure-position  = '4'.
  t_structure-rollname  = 'CHAR3'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FLAG_TIMDEP'.
  t_structure-position  = '5'.
  t_structure-rollname  = 'CHAR1'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR wa_headerstruct.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZIOBJ_S_TABLES'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext   =
  'ODI-BW: List of Tables of InfoObject'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'TABNAME'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'TABNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DDTEXT'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'TAB_TYP'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'CHAR1'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR wa_headerstruct.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZIOBJ_S_MRGD_TAB'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext
  = 'ODI-BW: Get InfoObject Merged Table details'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDNAME'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'FIELDNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDTEXT'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'AS4TEXT'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'KEYFLAG'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'KEYFLAG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'TABNAME'.
  t_structure-position  = '4'.
  t_structure-rollname  = 'TABNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'TAB_TYP'.
  t_structure-position  = '5'.
  t_structure-rollname  = 'CHAR1'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DATATYPE'.
  t_structure-position  = '6'.
  t_structure-rollname  = 'DATATYPE_D'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DDLEN'.
  t_structure-position  = '7'.
  t_structure-rollname  = 'DDLENG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DECIMALS'.
  t_structure-position  = '8'.
  t_structure-rollname  = 'DECIMALS'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR wa_headerstruct.
  CLEAR wa_headerstruct.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZCUBE_S_DETAIL'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext =
  'ODI-BW: Structure for Cube Details'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DIMENSION'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'RSDIMENSION'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DIM_DESC'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'CHAR30'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'LINITFL'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'RSLINITFL'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DIM_CHARACS'.
  t_structure-position  = '4'.
  t_structure-rollname  = 'RSIOBJNM'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'CHARACS_DESC'.
  t_structure-position  = '5'.
  t_structure-rollname  = 'RSTXTSH'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'SID_TABLE'.
  t_structure-position  = '6'.
  t_structure-rollname  = 'TABNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'SID_KEYFLD'.
  t_structure-position  = '7'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'CHARACS_TYP'.
  t_structure-position  = '8'.
  t_structure-rollname  = 'CHAR3'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR wa_headerstruct.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZCUBE_S_SEARCH'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext
  = 'Structure for Infocube list (ODI-BW)'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'INFOCUBE'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'RSINFOCUBE'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DESCRIPTION'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'INFOAREA'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'RSINFOAREA'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR wa_headerstruct.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZODSO_S_SEARCH'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext =
  'Structure for ODS Object list (ODI-BW)'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'ODSOBJECT'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'RSDODSOBJECT'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'ODSOTYPE'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'RSDODSOTYPE'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'TXTLG'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR wa_headerstruct.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZODI_FIELDS'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext =
  'ODI-BW: Structure for fields'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDNAME'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'FIELDNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZOHDEST_S_SEARCH'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext =
  'Structure for Open Hub Dest. List (ODI-BW )'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'OHDEST'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'RSOHDEST'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'TXTLG'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'RSTXTLG'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZCUBE_S_KEYFIG'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext =
  'ODI-BW : Get the Key figure Metadata of Cube'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDNAME'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'FIELDNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDTEXT'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'AS4TEXT'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'KFFIELD'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'FIELDNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'KEYFLAG'.
  t_structure-position  = '4'.
  t_structure-rollname  = 'KEYFLAG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DATATYPE'.
  t_structure-position  = '5'.
  t_structure-rollname  = 'DATATYPE_D'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DDLEN'.
  t_structure-position  = '6'.
  t_structure-rollname  = 'DDLENG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DECIMALS'.
  t_structure-position  = '7'.
  t_structure-rollname  = 'DECIMALS'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'CHARACS_TYP'.
  t_structure-position  = '8'.
  t_structure-rollname  = 'RSIOBJTP'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZIOBJ_S_HIER_TAB'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext =
  'ODI-BW : Get the Hier Data of Info Object'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDNAME'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'FIELDNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDTEXT'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'AS4TEXT'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'KEYFLAG'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'KEYFLAG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DATATYPE'.
  t_structure-position  = '4'.
  t_structure-rollname  = 'DATATYPE_D'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DDLEN'.
  t_structure-position  = '5'.
  t_structure-rollname  = 'DDLENG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DECIMALS'.
  t_structure-position  = '6'.
  t_structure-rollname  = 'DECIMALS'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZIOBJ_S_HIER_LIST'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext =
  'ODI-BW : Get the Hier Data of Info Object'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'HIEID'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'RSHIEID'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'HIETYPE'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'RSHITYPE'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'HIENM'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'RSHIENM'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'VERSION'.
  t_structure-position  = '4'.
  t_structure-rollname  = 'RSVERSION'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DATETO'.
  t_structure-position  = '5'.
  t_structure-rollname  = 'RSDATETO'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DATEFROM'.
  t_structure-position  = '6'.
  t_structure-rollname  = 'RSDATEFROM'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'LANGU'.
  t_structure-position  = '7'.
  t_structure-rollname  = 'SYLANGU'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'TXTSH'.
  t_structure-position  = '8'.
  t_structure-rollname  = 'RSTXTSH'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'TXTMD'.
  t_structure-position  = '9'.
  t_structure-rollname  = 'RSTXTMD'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZCUBE_S_UNITTIM'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext =
  'ODI-BW : Get the Key figure Metadata of Cube'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDNAME'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'FIELDNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDTEXT'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'AS4TEXT'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'KFFIELD'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'FIELDNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'KEYFLAG'.
  t_structure-position  = '4'.
  t_structure-rollname  = 'KEYFLAG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DATATYPE'.
  t_structure-position  = '5'.
  t_structure-rollname  = 'DATATYPE_D'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DDLEN'.
  t_structure-position  = '6'.
  t_structure-rollname  = 'DDLENG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DECIMALS'.
  t_structure-position  = '7'.
  t_structure-rollname  = 'DECIMALS'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'CHARACS_TYP'.
  t_structure-position  = '8'.
  t_structure-rollname  = 'CHAR3'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  CLEAR   t_structure.
  REFRESH t_structure.
  wa_headerstruct-tabname = 'ZIOBJ_S_TEXT_TAB'.
  wa_headerstruct-ddlanguage = 'E'.
  wa_headerstruct-tabclass = 'INTTAB'.
  wa_headerstruct-ddtext =
  'ODI-BW : Get the Key figure Metadata of Cube'.
  wa_headerstruct-exclass   = '3'. 
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDNAME'.
  t_structure-position  = '1'.
  t_structure-rollname  = 'FIELDNAME'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'FIELDTEXT'.
  t_structure-position  = '2'.
  t_structure-rollname  = 'AS4TEXT'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'KEYFLAG'.
  t_structure-position  = '3'.
  t_structure-rollname  = 'KEYFLAG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DATATYPE'.
  t_structure-position  = '4'.
  t_structure-rollname  = 'DATATYPE_D'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DDLEN'.
  t_structure-position  = '5'.
  t_structure-rollname  = 'DDLENG'.
  APPEND t_structure.
  CLEAR  t_structure.
  t_structure-tabname   = wa_headerstruct-tabname.
  t_structure-fieldname = 'DECIMALS'.
  t_structure-position  = '6'.
  t_structure-rollname  = 'DECIMALS'.
  APPEND t_structure.
  CLEAR  t_structure.
  struct-tabname = wa_headerstruct-tabname.
  APPEND struct.
  CLEAR  struct.
  CALL FUNCTION 'DDIF_TABL_PUT'
    EXPORTING
      name              = wa_headerstruct-tabname
      dd02v_wa          = wa_headerstruct
    TABLES
      dd03p_tab         = t_structure
    EXCEPTIONS
      tabl_not_found    = 1
      name_inconsistent = 2
      tabl_inconsistent = 3
      put_failure       = 4
      put_refused       = 5
      OTHERS            = 6.
  CALL FUNCTION 'DDIF_TABL_ACTIVATE'
    EXPORTING
      name        = wa_headerstruct-tabname
      auth_chk    = space
    EXCEPTIONS
      not_found   = 1
      put_failure = 2
      OTHERS      = 3.
  LOOP AT struct INTO wa_struct.
    obj_name  = wa_struct-tabname.
    CALL FUNCTION 'TRINT_TADIR_INSERT'
      EXPORTING
        author               = sy-uname
        masterlang           = 'E'
        devclass             = c_devclass
        object               = 'TABL'
        obj_name             = obj_name
        pgmid                = 'R3TR'
      IMPORTING
        es_tadir             = es_tadir
      EXCEPTIONS
        object_exists_global = 1
        object_exists_local  = 2
        OTHERS               = 3.
    wa_e071-trkorr    = trans_req_no.
    wa_e071-as4pos    = '1'.
    wa_e071-pgmid     = 'R3TR'.
    wa_e071-object    = 'TABL'.
    wa_e071-obj_name  = obj_name.
    wa_e071-lockflag  = 'X'.
    APPEND wa_e071 TO e071.
    CLEAR wa_e071.
    wa_e071-trkorr    = trans_req_no.
    wa_e071-as4pos    = '2'.
    wa_e071-pgmid     = 'LIMU'.
    wa_e071-object    = 'TABD'.
    wa_e071-obj_name  = obj_name.
    wa_e071-lockflag  = 'X'.
    APPEND wa_e071 TO e071.
    CLEAR  wa_e071.
    CALL FUNCTION 'TRINT_REQUEST_CHOICE'
      EXPORTING
        iv_suppress_dialog = 'X'
        iv_request_types   = 'KL'
        iv_request         = trans_req_no
      IMPORTING
        et_log             = et_log
      TABLES
        it_e071            = e071.
  ENDLOOP.
ENDFORM."
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6354]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7c94c554-8544-4993-b7b3-185c2dea0403]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3497]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[130]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install Base for Prod Components]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a5a38877-6c26-46d1-880f-885ca7ab6ac8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6354]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_CREATE_BDC" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT ZODI_CREATE_PROGRAMS.
CONSTANTS :
 c_devclass        TYPE tadir-devclass
 VALUE '<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>',
 c_shorttext       TYPE trdevclass-ctext
 VALUE 'ODI Package',
 c_reqtext         TYPE e07t-as4text
 VALUE 'ODI SAP PRODUCTION OBJECTS',
 c_component       TYPE dlvunit
 VALUE 'SAP_ABA',
 c_action          TYPE sy-ucomm
 VALUE 'CREA',
 c_dialog          TYPE trpari-flag
 VALUE '',
 c_dlvunit         TYPE trdevclass-dlvunit
 VALUE 'HOME',
 c_task            TYPE e070-trfunction
 VALUE 'S',
 c_request         TYPE e070-trfunction
 VALUE 'K',
 c_msgclass        TYPE rsdag-arbgb
 VALUE 'ZODI_MSG',
 c_msg_class_txt   TYPE t100a-stext
 VALUE 'Message Class for ODI',
 c_function_group  TYPE rsnewleng-area
 VALUE 'ZODI_FGR',
 c_function_group1  TYPE rsnewleng-area
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>',
 c_fngrp_text      TYPE tftit-stext
 VALUE 'Function Group for ODI',
 c_zodi_appl_comp        TYPE
 dd02v-tabname VALUE 'ZODI_APPL_COMP',
c_zodi_appl_comp1        TYPE
 dd02v-tabname VALUE 'ZODI_COND',
c_zodi_appl_comp2        TYPE
 dd02v-tabname VALUE 'ZODI_COND_STR',
 c_zodi_bapi_s_tbl_list        TYPE
 dd02v-tabname VALUE 'ZODI_BAPI_S_TBL_LIST',
 c_zodi_rfc_db_fld             TYPE
 dd02v-tabname VALUE 'ZODI_RFC_DB_FLD',
 c_zodi_bapi_s_tbl_index_list  TYPE
 dd02v-tabname VALUE 'ZODI_BAPI_S_TBL_INDEX_LIST',
 c_zodi_s_pk       TYPE dd02v-tabname
 VALUE 'ZODI_S_PK',
 c_zodi_s_fk       TYPE dd02v-tabname
 VALUE 'ZODI_S_FK',
 c_zreturn         TYPE dd02v-tabname
 VALUE 'ZODIRETURN',
 c_funcname        TYPE rs38l-name
 VALUE 'ZRFC_ABAP_INSTALL_AND_RUN',
 c_funcname_text   TYPE tftit-stext
 VALUE 'Install code and execute',
 c_remote_call     TYPE RS38L-REMOTE
 VALUE 'X'.
 DATA : BEGIN OF struct OCCURS 0,
 tabname TYPE dd02v-tabname,
 END OF struct.
 DATA :
 trans_req_no        TYPE e070-trkorr,
 task_number         TYPE e070-trkorr,
 es_devclass         TYPE trdevclass,
 is_devclass         TYPE trdevclass,
 t_version           TYPE cvers,
 ev_something_changd TYPE trpari-flag,
 ev_request          TYPE e070-trkorr,
 obj_name            TYPE tadir-obj_name,
 es_tadir            TYPE tadir,
 e071                TYPE STANDARD TABLE OF e071,
 wa_e071             TYPE e071,
 et_log              TYPE sprot_u_tab,
 it_bdcdata          TYPE STANDARD TABLE OF
 bdcdata    WITH HEADER LINE,
 it_messtab          TYPE STANDARD TABLE OF
 bdcmsgcoll WITH HEADER LINE,
 wa_headerstruct     LIKE dd02v,
 lv_sysid            TYPE srcsystem,
 wa_struct           LIKE LINE OF struct,
 t_structure         TYPE STANDARD TABLE OF dd03p
 WITH HEADER LINE,
 exception_list      TYPE STANDARD TABLE OF rsexc,
 export_parameter    TYPE STANDARD TABLE OF rsexp,
 import_parameter    TYPE STANDARD TABLE OF rsimp,
 parameter_docu      TYPE STANDARD TABLE OF rsfdo,
 tables_parameter    TYPE STANDARD TABLE OF rstbl,
 changing_parameter  TYPE STANDARD TABLE OF rscha,
 wa_exp              TYPE rsexp,
 wa_imp              TYPE rsimp,
 wa_tables           TYPE rstbl,
 wa_tdevc            TYPE tdevc,
 cg_rep_tab          LIKE abaptext OCCURS 20,
 include_name        TYPE rs38l-include,
 cg_tabix            LIKE sy-tabix,
 ERRORMESSAGE        TYPE symsgv,
 lv_devclass         TYPE devclass.

DATA: ls_ret TYPE  BAPIRET2,
      ls_task TYPE BAPISCTS07,
      lt_task TYPE TABLE OF BAPISCTS07,
      ls_author TYPE BAPISCTS12,
      lt_author TYPE TABLE OF BAPISCTS12.

DATA: lt_e071 TYPE TABLE OF e071,
      lt_e070 TYPE TABLE OF e070,
      wa_e070 TYPE e070.

DATA:
 wa_headerstruct1     LIKE dd40v,
 t_structure1         TYPE STANDARD TABLE OF dd42v
 WITH HEADER LINE.

DATA: TRAN_LAYER type BAPISCTS02.
 
 START-OF-SELECTION.
 SELECT SINGLE DEVCLASS
 FROM tdevc
 INTO lv_devclass
 WHERE devclass = c_devclass.
 IF sy-subrc NE 0.
 CLEAR trans_req_no.

ls_task-type = 'K'.
ls_task-author = sy-uname.
APPEND ls_task TO lt_task.

ls_author-task_owner = sy-uname.
APPEND ls_author TO lt_author.

tran_layer-LAYER_SET = 'X'.
tran_layer-LAYER = '<?=sapTransportLayerName?>'.

 CALL FUNCTION 'BAPI_CTREQUEST_CREATE'
   EXPORTING
    REQUEST_TYPE       = 'K'
    AUTHOR             = sy-uname
    TEXT               = c_reqtext
    TRANSLAYER  =  tran_layer
  IMPORTING
    REQUESTID          = trans_req_no
    RETURN             = ls_ret
   TABLES
     AUTHORLIST         = lt_author
     TASK_LIST          = lt_task.
  IF sy-subrc <> 0.
   ERRORMESSAGE = ls_ret-message.
 WRITE: ERRORMESSAGE.
 EXIT.
  ELSE.
   READ TABLE lt_task INTO ls_task INDEX 2.
   IF sy-subrc = 0.
    task_number = ls_task-taskid.
   ENDIF.
  ENDIF.

 SELECT SINGLE * FROM cvers INTO t_version
 WHERE component = c_component.
****if SAP version 4.7 and above****
 IF t_version-release  >=  '620'.
 PERFORM create_devclass_6.
*****else if SAP version 4.6c****
 ELSE.
 PERFORM create_devclass_46c.
 ENDIF.

ELSE.
SELECT * FROM E071
INTO TABLE lt_e071
WHERE OBJECT = 'DEVC' AND
OBJ_NAME = c_devclass AND
LOCKFLAG = 'X'.
IF sy-subrc IS INITIAL.
SELECT * from e070
INTO TABLE lt_e070
FOR ALL ENTRIES IN lt_e071
WHERE trkorr = lt_e071-trkorr.
IF sy-subrc IS INITIAL.
READ TABLE lt_e070 INTO wa_e070 INDEX 1.
IF sy-subrc IS INITIAL.
trans_req_no = wa_e070-sTRKORR.
ENDIF.
ENDIF.
ENDIF.

 ENDIF.

 CALL FUNCTION 'RS_FUNCTION_POOL_INSERT'
 EXPORTING
 function_pool       = c_function_group1
 short_text          = c_fngrp_text
 responsible         = sy-uname
 devclass            = c_devclass
 corrnum             = trans_req_no
 suppress_corr_check = space
 EXCEPTIONS
  NAME_ALREADY_EXISTS           = 1
  NAME_NOT_CORRECT              = 2
  FUNCTION_ALREADY_EXISTS       = 3
  INVALID_FUNCTION_POOL         = 4
  INVALID_NAME                  = 5
  TOO_MANY_FUNCTIONS            = 6
  NO_MODIFY_PERMISSION          = 7
  NO_SHOW_PERMISSION            = 8
  ENQUEUE_SYSTEM_FAILURE        = 9
  CANCELED_IN_CORR              = 10
  UNDEFINED_ERROR               = 11
  OTHERS                        = 12.
IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.

 EXIT.
ENDIF.

PERFORM structure.

 FORM create_devclass_46c.
 CALL FUNCTION 'TR_MODIFY_DEVCLASS'
 EXPORTING
 iv_action            = c_action
 iv_dialog            = c_dialog
 iv_devclass          = c_devclass
 iv_text              = c_shorttext
 iv_responsible       = sy-uname
 iv_dlvunit           = c_dlvunit
 iv_request           =  trans_req_no
 IMPORTING
 es_devclass          = es_devclass
 ev_something_changed = ev_something_changd
 ev_request           = ev_request
EXCEPTIONS
    CANCELLED_BY_USER           = 1
    NO_AUTHORIZATION            = 2
    INVALID_DEVCLASS            = 3
    INVALID_ACTION              = 4
    ENQUEUE_FAILED              = 5
    DB_ACCESS_ERROR             = 6
    SYSTEM_NOT_CONFIGURED       = 7
    OTHERS                      = 8.
 IF sy-subrc <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
ENDIF.

 ENDFORM.
 FORM create_devclass_6.
 IS_DEVCLASS-DEVCLASS  =  c_devclass.
 IS_DEVCLASS-CTEXT     =  c_shorttext.
 IS_DEVCLASS-AS4USER   =  sy-uname.
 IS_DEVCLASS-PDEVCLASS =  '<?=sapTransportLayerName?>'.
 IS_DEVCLASS-DLVUNIT   = 'HOME'.
 CALL FUNCTION 'PA_REPLACE_MODIFY_DEVCLASS'
 EXPORTING
 IV_ACTION                   = c_action
 IV_DIALOG                   = c_dialog
 IS_DEVCLASS                 = is_devclass
 IV_REQUEST                  =  trans_req_no
 IMPORTING
 es_devclass          = es_devclass
 ev_something_changed = ev_something_changd
 ev_request           = ev_request
EXCEPTIONS
   NO_AUTHORIZATION            = 1
   INVALID_DEVCLASS            = 2
   INVALID_ACTION              = 3
   ENQUEUE_FAILED              = 4
   DB_ACCESS_ERROR             = 5
   SYSTEM_NOT_CONFIGURED       = 6
   OTHERS                      = 7.

 IF sy-subrc <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
 CLEAR: es_devclass, ev_something_changd,
 ev_request.
 ENDIF.
 ENDFORM.

FORM structure.

CLEAR   t_structure.
 REFRESH t_structure.
 wa_headerstruct-tabname =
 c_zodi_appl_comp2.
 wa_headerstruct-ddlanguage = sy-langu.
 wa_headerstruct-tabclass = 'INTTAB'.
 wa_headerstruct-ddtext   = 'ODI Dynamic Condition'.
 wa_headerstruct-exclass   = '3'.
 t_structure-tabname   = wa_headerstruct-tabname.
 t_structure-fieldname = 'FIELD'.
 t_structure-position  = '1'.
 t_structure-rollname  = 'SYLISEL'.
 APPEND t_structure.
 CLEAR  t_structure.
 t_structure-tabname   = wa_headerstruct-tabname.
 t_structure-fieldname = 'VAL'.
 t_structure-position  = '2'.
 t_structure-rollname  = 'SYLISEL'.
 APPEND t_structure.
 CLEAR  t_structure.
 struct-tabname = wa_headerstruct-tabname.
 APPEND struct.
 CLEAR  struct.
 CALL FUNCTION 'DDIF_TABL_PUT'
 EXPORTING
 name              = wa_headerstruct-tabname
 dd02v_wa          = wa_headerstruct
 TABLES
 dd03p_tab         = t_structure
 EXCEPTIONS
 tabl_not_found    = 1
 name_inconsistent = 2
 tabl_inconsistent = 3
 put_failure       = 4
 put_refused       = 5
 OTHERS            = 6.
 IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
 ENDIF.

 CALL FUNCTION 'DDIF_TABL_ACTIVATE'
 EXPORTING
 name        = wa_headerstruct-tabname
 auth_chk    = space
 EXCEPTIONS
 not_found   = 1
 put_failure = 2
 OTHERS      = 3.
  IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 WRITE: ERRORMESSAGE.
 EXIT.
 ENDIF.

 CLEAR   t_structure1.
 REFRESH t_structure1.
 wa_headerstruct1-typename =
 c_zodi_appl_comp1.
 wa_headerstruct1-keykind = 'N'.
 wa_headerstruct1-KEYDEF = 'D'.
 wa_headerstruct1-ddlanguage = sy-langu.
 wa_headerstruct1-ddtext = 'ODI Dynamic Table Type Condition'.
 wa_headerstruct1-rowtype = 'ZODI_COND_STR'.
 t_structure1-typename   = c_zodi_appl_comp1.
 t_structure1-keyfdpos  = '1'.
 t_structure1-keyfield  = 'FIELD'.
 APPEND t_structure1.
 CLEAR  t_structure1.
 t_structure1-typename   = c_zodi_appl_comp1.
 t_structure1-keyfdpos  = '2'.
 t_structure1-keyfield  = 'VAL'.
 APPEND t_structure1.
CLEAR  t_structure.
 struct-tabname = wa_headerstruct1-typename.

CALL FUNCTION 'DDIF_TTYP_PUT'
  EXPORTING
    NAME                    = c_zodi_appl_comp1
   DD40V_WA                = wa_headerstruct1
 TABLES
   DD42V_TAB               = t_structure1
 EXCEPTIONS
   TTYP_NOT_FOUND          = 1
   NAME_INCONSISTENT       = 2
   TTYP_INCONSISTENT       = 3
   PUT_FAILURE             = 4
   PUT_REFUSED             = 5
   OTHERS                  = 6.
IF SY-SUBRC <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

CALL FUNCTION 'DDIF_TTYP_ACTIVATE'
  EXPORTING
    NAME              = c_zodi_appl_comp1
 EXCEPTIONS
   NOT_FOUND         = 1
   PUT_FAILURE       = 2
   OTHERS            = 3.
IF SY-SUBRC <> 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

 CLEAR wa_headerstruct.
 LOOP AT struct INTO wa_struct.
 obj_name  = wa_struct-tabname.
 lv_sysid = sy-sysid.
 CALL FUNCTION 'TRINT_TADIR_INSERT'
 EXPORTING
 author               = sy-uname
 masterlang           = sy-langu
 devclass             = c_devclass
 genflag              = ' '
 object               = 'TABL'
 obj_name             = obj_name
 pgmid                = 'R3TR'
 srcsystem            = lv_sysid
 IMPORTING
 es_tadir             = es_tadir
 EXCEPTIONS
 object_exists_global = 1
 object_exists_local  = 2
 OTHERS               = 3.
 IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.

 ENDIF.
 wa_e071-trkorr    = trans_req_no.
 wa_e071-as4pos    = '1'.
 wa_e071-pgmid     = 'R3TR'.
 wa_e071-object    = 'TABL'.
 wa_e071-obj_name  = obj_name.
 wa_e071-lockflag  = 'X'.
 APPEND wa_e071 TO e071.
 CLEAR wa_e071.
 wa_e071-trkorr    = trans_req_no.
 wa_e071-as4pos    = '2'.
 wa_e071-pgmid     = 'LIMU'.
 wa_e071-object    = 'TABD'.
 wa_e071-obj_name  = obj_name.
 wa_e071-lockflag  = 'X'.
 APPEND wa_e071 TO e071.
 CLEAR  wa_e071.
 CALL FUNCTION 'TRINT_REQUEST_CHOICE'
 EXPORTING
 iv_suppress_dialog = 'X'
 iv_request_types   = 'KL'
 iv_request         = trans_req_no
 IMPORTING
 et_log             = et_log
 TABLES
 it_e071            = e071
 EXCEPTIONS
   INVALID_REQUEST            = 1
   INVALID_REQUEST_TYPE       = 2
   USER_NOT_OWNER             = 3
   NO_OBJECTS_APPENDED        = 4
   ENQUEUE_ERROR              = 5
   CANCELLED_BY_USER          = 6
   RECURSIVE_CALL             = 7
   OTHERS                     = 8.
 IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
WRITE: ERRORMESSAGE.
 EXIT.
 ENDIF.

 ENDLOOP.

obj_name  = c_zodi_appl_comp1.
lv_sysid = sy-sysid.

CALL FUNCTION 'TRINT_TADIR_INSERT'
 EXPORTING
 author               = sy-uname
 masterlang           = sy-langu
 devclass             = c_devclass
 genflag              = ' '
 object               = 'TTYP'
 obj_name             = obj_name
 pgmid                = 'R3TR'
 srcsystem            = lv_sysid
 IMPORTING
 es_tadir             = es_tadir
 EXCEPTIONS
 object_exists_global = 1
 object_exists_local  = 2
 OTHERS               = 3.
 IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.

 ENDIF.
 wa_e071-trkorr    = trans_req_no.
 wa_e071-as4pos    = '1'.
 wa_e071-pgmid     = 'R3TR'.
 wa_e071-object    = 'TTYP'.
 wa_e071-obj_name  = c_zodi_appl_comp1 .
 wa_e071-lockflag  = 'X'.
 APPEND wa_e071 TO e071.
 CLEAR wa_e071.
 CALL FUNCTION 'TRINT_REQUEST_CHOICE'
 EXPORTING
 iv_suppress_dialog = 'X'
 iv_request_types   = 'KL'
 iv_request         = trans_req_no
 IMPORTING
 et_log             = et_log
 TABLES
 it_e071            = e071
 EXCEPTIONS
   INVALID_REQUEST            = 1
   INVALID_REQUEST_TYPE       = 2
   USER_NOT_OWNER             = 3
   NO_OBJECTS_APPENDED        = 4
   ENQUEUE_ERROR              = 5
   CANCELLED_BY_USER          = 6
   RECURSIVE_CALL             = 7
   OTHERS                     = 8.
 IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
 INTO ERRORMESSAGE
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
 ENDIF.
 
********************************************
**Creation of Application Log Objects
********************************************
Data : lv_balsub type balsub,
       lv_balsubt type balsubt,
       lv_balobj  type  balobj,
       lv_balobjt type balobjt,       
    TEXT type STRING.
    
lv_balobj-object = 
'<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
insert into balobj values lv_balobj.

if sy-subrc <> 0. 
TEXT = 'Enter correct Application object name'.
MESSAGE e000(l1) WITH text.
endif.

lv_balobjt-spras    = '<?=sapLanguage?>'.
lv_balobjt-object   = 
'<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
lv_balobjt-objtxt   = 
'SAP Background job application object name'.

insert into balobjt values lv_balobjt.

if sy-subrc <> 0.
TEXT = 'Enter correct Application object description'.
MESSAGE e000(l1) WITH text.
endif.

lv_balsub-object     =  
'<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
lv_balsub-subobject  =  
'<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>'.

insert into balsub values lv_balsub.

if sy-subrc <> 0.
TEXT = 'Enter correct Subobject name'.
MESSAGE e000(l1) WITH text.
endif.

lv_balsubt-spras       = '<?=sapLanguage?>'.
lv_balsubt-object      = 
'<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
lv_balsubt-subobject   = 
'<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>'.
lv_balsubt-subobjtxt   = 
'SAP Background job application sub object name'.

insert into balsubt values lv_balsubt.

if sy-subrc <> 0.
TEXT = 'Enter correct Subobject text'.
MESSAGE e000(l1) WITH text.
endif.

commit work.

If sy-subrc = 0.
TEXT = 'Application object created'.
MESSAGE s000(l1) WITH text.
endif.

********************************************
**Storing the Application Logging Object into
**Production Transport Request
********************************************
DATA: lt_e071         TYPE table of e071,
      lt_e071k        TYPE TABLE OF e071k,
      ls_e071         TYPE e071,
      ls_e071k        TYPE e071k,
      appobj_name     TYPE balobj_d,
      lv_temp_appname TYPE balobj_d,
      subobj_name     TYPE balsubobj,
	  i TYPE int4,
      rem TYPE int4.

	  
DATA:
lo_len TYPE REF TO data.
FIELD-SYMBOLS:
          <lv_len> TYPE any.
		  
appobj_name = 
'<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>'.
subobj_name = 
'<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>'.

i = strlen( appobj_name ).
rem = 20 - i.
CREATE DATA lo_len TYPE c LENGTH rem.
ASSIGN lo_len->* TO <lv_len>.
<lv_len> = SPACE.

ls_e071-trkorr = trans_req_no      .
ls_e071-pgmid = 'R3TR'.
ls_e071-object = 'CDAT'.
ls_e071-obj_name = 'APPL_LOG'.
ls_e071-objfunc = 'K'.
APPEND ls_e071 TO lt_e071.

ls_e071k-trkorr = trans_req_no.
ls_e071k-pgmid  = 'R3TR'.
ls_e071k-object = 'TABU'.
ls_e071k-objname = 'BALOBJ'.
ls_e071k-MASTERTYPE = 'CDAT'.
ls_e071k-mastername = 'APPL_LOG'.
ls_e071k-viewname = SPACE.
ls_e071k-tabkey = appobj_name .
APPEND ls_e071k TO lt_e071k.
CLEAR ls_e071k.

ls_e071k-trkorr = trans_req_no.
ls_e071k-pgmid  = 'R3TR'.
ls_e071k-object = 'TABU'.
ls_e071k-objname = 'BALOBJT'.
ls_e071k-MASTERTYPE = 'CDAT'.
ls_e071k-mastername = 'APPL_LOG'.
ls_e071k-viewname = SPACE.
CONCATENATE 'E' appobj_name
INTO lv_temp_appname.
ls_e071k-tabkey = lv_temp_appname .
APPEND ls_e071k TO lt_e071k.
CLEAR ls_e071k.

ls_e071k-trkorr = trans_req_no.
ls_e071k-pgmid  = 'R3TR'.
ls_e071k-object = 'TABU'.
ls_e071k-objname = 'BALSUB'.
ls_e071k-MASTERTYPE = 'CDAT'.
ls_e071k-mastername = 'APPL_LOG'.
ls_e071k-viewname = 'V_BALSUB'.
CONCATENATE appobj_name  subobj_name
INTO ls_e071k-tabkey in CHARACTER MODE SEPARATED BY <lv_len>.
APPEND ls_e071k TO lt_e071k.
CLEAR ls_e071k.

ls_e071k-trkorr = trans_req_no.
ls_e071k-pgmid  = 'R3TR'.
ls_e071k-object = 'TABU'.
ls_e071k-objname = 'BALSUBT'.
ls_e071k-MASTERTYPE = 'CDAT'.
ls_e071k-mastername = 'APPL_LOG'.
ls_e071k-viewname = 'V_BALSUB'. 
CONCATENATE 'E' appobj_name INTO appobj_name.
CONCATENATE appobj_name subobj_name
INTO ls_e071k-tabkey in CHARACTER MODE SEPARATED BY <lv_len>.

APPEND ls_e071k TO lt_e071k.
CLEAR ls_e071k.

CALL FUNCTION 'TRINT_APPEND_COMM'
  EXPORTING
   WI_EXCLUSIVE                       = 'X'
   WI_SEL_E071                        = 'X'
   WI_SEL_E071K                       = 'X'
   WI_TRKORR                          = trans_req_no
* IMPORTING
*   WE_KEYS_PHYSICAL_APPENDED          =
*   WE_OBJECTS_PHYSICAL_APPENDED       =
 TABLES
   WT_E071                            =  lt_e071
   WT_E071K                           =  lt_e071k
 EXCEPTIONS
   E071K_APPEND_ERROR                 = 1
   E071_APPEND_ERROR                  = 2
   TRKORR_EMPTY                       = 3
   OTHERS                             = 4 .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
ENDFORM."
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6355]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[51fa59ef-89da-4ef5-9651-963e648efb5b]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3498]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[140]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_ABAP_INSTALL_AND_RUN]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[363e6153-cd9c-47ed-9da0-abba12d0cae7]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6355]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_RFC_ABAP_INSTALL_AND_RUN" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT ZODI_RFC_ABAP_INSTALL_AND_RUN.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp              TYPE rsimp, 
  wa_exp              TYPE rsexp, 
  wa_tables           TYPE rstbl, 
  cg_rep_tab          LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 


 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'MODE'. 
 wa_imp-TYP = 'SY-MSGTY'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'PROGRAMNAME'. 
 wa_imp-TYP = 'SY-REPID'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'FUNCTION'. 
 wa_imp-TYP = 'STRING'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'EXEC_AND_DEL'. 
 wa_imp-TYP = 'CHAR1'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_BACKGROUND'. 
 wa_imp-TYP = 'CHAR1'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_exp-parameter = 'ERRORMESSAGE'. 
 wa_exp-types  = 'X'. 
 wa_exp-dbfield  = 'SY-MSGV1'. 
 APPEND wa_exp TO  export_parameter. 
 wa_tables-parameter = 'PROGRAM'. 
 wa_tables-dbstruct  = 'PROGTAB'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'WRITES'. 
 wa_tables-dbstruct  = 'LISTZEILE'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_RFC_ABAP_INSTALL_AND_RUN' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
INSERT 'DATA: BEGIN OF listobj OCCURS 20.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'INCLUDE STRUCTURE abaplist.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: END OF listobj.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: mess(72),wrd(72),flag.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lin TYPE int4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: wa_file_return TYPE bapiret2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: systemedit  LIKE tadir-edtflag,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'sys_cliinddep_edit LIKE t000-ccnocliind.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''TR_SYS_PARAMS'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'systemedit          = systemedit'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'sys_cliinddep_edit  = sys_cliinddep_edit'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'OTHERS                   = 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = ''Error in TR_SYS_PARAMS''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = errormessage.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF systemedit EQ ''N''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = ''SAP System has status not modifiable''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = errormessage.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*MESSAGE e102(tk).'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sys_cliinddep_edit CA ''23''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = ''Changes to Repository not allowed''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = errormessage.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*MESSAGE e729(tk).'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF mode = ''F''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SYNTAX-CHECK FOR program'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE mess LINE lin WORD wrd.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF mess <> space.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = mess.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = errormessage.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-row = lin.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF mode = ''F''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'INSERT REPORT programname FROM program.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'COMMIT WORK AND WAIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF exec_and_del NE ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SUBMIT (programname) AND RETURN .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA lv_function TYPE rs38l_fnam.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DO 300 TIMES.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR lv_function.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT SINGLE funcname FROM tfdir INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_function WHERE  funcname  = function.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc = 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'flag = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WAIT UP TO 1 SECONDS.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDDO.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF flag NE ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ''ABAP_INSTALL_RUN failed to Execute Uploader Report''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = et_file_return-message.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF iv_background NE ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' DELETE REPORT programname.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA lv_func TYPE trobj_name.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_func = function.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FUNC_OBJECT_ACTIVATE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   object_name = lv_func'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  cancelled   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  OTHERS      = 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE ID sy-msgid'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TYPE sy-msgty NUMBER sy-msgno INTO mess'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH sy-msgv1 sy-msgv2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'sy-msgv3 sy-msgv4 .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'errormessage = mess.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = errormessage.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WAIT UP TO 5 SECONDS.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab."
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6356]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ed1efa48-e5e7-42de-9eb5-24e962cc4819]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3499]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[150]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_UPLOAD_INSTALL_WRAPPER]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[729d4f56-9bea-4fd3-97a8-3be3bc7d36b8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6356]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_UPLOAD_INSTALL_WRAPPER" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT ZODI_UPLOAD_INSTALL_WRAPPER.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp              TYPE rsimp, 
  wa_exp              TYPE rsexp, 
  wa_tables           TYPE rstbl, 
  cg_rep_tab          LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 

 CLEAR: wa_imp, 
        wa_exp, 
        wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'MODE'. 
 wa_imp-TYP = 'SY-MSGTY'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'PROGRAMNAME'. 
 wa_imp-TYP = 'SY-REPID'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'LV_TASK'. 
 wa_imp-TYP = 'TABNAME'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'FUNCTION'. 
 wa_imp-TYP = 'STRING'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'EXEC_AND_DEL'. 
 wa_imp-TYP = 'CHAR1'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_BACKGROUND'. 
 wa_imp-TYP = 'CHAR1'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_exp-parameter = 'ERRORMESSAGE'. 
 wa_exp-types  = 'X'. 
 wa_exp-dbfield  = 'SY-MSGV1'. 
 APPEND wa_exp TO  export_parameter. 
 wa_tables-parameter = 'PROGRAM'. 
 wa_tables-dbstruct  = 'PROGTAB'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'WRITES'. 
 wa_tables-dbstruct  = 'LISTZEILE'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_UPLOAD_INSTALL_WRAPPER' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
  DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
INSERT 'DATA: lv_grp    TYPE rzlli_apcl,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wait_bfr  TYPE i  VALUE 1,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wait_afr  TYPE i  VALUE 1,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'des       TYPE rfcdest.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''ZODI_RFC_ABAP_INSTALL_AND_RUN'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'mode           = mode'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'programname    = programname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'function    = function'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'exec_and_del = exec_and_del'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'iv_background = iv_background'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'program        = program'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'writes         = writes'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return = et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1. 
INSERT REPORT include_name 
 FROM cg_rep_tab."
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6357]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[dc8321c6-e3f5-4f58-8852-040431c45929]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3500]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[160]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_ABAP_SYNTAX_CHECK]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[cd88dc3d-4420-42da-acba-3a3e5519882b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6357]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_ABAP_SYNTAX_CHECK" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT ZODI_ABAP_SYNTAX_CHECK.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp              TYPE rsimp, 
  wa_exp              TYPE rsexp, 
  wa_tables           TYPE rstbl, 
  cg_rep_tab          LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix,
 t_version           TYPE cvers.

 CLEAR: wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_tables-parameter = 'PROGRAM'. 
 wa_tables-dbstruct  = 'PROGTAB'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_ABAP_SYNTAX_CHECK' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string .
INSERT 'DATA: mess(72),wrd(72).'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lin TYPE int4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: wa_file_return TYPE bapiret2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.

INSERT 'IF NOT program[] IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.

INSERT 'SYNTAX-CHECK FOR program'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'MESSAGE mess LINE lin WORD wrd.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF mess <> space.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = mess.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-row = lin.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_file_return-message = ''No syntax error''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_file_return TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR:wa_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab."
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6358]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1942b3b3-8752-4e45-8720-654d6b9c9d6f]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3501]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[170]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_DELETE_FTP_FILE]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c06bec07-eb7d-4393-9d97-9a5db3e6777a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6358]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_DELETE_FTP_FILE" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT  delete_ftp_file.
TABLES : tdevc.
CONSTANTS : c_devclass  LIKE tadir-devclass
VALUE '<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>',
c_shorttext LIKE trdevclass-ctext   VALUE
'Package for ODI-BW ',
c_reqtext  LIKE e07t-as4text   VALUE
'Transport Request for ODI-BW Objects',
c_msgclass LIKE rsdag-arbgb VALUE
'ZODIBW_MSGCL',
c_msgtext LIKE t100a-stext VALUE
'Message class for ODI-BW (Testing)',
c_fungrp LIKE rsnewleng-area VALUE
'<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>',
c_fgrptext LIKE tftit-stext VALUE
'Func Group for ODI-BW (Testing)' ,
c_task  TYPE e070-trfunction VALUE 'S'.
DATA : trans_req_no LIKE e070-trkorr,
obj_name     LIKE  tadir-obj_name,
es_tadir     LIKE  tadir,
e071         TYPE STANDARD TABLE OF e071,
wa_e071      TYPE  e071,
et_log       TYPE  sprot_u_tab,
task_number         TYPE e070-trkorr.
DATA:   it_bdcdata  TYPE STANDARD TABLE
OF  bdcdata    WITH HEADER LINE.
DATA:   it_messtab  TYPE STANDARD TABLE
OF  bdcmsgcoll WITH HEADER LINE.
DATA:  wa_headerstruct LIKE dd02v.
DATA : BEGIN OF struct OCCURS 0,
tabname TYPE tabname,
END OF struct.
DATA : wa_struct LIKE LINE OF struct.
DATA  t_structure TYPE STANDARD TABLE
OF dd03p WITH HEADER LINE.
DATA t_version TYPE cvers.
DATA ls_devclass TYPE trdevclass.
DATA lv_something_changed LIKE trpari-flag.
DATA lv_request LIKE e070-trkorr.
DATA:exception_list	TYPE TABLE OF rsexc,
export_parameter  TYPE TABLE OF rsexp,
import_parameter  TYPE TABLE OF rsimp,
parameter_docu  TYPE TABLE OF rsfdo,
tables_parameter  TYPE TABLE OF rstbl,
changing_parameter  TYPE TABLE OF rscha.
DATA : wa_exp TYPE rsexp,
wa_imp TYPE rsimp,
wa_tab TYPE rstbl,
wa_tdevc TYPE  tdevc.
DATA: cg_rep_tab  LIKE abaptext OCCURS 20.
DATA : include_name TYPE rs38l-include.
DATA: cg_tabix LIKE sy-tabix.

CLEAR IMPORT_PARAMETER.
Refresh IMPORT_PARAMETER.
CLEAR tables_PARAMETER.
Refresh tables_PARAMETER.
wa_imp-parameter = 'IV_FILENAME'.
wa_imp-TYP  = 'CHAR255'.
wa_imp-optional = ' '.
APPEND wa_imp TO  import_parameter.
wa_imp-parameter = 'IV_USER'.
wa_imp-TYP = 'CHAR40'.
wa_imp-optional = ' '.
APPEND wa_imp TO  import_parameter.
wa_imp-parameter = 'IV_PWD'.
wa_imp-TYP = 'CHAR40'.
wa_imp-optional = ' '.
APPEND wa_imp TO  import_parameter.
wa_imp-parameter = 'IV_HOST'.
wa_imp-TYP = 'CHAR40'.
wa_imp-optional = ' '.
APPEND wa_imp TO  import_parameter.
wa_imp-parameter = 'IV_PATH'.
wa_imp-TYP = 'CHAR50'.
wa_imp-optional = ' '.
APPEND wa_imp TO  import_parameter.
wa_tab-parameter = 'ET_FILE_RETURN'.
wa_tab-dbstruct  = 'BAPIRET2'.
APPEND wa_tab TO tables_parameter.
CALL FUNCTION 'FUNCTION_CREATE_REMOTE'
  EXPORTING
    funcname         = 'ZODI_RFC_DELETE_FTP_FILE'
    function_pool    = c_fungrp
    remote_call      = 'X'
    short_text       = 'Install program and Execute'
  IMPORTING
    function_include = include_name
  TABLES
    exception_list   = exception_list
    export_parameter = export_parameter
    import_parameter = import_parameter
    parameter_docu   = parameter_docu
    tables_parameter = tables_parameter.
READ REPORT include_name
INTO cg_rep_tab.
DESCRIBE TABLE cg_rep_tab LINES cg_tabix.
cg_tabix = cg_tabix - 3.
DATA: str TYPE string,str1 TYPE string,str2
TYPE string,str3 TYPE string
,str4 TYPE string,str5 TYPE string .
INSERT 'DATA: gc_error VALUE ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: gc_success VALUE ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lv_hdl TYPE i,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cmd(120) TYPE c ,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_slen TYPE i,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_line TYPE i.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lc_dest TYPE rfcdes-rfcdest'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VALUE ''SAPFTPA'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lc_key TYPE i VALUE 26101957,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lc_pasv VALUE ''X'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lc_cmd1(20) TYPE c VALUE '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''set passive on'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lc_cmd2(5) TYPE c VALUE ''put''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TYPES: BEGIN OF ls_blob,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'line(300) TYPE c,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'END OF ls_blob.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA:lt_txtdata TYPE TABLE OF ls_text.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: wa_txtdata LIKE LINE OF lt_txtdata.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lt_result TYPE TABLE OF ls_text.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: t_vers TYPE cvers .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT SINGLE * FROM cvers INTO t_vers'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WHERE component = ''SAP_ABA''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_slen = strlen( iv_pwd ).'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
*INSERT 'IF t_vers-release >= ''700''.'
*INTO cg_rep_tab INDEX cg_tabix.
*cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''HTTP_SCRAMBLE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SOURCE      = iv_pwd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'sourcelen   = lv_slen'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'key         = lc_key'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'destination = iv_pwd.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
*INSERT 'ELSE.'
*INTO cg_rep_tab INDEX cg_tabix.
*cg_tabix = cg_tabix + 1.
*INSERT 'CALL ''AB_RFC_X_SCRAMBLE_STRING'''
*INTO cg_rep_tab INDEX cg_tabix.
*cg_tabix = cg_tabix + 1.
*INSERT 'ID ''SOURCE'' FIELD iv_pwd ID ''KEY'' '
*INTO cg_rep_tab INDEX cg_tabix.
*cg_tabix = cg_tabix + 1.
*INSERT 'FIELD lc_key'
*INTO cg_rep_tab INDEX cg_tabix.
*cg_tabix = cg_tabix + 1.
*INSERT 'ID ''SCR'' FIELD ''X'' ID''DESTINATION'''
*INTO cg_rep_tab INDEX cg_tabix.
*cg_tabix = cg_tabix + 1.
*INSERT 'FIELD iv_pwd'
*INTO cg_rep_tab INDEX cg_tabix.
*cg_tabix = cg_tabix + 1.
*INSERT 'ID ''DSTLEN'' FIELD lv_slen.'
*INTO cg_rep_tab INDEX cg_tabix.
*cg_tabix = cg_tabix + 1.
*INSERT 'ENDIF.'
*INTO cg_rep_tab INDEX cg_tabix.
*cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_CONNECT'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'user            = iv_user'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'password        = iv_pwd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'host            = iv_host'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'rfc_destination = lc_dest'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'handle          = lv_hdl'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'not_connected   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'OTHERS          = 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_error.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message = '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''Unable to connect FTP server.''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_success.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''Connected to FTP server.''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'clear lv_cmd .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'concatenate '' cd '' iv_path into lv_cmd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'separated by space.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'REFRESH lt_result.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_COMMAND'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'handle        = lv_hdl'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'command       = lv_cmd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'data          = lt_result'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'tcpip_error   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'command_error = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'data_error    = 3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'clear lv_cmd.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc NE 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_error.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''Error in file path''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'concatenate ''!rm'' iv_filename into'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cmd separated by space.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' REFRESH lt_result.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_COMMAND'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'command      = lv_cmd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'rfc_destination = lc_dest'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'data          = lt_result'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'tcpip_error   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'command_error = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'data_error    = 3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'if sy-subrc eq 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_success.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''Local file deleted successfully''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'Else.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'concatenate ''!del'' iv_filename into'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cmd separated by space.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'REFRESH lt_result.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_COMMAND'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'command       = lv_cmd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'rfc_destination = lc_dest'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'data          = lt_result'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'tcpip_error   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'command_error = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'data_error    = 3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'if sy-subrc ne 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_error.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''Local file form work directory not deleted''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'Else.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_success.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''Local file deleted successfully''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'endif.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'endif.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'concatenate ''del'' iv_filename'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'into lv_cmd separated by '' ''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'REFRESH lt_result.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_COMMAND'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'handle  = lv_hdl'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'command = lv_cmd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'data = lt_result'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'tcpip_error   = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'command_error = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'data_error    = 3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc = 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_success.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message = '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''File is deleted from FTP Successfully''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_error.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-message'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '= ''Error in Deleting file from FTP''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''FTP_DISCONNECT'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'handle = lv_hdl.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''RFC_CONNECTION_CLOSE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'destination = lc_dest'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'OTHERS      = 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = gc_success.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT
'et_file_return-message = ''Error in RFC .''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name
FROM cg_rep_tab."
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6359]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1e25b81e-41d5-4042-b7fb-ec2a484912b6]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3502]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[180]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_APPLOG]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2c68a5bc-5da0-4aef-8846-e784a3e601a3]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6359]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0"  "-ABAP_PROGRAM_NAME=ZODI_APPLOG" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT ZODI_APPLOG.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp             TYPE rsimp, 
  wa_exp             TYPE rsexp, 
  wa_tables          TYPE rstbl, 
  cg_rep_tab         LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 


 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'IV_ACTION'. 
 wa_imp-TYP = 'CHAR10'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_APPOBJ_NAME'. 
 wa_imp-TYP = 'BALHDR-OBJECT'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_SUBOBJ_NAME'. 
 wa_imp-TYP = 'BALHDR-SUBOBJECT'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'IV_EXT_ID'. 
 wa_imp-TYP = 'BALHDR-EXTNUMBER'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_APPLOG' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string .
INSERT 'DATA : E_S_MSG   TYPE  BAL_S_MSG,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   lv_lognumber type balognr,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   lv_loghandle type balloghndl,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   messages   type table of  balm,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   wa_messages type balm,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   header_data type table of balhdr,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   wa_header type balhdr,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   dateto type baldate,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '	   timeto type baltime.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT SINGLE lognumber FROM BALHDR INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_lognumber WHERE OBJECT = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND SUBOBJECT = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND EXTNUMBER = IV_EXT_ID.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT SINGLE LOG_HANDLE FROM BALHDR INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_loghandle WHERE OBJECT = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND SUBOBJECT = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND EXTNUMBER = IV_EXT_ID.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF IV_ACTION = ''LOG_DISP''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_header-lognumber = lv_lognumber.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'append wa_header to header_data.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''APPL_LOG_READ_DB'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  OBJECT                   = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  SUBOBJECT                = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXTERNAL_NUMBER          = IV_EXT_ID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   HEADER_DATA              = header_data'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  MESSAGES                 =  messages.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  if sy-subrc is initial.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    clear et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    loop at messages into wa_messages.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-type =  wa_messages-msgty.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-id =   wa_messages-msgid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-number = wa_messages-msgnumber.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message_v1 = wa_messages-msgv1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message_v2 = wa_messages-msgv2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message_v3 = wa_messages-msgv3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message_v4 = wa_messages-msgv4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      append et_file_return .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    endloop.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  endif.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF IV_ACTION = ''LOG_DEL''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''APPL_LOG_DELETE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OBJECT                          = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    SUBOBJECT                        =  IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    EXTERNAL_NUMBER                  =  IV_EXT_ID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    DATE_TO                         =  dateto'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   TIME_TO                          =  timeto'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   LOG_CLASS                        = ''1'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   I_WITH_COMMIT_WORK               = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   I_PACKAGE_SIZE                   = 100'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   NO_AUTHORITY                     = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   OTHERS                           = 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF SY-SUBRC <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-MESSAGE = ''Application Log Deleted''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6360]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e99aec13-4d4b-4034-a13d-94f195fd1721]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3503]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[190]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_LOGMSG_ADD_TASK]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c2afcc14-45b0-40b6-b939-89de0d3de85c]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6360]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0"  "-ABAP_PROGRAM_NAME=ZODI_LOGMSG_ADD_TASK" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT ZODI_LOGMSG_ADD_TASK.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp             TYPE rsimp, 
  wa_exp             TYPE rsexp,
  wa_tables          TYPE rstbl, 
  cg_rep_tab         LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 

 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'ET_FILE_RETURN'. 
 wa_imp-TYP = 'BAPIRET2'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'I_LOG_HANDLE'. 
 wa_imp-TYP = 'BALLOGHNDL'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'LS_LOG'. 
 wa_imp-TYP = 'BAL_S_LOG'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 
 wa_tables-parameter = 'ET_HANDLE'. 
 wa_tables-TYP = 'BAPIRET2_T'. 
 wa_tables-optional = 'X'. 
 APPEND wa_tables TO  tables_parameter.
 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_LOGMSG_ADD_TASK' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter.
*CHANGING_PARAMETER = changing_parameter.
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
  DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string .
INSERT 'DATA : I_S_MSG TYPE BAL_S_MSG ,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '       E_S_MSG_HANDLE TYPE BALMSGHNDL,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '       es_file_return TYPE BAPIRET2,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '       T1 TYPE CHAR10,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '       ls_handle TYPE bapiret2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lt_handle TYPE BAL_T_LOGH.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF i_log_handle IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''BAL_LOG_CREATE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' I_S_LOG                 = ls_log'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' E_LOG_HANDLE            = i_log_handle'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' LOG_HEADER_INCONSISTENT = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'OTHERS                  = 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF SY-SUBRC <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ls_handle-message = i_log_handle.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND ls_handle TO et_handle.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ls_handle.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF et_file_return-ID IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-ID = ''CL''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF et_file_return-NUMBER IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  et_file_return-NUMBER = ''000''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGTY = et_file_return-TYPE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGID = et_file_return-ID.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGNO = et_file_return-NUMBER.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGV1 = et_file_return-MESSAGE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGV2 = et_file_return-MESSAGE_V1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGV3 = et_file_return-MESSAGE_V2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-MSGV4 = et_file_return-MESSAGE_V3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'I_S_MSG-PROBCLASS = ''1''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''BAL_LOG_MSG_ADD'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    I_S_MSG                  = I_S_MSG'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   LOG_NOT_FOUND             = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   MSG_INCONSISTENT          = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   LOG_IS_FULL               = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   OTHERS                    = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '          .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF SY-SUBRC <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR lt_handle.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'append I_LOG_handle TO lt_handle.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''BAL_DB_SAVE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   I_CLIENT               = SY-MANDT'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   I_SAVE_ALL             = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   I_T_LOG_HANDLE         = lt_handle'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   LOG_NOT_FOUND          = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SAVE_NOT_ALLOWED       = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   NUMBERING_ERROR        = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   OTHERS                 = 4 .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF SY-SUBRC <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6361]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d18480ba-66d9-46f0-ab7d-37592010f43c]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3504]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[210]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_LOGMSG_ADD]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0f70c8a5-8bd0-4d1d-89f6-6347956d1f7c]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6361]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0"  "-ABAP_PROGRAM_NAME=ZODI_LOGMSG_ADD" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT ZODI_LOGMSG_ADD.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list TYPE STANDARD TABLE OF rsexc, 
 export_parameter    TYPE STANDARD TABLE OF rsexp, 
 import_parameter    TYPE STANDARD TABLE OF rsimp, 
 parameter_docu      TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter    TYPE STANDARD TABLE OF rstbl, 
 changing_parameter  TYPE STANDARD TABLE OF rscha,
  wa_imp             TYPE rsimp, 
  wa_exp             TYPE rsexp, 
  wa_tables          TYPE rstbl, 
  cg_rep_tab         LIKE abaptext OCCURS 20, 
 include_name        TYPE rs38l-include, 
 cg_tabix            LIKE sy-tabix. 

 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'ET_FILE_RETURN'. 
 wa_imp-TYP = 'BAPIRET2'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'I_LOG_HANDLE'. 
 wa_imp-TYP = 'BALLOGHNDL'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'LS_LOG'. 
 wa_imp-TYP = 'BAL_S_LOG'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 
 wa_tables-parameter = 'ET_HANDLE'. 
 wa_tables-TYP = 'BAPIRET2_T'. 
 wa_tables-optional = 'X'. 
 APPEND wa_tables TO  tables_parameter.
 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_LOGMSG_ADD' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter.
*CHANGING_PARAMETER = changing_parameter.
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
  DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
INSERT 'CALL FUNCTION ''ZODI_LOGMSG_ADD_TASK'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ET_FILE_RETURN       = et_file_return'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    I_LOG_HANDLE         = i_log_handle'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    LS_LOG               = ls_log'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   et_HANDLE        = et_HANDLE .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6362]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ae714135-8e90-471e-84a9-2d9a2be67db8]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3505]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[250]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_BG_CONTROLLER]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8b3997b0-18a7-4850-9dd6-f1ad5a867b3b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6362]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_BG_CONTROLLER" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT ZODI_BG_CONTROLLER.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    	  TYPE STANDARD TABLE OF rsexp, 
 import_parameter         TYPE STANDARD TABLE OF rsimp, 
 parameter_docu           TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter         TYPE STANDARD TABLE OF rstbl, 
 changing_parameter       TYPE STANDARD TABLE OF rscha,
  wa_imp                  TYPE rsimp, 
  wa_exp                  TYPE rsexp, 
  wa_tables               TYPE rstbl, 
  cg_rep_tab              LIKE abaptext OCCURS 20, 
 include_name             TYPE rs38l-include, 
 cg_tabix                 LIKE sy-tabix,
 t_version                TYPE cvers. 

 CLEAR: wa_imp, 
        wa_exp, 
        wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_imp-parameter = 'IV_ACTION'. 
 wa_imp-TYP = 'CHAR10'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_JOBNAME'. 
 wa_imp-TYP = 'TBTCJOB-JOBNAME'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_JOBCLASS'. 
 wa_imp-TYP = 'BTCJOBCLAS'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_JOBCOUNT'. 
 wa_imp-TYP = 'TBTCJOB-JOBCOUNT'. 
 wa_imp-optional = 'X'.  
 APPEND wa_imp TO  import_parameter.  
 wa_imp-parameter = 'IV_APPOBJ_NAME'. 
 wa_imp-TYP = 'CHAR20'. 
 wa_imp-optional = 'X'.  
 APPEND wa_imp TO  import_parameter.  
 wa_imp-parameter = 'IV_SUBOBJ_NAME'. 
 wa_imp-TYP = 'CHAR20'. 
 wa_imp-optional = 'X'.  
 APPEND wa_imp TO  import_parameter.  
 wa_imp-parameter = 'IV_DELIMITER'. 
 wa_imp-TYP = 'CHAR3'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_FILENAME'. 
 wa_imp-TYP = 'CHAR255'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_USER'. 
 wa_imp-TYP = 'CHAR35'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_PWD'. 
 wa_imp-TYP = 'CHAR35'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
  wa_imp-parameter = 'IV_HOST'. 
 wa_imp-TYP = 'CHAR35'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_HASHVALUE'. 
 wa_imp-TYP = 'CHAR35'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_PATH'. 
 wa_imp-TYP = 'CHAR255'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_MAX_ROW_CNT'. 
 wa_imp-TYP = 'SYTABIX'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_FETCH_BATCH_SIZE'. 
 wa_imp-TYP = 'SYTABIX'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IT_ODIVAR'. 
 wa_imp-TYP = 'ZODI_COND'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_PROGNAME'. 
 wa_imp-TYP = 'CPROG'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
   wa_imp-parameter = 'IV_EXT_ID'. 
 wa_imp-TYP = 'BALHDR-EXTNUMBER'. 
APPEND wa_imp TO  import_parameter.
wa_imp-parameter = 'I_CHAIN'. 
 wa_imp-TYP = 'CHAR25'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
  wa_imp-parameter = 'IV_CHAIN'. 
 wa_imp-TYP = 'RSPC_CHAIN'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'IV_TIMEOUT'. 
 wa_imp-TYP = 'INT4'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'IV_NOPLAN'. 
 wa_imp-TYP = 'RS_BOOL'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'OHDEST'. 
 wa_imp-TYP = 'RSOHDEST'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'OH_DBTABLE'. 
 wa_imp-TYP = 'tabname'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'IV_REQUID_L'. 
 wa_imp-TYP = 'RSSID'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'IV_REQUID_H'. 
 wa_imp-TYP = 'RSSID'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'IV_HIERNAME'. 
 wa_imp-TYP = 'RSHIENM'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'IV_HIER_VERS'. 
 wa_imp-TYP = 'CHAR3'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 wa_imp-parameter = 'IV_HIER_DATETO'. 
 wa_imp-TYP = 'STRING'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
**new parameter added**
 wa_imp-parameter = 'IV_TMP_DIR_PATH'. 
 wa_imp-TYP = 'CHAR255'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
wa_imp-parameter = 'IV_LOG_DIR_PATH'. 
 wa_imp-TYP = 'CHAR255'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter.
 **
 wa_exp-parameter = 'EV_JOBCOUNT'. 
 wa_exp-types  = 'X'. 
 wa_exp-dbfield  = 'TBTCJOB-JOBCOUNT'. 
 APPEND wa_exp TO  export_parameter. 
  wa_exp-parameter = 'EV_JOBSTATE'. 
 wa_exp-types  = 'X '. 
 wa_exp-dbfield  = 'TBTCO-JOBGROUP'. 
 APPEND wa_exp TO  export_parameter. 
  wa_exp-parameter = 'EV_APIVERSION'. 
 wa_exp-types  = 'X '. 
 wa_exp-dbfield  = 'TBTCJOB-JOBCOUNT'. 
 APPEND wa_exp TO  export_parameter. 
   wa_exp-parameter = 'EV_EXT_ID'. 
 wa_exp-types  = 'X '. 
 wa_exp-dbfield  = 'BALHDR-EXTNUMBER'. 
 APPEND wa_exp TO  export_parameter. 
 wa_tables-parameter = 'ET_JOBLOGTBL'. 
 wa_tables-dbstruct  = 'TBTC5'. 
 APPEND wa_tables TO tables_parameter. 
 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_BG_CONTROLLER' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3.  
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: release_status,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IV_HANDLE TYPE BALMSGHNDL,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' E_S_MSG   TYPE  BAL_S_MSG.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA:'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_aborted     TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_finished    TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_preliminary TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_ready       TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_running     TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_scheduled   TYPE btcstatus,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cond1       TYPE line,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cond2       TYPE line,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cond3       TYPE line,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cond4       TYPE line,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_cond5       TYPE line,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_guid        TYPE guid_32.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'FIELD-SYMBOLS: <ls_cond> TYPE line.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA gt_message TYPE bapiret2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TYPES: BEGIN OF lty_spool,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '         name TYPE rqident,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '       END OF lty_spool.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: wa_spool TYPE lty_spool,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lt_spool TYPE TABLE OF lty_spool,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lt_tbtcp TYPE TABLE OF tbtcp,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lv_subrc TYPE sysubrc,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lv_error TYPE rspoemsg.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'FIELD-SYMBOLS: <ls_tbtcp> TYPE tbtcp.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WRITE :''Operation Selected :'',iv_action,sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NEW-LINE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF iv_action = ''JOB_SUBMIT''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''JOB_OPEN'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname          = iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobclass         = iv_jobclass'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount         = ev_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    cant_create_job  = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    invalid_job_data = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname_missing  = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OTHERS           = 4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WRITE :''Job ID is created:'',ev_jobcount,sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NEW-LINE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA:rspar_tab  TYPE TABLE OF rsparams,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     rspar_line LIKE LINE OF rspar_tab,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     wa_odivar    TYPE zodi_cond_str.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'RANGES: it_cond FOR line .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'LOOP AT it_odivar INTO wa_odivar.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-sign = ''I''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-option = ''EQ''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-low = wa_odivar-field.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  APPEND it_cond.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-sign = ''I''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-option = ''EQ''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  it_cond-low = wa_odivar-val.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  APPEND it_cond.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CLEAR : wa_odivar,it_cond.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDLOOP.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''GUID_CREATE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EV_GUID_32       =   lv_guid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EV_EXT_ID = lv_guid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF NOT IV_TMP_DIR_PATH IS INITIAL'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'OR NOT IV_LOG_DIR_PATH IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '**submit report with IV_TMP_DIR_PATH field****'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SUBMIT (iv_progname)'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND RETURN'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_deli = iv_delimiter'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_file = iv_filename'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_user  = iv_user'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_pwd   = iv_pwd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_host  = iv_host'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_hash = iv_hashvalue'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_path  = iv_path'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_maxc = iv_max_row_cnt'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_fetc = iv_fetch_batch_size'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH i_chain = i_chain'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_CHAIN = iv_chain'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_tout = iv_timeout'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH I_NOPLAN = iv_noplan'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH OHDEST = ohdest'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH oh_dbtab = OH_DBTABLE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_req_l = IV_REQUID_L'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_req_h = IV_REQUID_H'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_hname = IV_HIERNAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_hvers = IV_HIER_VERS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_hdtto = IV_HIER_DATETO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_app = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_SUb = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_EXTID        = EV_EXT_ID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_TMDIR = IV_TMP_DIR_PATH'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_LODIR = IV_LOG_DIR_PATH'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH it_cond IN it_cond'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'USER sy-uname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VIA JOB iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NUMBER ev_jobcount.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SUBMIT (iv_progname)'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND RETURN'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_deli = iv_delimiter'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_file = iv_filename'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_user  = iv_user'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_pwd   = iv_pwd'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_host  = iv_host'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_hash = iv_hashvalue'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_path  = iv_path'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_maxc = iv_max_row_cnt'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_fetc = iv_fetch_batch_size'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH i_chain = i_chain'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_CHAIN = iv_chain'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_tout = iv_timeout'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH I_NOPLAN = iv_noplan'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH OHDEST = ohdest'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH oh_dbtab = OH_DBTABLE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_req_l = IV_REQUID_L'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_req_h = IV_REQUID_H'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_hname = IV_HIERNAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_hvers = IV_HIER_VERS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH iv_hdtto = IV_HIER_DATETO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_app = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_SUb = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH IV_EXTID        = EV_EXT_ID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WITH it_cond IN it_cond'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'USER sy-uname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VIA JOB iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NUMBER ev_jobcount.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WRITE: ''Job Submitted'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NEW-LINE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''JOB_CLOSE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount             = ev_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname              = iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    strtimmed            = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_was_released     = release_status'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    cant_start_immediate = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    invalid_startdate    = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname_missing      = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_close_failed     = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_nosteps          = 5'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_notex            = 6'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    lock_failed          = 7'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    invalid_target       = 8'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OTHERS               = 9.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WRITE :''Job Close with release status'',release_status.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'NEW-LINE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF iv_action = ''JOB_STATE''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''SHOW_JOBSTATE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount         = iv_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname          = iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    aborted          = lv_aborted'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    finished         = lv_finished'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    preliminary      = lv_preliminary'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ready            = lv_ready'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    running          = lv_running'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    scheduled        = lv_scheduled'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount_missing = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname_missing  = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_notex        = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OTHERS           = 4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc = 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF lv_aborted  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''ABORTED''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is aborted'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSEIF lv_finished  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''FINISHED''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is Finished'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSEIF lv_preliminary  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''PRELIMINARY''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is Preliminary'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSEIF lv_ready  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''READY''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is ready'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSEIF lv_running  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''RUNNING''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is running'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSEIF lv_scheduled  = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ev_jobstate = ''SCHEDULED''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WRITE :''Job is scheduled'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF iv_action = ''JOB_LOG''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''BP_JOBLOG_READ'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    client                = sy-mandt'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount              = iv_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    joblog                = '' '''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname               = iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    joblogtbl             = et_joblogtbl'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    cant_read_joblog      = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount_missing      = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    joblog_does_not_exist = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    joblog_is_empty       = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    joblog_name_missing   = 5'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname_missing       = 6'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_does_not_exist    = 7'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OTHERS                = 8.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  et_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CASE sy-subrc.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Cannot Read the Job log''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job Count Missing''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 3.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job Log does not exist''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job Log is empty''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 5.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job Log name is missing''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 6.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job name is missing''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WHEN 7.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ''Job does not exist''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDCASE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'LOOP AT et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  WRITE :et_file_return-message.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  NEW-LINE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDLOOP.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF  iv_action = ''API_VERSION''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ev_apiversion = ''1.0''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF iv_action = ''JOB_ABORT''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: ls_tbtco TYPE tbtco,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lv_procid TYPE WPPID.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''BP_JOB_ABORT'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobcount                   = iv_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    jobname                    = iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    checking_of_job_has_failed = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_abort_has_failed       = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_does_not_exist         = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    job_is_not_active          = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    no_abort_privilege_given   = 5'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OTHERS                     = 6.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*New Logic'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' DO 5 TIMES.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' SELECT SINGLE * from tbtco'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ls_tbtco'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WHERE jobname eq iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' AND jobcount eq iv_jobcount.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF sy-subrc IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF ls_tbtco-status = ''A''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WRITE :''Job is forcefully aborted'',sy-uzeit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lv_procid = ls_tbtco-wpprocid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    CALL FUNCTION ''TH_STOP_WP'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '        WP_PID             = lv_procid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDDO.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF iv_action = ''JOB_SPOOL''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  DATA: lv_spool_num TYPE btclistid,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '        lv_spool TYPE rspoid,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '        it_spool_xls TYPE TABLE OF LINE,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '        wa_spool_xls TYPE line.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  SELECT SINGLE listident'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  FROM tbtcp'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  INTO lv_spool_num'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  WHERE jobname EQ iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  AND jobcount  EQ iv_jobcount'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  AND stepcount EQ 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF sy-subrc EQ 0 AND NOT lv_spool_num IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  lv_spool = lv_spool_num.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CALL FUNCTION ''RSPO_RETURN_ABAP_SPOOLJOB'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      rqident                    = lv_spool'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*  FIRST_LINE                 = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*  LAST_LINE                  ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      buffer                     = it_spool_xls'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     no_such_job                = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     not_abap_list              = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     job_contains_no_data       = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     selection_empty            = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     no_permission              = 5'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     can_not_access             = 6'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     read_error                 = 7'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     OTHERS                     = 8.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ET_FILE_RETURN-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ET_FILE_RETURN-MESSAGE'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'et_file_return-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'LOOP AT it_spool_xls INTO wa_spool_xls.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  et_file_return-message = wa_spool_xls.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CLEAR : wa_spool_xls.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDLOOP.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF iv_action = ''SPOOL_CLR''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT * FROM tbtcp'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'INTO TABLE lt_tbtcp'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'WHERE jobname EQ iv_jobname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'AND JOBCOUNT eq IV_JOBCOUNT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF sy-subrc EQ 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  LOOP AT lt_tbtcp ASSIGNING <ls_tbtcp>.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    wa_spool-name = <ls_tbtcp>-listident.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    APPEND wa_spool TO lt_spool.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    CLEAR wa_spool.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDLOOP.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DELETE lt_spool WHERE name IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'LOOP AT lt_spool INTO wa_spool.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  CALL FUNCTION ''RSPO_R_RDELETE_SPOOLREQ'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      spoolid             = wa_spool-name'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     status              = lv_subrc.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF lv_subrc NE 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO et_file_return-message'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-message = ''Spool is deleted''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-message_v1 = wa_spool-name.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDLOOP.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSEIF IV_ACTION = ''LOG_DISP'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    OR IV_ACTION = ''LOG_DEL''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''ZODI_APPLOG'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IV_ACTION            = IV_ACTION'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IV_APPOBJ_NAME       = IV_APPOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IV_SUBOBJ_NAME       = IV_SUBOBJ_NAME'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IV_EXT_ID            = IV_EXT_ID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ET_FILE_RETURN       = ET_FILE_RETURN.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6363]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2b96fe8a-d587-498e-a293-b415c549b14a]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3506]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[260]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_BG_REPORT_SAVE_ACT]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fa874dbb-ad3e-43fd-8508-18a852b4fce5]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6363]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_BG_REPORT_SAVE_ACTV" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT Z_CODE_PACKAGE_ACTIVATE_BG.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 

DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter         TYPE STANDARD TABLE OF rsexp, 
 import_parameter         TYPE STANDARD TABLE OF rsimp, 
 parameter_docu           TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter         TYPE STANDARD TABLE OF rstbl, 
 changing_parameter       TYPE STANDARD TABLE OF rscha,
  wa_imp                  TYPE rsimp, 
  wa_exp                  TYPE rsexp, 
  wa_tables               TYPE rstbl, 
  cg_rep_tab              LIKE abaptext OCCURS 20, 
 include_name             TYPE rs38l-include, 
 cg_tabix                 LIKE sy-tabix,
 t_version                TYPE cvers.

 CLEAR: wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 

 wa_imp-parameter = 'IV_PROGNAME'. 
 wa_imp-TYP = 'CPROG'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 
 wa_imp-parameter = 'IV_PACKAGE'. 
 wa_imp-TYP = 'DEVCLASS'. 
 wa_imp-optional = ' '. 
 APPEND wa_imp TO  import_parameter. 

wa_imp-parameter = 'IV_PREFIX'. 
 wa_imp-TYP = 'CHAR100'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 

 wa_imp-parameter = 'OBJECT'. 
 wa_imp-TYP = 'TROBJTYPE'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 

wa_imp-parameter = 'IV_DESC'. 
 wa_imp-TYP = 'AS4TEXT'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 
 
wa_imp-parameter = 'IV_TRAN_LAYER'. 
 wa_imp-TYP = 'BAPISCTS02'. 
 wa_imp-optional = 'X'. 
 APPEND wa_imp TO  import_parameter. 

 wa_tables-parameter = 'ET_FILE_RETURN'. 
 wa_tables-dbstruct  = 'BAPIRET2'. 
 APPEND wa_tables TO tables_parameter. 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_BG_REPORT_SAVE_ACTV' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3. 
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string .
INSERT 'CONSTANTS: c_shorttext  TYPE trdevclass-ctext'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VALUE ''ODI Package'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'c_reqtext         TYPE e07t-as4text'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VALUE ''ODI Transport Request'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'c_request         TYPE e070-trfunction'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VALUE ''K'','
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'c_task            TYPE e070-trfunction'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'VALUE ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA:'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'trans_req_no        TYPE e070-trkorr,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'task_number         TYPE e070-trkorr,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lt_ko200            TYPE TREDT_OBJECTS ,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200            TYPE ko200.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: lt_E07T TYPE TABLE OF E07T,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_E07T TYPE E07T,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lt_e070 TYPE TABLE OF e070,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lt_e071 TYPE TABLE OF e071,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_e071 TYPE e071,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_e070 TYPE e070,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'lv_skip TYPE char1,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ls_e07t TYPE e07t.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA: ls_ret TYPE  BAPIRET2,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ls_task TYPE BAPISCTS07,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lt_task TYPE TABLE OF BAPISCTS07,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      ls_author TYPE BAPISCTS12,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      tran_layer type BAPISCTS02,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      lt_author TYPE TABLE OF BAPISCTS12.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR lv_skip.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF NOT IV_PREFIX IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CONCATENATE IV_PREFIX ''%'' INTO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IV_PREFIX.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IV_PREFIX = IV_PROGNAME.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'SELECT *'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' FROM e071'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO TABLE lt_e071'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WHERE pgmid = ''R3TR'' AND'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' object = object AND'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' obj_name LIKE IV_PREFIX AND'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' lockflag = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF sy-subrc IS INITIAL AND'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  NOT lt_e071 IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   READ TABLE lt_e071 INTO wa_e071'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INDEX 1.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF sy-subrc IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' SELECT SINGLE * from e070 INTO wa_e070'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WHERE TRKORR = wa_e071-trkorr.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF sy-subrc is initial.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF NOT wa_e070-strkorr IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' trans_req_no = wa_e070-strkorr.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' trans_req_no = wa_e071-trkorr.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*Getting the transport description'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' SELECT SINGLE * from e07t'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO ls_e07t'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WHERE langu = sy-langu'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' AND trkorr = trans_req_no.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IF sy-subrc IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF ls_e07t-as4text <> iv_desc.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    ls_e07t-as4text = iv_desc.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    UPDATE e07t FROM ls_e07t.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IF sy-subrc IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      COMMIT WORK AND WAIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      et_file_return-message = ''TR Description Updated''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '      APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' lv_skip = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF lv_skip IS INITIAL.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR trans_req_no.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ls_task-type = ''K''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ls_task-author = sy-uname.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND ls_task TO lt_task.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ls_author-task_owner = sy-uname.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND ls_author TO lt_author.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*tran_layer-LAYER_SET = ''X''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '*tran_layer-LAYER = iv_tran_layer.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'tran_layer = iv_tran_layer.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CALL FUNCTION ''BAPI_CTREQUEST_CREATE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    REQUEST_TYPE       = ''K'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    AUTHOR             = sy-uname'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    TEXT               = c_reqtext'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    TRANSLAYER         = tran_layer'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    REQUESTID          = trans_req_no'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    RETURN             = ls_ret'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     AUTHORLIST         = lt_author'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '     TASK_LIST          = lt_task.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  IF sy-subrc <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   et_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   et_file_return-MESSAGE =  ls_ret-message.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   READ TABLE lt_task INTO ls_task INDEX 2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   IF sy-subrc = 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    task_number = ls_task-taskid.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-trkorr = trans_req_no.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-pgmid = ''R3TR''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-object = ''PROG''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-obj_name = IV_PROGNAME.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-devclass = IV_PACKAGE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wa_ko200-operation = ''I''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND wa_ko200 TO lt_ko200.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CLEAR wa_ko200.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''TR_EDIT_CHECK_OBJECTS_KEYS'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WI_ORDER                             = trans_req_no'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WI_WITH_DIALOG                       = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WI_SEND_MESSAGE                      = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    IV_APPEND_TO_ORDER                   = ''X'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '  TABLES'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '    WT_E071                              = lt_ko200'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXCEPTIONS'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_APPEND_ERROR_KEYS        = 1'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_APPEND_ERROR_OBJCT       = 2'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_APPEND_ERROR_ORDER       = 3'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_BUT_SE01                 = 4'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_NO_HEADER_OBJECT         = 5'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_NO_ORDER_SELECTED        = 6'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_REPAIRED_OBJECT          = 7'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_SYSTEM_ERROR             = 8'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_TADIR_MISSING            = 9'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_TADIR_UPDATE_ERROR       = 10'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_UNKNOWN_DEVCLASS         = 11'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_UNKNOWN_OBJECTTYPE       = 12'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_CLOSED_SYSTEM              = 13'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_CONSOLIDATION_LEVEL        = 14'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_DDIC_IN_CUSTOMER_SYS       = 15'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_DELIVERY_SYSTEM            = 16'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_DIFFERENT_ORDERTYPES       = 17'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_DIFFERENT_TASKTYPES        = 18'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_ENQUEUE_FAILED             = 19'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_GENERATED_OBJECT           = 20'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_ILL_LOCK                   = 21'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_LOCK_ENQUEUE_FAILED        = 22'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_MIXED_ORDERS               = 23'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_MIX_LOCAL_TRANSP_OBJ       = 24'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_NO_SHARED_REPAIR           = 25'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_OBJECT_LOCKED              = 26'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_REPAIRED_OBJECT            = 27'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_SHOW_CLIENT                = 28'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_TADIR_MISSING              = 29'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_UNKNOWN_DEVCLASS           = 30'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_NO_CHECK_CALL            = 31'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_CATEGORY_MIXTURE         = 32'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_CLOSED_CLIENT              = 33'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_CLOSED_ALE_OBJECT          = 34'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_UNALLOWED_SUPERUSER        = 35'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_CUSTOM_OBJ_AT_SAP        = 36'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_ACCESS_DENIED            = 37'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_NO_REPAIR_SYSTEM           = 38'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_NO_LICENSE                 = 39'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_CENTRAL_BASIS              = 40'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_USER_AFTER_ERROR           = 41'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   CANCEL_EDIT_USER_AFTER_ERROR         = 42'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   SHOW_ONLY_OBJECT_NOT_PATCHABLE       = 43'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '   OTHERS                               = 44.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF SY-SUBRC <> 0.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-type = ''E''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' INTO et_file_return-message'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ELSE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-type = ''S''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' et_file_return-message = ''Program added  to package''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' APPEND et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6364]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[09aa67bc-5f06-42c9-a9e6-f6eb51d203d1]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3507]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[270]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_RSPC_API_CHAIN_START]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6afad95a-0dd4-48d0-a72e-1eb65c129d2a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6364]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_RSPC_API_CHAIN_START" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT  ZODI_RSPC_API_CHAIN_START.
TABLES : tdevc.
CONSTANTS : c_devclass  LIKE tadir-devclass
VALUE '<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>',
c_shorttext LIKE trdevclass-ctext   VALUE
'Package for ODI-BW ',
c_reqtext  LIKE e07t-as4text   VALUE
'Transport Request for ODI-BW Objects',
c_msgclass LIKE rsdag-arbgb VALUE
'ZODIBW_MSGCL',
c_msgtext LIKE t100a-stext VALUE
'Message class for ODI-BW (Testing)',
c_fungrp LIKE rsnewleng-area VALUE
'<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>',
c_fgrptext LIKE tftit-stext VALUE
'Func Group for ODI-BW (Testing)' ,
c_task  TYPE e070-trfunction VALUE 'S'.
DATA : trans_req_no LIKE e070-trkorr,
obj_name     LIKE  tadir-obj_name,
es_tadir     LIKE  tadir,
e071         TYPE STANDARD TABLE OF e071,
wa_e071      TYPE  e071,
et_log       TYPE  sprot_u_tab,
task_number         TYPE e070-trkorr.
DATA:   it_bdcdata  TYPE STANDARD TABLE
OF  bdcdata    WITH HEADER LINE.
DATA:   it_messtab  TYPE STANDARD TABLE
OF  bdcmsgcoll WITH HEADER LINE.
DATA:  wa_headerstruct LIKE dd02v.
DATA : BEGIN OF struct OCCURS 0,
tabname TYPE tabname,
END OF struct.
DATA : wa_struct LIKE LINE OF struct.
DATA  t_structure TYPE STANDARD TABLE
OF dd03p WITH HEADER LINE.
DATA t_version TYPE cvers.
DATA ls_devclass TYPE trdevclass.
DATA lv_something_changed LIKE trpari-flag.
DATA lv_request LIKE e070-trkorr.
DATA:exception_list	TYPE TABLE OF rsexc,
export_parameter  TYPE TABLE OF rsexp,
import_parameter  TYPE TABLE OF rsimp,
parameter_docu  TYPE TABLE OF rsfdo,
tables_parameter  TYPE TABLE OF rstbl,
changing_parameter  TYPE TABLE OF rscha.
DATA : wa_exp TYPE rsexp,
wa_imp TYPE rsimp,
wa_tab TYPE rstbl,
wa_tdevc TYPE  tdevc.
DATA: cg_rep_tab  LIKE abaptext OCCURS 20.
DATA : include_name TYPE rs38l-include.
DATA: cg_tabix LIKE sy-tabix.

CLEAR IMPORT_PARAMETER.
Refresh IMPORT_PARAMETER.
CLEAR tables_PARAMETER.
Refresh tables_PARAMETER.
CLEAR EXPORT_PARAMETER.
Refresh EXPORT_PARAMETER.
wa_imp-parameter = 'IV_CHAIN'.
wa_imp-TYP  = 'RSPC_CHAIN'.
wa_imp-optional = ' '.
APPEND wa_imp TO  import_parameter.
CLEAR WA_IMP.
wa_imp-parameter = 'IV_TIMEOUT'.
wa_imp-TYP = 'INT4'.
wa_imp-DEFAULT = '300'.
wa_imp-optional = ' '.
APPEND wa_imp TO  import_parameter.
CLEAR WA_IMP.
wa_imp-parameter = 'IV_NOPLAN'.
wa_imp-TYP = 'RS_BOOL'.
wa_imp-optional = 'X'.
APPEND wa_imp TO  import_parameter.
CLEAR wa_exp.
CLEAR export_parameter.
wa_exp-parameter = 'ERRORMESSAGE'.
wa_exp-types  = 'X'.
wa_exp-DBFIELD  = 'SOLI-LINE'.
APPEND wa_exp TO  export_parameter.
CLEAR wa_exp.
wa_tab-parameter = 'ET_FILE_RETURN'.
wa_tab-dbstruct  = 'BAPIRET2'.
APPEND wa_tab TO tables_parameter.
CALL FUNCTION 'FUNCTION_CREATE_REMOTE'
  EXPORTING
    funcname         = 'ZODI_RSPC_API_CHAIN_START'
    function_pool    = c_fungrp
    remote_call      = 'X'
    short_text       = 'Trigger the Process Chain'
  IMPORTING
    function_include = include_name
  TABLES
    exception_list   = exception_list
    export_parameter = export_parameter
    import_parameter = import_parameter
    parameter_docu   = parameter_docu
    tables_parameter = tables_parameter.
READ REPORT include_name
INTO cg_rep_tab.
DESCRIBE TABLE cg_rep_tab LINES cg_tabix.
cg_tabix = cg_tabix - 3.
DATA: str TYPE string,str1 TYPE string,str2
TYPE string,str3 TYPE string
,str4 TYPE string,str5 TYPE string .
INSERT 'DATA: LV_LOGID  TYPE  RSPC_LOGID,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' LV_STATUS  TYPE  RSPC_STATE,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'start_TSTMP_c  type  char15,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'curr_TSTMP_C  type   char15,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'start_TSTMP  type  TIMESTAMP,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'curr_TSTMP  type  TIMESTAMP,'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'diff_time   like   SY-UZEIT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DATA w_bapiret2 TYPE bapiret2.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IF IV_CHAIN is not initial.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'concatenate sy-datum SY-UZEIT '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'into start_TSTMP_c .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'start_TSTMP = start_TSTMP_c.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''RSPC_API_CHAIN_START'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'i_chain  = IV_CHAIN'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
*<?if(sSapBwVersion.equalsIgnoreCase(                        "700")) {?>
INSERT 'I_NOPLAN = IV_NOPLAN'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
*<?}?>
INSERT ' IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'E_LOGID = LV_LOGID.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '**Check the Process Chain Status-'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DO.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION ''RSPC_API_CHAIN_GET_STATUS'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'i_chain   = IV_CHAIN'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'i_logid = LV_LOGID'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'E_STATUS  = LV_STATUS.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
*INSERT ' E_MESSAGE = ERRORMESSAGE.'
*INTO cg_rep_tab INDEX cg_tabix.
*cg_tabix = cg_tabix + 1.
INSERT 'case LV_STATUS.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'when ''G'' or ''F''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'clear ERRORMESSAGE.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'exit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'when ''A'' or ''P'' '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'or ''S'' or ''Q'' or ''Y''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'wait up to 30 seconds.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'concatenate sy-datum sy-uzeit'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' into curr_TSTMP_c .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'curr_TSTMP  = curr_TSTMP_c .'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'CALL FUNCTION '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''TIMESTAMP_DURATION_DETERMINE'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'EXPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' TIMESTAMP1 = start_TSTMP'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'TIMESTAMP2 = curr_TSTMP'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'UNIT = ''S'''
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'IMPORTING'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'DURATION  = diff_time.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'if diff_time > IV_TIMEOUT.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'w_bapiret2-type = ''E''. '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'w_bapiret2-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''Process Chain job Timed out'' . '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND w_bapiret2 TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR et_file_return. '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'exit. endif.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'when others.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'w_bapiret2-type = ''E''. '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'w_bapiret2-message ='
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT '''Process Chain Ended with Errors'' . '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'APPEND w_bapiret2 TO et_file_return.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT ' CLEAR et_file_return. '
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.


INSERT 'exit.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'endcase.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDDO.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT 'ENDIF.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name
FROM cg_rep_tab."
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6365]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3a8760e0-673c-490d-9515-666366f94022]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3508]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install Report Process Chain for BG]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7a1940b5-0624-40c0-b26a-4658e6333802]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6365]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_RSPC_API_CHAIN_START" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-SAP_REPORT_NAME_PREFIX=ODI SAP PRODUCTION OBJECTS" "-IV_OBJTYPE=DEVC" "-IV_DELETE_SAP_SPOOL=0" "-ABAP_PROGRAM_BODY=
PARAMETER: I_CHAIN TYPE RSPC_CHAIN.
PARAMETER: IV_CHAIN TYPE RSPC_CHAIN.
PARAMETER: IV_TOUT TYPE	INT4.
DATA: ERRORMESSAGE LIKE SOLI-LINE,
et_file_return TYPE TABLE OF BAPIRET2.
DATA: LV_LOGID  TYPE  RSPC_LOGID,
LV_STATUS  TYPE  RSPC_STATE,
start_TSTMP_c  type  char15,
curr_TSTMP_C  type   char15,
start_TSTMP  type  TIMESTAMP,
curr_TSTMP  type  TIMESTAMP,
diff_time   like   SY-UZEIT.
DATA w_bapiret2 TYPE bapiret2.
IF IV_CHAIN is not initial.
concatenate sy-datum SY-UZEIT
into start_TSTMP_c .
start_TSTMP = start_TSTMP_c.
CALL FUNCTION 'RSPC_API_CHAIN_START'
EXPORTING
i_chain  = IV_CHAIN
IMPORTING
E_LOGID = LV_LOGID.
**Check the Process Chain Status-
DO.
CALL FUNCTION 'RSPC_API_CHAIN_GET_STATUS'
EXPORTING
i_chain   = IV_CHAIN
i_logid = LV_LOGID
IMPORTING
E_STATUS  = LV_STATUS.
case LV_STATUS.
when 'G' or 'F'.
clear ERRORMESSAGE.
exit.
when 'A' or 'P'
or 'S' or 'Q' or 'Y'.
wait up to 30 seconds.
concatenate sy-datum sy-uzeit
into curr_TSTMP_c .
curr_TSTMP  = curr_TSTMP_c .
CALL FUNCTION
'TIMESTAMP_DURATION_DETERMINE'
EXPORTING
TIMESTAMP1 = start_TSTMP
TIMESTAMP2 = curr_TSTMP
UNIT = 'S'
IMPORTING
DURATION  = diff_time.
if diff_time > IV_TOUT.
w_bapiret2-type = 'E'.
w_bapiret2-message =
'Process Chain job Timed out' .
APPEND w_bapiret2 TO et_file_return.
CLEAR et_file_return.
exit. endif.
when others.
w_bapiret2-type = 'E'.
w_bapiret2-message =
'Process Chain Ended with Errors' .
APPEND w_bapiret2 TO et_file_return.
CLEAR et_file_return.
exit.
endcase.
ENDDO.
ENDIF."]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6366]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8389a326-fcd2-404a-9192-58829c772200]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3509]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[290]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install SAP Version check RFC]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[82d8bd98-fbc7-4bae-a90a-2d1e50a4ad67]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6366]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getOption("UPLOAD_ABAP_BASE").equals("1")) { %>
_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=1" "-ZRFC_RUN_INSTALL=0" "-ABAP_PROGRAM_NAME=ZODI_GET_VERSION" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
REPORT ZODI_GET_VERSION.
CONSTANTS : 
 c_function_group  TYPE rsnewleng-area 
 VALUE '<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_PROD")%>', 
 c_funcname_text   TYPE tftit-stext 
 VALUE 'Install code and execute', 
 c_remote_call     TYPE RS38L-REMOTE 
 VALUE 'X'. 
 
DATA: exception_list      TYPE STANDARD TABLE OF rsexc, 
 export_parameter    	  TYPE STANDARD TABLE OF rsexp, 
 import_parameter         TYPE STANDARD TABLE OF rsimp, 
 parameter_docu           TYPE STANDARD TABLE OF rsfdo, 
 tables_parameter         TYPE STANDARD TABLE OF rstbl, 
 changing_parameter       TYPE STANDARD TABLE OF rscha,
  wa_imp                  TYPE rsimp, 
  wa_exp                  TYPE rsexp, 
  wa_tables               TYPE rstbl, 
  cg_rep_tab              LIKE abaptext OCCURS 20, 
 include_name             TYPE rs38l-include, 
 cg_tabix                 LIKE sy-tabix,
 t_version                TYPE cvers. 

 CLEAR: wa_imp, 
        wa_exp, 
        wa_tables. 
 REFRESH: exception_list, 
          export_parameter, 
          import_parameter, 
          parameter_docu, 
          tables_parameter, 
          cg_rep_tab. 
 wa_exp-parameter = 'EX_VERSION'. 
 wa_exp-typ  = 'CHAR20'. 
 APPEND wa_exp TO  export_parameter.
 
 CALL FUNCTION 'FUNCTION_CREATE_REMOTE' 
 EXPORTING 
 funcname         = 'ZODI_GET_VERSION' 
 function_pool    = c_function_group 
 remote_call      = c_remote_call 
 short_text       = c_funcname_text 
 IMPORTING 
 function_include = include_name 
 TABLES 
 exception_list   = exception_list 
 export_parameter = export_parameter 
 import_parameter = import_parameter 
 parameter_docu   = parameter_docu 
 tables_parameter = tables_parameter. 
 READ REPORT include_name 
 INTO cg_rep_tab. 
 DESCRIBE TABLE cg_rep_tab LINES cg_tabix. 
 cg_tabix = cg_tabix - 3.  
 DATA: str TYPE string,str1 TYPE string,str2 
 TYPE string,str3 TYPE string 
 ,str4 TYPE string,str5 TYPE string . 
 INSERT 'ex_version = ''39''.'
INTO cg_rep_tab INDEX cg_tabix.
cg_tabix = cg_tabix + 1.
INSERT REPORT include_name 
 FROM cg_rep_tab.
"
<% } else { %>
OdiSleep "-DELAY=0"
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6367]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fa5d56ae-02ea-440f-982d-d91ba2588f55]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3510]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get SAP Characteristics]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a5e55ec0-4a65-4f54-82ab-824e95f68c2c]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6367]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//BW-RKM: Get SAP Characteristics step
//Check the ODI Release
<%boolean isOdi10gOr11g = odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION");%>

//Initialize Open Tool log file name
<% otLogFileName = ""; %>
<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
<% otLogFileName = odiRef.getOption("LOG_FILE_NAME")+".opentool.log"; %>
<%}else {%> //else if ODI 12c
<%otLogFileName = "C:\OT_logs\OTLOG.opentool.log";%>
<%}%>

<?
// SAP connection properties get from Topology Manager Defintions
String hostName = odiRef.getInfo("SRC_DSERV_NAME");
String userName = odiRef.getInfo("SRC_USER_NAME");
String password = odiRef.getInfo("SRC_PASS");
String sapTransportLayerName = null;

<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
String sSapBwVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_NUMBER");
String sapClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_CLIENT" );
String sapLanguage = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_LANGUAGE" );
String systemNo = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_NUMBER" );
String sapTransLayerNameFF = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TRANSPORT_LAYER_NAME" );
String sapTransLayerNameKM = "<%=odiRef.getOption("SAP_TRANSPORT_LAYER_NAME")%>";
sapTransportLayerName = (sapTransLayerNameKM == null || sapTransLayerNameKM.isEmpty())?((sapTransLayerNameFF == null || sapTransLayerNameFF.isEmpty())?"SAP":sapTransLayerNameFF):sapTransLayerNameKM;

//new flex fields addition for SAP Message Logon & SAP SNC Connection
String msHost = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_MSHOST" );
String msService = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_MSSERV" );
String msR3Name = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_ID" );
String msGroupName = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_GROUP" );
String sncPartner = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_PARTNERNAME" );
String sncClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_MYNAME" );
String sncQOP = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_QOP" );
<%} else { /*if ODI 12C*/%>
String sSapBwVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_NUMBER");
String sapClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_CLIENT" );
String sapLanguage = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_LANGUAGE" );
String systemNo = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_NUMBER" );
String sapTransLayerNameFF = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TRANSPORT_LAYER_NAME" );
String sapTransLayerNameKM = "<%=odiRef.getOption("SAP_TRANSPORT_LAYER_NAME")%>";
sapTransportLayerName = (sapTransLayerNameKM == null || sapTransLayerNameKM.isEmpty())?((sapTransLayerNameFF == null || sapTransLayerNameFF.isEmpty())?"SAP":sapTransLayerNameFF):sapTransLayerNameKM;

//new flex fields addition for SAP Message Logon & SAP SNC Connection
String msHost = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_MSHOST" );
String msService = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_MSSERV" );
String msR3Name = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_ID" );
String msGroupName = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_GROUP" );
String sncPartner = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_PARTNERNAME" );
String sncClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_MYNAME" );
String sncQOP = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_QOP" );
<%}%>
?>
// New Connection changes
<?
            int sapcontype = oracle.odi.sap.km.OdiSapConnection.getSAPConnectionType(odiRef.getInfo("SRC_DSERV_NAME"),sncPartner,msHost);
?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6368]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[83ef12fe-da91-41b9-bdbb-56953715c7a4]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3511]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[400]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_GET_MAX_REQID]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3a67c4a5-a44a-4b9d-8dbe-8a903ae341ac]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6368]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_GET_MAX_REQID" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-ABAP_EXPORT_PARAMETERS=EV_MAX_REQ_ID,/BI0/SREQUID-SID;EV_ERROR_MSG,DD02T-DDTEXT" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_PROD")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
select max( sid ) from /BI0/SREQUID into EV_MAX_REQ_ID.
If sy-subrc NE 0.
EV_ERROR_MSG = 'No Request ids are available in the system!'.
ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6369]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9fdd182c-e2c4-409b-9178-c0637cde7d8f]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3512]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[410]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5a4c712c-f543-4c1f-9bf6-ad017649a1d8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6369]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[/*************************************************
**************(Initialize Adapter)**************
*************************************************/
import java.util.ResourceBundle;

// RKM generation log File
//Removing file based logging
logFile ="";
<%if(isOdi10gOr11g) {%>
logFile = System.getProperty("java.io.tmpdir")+ 
	   System.getProperty("file.separator")+
                         "ODI_BW_RKM.log";
<%}%>
//load & initialize Resource bundle
commonResourceBundle = new oracle.odi.sap.km.CommonResourceBundle();//resourceBundle object to initialize & load resources
commonResourceBundle.initializeResource("sap_rkm_bw");//initializing/loading resources
resourceBundle = commonResourceBundle.getResourceBundle();
logger =  OdiSAPBWLogger.getLogger(logFile, resourceBundle);
logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"In initialize step...."});


//Setting Parameters for type of SAP Connection
            oracle.odi.sap.km.OdiSapConnection sapConnection = new oracle.odi.sap.km.OdiSapConnection();
            sapConnection.setSAP_CONNECTION_TYPE(<?=sapcontype?>);
            sapConnection.setSAP_CLIENT_NO("<?=sapClient?>");
            logger.fine("ODIKM-SAPBW-RKM-10000", "", new Object[]{"SAP Client No: " + sapConnection.getSAP_CLIENT_NO()});
            sapConnection.setSAP_USER_NAME("<?=userName?>");
            logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP User Name: "+sapConnection.getSAP_USER_NAME()});
            sapConnection.setSAP_LANGUAGE("<?=sapLanguage?>");
            logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP Language: "+sapConnection.getSAP_LANGUAGE()});                                
            switch (<?=sapcontype?>) {
                case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION: {
                    sapConnection.setSAP_HOST_NAME("<?=hostName?>");
                     logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP Host Name: "+sapConnection.getSAP_HOST_NAME()});                   
                    sapConnection.setSAP_PWD("<?=password?>");
                    sapConnection.setSAP_SYSTEM_NO("<?=systemNo?>");
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP System No: "+sapConnection.getSAP_SYSTEM_NO()});
                }
                ;
                break;
                case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION: {                    
                    sapConnection.setSAP_HOST_NAME("<?=hostName?>");
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP Host Name: "+sapConnection.getSAP_HOST_NAME()});
                    sapConnection.setSAP_SYSTEM_NO("<?=systemNo?>");
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP System No: "+sapConnection.getSAP_SYSTEM_NO()});
                    sapConnection.setSAP_SNC_CLIENT("<?=sncClient?>");
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP SNC Client Name: "+sapConnection.getSAP_SNC_CLIENT()});
                    sapConnection.setSAP_SNC_PARTNER("<?=sncPartner?>");
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP SNC Partner Name: "+sapConnection.getSAP_SNC_PARTNER()});
                    sapConnection.setSAP_SNC_LEVEL("<?=sncQOP?>");
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP SNC Level: "+sapConnection.getSAP_SNC_LEVEL()});    
                }
                ;
                break;
                case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: {
                    sapConnection.setSAP_USER_NAME("<?=userName?>");
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP User Name: "+sapConnection.getSAP_USER_NAME()});
                    sapConnection.setSAP_PWD("<?=password?>");
                    sapConnection.setSAP_MSG_HOST("<?=msHost?>");
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP Message Host Name: "+sapConnection.getSAP_MSG_HOST()});
                    sapConnection.setSAP_SERV_NAME("<?=msService?>");
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP Service Name: "+sapConnection.getSAP_SERV_NAME()});
                    sapConnection.setSAP_LOGON_GROUP("<?=msGroupName?>");//must be CASE-Sensitive
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP Group Name: "+sapConnection.getSAP_LOGON_GROUP()});
                    sapConnection.setSAP_R3NAME("<?=msR3Name?>");
                    logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP R3 Name: "+sapConnection.getSAP_R3NAME()});                    
                }
                ;
                break;
            }
            sapConnection.setSAP_CONNECTION_POOL_NAME("<%= odiRef.getOption("SAP_CONNECTION_POOL")%>");
            logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP Connection Pool Name: "+sapConnection.getSAP_CONNECTION_POOL_NAME()});
            sapConnection.setSAP_CONNECTION_POOL_SIZE("<%= odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>");
            logger.fine("ODIKM-SAPBW-RKM-10000","",new Object[] {"SAP Connection Pool size: "+sapConnection.getSAP_CONNECTION_POOL_SIZE()});
// end of new connection changes
odiSapBwLang = OdiSAPBWLang.getInstance(commonResourceBundle);
adapter = new OdiSAPBWAdapter(logFile,
odiSapBwLang,sapConnection
);
//Get SNP REV Handler
OdiSAPBWSnpRevHandler snpHandler = new OdiSAPBWSnpRevHandler(adapter.getSAPConnector());]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6370]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a5780822-5f02-406f-84dc-34a14e4708f3]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3513]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[420]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Reset SNP REV Tables]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6ccc7325-7812-4f24-a286-61e40dae2b6b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6370]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%if (odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")) { /* Code for ODI 10g and 11g */ %>
OdiReverseResetTable -MODEL=<%=odiRef.getModel("ID")%>
        <%} else {/* Code for ODI 12c and later */ %>
OdiReverseResetTable -MODEL=<%=odiRef.getModel("GLOBAL_ID")%>
        <%}%>
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6371]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b84e580e-aa2f-4c21-97bc-f125458743f0]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3514]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[300]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_CUBE_SEARCH]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2940d8f5-df20-4976-8c97-3f8890053b69]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6371]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_CUBE_SEARCH" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>"  "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_INFOCUBE,RSDCUBE-INFOCUBE;IV_CUBE_DESC,RSDCUBET-TXTLG" "-ABAP_TABLE_PARAMETERS=ET_CUBE_IAERA,ZCUBE_S_SEARCH;ET_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
TYPES: BEGIN OF ty_rsdcubet,
infocube TYPE rsinfocube,
txtlg    TYPE rstxtlg,
END OF ty_rsdcubet.

TYPES: BEGIN OF ty_rsdcube,
infocube TYPE rsinfocube,
infoarea TYPE rsinfoarea,
END OF ty_rsdcube.

DATA: wa_rsdcubet TYPE ty_rsdcubet,
it_rsdcubet TYPE TABLE OF ty_rsdcubet,
mtext type string.
DATA: wa_rsdcube TYPE ty_rsdcube,
it_rsdcube TYPE TABLE OF ty_rsdcube.

IF iv_cube_desc IS NOT INITIAL.
DO.
REPLACE '%' WITH '*' INTO iv_cube_desc.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
ENDIF.

**** IF Infocube name is passed

IF iv_infocube IS NOT INITIAL.

SELECT infocube infoarea
FROM rsdcube
INTO TABLE it_rsdcube
WHERE objvers = 'A'
AND infocube LIKE iv_infocube.
 if sy-subrc <> 0.
 et_return-type = 'E'.
 et_return-message = 'Infocube not found'.
 et_return-message_v1 = IV_INFOCUBE.
 append et_return.
 clear et_return.
 exit.
 endif.
**-----if description is also passed.
IF iv_cube_desc IS NOT INITIAL AND it_rsdcube
IS NOT INITIAL.

SELECT infocube txtlg
FROM rsdcubet
INTO TABLE it_rsdcubet
FOR ALL ENTRIES IN it_rsdcube
WHERE infocube = it_rsdcube-infocube
AND objvers = 'A'
AND langu = sy-langu.
*       AND txtlg CP iv_cube_desc.

IF sy-subrc = 0.

LOOP AT it_rsdcubet INTO wa_rsdcubet.
IF wa_rsdcubet-txtlg CP iv_cube_desc.
ELSE.
DELETE TABLE it_rsdcubet FROM wa_rsdcubet.
ENDIF.
ENDLOOP.
endif.
if it_rsdcubet is initial.
et_return-type = 'E'.
et_return-message 
= 'Description of Infocube not found'.
et_return-message_v1 = IV_INFOCUBE.
append et_return.
clear  et_return.
exit.
ENDIF.

LOOP AT it_rsdcubet INTO wa_rsdcubet.

et_cube_iaera-infocube = wa_rsdcubet-infocube.
et_cube_iaera-description = wa_rsdcubet-txtlg.

READ TABLE it_rsdcube INTO wa_rsdcube 
WITH KEY infocube = wa_rsdcubet-infocube.
IF sy-subrc = 0.
et_cube_iaera-infoarea = wa_rsdcube-infoarea.
ENDIF.

APPEND et_cube_iaera.
CLEAR et_cube_iaera.

ENDLOOP.

ELSEIF iv_cube_desc IS INITIAL.

LOOP AT it_rsdcube INTO wa_rsdcube.

et_cube_iaera-infocube = wa_rsdcube-infocube.
SELECT SINGLE txtlg FROM rsdcubet
INTO et_cube_iaera-description
WHERE objvers = 'A'
AND langu = sy-langu
AND infocube = wa_rsdcube-infocube.

et_cube_iaera-infoarea = wa_rsdcube-infoarea.
APPEND et_cube_iaera.
CLEAR et_cube_iaera.

ENDLOOP.
ENDIF.

ELSEIF iv_infocube IS INITIAL
AND iv_cube_desc IS NOT INITIAL.

SELECT infocube txtlg
FROM rsdcubet
INTO TABLE it_rsdcubet
WHERE objvers = 'A'
AND langu = sy-langu.
*       AND txtlg CP iv_cube_desc.

if sy-subrc <> 0.
et_return-type = 'E'.
et_return-message 
= 'Description of Infocube not found'.
et_return-message_v1 = IV_INFOCUBE.
append et_return.
clear et_return.
exit.
endif.
* AND txtlg CP iv_cube_desc.
LOOP AT it_rsdcubet INTO wa_rsdcubet.
IF wa_rsdcubet-txtlg CP iv_cube_desc.
ELSE.
DELETE TABLE it_rsdcubet FROM wa_rsdcubet.
ENDIF.
ENDLOOP.
if it_rsdcubet is initial.
et_return-type = 'E'.
et_return-message 
= 'Description of Infocube not found'.
et_return-message_v1 = IV_INFOCUBE.
 append et_return.
 clear  et_return.
 exit.
 endif.
IF it_rsdcubet IS NOT INITIAL.

SELECT infocube infoarea
FROM rsdcube
INTO TABLE it_rsdcube
FOR ALL ENTRIES IN it_rsdcubet
WHERE objvers = 'A'
AND infocube = it_rsdcubet-infocube.

LOOP AT it_rsdcube INTO wa_rsdcube.

et_cube_iaera-infocube = wa_rsdcube-infocube.
READ TABLE it_rsdcubet INTO wa_rsdcubet
WITH KEY infocube = wa_rsdcube-infocube.
IF sy-subrc = 0.
et_cube_iaera-description = wa_rsdcubet-txtlg.
ENDIF.
et_cube_iaera-infoarea = wa_rsdcube-infoarea.
APPEND et_cube_iaera.
CLEAR et_cube_iaera.

ENDLOOP.

ENDIF.

ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6372]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3fe7ce3c-aac8-45f9-bac0-ae5e0a0a0536]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3515]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[310]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_IOBJ_SEARCH]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[bebffc4a-a1d3-4274-98d1-22621795a9cf]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6372]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_IOBJ_SEARCH" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_IOBJECT,RSDIOBJ-IOBJNM;IV_IOBJ_DESC,RSDIOBJT-TXTLG" "-ABAP_TABLE_PARAMETERS=ET_IOBJECT,ZIOBJ_S_SEARCH;ET_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
TYPES: BEGIN OF ty_rsdiobj,
iobjnm TYPE rsdiobjnm,
END OF ty_rsdiobj.
TYPES: BEGIN OF ty_rsdiobjt,
iobjnm TYPE rsdiobjnm,
txtlg  TYPE rstxtlg,
END OF ty_rsdiobjt.
DATA: wa_rsdiobj TYPE ty_rsdiobj,
it_rsdiobj TYPE TABLE OF ty_rsdiobj.
DATA: wa_rsdiobjt TYPE ty_rsdiobjt,
it_rsdiobjt TYPE TABLE OF ty_rsdiobjt.
DATA lv_index TYPE int4.
IF iv_iobj_desc IS NOT INITIAL.
DO.
REPLACE '%' WITH '*' INTO iv_iobj_desc.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
ENDIF.
*****
IF iv_iobject IS NOT INITIAL.
SELECT iobjnm
FROM rsdiobj
INTO TABLE it_rsdiobj
WHERE objvers = 'A'
AND iobjtp NE 'KYF'
AND iobjnm LIKE iv_iobject.

if sy-subrc <> 0.
  et_return-type = 'E'.
  et_return-message = 'Infoobject not found'.
  et_return-message_v1 = iv_iobject.
  append et_return.
  clear et_return.
  exit.
  endif.
IF it_rsdiobj IS NOT INITIAL.
SELECT iobjnm txtlg
FROM rsdiobjt
INTO TABLE it_rsdiobjt
FOR ALL ENTRIES IN it_rsdiobj
WHERE langu = sy-langu
AND iobjnm = it_rsdiobj-iobjnm
AND objvers = 'A'.
ENDIF.
**-----if description is also passed.
IF iv_iobj_desc IS NOT INITIAL.
LOOP AT it_rsdiobjt INTO wa_rsdiobjt.
IF wa_rsdiobjt-txtlg CP iv_iobj_desc.
et_iobject-iobjnm = wa_rsdiobjt-iobjnm.
et_iobject-txtlg = wa_rsdiobjt-txtlg.
APPEND et_iobject.
CLEAR et_iobject.
ELSE.
DELETE TABLE it_rsdiobjt FROM wa_rsdiobjt.
ENDIF.
ENDLOOP.
if it_rsdiobjt is initial.
  et_return-type = 'E'.
  et_return-message =
  'Info object Description not found'.
  et_return-message_v1 = iv_iobject.
  append et_return.
  clear et_return.
  exit.
  endif.
ELSEIF iv_iobj_desc IS INITIAL AND
it_rsdiobj IS NOT INITIAL.
LOOP AT it_rsdiobj INTO wa_rsdiobj.
et_iobject-iobjnm = wa_rsdiobj-iobjnm.
READ TABLE it_rsdiobjt INTO wa_rsdiobjt
WITH KEY iobjnm = wa_rsdiobj-iobjnm.
IF sy-subrc = 0.
et_iobject-txtlg = wa_rsdiobjt-txtlg.
ENDIF.
APPEND et_iobject.
CLEAR: et_iobject, wa_rsdiobj, wa_rsdiobjt.
ENDLOOP.
ENDIF.
ELSEIF iv_iobject IS INITIAL
AND iv_iobj_desc IS NOT INITIAL.
SELECT iobjnm txtlg
FROM rsdiobjt
INTO TABLE it_rsdiobjt
WHERE langu = sy-langu
AND objvers = 'A'.
SELECT iobjnm
FROM rsdiobj
INTO TABLE it_rsdiobj
FOR ALL ENTRIES IN it_rsdiobjt
WHERE iobjnm = it_rsdiobjt-iobjnm
AND objvers = 'A'
AND iobjtp NE 'KYF'.
LOOP AT it_rsdiobjt INTO wa_rsdiobjt.
lv_index = sy-tabix.
READ TABLE it_rsdiobj INTO wa_rsdiobj
WITH KEY iobjnm = wa_rsdiobjt-iobjnm.
IF sy-subrc NE 0.
DELETE it_rsdiobjt INDEX lv_index.
ENDIF.
ENDLOOP.
IF sy-subrc = 0.
LOOP AT it_rsdiobjt INTO wa_rsdiobjt.
IF wa_rsdiobjt-txtlg CP iv_iobj_desc.
et_iobject-iobjnm = wa_rsdiobjt-iobjnm.
et_iobject-txtlg = wa_rsdiobjt-txtlg.
APPEND et_iobject.
CLEAR et_iobject.
ELSE.
DELETE TABLE it_rsdiobjt FROM wa_rsdiobjt.
ENDIF.
ENDLOOP.
if it_rsdiobjt is initial.
et_return-type = 'E'.
et_return-message =
'Info object Description not found'.
et_return-message_v1 = iv_iobject.
append et_return.
clear et_return.
exit.
endif.
ENDIF.
ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6373]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0f3af261-f3e2-452b-971c-d67cba41e30e]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3516]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[320]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_ODSO_SEARCH]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[777d38aa-37a6-40fe-b998-7c001a492fc5]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6373]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_ODSO_SEARCH" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|"  "-FILE_NAME=<Value>" "-FTP_HOST=<value>" "-FTP_USER=<value>" "-FTP_PASSWORD=<value>" "-FTP_REMOTE_DIR=<value>" "-FTP_PASSIVE_MODE=<value>"  "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_ODSOBJECT,RSDODSO-ODSOBJECT;IV_ODSO_DESC,RSDODSOT-TXTLG" "-ABAP_TABLE_PARAMETERS=ET_ODSOBJECT,ZODSO_S_SEARCH;ET_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
TYPES: BEGIN OF ty_rsdodso,
odsobject TYPE rsdodsobject,
odsotype TYPE rsdodsotype,
END OF ty_rsdodso.
TYPES: BEGIN OF ty_rsdodsot,
odsobject TYPE rsdodsobject,
txtlg  TYPE rstxtlg,
END OF ty_rsdodsot.
DATA: wa_rsdodso TYPE ty_rsdodso,
it_rsdodso TYPE TABLE OF ty_rsdodso.
DATA: wa_rsdodsot TYPE ty_rsdodsot,
it_rsdodsot TYPE TABLE OF ty_rsdodsot.
IF iv_odso_desc IS NOT INITIAL.
DO.
REPLACE '%' WITH '*' INTO iv_odso_desc.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
ENDIF.
IF iv_odsobject IS NOT INITIAL.
SELECT odsobject odsotype
FROM rsdodso
INTO TABLE it_rsdodso
WHERE objvers = 'A'
AND odsobject LIKE iv_odsobject.
IF sy-subrc NE 0.
et_return-type = 'E'.
et_return-message = 'ODS not found'.
et_return-message_v1 = IV_ODSOBJECT.
append et_return.
clear et_return.
EXIT.
ENDIF.
SELECT odsobject txtlg
FROM rsdodsot
INTO TABLE it_rsdodsot
FOR ALL ENTRIES IN it_rsdodso
WHERE langu = sy-langu
AND odsobject = it_rsdodso-odsobject
AND objvers = 'A'.
*IF sy-subrc NE 0.
*EXIT.
*ENDIF.
ENDIF.
IF iv_odso_desc IS NOT INITIAL AND
iv_odsobject IS INITIAL.
SELECT odsobject txtlg
FROM rsdodsot
INTO TABLE it_rsdodsot
WHERE langu = sy-langu
AND objvers = 'A'.
IF sy-subrc NE 0.
et_return-type = 'E'.
et_return-message = 'Description of ODS not found'.
et_return-message_v1 = IV_ODSOBJECT.
append et_return.
clear et_return.
EXIT.
ENDIF.
ENDIF.
IF it_rsdodsot IS NOT INITIAL AND
iv_odso_desc IS NOT INITIAL.
LOOP AT it_rsdodsot INTO wa_rsdodsot.
IF wa_rsdodsot-txtlg CP iv_odso_desc.
et_odsobject-odsobject = wa_rsdodsot-odsobject.
et_odsobject-txtlg = wa_rsdodsot-txtlg.
ELSE.
DELETE TABLE it_rsdodsot FROM wa_rsdodsot.
ENDIF.
ENDLOOP.
IF it_rsdodsot IS INITIAL.
*IF sy-subrc NE 0.
et_return-type = 'E'.
et_return-message = 'Description  of ODS not found'.
et_return-message_v1 = IV_ODSOBJECT.
append et_return.
clear et_return.
EXIT.
ENDIF.
*ENDIF.
ENDIF.
IF iv_odsobject IS NOT INITIAL.
LOOP AT it_rsdodso INTO wa_rsdodso.
et_odsobject-odsobject = wa_rsdodso-odsobject.
et_odsobject-odsotype = wa_rsdodso-odsotype.
READ TABLE it_rsdodsot INTO wa_rsdodsot
WITH KEY odsobject = wa_rsdodso-odsobject.
IF sy-subrc = 0.
et_odsobject-txtlg = wa_rsdodsot-txtlg.
ELSEIF sy-subrc NE 0 
AND iv_odso_desc IS NOT INITIAL.
CONTINUE.
ENDIF.
APPEND et_odsobject.
CLEAR: et_odsobject, wa_rsdodso, wa_rsdodsot.
ENDLOOP.
EXIT.
ENDIF.
IF iv_odso_desc IS NOT INITIAL AND
iv_odsobject IS INITIAL.
SELECT odsobject odsotype
FROM rsdodso
INTO TABLE it_rsdodso
FOR ALL ENTRIES IN it_rsdodsot
WHERE objvers = 'A'
AND odsobject = it_rsdodsot-odsobject.
IF sy-subrc NE 0.
et_return-type = 'E'.
et_return-message = 'Description of ODS not found'.
et_return-message_v1 = IV_ODSOBJECT.
append et_return.
clear et_return.
EXIT.
ENDIF.
LOOP AT it_rsdodsot INTO wa_rsdodsot.
et_odsobject-odsobject = wa_rsdodsot-odsobject.
et_odsobject-txtlg     = wa_rsdodsot-txtlg.
READ TABLE it_rsdodso INTO wa_rsdodso
WITH KEY odsobject = wa_rsdodsot-odsobject.
IF sy-subrc = 0.
et_odsobject-odsotype = wa_rsdodso-odsotype.
ENDIF.
APPEND et_odsobject.
CLEAR: et_odsobject, wa_rsdodso, wa_rsdodsot.
ENDLOOP.
EXIT.
ENDIF.
IF iv_odsobject IS NOT INITIAL.
LOOP AT it_rsdodso INTO wa_rsdodso.
et_odsobject-odsobject = wa_rsdodso-odsobject.
et_odsobject-odsotype = wa_rsdodso-odsotype.
READ TABLE it_rsdodsot INTO wa_rsdodsot
WITH KEY odsobject = wa_rsdodso-odsobject.
IF sy-subrc = 0.
et_odsobject-txtlg = wa_rsdodsot-txtlg.
ENDIF.
APPEND et_odsobject.
APPEND et_odsobject.
CLEAR: et_odsobject, wa_rsdodso, wa_rsdodsot.
ENDLOOP.
ENDIF.
IF iv_odso_desc IS NOT INITIAL AND
iv_odsobject IS NOT INITIAL.
SELECT odsobject txtlg
FROM rsdodsot
INTO TABLE it_rsdodsot
WHERE langu = sy-langu
AND objvers = 'A'.
IF sy-subrc = 0.
LOOP AT it_rsdodsot INTO wa_rsdodsot.
IF wa_rsdodsot-txtlg CP iv_odso_desc.
  et_odsobject-odsobject = wa_rsdodsot-odsobject.
  et_odsobject-txtlg = wa_rsdodsot-txtlg.
  APPEND et_odsobject.
  CLEAR et_odsobject.
ELSE.
  DELETE TABLE it_rsdodsot FROM wa_rsdodsot.
ENDIF.
ENDLOOP.
ENDIF.
ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6374]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0b9dfc5b-5479-44cf-86a9-dfd80a3a99c4]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3517]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[330]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Install ZODI_OHDEST_SEARCH]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ed1a0b49-058e-4ad1-91bc-9d292bbae4fc]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6374]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>" "-EXECUTE=0" "-SYNTAX_CHECK_FLAG=0" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_OHDEST_SEARCH" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=sapClient?>" "-SAP_LANGUAGE=<?=sapLanguage?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<?=hostName?>" "-USER=<?=userName?>" "-PASSWORD=<?=password?>"   "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<?=hostName?>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<?=userName?>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?> "-USER=<?=userName?>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<?=password?>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP_ODI_DEV")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=|" "-FTP_TRANSFER_TIMEOUT=100000" "-USER_ABAP_PARAMETER_NAMES=IV_OHDEST,RSBOHDEST-OHDEST;IV_OHD_DESC,RSBOHDESTT-TXTLG" "-ABAP_TABLE_PARAMETERS=ET_OHDEST,ZOHDEST_S_SEARCH;ET_RETURN,BAPIRET2" "-LOG_FILE_NAME=<%=otLogFileName%>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME_ODI_DEV")%>" "-HASH_VALUE_MARKER=HVM" "-ABAP_PROGRAM_BODY=
TYPES: BEGIN OF ty_rsbohdest,
ohdest TYPE rsohdest,
END OF ty_rsbohdest.

TYPES: BEGIN OF ty_rsbohdestt,
ohdest TYPE rsohdest,
txtlg  TYPE rstxtlg,
END OF ty_rsbohdestt.

DATA: wa_rsbohdest TYPE ty_rsbohdest,
it_rsbohdest TYPE TABLE OF ty_rsbohdest.

DATA: wa_rsbohdestt TYPE ty_rsbohdestt,
it_rsbohdestt TYPE TABLE OF ty_rsbohdestt.


IF iv_ohd_desc IS NOT INITIAL.
DO.
REPLACE '%' WITH '*' INTO iv_ohd_desc.
IF sy-subrc <> 0.
EXIT.
ENDIF.
ENDDO.
ENDIF.

*****
IF iv_ohdest IS NOT INITIAL.

SELECT ohdest
FROM rsbohdest
INTO TABLE it_rsbohdest
WHERE objvers = 'A'
AND desttype EQ 'TAB'
AND ohdest LIKE iv_ohdest.

IF it_rsbohdest IS NOT INITIAL.

SELECT ohdest txtlg
FROM rsbohdestt
INTO TABLE it_rsbohdestt
FOR ALL ENTRIES IN it_rsbohdest
WHERE langu = sy-langu
AND ohdest = it_rsbohdest-ohdest
AND objvers = 'A'.
ELSE.
ET_RETURN-TYPE = 'E'.
ET_RETURN-MESSAGE = 'OHDEST not found'.
ET_RETURN-MESSAGE_V1 = IV_OHDEST.
APPEND et_return.
clear et_return.
EXIT.
ENDIF.

**-----if description is also passed.

IF iv_ohd_desc IS NOT INITIAL.
LOOP AT it_rsbohdestt INTO wa_rsbohdestt.
IF wa_rsbohdestt-txtlg CP iv_ohd_desc.
et_ohdest-ohdest = wa_rsbohdestt-ohdest.
et_ohdest-txtlg = wa_rsbohdestt-txtlg.
APPEND et_ohdest.
CLEAR et_ohdest.
ELSE.
DELETE TABLE it_rsbohdestt FROM wa_rsbohdestt.
ENDIF.
ENDLOOP.
if it_rsbohdestt is initial.
ET_RETURN-TYPE = 'E'.
ET_RETURN-MESSAGE 
= 'Description of OHDEST not found'.
ET_RETURN-MESSAGE_V1 = IV_OHDEST.
APPEND et_return.
clear et_return.
EXIT.
endif.
ELSEIF iv_ohd_desc IS INITIAL AND
it_rsbohdest IS NOT INITIAL.

LOOP AT it_rsbohdest INTO wa_rsbohdest.
et_ohdest-ohdest = wa_rsbohdest-ohdest.

READ TABLE it_rsbohdestt INTO wa_rsbohdestt
WITH KEY ohdest = wa_rsbohdest-ohdest.

IF sy-subrc = 0.
et_ohdest-txtlg = wa_rsbohdestt-txtlg.
ENDIF.

APPEND et_ohdest.
CLEAR: et_ohdest, wa_rsbohdest, wa_rsbohdestt.
ENDLOOP.

ENDIF.

ELSEIF iv_ohdest IS INITIAL
AND iv_ohd_desc IS NOT INITIAL.

SELECT ohdest txtlg
FROM rsbohdestt
INTO TABLE it_rsbohdestt
WHERE langu = sy-langu
AND objvers = 'A'.

IF sy-subrc = 0.
LOOP AT it_rsbohdestt INTO wa_rsbohdestt.
IF wa_rsbohdestt-txtlg CP iv_ohd_desc.
et_ohdest-ohdest = wa_rsbohdestt-ohdest.
et_ohdest-txtlg = wa_rsbohdestt-txtlg.
APPEND et_ohdest.
CLEAR et_ohdest.
ELSE.
DELETE TABLE it_rsbohdestt FROM wa_rsbohdestt.
ENDIF.
ENDLOOP.

if it_rsbohdestt is initial.
ET_RETURN-TYPE = 'E'.
ET_RETURN-MESSAGE = 
'Description of OHDEST not found'.
et_return-message_v1 = IV_OHDEST.
APPEND et_return.
clear et_return.
EXIT.
endif.
ENDIF.
ENDIF."
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6375]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[253260a4-383a-4fce-9ae8-b00edb32ae1e]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3518]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[430]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Validate ODI SAP Component version]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c15b9975-a811-4482-945b-157062845ca1]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6375]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
//Checks the KM, Open Tool and Installed SAP Components version compatibility
KM_VERSION = "40";
MIN_OT_VERSION = "21";
MIN_ODI_SAPCOMP_VERSION = "38";

sapConnection.checkComponentCompatibility(KM_VERSION, MIN_OT_VERSION, MIN_ODI_SAPCOMP_VERSION, false);]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6376]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5451029f-4792-4149-854c-8b1e723c9b42]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3519]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[440]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get Metadata Browser]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f4d32a6c-8be8-4944-9d49-1a492f49cdaf]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6376]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Launch UI if USE_GUI == "YES"
if(adapter.launchGUI()){
	//Wait for user action: Reverse or Cancel
    while(true){
		try{
			Thread.sleep(250);
        } catch (Exception ex){
			throw new Exception(ex.getMessage());
        }	
        if(!adapter.ui.isVisible())
			break;
   }//end of while loop
   if(adapter.ui.isCancle)
            OdiSapUtil.throwODIException("Reversing Canceled/Aborted!");
}]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6377]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[2f985ea4-d086-491e-b27e-7cdc573e8600]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3520]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[450]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get Open Hub Tables]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[85091ce6-f4f9-4b2b-932d-c1f6a9a702d0]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6377]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Reverse selected Open Hub Tables
snpHandler.storeOpenHub();
<% if (!isOdi10gOr11g) { /* if ODI 12c */ %>
	snpHandler.storeFlexFields();
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6378]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0bb38ebe-2b39-42ed-ab7f-2885729e5893]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3521]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[460]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get InfoCubes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8edc4520-8d21-45f3-8180-1cf5a61a60a1]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6378]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Reverse selected InfoCubes
snpHandler.storeInfoCube();
<% if (!isOdi10gOr11g) { /* if ODI 12c */ %>
	snpHandler.storeFlexFields();
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6379]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[70b96517-066c-4c8a-a46c-bf40b86efd65]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3522]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[470]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get InfoObjects]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[38d4a2d1-5b84-4b18-ac2f-18a87519bb61]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6379]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Reverse selected InfoObjects
snpHandler.storeInfoObject();
<% if (!isOdi10gOr11g) { /* if ODI 12c */ %>
	snpHandler.storeFlexFields();
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6380]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String">null</Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ff5a270a-9c72-4393-80f6-2e214e46be61]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3523]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[480]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get ODS/DSO Objects]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[3295ed80-18a2-46f9-bd41-5f9cf24322cd]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6380]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Reverse selected ODS/DSO
snpHandler.storeODSDSO();
<% if (!isOdi10gOr11g) { /* if ODI 12c */ %>
	snpHandler.storeFlexFields();
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6381]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1c5690f9-5a20-4eb8-b8c3-9f0d642606b7]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3524]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[316]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:42.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[490]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Set Metadata]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e117d3cf-62b0-456d-ac0d-bedd3f6030d4]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[6381]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (isOdi10gOr11g) {%>
OdiReverseSetMetaData -MODEL=<%=odiRef.getModel("ID")%> -USE_TABLE_NAME_FOR_UPDATE=true
<%} else {%>
OdiReverseSetMetaData "-MODEL=<%=odiRef.getModel("GLOBAL_ID")%>" -USE_TABLE_NAME_FOR_UPDATE=true
<%}%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6fdb2292-dc4a-4ba0-bc60-15eb7b49afb9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3484]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1777]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[726635fe-f3a7-4caa-984c-c45050cabb8c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3484]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[cdb7b257-4289-4507-85e4-6670a1dc20b7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3484]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1775]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[398d9462-dd70-496b-b18e-23eea78cb33c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3485]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d3608ddd-e34e-45a2-82f0-a9cbe4a759d1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3486]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[33e93722-d5e7-4388-9a7c-44a8cbfeb53f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3487]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ebfee24a-365a-4e75-a897-e74be81eb951]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3488]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[5c262953-818c-4046-b75d-2227f53eea51]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3489]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[4896077c-651b-49d3-9a85-980d922548ac]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3489]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1777]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e6cf3080-393f-4f64-ac7f-b8f61ea2557e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3489]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1775]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[13c25d39-6448-4fb8-b16d-1be3126cd880]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3490]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a0e6e5d9-75ad-4fab-b8bf-32e276074ece]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3495]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9d51da00-b883-42e7-a34c-20b5c35238c9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3495]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1775]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[1af0a532-2999-48dd-b58f-25a1963f6486]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3495]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1777]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ac27d830-62b5-4bf5-82ce-d21b2ab2ff88]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3496]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[41da86dc-b4cb-4ccc-a192-9a078e99bcab]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3497]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e9c18136-9a17-4035-a581-9b45132ccff0]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3498]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[19ee1d6f-e0e5-4e97-a0c2-189d0c070cbd]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3499]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[910ca55d-aa20-4734-a343-0f53947a0694]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3500]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ecec45f2-a136-4f57-abb4-89bf16f62fa5]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3501]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d723eb39-8811-47d4-8b5e-c18a9ab236a3]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3502]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[729de772-36d0-48e7-8e58-84b50a59324f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3503]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c667c941-3679-464f-a43d-24bffda89d12]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3504]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[07df09e5-d7ac-4bd5-a30e-311b86c6cbe2]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3505]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a529e454-bfe8-4d1c-8d66-5d85e1c9ec1f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3506]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d4ade223-9197-48c9-9b47-876d66593dd5]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3507]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[223528eb-c41b-469c-ae24-6652cd2c4095]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3508]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[f693cdc3-04da-4ecf-aba0-2d83e6968387]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3509]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a504913f-fc86-4f72-b734-09d3c362acac]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3510]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1777]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c2587d89-78fd-46cd-bc3c-dd693bb3f136]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3510]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[09bb0c24-13d9-436c-bc0a-60a7aa7cf3fc]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3510]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1775]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9adb4fe2-7d2a-4164-8c64-aa848db44022]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3511]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[7830af4c-11ba-4aa8-8f46-f0f328d3468d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3512]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d95724f3-e00e-4625-8f27-e806bad9f99c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3512]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1775]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9ad8fe9d-bdf7-479d-8a02-2608cf0aca5d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3512]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1777]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9fd2d589-c2dd-40b5-9758-d04ca7998f88]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3514]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[4650f300-bb27-4aa2-8ab8-be2b5e98a752]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3515]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[16156296-d3b3-4ff0-ab69-dec6e75f9897]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3516]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b80b6768-e8f7-4daa-ad41-490d47422422]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3517]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[1cf194d9-e2d5-4e5b-a49a-e5524c9d878e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3521]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d08aa063-27b5-4338-83be-992e82477cc7]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3521]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1775]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[f7bae58f-04ba-4228-b034-735b4c8fc33a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3521]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1777]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[481c0d3d-ba31-4646-9501-96ea56cfdfa9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3522]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1776]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[cc788123-42a7-4268-bc09-ec19c36ab044]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3522]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1775]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[fbc884de-269b-4d88-a180-d43f732cf7ac]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3522]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1777]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_PROJECT.1]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[236fd394-6f34-48ff-9081-6e4dd9bea0f8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6330]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b19f3a9e-205d-4a18-bc0c-d7290d862461]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.316]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b8ccebaa-8933-4c27-af44-2b3fefbf4364]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6331]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[10665fc6-c42a-4194-a25d-f291bf847c88]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6332]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9c5f393a-3023-4390-ba8b-03758b1beedb]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.111]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6333]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d341f78e-1258-4fed-9e81-08bcb0e6fc0a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6334]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4b2f0376-87cd-4ba6-91ca-9289481424b7]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6335]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[41272b81-b67e-464c-9609-367399594bfc]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6336]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b5b69005-6b4e-4f8b-b837-5d46a44389dd]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6337]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[59ee685c-00d3-4caf-b84b-9a37480efdf2]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6338]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a41a9181-5344-472c-8ad8-aedb05edf486]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6339]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[92437cb1-fa45-4ee9-a3d4-51841f63d4f8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6340]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[30a4cdc4-83e1-44b5-9e40-d24835f47632]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.103]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6341]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9bd5549f-4f30-4700-bdf6-ded90639b5cc]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6342]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6825d78a-9ae9-4ab9-bd91-1de16215a21a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6343]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d7a710fe-4be6-4f79-8cdd-46330bd5c6a6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.102]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6344]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[765aa092-e913-4243-a9dc-1fb244c0d8f9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6345]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[530a965b-91d6-4d73-add6-8ad5952730e0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6346]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7d575ca2-5f6a-4e7b-8637-7888026f58fe]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6347]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f33ea243-9920-4d45-ac00-ea30c35c3f70]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6348]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9d00b223-aff8-44ed-b948-924fbaf2a615]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6349]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[cb474ca4-9644-4076-8140-078dc80f1dd0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6350]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[92333749-6150-43b5-9323-c8dc58ccdcfd]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6351]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e98ec149-f29a-441b-aac6-93f1383369eb]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6352]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f1a02e31-7f1d-4a16-bc7e-9fb7852e1542]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6353]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f8dce6dc-7c4b-4773-8cbd-ca962768fdaa]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6354]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a5a38877-6c26-46d1-880f-885ca7ab6ac8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6355]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[363e6153-cd9c-47ed-9da0-abba12d0cae7]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6356]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[729d4f56-9bea-4fd3-97a8-3be3bc7d36b8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6357]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[cd88dc3d-4420-42da-acba-3a3e5519882b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6358]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c06bec07-eb7d-4393-9d97-9a5db3e6777a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6359]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2c68a5bc-5da0-4aef-8846-e784a3e601a3]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6360]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c2afcc14-45b0-40b6-b939-89de0d3de85c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6361]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0f70c8a5-8bd0-4d1d-89f6-6347956d1f7c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6362]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8b3997b0-18a7-4850-9dd6-f1ad5a867b3b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6363]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fa874dbb-ad3e-43fd-8508-18a852b4fce5]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6364]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6afad95a-0dd4-48d0-a72e-1eb65c129d2a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6365]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7a1940b5-0624-40c0-b26a-4658e6333802]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6366]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[82d8bd98-fbc7-4bae-a90a-2d1e50a4ad67]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6367]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a5e55ec0-4a65-4f54-82ab-824e95f68c2c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6368]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3a67c4a5-a44a-4b9d-8dbe-8a903ae341ac]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6369]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5a4c712c-f543-4c1f-9bf6-ad017649a1d8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6370]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6ccc7325-7812-4f24-a286-61e40dae2b6b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6371]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2940d8f5-df20-4976-8c97-3f8890053b69]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6372]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[bebffc4a-a1d3-4274-98d1-22621795a9cf]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6373]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[777d38aa-37a6-40fe-b998-7c001a492fc5]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6374]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ed1a0b49-058e-4ad1-91bc-9d292bbae4fc]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6375]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c15b9975-a811-4482-945b-157062845ca1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6376]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f4d32a6c-8be8-4944-9d49-1a492f49cdaf]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6377]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[85091ce6-f4f9-4b2b-932d-c1f6a9a702d0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6378]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8edc4520-8d21-45f3-8180-1cf5a61a60a1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6379]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[38d4a2d1-5b84-4b18-ac2f-18a87519bb61]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6380]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3295ed80-18a2-46f9-bd41-5f9cf24322cd]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.6381]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e117d3cf-62b0-456d-ac0d-bedd3f6030d4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1777]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e32059ae-f7db-4e2c-8db6-374d8e7d9609]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.UPLOAD_ABAP_BASE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3484]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b5cef280-864b-42da-b7cd-561df8d066a1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Create Java Logger Classes]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.26]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1776]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[76021f4b-7e97-411b-8331-ec9af1eb3904]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.UPLOAD_ABAP_CODE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1775]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e58ce49a-b720-4e09-b18b-9919f8579814]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.USE_GUI]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.7]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3485]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e3ac6964-bf7f-4d93-bf6a-a50876e5bdb9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_INFOAREA_GETLIST]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.29]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3486]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3607eaab-d52d-466d-a49b-76f1fd72d77a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_INFOAREA_GETDETAILS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.32]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3487]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[6239d8cd-b101-4da2-8fe8-8cc8aac5ec41]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_IOBJ_GETDETAILS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.28]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3488]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5b954698-c8c7-4dfb-adb7-75464f30abb2]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_CUBE_GETDETAILS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.28]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3489]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[94fb8608-c4d1-4101-b0bc-7e6e8a3c6e11]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_ODS_GETDETAILS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.27]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3490]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[184b19aa-8c82-4581-9c45-2c8df6c36a86]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_LKM_OPENHUB]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.24]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3495]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f3a71bfd-661e-436c-b732-296f23bb1b36]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Create Java SNP REV Handler Classes]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.35]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3496]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[dd3cc37e-3c57-4171-a1af-53b6fd280a22]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install BASE PROGRAM]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3497]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7c94c554-8544-4993-b7b3-185c2dea0403]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install Base for Prod Components]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.32]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3498]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[51fa59ef-89da-4ef5-9651-963e648efb5b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_ABAP_INSTALL_AND_RUN]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.33]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3499]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ed1efa48-e5e7-42de-9eb5-24e962cc4819]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_UPLOAD_INSTALL_WRAPPER]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.35]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3500]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[dc8321c6-e3f5-4f58-8852-040431c45929]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_ABAP_SYNTAX_CHECK]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.30]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3501]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1942b3b3-8752-4e45-8720-654d6b9c9d6f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_DELETE_FTP_FILE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.28]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3502]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1e25b81e-41d5-4042-b7fb-ec2a484912b6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_APPLOG]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.19]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3503]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e99aec13-4d4b-4034-a13d-94f195fd1721]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_LOGMSG_ADD_TASK]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.28]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3504]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d18480ba-66d9-46f0-ab7d-37592010f43c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_LOGMSG_ADD]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.23]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3505]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ae714135-8e90-471e-84a9-2d9a2be67db8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_BG_CONTROLLER]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.26]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3506]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[2b96fe8a-d587-498e-a293-b415c549b14a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_BG_REPORT_SAVE_ACT]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.31]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3507]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[09aa67bc-5f06-42c9-a9e6-f6eb51d203d1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_RSPC_API_CHAIN_START]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.33]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3508]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3a8760e0-673c-490d-9515-666366f94022]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install Report Process Chain for BG]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.35]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3509]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8389a326-fcd2-404a-9192-58829c772200]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install SAP Version check RFC]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.29]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3510]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fa5d56ae-02ea-440f-982d-d91ba2588f55]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Get SAP Characteristics]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.23]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3511]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[83ef12fe-da91-41b9-bdbb-56953715c7a4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_GET_MAX_REQID]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.26]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3512]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9fdd182c-e2c4-409b-9178-c0637cde7d8f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Initialize]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.10]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3514]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b84e580e-aa2f-4c21-97bc-f125458743f0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_CUBE_SEARCH]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.24]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3515]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[3fe7ce3c-aac8-45f9-bac0-ae5e0a0a0536]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_IOBJ_SEARCH]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.24]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3516]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0f3af261-f3e2-452b-971c-d67cba41e30e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_ODSO_SEARCH]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.24]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3517]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0b9dfc5b-5479-44cf-86a9-dfd80a3a99c4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Install ZODI_OHDEST_SEARCH]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.26]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3521]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0bb38ebe-2b39-42ed-ab7f-2885729e5893]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Get InfoCubes]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.13]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3522]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[70b96517-066c-4c8a-a46c-bf40b86efd65]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.RKM SAP BW.Get InfoObjects]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.10.15]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[52]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[105]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[52]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[11]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.09]]></Field>
</Object>
</SunopsisExport>
