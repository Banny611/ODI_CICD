<?xml version="1.0" encoding="UTF-8"?>
<SunopsisExport>
<Admin RepositoryVersion="05.02.02.09" IsLegacyIdCompatible="false" />
<Encryption algorithm="AES" keyLength="128" exportKeyHash="lMtdzQTJHSQo3C+QkeBS2pUt4D507ofM5C8W9TjY6qM=" keyVect="oXDqsLcj7q+hpLkM+YTsKA==" exportKeySalt="ce839368-4251-47e2-be91-bd1aedda87fa" containsCipherText="false"/>
<Object class="com.sunopsis.dwg.dbobj.SnpTrt">
		<Field name="CleanupOnError" type="java.lang.String">null</Field>
	<Field name="CompType" type="java.lang.String">null</Field>
	<Field name="DelegateClass" type="java.lang.String">null</Field>
	<Field name="DelegateScript" type="java.lang.String">null</Field>
	<Field name="ExpectedAstClass" type="java.lang.String">null</Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[95a44a78-4131-4216-835f-33e9813af5f4]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[U]]></Field>
	<Field name="IndExcludeExUnitBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitEnd" type="java.lang.String">null</Field>
	<Field name="IndExcludeExUnitMain" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapBegin" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapCleanup" type="java.lang.String">null</Field>
	<Field name="IndExcludeMapEnd" type="java.lang.String">null</Field>
	<Field name="IndGenerateLoad" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndIsHidden" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndJrnMethod" type="java.lang.String"><![CDATA[S]]></Field>
	<Field name="IndSuppSetBased" type="java.lang.String">null</Field>
	<Field name="IntgType" type="java.lang.String">null</Field>
	<Field name="IntVersion" type="com.sunopsis.sql.DbInt"><![CDATA[2]]></Field>
	<Field name="IsConcurrent" type="java.lang.String">null</Field>
	<Field name="IsSeeded" type="java.lang.String">null</Field>
	<Field name="IBaseCompKm" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IProject" type="com.sunopsis.sql.DbInt"><![CDATA[1]]></Field>
	<Field name="IScBaseTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScOrigTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IScTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtDelTxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITxtTrtTxt" type="com.sunopsis.sql.DbInt"><![CDATA[5575]]></Field>
	<Field name="KimMultiDserver" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KmDefault" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KmLang" type="java.lang.String">null</Field>
	<Field name="KmSrcLang" type="java.lang.String">null</Field>
	<Field name="KmSrcTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="KmTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="KmVersion" type="java.lang.String"><![CDATA[42]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LkmType" type="java.lang.String">null</Field>
	<Field name="LChecksum" type="com.sunopsis.sql.DbInt"><![CDATA[-1564970690]]></Field>
	<Field name="LCode" type="java.lang.String">null</Field>
	<Field name="OggJkm" type="java.lang.String">null</Field>
	<Field name="OrdFolder" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ProcType" type="java.lang.String">null</Field>
	<Field name="ProdAstType" type="java.lang.String">null</Field>
	<Field name="RepGuid" type="java.lang.String">null</Field>
	<Field name="RepVersion" type="java.lang.String">null</Field>
	<Field name="ScriptPath" type="java.lang.String">null</Field>
	<Field name="ScOrigTrtTag" type="java.lang.String">null</Field>
	<Field name="Subtype" type="java.lang.String">null</Field>
	<Field name="TrtName" type="java.lang.String"><![CDATA[LKM SAP ERP to Oracle (SQLLDR)]]></Field>
	<Field name="TrtType" type="java.lang.String"><![CDATA[KL]]></Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
	<Field name="VLastDate" type="java.sql.Timestamp">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4c4d0438-3c6e-4e73-85c7-9d8871e77a04]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5575]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Component: LKM SAP ERP
Author: Oracle

Description :
- Loading Knowledge Module to retrieve the data from SAP ERP systems
- The data file is loaded using Oracle SQLLDR


For first-time users please follow the Getting-Started-Guide for ODI SAP ERP on the ODI OTN documentation page for pre-requisites, detailed installation instructions and examples.

Please also see ODI Application Adapter documentation for ODI AA for SAP ERP.

The list of supported SAP versions and staging databases can be found in the ODI Certification matrix on OTN.

This KM requires ODI SAP Open Tool version 10.1.3.23 (odi-sap.jar) or higher.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[107]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Edit Command]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_TRT_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8514c953-3a53-4337-9037-71500fa2e1f7]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5576]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1590]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[VALIDATE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Validate Option values]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1d1d18bd-0431-421d-90eb-93e79239dfaf]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5576]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to indicate whether to validate all the Option values specified before executing the LKM]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[User Exit help]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_UE_HELP]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f21af99d-e3f5-4e71-ac39-2adff8fcd386]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5577]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1591]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[UPLOAD_ABAP_CODE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to indicate to upload]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[402f3974-7e4e-49ec-b546-401a4fd68bf6]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5577]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to indicate whether to upload the program for every interface execution.

For more details please see ODI Application AdapterGuide Section "Controlling ABAP Uploading / ABAP code in production".]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[bef7fdd7-b7c6-408d-b8d6-fd901790f53b]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5578]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1592]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[115]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[MANUAL_ABAP_CODE_UPLOAD]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Manully Upload of ABAP Source Code.]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0996b578-8dca-4b75-a19e-910d0b380de8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5578]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Used to generate the SAP ABAP code file without uploading it to the SAP.

To generate the SAP ABAP code file for manual upload pass the value : Yes.

Default value : No

For more details please see ODI Application AdapterGuide Section "Controlling ABAP Uploading / ABAP code in production".]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5e1c4a02-13dd-4802-98a8-a86e4f674174]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5579]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1593]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[120]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[EXECUTE_ABAP_CODE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to indicate execution]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[24c40c2f-c0d3-4982-988c-7b63f8ef2e74]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5579]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to indicate whether to execute uploaded program.

For more details please see ODI Application AdapterGuide Section "Controlling ABAP Uploading / ABAP code in production".]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[10adcbf2-c95f-4dde-8b70-02db5eaf76cd]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5580]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1594]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[130]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[ABAP_PROGRAM_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Name of the program]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0018bdde-0f9f-411e-96b4-0a9476378ff8]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5580]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Name of the ABAP program with which code is generated.

]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d8f4fe01-b6c6-4751-ba74-6cbd4e51e0c6]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5581]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1595]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[131]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[BACKGROUND_PROCESSING]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag for Background processing]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[df183060-fa95-4d96-9f4b-04ba200d521a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5581]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[When set to Yes, ABAP extraction code will be executed as SAP background process.

When set to No, ABAP extraction code will be executed as SAP dialogue process.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[87ddb9a8-1eaa-4fd6-888c-96376ffb9353]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5582]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1596]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[132]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[A]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[JOB_CLASS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Priority of background processing]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[da475985-06d1-4715-abcc-aab437652654]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5582]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Priority of background processsing. 
Value Desc:
'A' is the higest priority, 
'B' is the normal priority,
'C' is the lowest priority.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[73ce137b-c68f-406c-90dd-dfc54dc3b3c1]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5583]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1597]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[150]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[<?=new File((sBiAppsTempPath.equals(""))?System.getProperty("java.io.tmpdir"):sBiAppsTempPath).getPath()+System.getProperty("file.separator")?>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[TEMP_DIR]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[FTP files are saved ]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e2b4cfdb-32ba-44f9-8010-cad2a52bd96f]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5583]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Temporory directory where FTP files are downloaded.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a5bbe1d6-9e5f-4097-aeb6-472a0835a54e]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5584]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1598]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[160]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[MAX_ALLOWED_ERRORS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Maximum allowed error -1]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1d8539b4-8328-412f-8dfc-03cdb6be38c2]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5584]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[When the number of discarded records is equal to MAX_ALLOWED_ERRORS the load process will stop.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[669e205f-1f72-4f11-af27-1d10c4b89d8b]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5585]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1599]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[170]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[DELETE_TEMPORARY_OBJECTS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Flag to delete temp files]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5029b5bd-7acd-4aa7-bdd9-97d5ffce1935]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5585]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Flag to Indicate whether to delete temporay objects created.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[426adbec-beca-4813-a2b6-e9729242bc85]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5586]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1600]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[200]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[SAP_ODI_ERP_POOL_<%=odiRef.getInfo("SRC_CON_NAME")%>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_CONNECTION_POOL]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Sap Connection Pool Name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[de52299a-ee05-4fb2-a16a-6296dc7eb35e]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5586]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Name of the SAP connection pool]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4c168acb-72fb-4d09-ab54-fe7e67b552b5]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5587]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1601]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[210]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[10]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_CONNECTION_POOL_SIZE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[No of SAP connections in pool]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e7e2a322-9ae7-45b6-b7a7-0783c28daebd]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5587]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Number of SAP connections to be maintained as a pool.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e2627573-6679-4165-b40c-d48daf889aa0]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5588]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1602]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[220]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[<%if(odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")){%>ZODI_FGR_PROD_<%=odiRef.getPop("I_POP")%><%}else{%>ZODI_FGR_PROD_<%=odiRef.getShortGuid(odiRef.getInfo("GUID_SRC_SET"),"BASE38",11)%><%}%>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_FUNCTION_GROUP]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Funtional Group Name of SAP]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[91fd6b7b-a23e-4bf3-a0b1-ff7cef215983]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5588]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[The name of the SAP function group where all generated ABAP programs will be uploaded.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5012b196-c517-4022-84a7-2767b5f27a90]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5589]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1603]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[230]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_LKM_PCKG]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_PACKAGE_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Package name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[679213bf-a81c-4b40-9545-31dcd6e75685]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5589]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines the SAP package name used for all ODI objects required during ODI SAP production use.

This SAP package name must exist prior to running the interface/mapping. It is created during RKM first-time installation, when RKM option SAP_PACKAGE_NAME_PROD is set to this SAP package name.

Only change if requested by SAP administrator and checked with ODI product support or for backwards compatibility:

For compatibility with ODI SAP ERP|BW Adapter installations prior to Build 32|23: ZODI_DEVCLASS | ZODIBW_PCKG]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[57089752-33a6-4011-8a23-8cc76dceb35b]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5590]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1604]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[235]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[SAP]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_TRANSPORT_LAYER_NAME]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Name of SAP Transport layer]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9b65213d-db73-4997-90a7-0b9c1cc36f11]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5590]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Name of SAP Transport layer]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[05a3ca74-5c04-446f-bc39-c66dbe032f89]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5591]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1605]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[240]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ODI:<%=odiRef.getStep("STEP_NAME")%>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_TRANSPORT_REQUEST_DESC]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Transport Request Desc]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[82f0fbdb-0779-47d9-b487-fc39c6296286]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5591]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines the description of the SAP transport request created by ODI for the function group defined by KM option SAP_FUNCTION_GROUP.

By default the ODI Step name (which is usually the interface/mapping name) will be used.

Any existing transport request description will be replaced.

Code generation expressions like ODI:<%=odiRef.getPackage("PACKAGE_NAME")%> may be useful when grouping several interfaces into one SAP function group/ SAP transport request.

Default: <%=odiRef.getStep("STEP_NAME")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9fbb95a7-4fbf-4fb6-a20f-6a72fb90d9a5]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5592]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1606]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[250]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_REPORT_NAME_PREFIX]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Prefix of grouped ABAP Reports]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[723fcbd2-36df-4c5a-8467-f557f99d5b0a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5592]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines the prefix of all reports to be group into a common transport request and is used in conjunction with ABAP_PROGRAM_NAME.  

Only applies if BACKGROUND=1.

The prefix must start with Z. Please contact your SAP administrator for recommended report name prefixes.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1450105f-6da3-4ff5-9420-cb17894364e3]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5593]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1607]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[260]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[DATAFILE_PER_SESSION]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Allow per session file name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[39c500a3-9e6b-46e2-9d5e-63eb5b53c7fa]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5593]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Defines, whether the name of the data file, ctlfile, badfile, outfile sqlldr logfile, dscfile etc should have session ID for multiuser operation
(Deprecated starting with ODI 12c and may be removed in later versions)
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[beaf6e7d-622e-451e-830e-c73739bf65fa]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5594]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1608]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[270]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[CHECK_DATA_FOR_DELIMITERS]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Checks delimiter char in data value]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[dcbf42f3-e242-45b9-9ad3-fe6a1d1fb1e5]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5594]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[If set to true on delimited files, the ABAP program will validate any data field, whether it contains the delimiter character. Approriate action will be taken to handle the data values by raising exceptions.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[79a5c4d3-f236-46a2-9d17-9a45ea77f7f8]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5595]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1609]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[DELIMITED]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FILE_FORMAT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Delimited Value]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[31ac6c34-3695-4027-89be-7c039fa04c06]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5595]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Value either DELIMITED or FIXED]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[6dac38d4-c4b7-4ee2-8527-201694131a0d]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5596]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1610]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[290]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[<@=""+(char)8@>]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FIELD_SEPARATOR]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Column Seperator ]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ac15c45b-6005-4a1c-8580-f7d3d8f791d3]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5596]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Column Seperator character to be used to write data to the Flat File, default '0x06'. max 3 characters allowed]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0ff11cbe-37bd-4f1b-89de-2c7b7c9f2f0d]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5597]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1611]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[300]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[FTP]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FTP_TRANSFER_METHOD]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Data Transfer Method]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d99ce268-7a88-4dfe-b5f4-04d3d686d3c0]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5597]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specifies how the extracted data is transfered to the ODI agent machine. Permitted values are:

FTP:
SAP AS pushes data file to FTP server and ODI agent downloads data file from FTP server via FTP.

SFTP:
SAP AS pushes data file to FTP server and ODI agent downloads data file from FTP server via SFTP.

SCP:
SAP AS pushes data file to FTP server and ODI agent downloads data file from FTP server via SCP.

NONE:
SAP AS pushes data file to the FTP server installed on ODI agent machine.

FSMOUNT:
SAP AS writes data into file on shared directory of File Server. ODI agent copies the file from shared directory.

FSMOUNT_DIRECT:
SAP AS writes data into file on shared directory of ODI agent machine.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[a65f5f60-9ff9-4884-8268-f7e6e51d8e5e]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5598]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1612]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[310]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FTP_PASSIVE_MODE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[FTP Mode]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[77b6ff32-9374-4330-b735-95042c193302]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5598]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify mode of FTP transfer.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[5c838085-74ab-4ae0-8971-757a5a83031f]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5600]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[5599]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1613]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[320]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FILE_TRANSFER_TIMEOUT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[FTP Time out time]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[T]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e7c0a2ba-3d7d-49b9-af6c-9417b5aec833]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5599]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[100000]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[110]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Text value]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[I_TXT_VALUE]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_USER_EXIT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[358ba9ab-3e4d-4cf9-a3f7-bd855b00f8da]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5600]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify FTP transfer time out time.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f166034d-8cb5-4ae0-82ff-2a4cf10d0ae9]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5601]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1614]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[330]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SSH_COMPRESSION]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Secure FTP compression parameter]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[C]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[8009813b-78b4-4542-a55c-015fb1991e7d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5601]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify Yes to compress mode of transfer else no.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[784afec6-e4df-499e-a6ac-16e2e797c994]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5602]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1615]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[340]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SSH_IDENTITY_FILE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Name of the file for secure FTP]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c5b71831-b9fc-4896-92a7-d61fa71472b0]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5602]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Specify the file name for secure FTP protocol.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[eaf66a85-e15f-4902-92e5-4186be38c9c1]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5603]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1616]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[350]]></Field>
	<Field name="ShortValue" type="java.lang.String">null</Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[MAX_ROW_COUNT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Maximum rows to upload]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4368dcc7-c113-4d60-9473-c34883b24e07]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5603]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[To extract maximum number of rows from SAP.
By default <Blank> that means will load all records.
User can pass numeric value e.g. 100, will load only 100 records.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[9cc1cb45-f5b6-43d7-8e65-f924a0fa65e2]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5604]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1617]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[360]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[100000]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[FETCH_BATCH_SIZE]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[Number of rows per ABAP fetch]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[c56c4151-3d92-4bdb-9a7f-7b893f2cf10d]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5604]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[Number of rows to be fetched per loop cycle. 

By default 100000 lines are retrieved into SAP internal tables. This may lead to significant memory consumption when dealing with large volumes. Setting to values like 10000 or 100000 will reduce the required memory.

Please note that in FTP, SFTP, SCP mode all resulting data stored in internal table.]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[84b1cc27-61f7-4c2b-b0b6-388fcd2cd1b3]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5605]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1618]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[370]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_APPOBJ]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_APPLICATION_OBJECT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Application object name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1fca687c-a685-40ff-b387-2d61f63a0e19]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5605]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SAP Background job application object name.

Default : ZODI_APPOBJ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpUserExit">
		<Field name="ExprITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ExtVersion" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[99ee8405-b987-4775-8577-6cca59670d35]]></Field>
	<Field name="IndChange" type="java.lang.String"><![CDATA[I]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="ITxtUeHelp" type="com.sunopsis.sql.DbInt"><![CDATA[5606]]></Field>
	<Field name="ITxtValue" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1619]]></Field>
	<Field name="IUserExitGroup" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="Position" type="com.sunopsis.sql.DbInt"><![CDATA[380]]></Field>
	<Field name="ShortValue" type="java.lang.String"><![CDATA[ZODI_SUBOBJ]]></Field>
	<Field name="Subtypes" type="java.lang.String">null</Field>
	<Field name="UeName" type="java.lang.String"><![CDATA[SAP_APPLICATION_SUB_OBJECT]]></Field>
	<Field name="UeSdesc" type="java.lang.String"><![CDATA[SAP Application sub object name]]></Field>
	<Field name="UeType" type="java.lang.String"><![CDATA[V]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[47fd9018-3d6d-42d1-94b4-fcb5ed45a27e]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5606]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[111]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[SAP Background job application sub object name.

Default : ZODI_SUBOBJ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5607]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[58c8f394-20bb-4028-bb1b-7efda7579d29]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[90]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d7d5b6e3-03f8-4020-b4ca-8600e9ee477a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5607]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%
//Command Name: Initialize
import java.util.*;

//Odi variable declaration
odiVarName = "";
odiVarValues = "";

//KM Details
String skm = "LKM SAP ERP to Oracle(SQLLDR)";
String skmVersion= "39";
String sMinOTVersion = "21";
String sMinODISAPcompVersion = "38";

//Check the ODI Release
boolean isOdi10gOr11g = odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION");

abapProgramName = "";
if (odiRef.getOption("ABAP_PROGRAM_NAME").length()>0) {
  abapProgramName = odiRef.getOption("ABAP_PROGRAM_NAME");
} else {
  abapProgramName = "ZODI_"+((isOdi10gOr11g)
  ?odiRef.getPop("I_POP")+"_"+odiRef.getInfo("I_SRC_SET") 
  :(odiRef.getShortGuid(odiRef.getInfo("GUID_SRC_SET"),"BASE38",16).replaceAll("#","")));
}
//To concatenate the PREFIX with the BG_REPORT_NAME
if (odiRef.getOption("BACKGROUND_PROCESSING").equals("1")){
   if(odiRef.getOption("SAP_REPORT_NAME_PREFIX").length() > 0)
   {
        abapProgramName = odiRef.getOption("SAP_REPORT_NAME_PREFIX")+abapProgramName;
    }
}
// Define path and file names
dataPathOnAgent = (odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("NONE") || odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FSMOUNT_DIRECT")) ? odiRef.getInfo("SRC_WORK_SCHEMA") : odiRef.getOption("TEMP_DIR");
tempPathOnAgent = odiRef.getOption("TEMP_DIR");

if (!odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION") && odiRef.getPop("IS_CONCURRENT").equals("1")) {
	//when parallel target table load is enabled in ODI 12c, make file names unique:
	fileName = "<?=odiRef.getFormattedName(\u0022" + abapProgramName + "_%UNIQUE_STEP_TAG\u0022, \u0022FILE\u0022)?>";
} 
else if(odiRef.getOption("DATAFILE_PER_SESSION").equals("1")) {
	// when DATAFILE_PER_SESSION is active, make file names unique by appending
	fileName = abapProgramName+ "_" + odiRef.getSession("SESS_NO");
} else {
	// Otherwise just append context
	fileName = abapProgramName + "_" +odiRef.getContext("CTX_CODE");
}
dataBaseFileName = dataPathOnAgent + fileName;
tempBaseFileName = tempPathOnAgent + fileName;

dataFileOnAgent = dataBaseFileName + ".txt";
dataFileName = fileName + ".txt";
ctlFileName = tempBaseFileName + ".ctl";
badFileName = tempBaseFileName + ".bad";
dscFileName = tempBaseFileName + ".dsc";
outFileName = tempBaseFileName + ".out";
sqlldrLogFile = tempBaseFileName + ".log";

otLogFileName = (!isOdi10gOr11g)?"":odiRef.getOption("LOG_FILE_NAME");

//Initializing resourceBundle
odiSapErpResourceBundle = new oracle.odi.sap.km.CommonResourceBundle();
odiSapErpResourceBundle.initializeResource("sap_lkm_erp");
resourceBundle = odiSapErpResourceBundle.getResourceBundle();

logFile = "";
if(isOdi10gOr11g) {
//Initializing logger
logFile = System.getProperty("java.io.tmpdir")+
               System.getProperty("file.separator")+
               "ODI_" + odiRef.getPop("I_POP")+"_"+
               odiRef.getInfo("SRC_SET_NAME")+".genlog";
}
//Initializing logger
sapLogger = new OdiSapLogger(logFile, resourceBundle);
//Initializing logger

//Initiaze Interface design metadata with all the selected tables, columns, joins, filter conditions and transformations
 iHelper = new OdiInterfaceMetadataHelper(sapLogger);

if(isOdi10gOr11g) {//if ODI 10g or 11g
	iHelper.setSelectedTables(odiRef.getSrcTablesList("", "[I_TABLE]~~[RES_NAME]~~[POP_TAB_ALIAS]~~[METADATA]", "^^^^", "") );
} else {//else ODI 12c
	iHelper.setSelectedTables(odiRef.getSrcTablesList("", "[TABLE_GUID]~~[RES_NAME]~~[POP_TAB_ALIAS]~~[METADATA]", "^^^^", "") );
}
iHelper.setMappedColumns(odiRef.getColList("", "[EXPRESSION]", "~~", "") );
try{
iHelper.setJoinConditions(odiRef.getJoinList("","[EXPRESSION]","~~", ""));
} catch(Exception e){
throw new Exception(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-LKM-10003"));
}
iHelper.setFilterConditions(odiRef.getFilterList("", "[EXPRESSION]", "~~", ""));
iHelper.setFromCondition(odiRef.getFrom());
iHelper.setGroupByList(odiRef.getGrpByList("", "[EXPRESSION]","~~",""));

//set Flex Fields of the selected tables
ArrayList sTabs = iHelper.sSAPTables;
ArrayList rTabs = new ArrayList();
for(int i =0; i < sTabs.size(); i++) {
	SapTable sT = (SapTable)sTabs.get(i);
	String tabType = odiRef.getFlexFieldValue(sT.id, "2400", "SAP_TABLE_TYPE");
	sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"Show me the table type : " + tabType} );
	sT.type  = tabType;
	rTabs.add(sT);
}

iHelper.sSAPTables = rTabs; 

//Initialize odiSapRef api class
odiSapRef = new OdiSapRef(iHelper, sapLogger, odiSapErpResourceBundle);
curTableDetail = new SapTableDetail(iHelper, sapLogger, odiSapRef, odiSapErpResourceBundle);
prevTableDetail = new SapTableDetail(iHelper, sapLogger, odiSapRef, odiSapErpResourceBundle);
curTableDetail.setInfo(odiRef.getSrcTablesList("", "[TABLE_NAME]#[RES_NAME]#[POP_TAB_ALIAS]", "~~", ""));

String prevTable = "";
String prevTablejoin = "";

prevJoinOutput = new SapJoinOutput(iHelper, sapLogger, odiSapRef);
curJoinOutput = new SapJoinOutput(iHelper, sapLogger, odiSapRef);
firstJoinOutput = new SapJoinOutput(iHelper, sapLogger, odiSapRef);
sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"firstJoinOutput: " + firstJoinOutput} );
int counterNew;
int leftJoinCounter;
int keyCounter;
int endifCounter;

curTable = new SourceTable();
prevTableName = new SourceTable();
int num;//counter for final table in Extract Data
Iterator abapGenItr;
odiVarName = odiSapRef.getInterfaceVarList("", "IV_[VAR_NAME]", "|", "");
odiVarName = odiVarName.replace(""+(char)46, ""+(char)95);

odiVarValues = odiSapRef.getInterfaceVarList("", "#[VAR_NAME]", "|", "");
%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Source Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[COL_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5608]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[821f3fe8-7623-488e-be6e-e0758a6f9838]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[100]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Initialize (KM specific)]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[159611ea-2883-4802-b7c3-c31af542cf0b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5608]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//Intentionally left blank
<% leadingSigns = false; //All numbers must have trailing signs for the ODI sqlldr driver%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5609]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[1f3653de-652f-466f-81c6-6205ca7b2984]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3105]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[200]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get SAP Info]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[bd30730a-48bc-4860-954d-8c44db072e39]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5609]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//get SAP Characterset & Other Info
<?
String sapTransportLayerName = null;

<% if (isOdi10gOr11g) { /*if ODI 10g or 11g*/ %>
String sSapCharacterset = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_CHARACTER_SET" );

String sSapAbapVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_ABAP_VERSION" );
String sSapErpVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_ERP_VERSION" );

String upload = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_ALLOW_ABAP_UPLOAD" );
String execute = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_ALLOW_ABAP_EXECUTE");
String client = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_CLIENT" );
String lang = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_LANGUAGE" );
String systemNo = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_NUMBER" );

//Flex field for Transport Layer Name
String sapTransLayerNameFF = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TRANSPORT_LAYER_NAME" );
String sapTransLayerNameKM = "<%=odiRef.getOption("SAP_TRANSPORT_LAYER_NAME")%>";
sapTransportLayerName = (sapTransLayerNameKM == null || sapTransLayerNameKM.isEmpty())?((sapTransLayerNameFF == null || sapTransLayerNameFF.isEmpty())?"SAP":sapTransLayerNameFF):sapTransLayerNameKM;

//new flex fields addition for SAP Message Logon & SAP SNC Connection
String msHost = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_MSHOST" );
String msService = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_MSSERV" );
String msR3Name = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SYSTEM_ID" );
String msGroupName = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_GROUP" );
String sncPartner = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_PARTNERNAME" );
String sncClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_MYNAME" );
String sncQOP = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_SNC_QOP" );

//Fetching SAP Temp Dir
String sap_TempDir = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TMP_DIR" );
String sap_TempLogicalName= odiRef.getFlexFieldValue(odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TMP_LOGICAL_NAME" );

boolean performExecute = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_ALLOW_ABAP_EXECUTE" ).equals("1") && <%=odiRef.getOption("EXECUTE_ABAP_CODE").equals("1")%>;

String extractTimeout = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_EXTRACT_TIMEOUT" );
<%} else { /*if ODI 12C*/%>
String sSapCharacterset = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_CHARACTER_SET" );

String sSapAbapVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_ABAP_VERSION" );
String sSapErpVersion = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_ERP_VERSION" );

String upload = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_ALLOW_ABAP_UPLOAD" );
String execute = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_ALLOW_ABAP_EXECUTE");
String client = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_CLIENT" );
String lang = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_LANGUAGE" );
String systemNo = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_NUMBER" );

//Flex file for Transport Layer Name
String sapTransLayerNameFF = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TRANSPORT_LAYER_NAME" );
String sapTransLayerNameKM = "<%=odiRef.getOption("SAP_TRANSPORT_LAYER_NAME")%>";
sapTransportLayerName = (sapTransLayerNameKM == null || sapTransLayerNameKM.isEmpty())?((sapTransLayerNameFF == null || sapTransLayerNameFF.isEmpty())?"SAP":sapTransLayerNameFF):sapTransLayerNameKM;

//new flex fields addition for SAP Message Logon & SAP SNC Connection
String msHost = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_MSHOST" );
String msService = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_MSSERV" );
String msR3Name = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SYSTEM_ID" );
String msGroupName = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_GROUP" );
String sncPartner = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_PARTNERNAME" );
String sncClient = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_MYNAME" );
String sncQOP = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_SNC_QOP" );

//Fetching SAP Temp Dir
String sap_TempDir = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TMP_DIR" );
String sap_TempLogicalName= odiRef.getFlexFieldValue(odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TMP_LOGICAL_NAME" );

boolean performExecute = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_ALLOW_ABAP_EXECUTE" ).equals("1") && <%=odiRef.getOption("EXECUTE_ABAP_CODE").equals("1")%>;

String extractTimeout = odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_EXTRACT_TIMEOUT" );
<%}%>
boolean bgp = ("<%=odiRef.getOption("BACKGROUND_PROCESSING")%>".equals("1"));  
int sapcontype = oracle.odi.sap.km.OdiSapConnection.getSAPConnectionType(odiRef.getInfo("SRC_DSERV_NAME"),sncPartner,msHost);
?>

<@
String SAP_TR_DESC = "<%=odiRef.getOption("SAP_TRANSPORT_REQUEST_DESC")%>";
String step_name = "ODI:"+"<%=odiRef.getStep("STEP_NAME")%>";
String prefix = "";
SAP_TR_DESC = SAP_TR_DESC.trim();
if(SAP_TR_DESC.equalsIgnoreCase(step_name) || SAP_TR_DESC.equalsIgnoreCase("")){
 prefix = "<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>";
prefix = prefix.trim();
if(!prefix.equalsIgnoreCase("")){	
 SAP_TR_DESC = prefix;
}
}
@>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpOrigTxt">
		<Field name="GlobalId" type="java.lang.String">null</Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="OrigineName" type="java.lang.String"><![CDATA[Target Technology]]></Field>
	<Field name="SnpsCol" type="java.lang.String"><![CDATA[DEF_I_TXT]]></Field>
	<Field name="SnpsTable" type="java.lang.String"><![CDATA[SNP_LINE_TRT]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5610]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[dccc8e25-7615-426d-b8ce-95c017079692]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3106]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[160]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Work Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[96571c77-b574-49ac-9079-eb830f02fb3b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5610]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[create table <%=odiRef.getTable("L", "COLL_NAME", "W")%>
(
	<%=odiRef.getColList("", "[CX_COL_NAME]\t[DEST_WRI_DT] " + odiRef.getInfo("DEST_DDL_NULL"), ",\n\t", "","")%>
)
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5611]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[JYTHON]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e580f157-a3f6-47dc-862e-d25c39ac8dbe]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[250]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Load Data to Staging]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[0caa494d-d889-4038-816b-ca7d2b3cc0a6]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5611]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>

<?
/**
   * Checks the Target Data Server Name existance
**/
if ( odiRef.getInfo("DEST_DSERV_NAME")==null || odiRef.getInfo("DEST_DSERV_NAME").length()==0 ){
    OdiSapUtil.throwODIException("Oracle Instance name/ TNS name is not defined for Oracle target DataServer");
}
?>

import subprocess
import re
import os

outfile = r"""<%=outFileName%>"""
logfile = r"""<%=sqlldrLogFile%>"""
ctlfile = r"""<%=ctlFileName%>"""

try:
    outfileHandle = open( outfile, 'w' )
    loadcmd = r'''sqlldr <%=odiRef.getInfo("DEST_USER_NAME")%>/<%=odiRef.getInfo("DEST_PASS")%>@<%=odiRef.getInfo("DEST_DSERV_NAME")%> control="''' + ctlfile + '''" log="''' + logfile + '''" '''
    p = subprocess.Popen(loadcmd, shell=True, stdout=outfileHandle.fileno(), stderr=outfileHandle.fileno() )
    p.communicate()
    rc = p.returncode
    outfileHandle.close()
    
finally:
    if outfileHandle <> None:
        outfileHandle.close()

# Init Vars
nbIns = 0
nbRej = 0
nbNull = 0
strprt = ""
maxAllowedError = r"""<%=odiRef.getOption("MAX_ALLOWED_ERRORS")%>"""
c = 0
flag = 0

# Open log file
f = open(logfile, "r")
try:
	lines = f.readlines()
	for line in lines:
		if line.rstrip().upper().endswith(r"""<%=odiRef.getTable("L", "COLL_NAME", "W")%>:""".upper()):
			flag = 1
			c = 0
		if flag == 1:
			if c > 0 and c <= 4:
				if c == 1 :
					nbIns = int(re.findall("\d+", line)[0])
				elif c == 2:
					nbRej = int(re.findall("\d+", line)[0])
				elif c == 4:
					nbNull = int(re.findall("\d+", line)[0])
					break
		c+=1
	strprt = "\n\tIns:\t%s\n\tReject:\t%s\n\tNullField:\t%s" % (nbIns, nbRej, nbNull)
finally:
	f.close()

# if some rows has been rejected due to invalide data, check KM option MAX_ALLOWED_ERROR

if rc <> 0 and rc <> 2:
        raise "Load Error", "See %s for details" % logfile

if rc == 2:
	if nbRej > int(maxAllowedError):
		raise "\nThe rejected rows processed by SQLLDR are more than Maximum Allowed Error"
		break
<? } ?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5612]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b0736772-55ef-441c-a50a-7c9d426c44ab]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3108]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[210]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get BIApps Details]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[da66bf74-f1e8-4b20-bab4-e106988596e9]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5612]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//get BIApps path
<?
String sBiAppsTempPath;
/* Check for post 11.1.1.7 Exception handling */
try {
    sBiAppsTempPath = odiRef.getSchemaName("FILE_OBIA_ROOT_PATH","W");
} catch (Exception e) {
    sBiAppsTempPath = "";
}
/* Check for pre 11.1.1.7 Exception handling */
if (sBiAppsTempPath.startsWith("Exception")) { 
    sBiAppsTempPath = ""; 
};
?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5613]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[55fe2347-302e-40e2-81e0-f841be09be89]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[220]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Extract Data]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fc39a699-33e3-4c89-8d5b-a0ac5361ca31]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5613]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[_OdiSAPAbapExecute "-UPLOAD=<?=upload.equals("1")?<%=odiRef.getOption("UPLOAD_ABAP_CODE")%>:0?>" "-EXECUTE=<?=execute.equals("1")?<%=odiRef.getOption("EXECUTE_ABAP_CODE")%>:0?>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=<%=abapProgramName%>" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=client?>" "-SAP_LANGUAGE=<?=lang?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<%=odiRef.getInfo("SRC_DSERV_NAME")%>" "-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<%=odiRef.getInfo("SRC_DSERV_NAME")%>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>"  <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?>"-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP")%>" "-FILE_DELIMITER=<%=odiRef.getOption("FIELD_SEPARATOR")%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>"  "-FTP_PASSIVE_MODE=<%=odiRef.getOption("FTP_PASSIVE_MODE")%>" "-FTP_TRANSFER_TIMEOUT=<%=odiRef.getOption("FILE_TRANSFER_TIMEOUT")%>" "-ODI_VARIABLE_NAMES=<%=odiVarName%>" "-ODI_VARIABLE_VALUES=<%=odiVarValues%>"  <? if(bgp) { ?> "-BACKGROUND_PROCESS_FLAG=<%=odiRef.getOption("BACKGROUND_PROCESSING")%>" "-SAP_REPORT_NAME_PREFIX=<%=odiRef.getOption("SAP_REPORT_NAME_PREFIX")%>" "-USER_ABAP_PARAMETER_NAMES=IV_DELI,CHAR3;IV_FILE,CHAR255 LOWER CASE;IV_USER,CHAR35 LOWER CASE;IV_PWD,CHAR35 LOWER CASE;IV_HOST,CHAR35;IV_HASH,CHAR35;IV_PATH,CHAR255 LOWER CASE;IV_MAXC,SYTABIX;IV_FETC,SYTABIX;IV_APP,CHAR20;IV_SUB,CHAR20;IV_EXTID,CHAR100;IV_TMDIR,CHAR255 LOWER CASE;IV_LODIR,CHAR255;"  "-IV_JOBNAME=<%=abapProgramName%>" "-IV_JOBCLASS=<%=odiRef.getOption("JOB_CLASS")%>" "-IV_ACTION=JOB_SUBMIT" "-EXTRACT_TIMEOUT=<?=extractTimeout?>" "-IV_DELETE_SAP_SPOOL=<%=odiRef.getOption("DELETE_TEMPORARY_OBJECTS")%>" "-IV_APPOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_OBJECT")%>" "-IV_SUBOBJ_NAME=<%=odiRef.getOption("SAP_APPLICATION_SUB_OBJECT")%>" <? } else { ?> "-USER_ABAP_PARAMETER_NAMES=IV_DELIMITER,CHAR3;IV_FILENAME,CHAR255;IV_USER,CHAR35;IV_PWD,CHAR35;IV_HOST,CHAR35;IV_HASHVALUE,CHAR35;IV_PATH,CHAR255;IV_MAX_ROW_CNT,SYTABIX;IV_FETCH_BATCH_SIZE,SYTABIX;IV_TMP_DIR_PATH,CHAR255;IV_LOG_DIR_PATH,CHAR255;" <? }; ?>  "-USER_ABAP_PARAMETER_VALUES=<Value>" "-USER_ABAP_PARAMETER_SEPARATOR=<Value>" "-ABAP_TABLE_PARAMETERS=RETURN,BAPIRETURN;ET_FILE_RETURN,BAPIRET2;" "-ABAP_EXPORT_PARAMETERS=ERRORMESSAGE;SY-MSGV1" "-LOG_FILE_NAME=<%=otLogFileName%>" "-FTP_PATH=<?=sFtpPath?>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-TRANSPORT_REQUEST_DESC=<@=SAP_TR_DESC@>" "-SAP_TRANSPORT_LAYER_NAME=<?=sapTransportLayerName?>" "-MAX_ROW_COUNT=<%=odiRef.getOption("MAX_ROW_COUNT")%>" "-FETCH_BATCH_SIZE=<%=odiRef.getOption("FETCH_BATCH_SIZE")%>" "-HASH_VALUE_MARKER=ODI.SAP.HVM" "-MANUAL_ABAP_CODE_UPLOAD=<%=odiRef.getOption("MANUAL_ABAP_CODE_UPLOAD")%>" "-IS10GOR11G=<%=isOdi10gOr11g%>" "-IV_TMP_DIR_PATH=<?=sap_TempDir?>" "-IV_LOG_DIR_PATH=<?=sap_TempLogicalName?>" "-KM_VERSION=<%=skmVersion%>" "-MIN_OT_VERSION=<%=sMinOTVersion%>" "-MIN_ODISAPCOMP_VERSION=<%=sMinODISAPcompVersion%>" "-KM=<%=skm%>" "-SAP_ABAP_VERSION=<?=sSapAbapVersion?>" "-SAP_ERP_VERSION=<?=sSapErpVersion?>" "-ABAP_PROGRAM_BODY=
<% // Init code gen vars
   boolean bUseFTP = false;
   if (odiRef.getOption("FTP_TRANSFER_METHOD").equals("FTP") || 
       odiRef.getOption("FTP_TRANSFER_METHOD").equals("SFTP") || 
       odiRef.getOption("FTP_TRANSFER_METHOD").equals("SCP") ||
       odiRef.getOption("FTP_TRANSFER_METHOD").equals("NONE")) {
      bUseFTP = true;
   };%>
<? if(bgp) { ?>
************************
*DATA Declaration
************************
DATA: it_odivar TYPE zodi_cond,
      wa_odi TYPE zodi_cond_str,
      lv_dyn_var TYPE string,
      lv_var TYPE int4 VALUE 2,
      lv_line1 TYPE line,
      lv_low TYPE syindex,
      lv_high TYPE syindex,
      lv_new TYPE sytabix,
      lv_mod TYPE sytabix,
	  lv_string TYPE STRING,	 
	  i_log_handle TYPE BALLOGHNDL,
	  lv_rowCount type SYTABIX,
      ls_log TYPE BAL_S_LOG,
      lv_rowCountChar type char10,
	  lt_return_handle TYPE TABLE OF bapiret2,
	  wa_return_handle TYPE bapiret2.

DATA: IV_DELIMITER TYPE CHAR3,
      IV_FILENAME TYPE CHAR255,
      IV_HASHVALUE TYPE CHAR35,
      IV_MAX_ROW_CNT TYPE SYTABIX,
      IV_FETCH_BATCH_SIZE TYPE SYTABIX.
	  
**17-07-2014
DATA: NUM TYPE I.
**17-07-2014

SELECT-OPTIONS: 
IT_COND FOR lv_line1 NO INTERVALS.
*Field symbols 
  FIELD-SYMBOLS: <fs> TYPE any,
                 <ps> TYPE any.
<? } ?>  
************************
*Final Type declarations
************************
TYPES : BEGIN OF ty_final,
<%=odiSapRef.getColList("\n", "[CX_COLUMN_NAME] TYPE\n [RES_NAME]-[COL_NAME]", ",\n", ",\n", "MAPPED_OR_JOIN")%>
END OF ty_final.

*****************************
*Final Temp Type Declarations
*****************************
TYPES : BEGIN OF ty_final_tmp,
<%=odiSapRef.getColList("\n", "[CX_COLUMN_NAME] TYPE\n [RES_NAME]-[COL_NAME]", ",\n", ",\n", "")%>
END OF ty_final_tmp.

*******************************
*Final Target Type Declarations
*******************************
TYPES : BEGIN OF ty_final_target,
<%=odiSapRef.getColList("\n", "[CX_COLUMN_NAME] TYPE\n [RES_NAME]-[COL_NAME]", ",\n", ",\n", "ALL_MAPPED")%>
END OF ty_final_target.
<%  abapGenItr = odiSapRef.getSrcTableIterator();
	while(abapGenItr.hasNext()) {
	curTable = new SourceTable();
	curTable = (SourceTable)abapGenItr.next();
	curTableDetail.setCurTableName(curTable.getAliasName().trim()); %>
	
**************************
* Table type for <%=curTable.getAliasName()%>
**************************
TYPES : BEGIN OF ty_<%=curTable.getAliasName()%>,
<%=curTableDetail.getColList("\n", "[CX_COLUMN_NAME] TYPE\n [RES_NAME]-[COL_NAME]", ",\n", ",\n", "MAPPED_OR_JOIN")%>
END OF ty_<%=curTable.getAliasName()%>.
<% }/*End of while condition */ %>

TYPES: BEGIN OF gs_text,
line(<%=odiSapRef.getABAPRecordBufferLength()%>) TYPE c,
END OF gs_text.

************************
*Structure Declarations
************************
DATA: wa_final_tmp type ty_final_tmp.
DATA: wa_final_string TYPE string,
      wa_final TYPE ty_final,
      wa_final_target TYPE ty_final_target,
<%if(bUseFTP){%>
	t_vers TYPE cvers,
<%}%>
<%  abapGenItr = odiSapRef.getSrcTableIterator();
	while(abapGenItr.hasNext()) {
	curTable = new SourceTable();
	curTable = (SourceTable)abapGenItr.next();
	curTableDetail.setCurTableName(curTable.getAliasName().trim()); %>
wa_<%=curTable.getAliasName()%> TYPE ty_<%=curTable.getAliasName()%>,
<% }/*End of while condition */ %>

********************
*Table Declarations
********************
gt_result TYPE TABLE OF gs_text,
tt_final TYPE STANDARD TABLE OF ty_final,
tt_final_target TYPE STANDARD 
TABLE OF ty_final_target,
tt_final_tmp TYPE STANDARD 
TABLE OF ty_final_tmp,
tt_final_tmp1 TYPE STANDARD 
TABLE OF ty_final,
<%if(bUseFTP){/****FTP********/%>
lt_txtdata TYPE STANDARD 
TABLE OF ls_text,
wa_txtdata LIKE LINE  OF lt_txtdata,
lt_result  TYPE STANDARD TABLE OF ls_text,
<%}/**END OF if(bUseFTP)**********/%>
<%abapGenItr = odiSapRef.getSrcTableIterator();
	while(abapGenItr.hasNext()) {
	curTable = new SourceTable();
	curTable = (SourceTable)abapGenItr.next();
	curTableDetail.setCurTableName(curTable.getAliasName().trim());
	if (!curTableDetail.isLastTable()) { %>
*Intermediate Output Internal table for join <%=curTableDetail.getTableOrder()%>
tt_final<%=curTableDetail.getTableOrder()%> TYPE STANDARD TABLE OF ty_final,
<% }/*end of if*/ }/*end of while*/
abapGenItr = odiSapRef.getSrcTableIterator();
while(abapGenItr.hasNext()) {
  curTable = new SourceTable();
  curTable = (SourceTable)abapGenItr.next();
  curTableDetail.setCurTableName(curTable.getAliasName().trim()); %>
tt_<%=curTable.getAliasName()%> TYPE STANDARD TABLE OF ty_<%=curTable.getAliasName()%>,
<%}%>

***********************
*Variable Declarations
***********************
lv_flag TYPE char1,
<%=odiSapRef.getColList("", "[CX_COLUMN_NAME]\n TYPE STRING", ",\n", ",\n", "ALL_MAPPED")%>
lv_delimiter type string,
lv_tabix_frm TYPE SY-TABIX,
lv_path TYPE string,
lv_file TYPE string,
lv_datum TYPE sy-datum,
lv_date  TYPE char10,

**17-07-2014
lv_mesg TYPE string,
wa_result TYPE string,
lv_cnt TYPE sytabix,
lv_path_authority TYPE char255.
DEFINE authority_check.
 authority-check object 'S_DATASET'
    id 'PROGRAM' field &1
    id 'ACTVT' field '06'
	id 'ACTVT' field '33'
	id 'ACTVT' field '34'
    id 'FILENAME' field lv_path_authority.
 if sy-subrc <> 0.
  CLEAR et_file_return.
  et_file_return-type = 'E'.
  et_file_return-message =
  'Error: Authorization for S_DATASET' .
  et_file_return-message_v1 =
  'or some activity authorization under'.
  et_file_return-message_v2 =
  'S_DATASET is missing.'.
  APPEND et_file_return.
   <?if(bgp){?>
   CALL FUNCTION 'ZODI_LOGMSG_ADD'
    EXPORTING
      et_file_return = et_file_return
      i_log_handle   = i_log_handle.
	  
	  write : / 'MSGID: ', sy-msgid.
	  WRITE : / 'MSGTYPE: ', et_file_return-type.
	  WRITE : / 'MESSAGE 1: ', et_file_return-message.
      WRITE : / 'MESSAGE 2: ', et_file_return-message_v1.
	  WRITE : / 'MESSAGE 3: ', et_file_return-message_v2.
   <?}?>
   EXIT.
 endif.
END-OF-DEFINITION.
**17-07-2014

<%if(bUseFTP){/***FTP*******/%>
DATA: lv_tabix_to TYPE SY-TABIX,
path type char255,
lv_hdl TYPE i,
lv_cmd(120) TYPE c, 
lv_slen TYPE i, 
lv_line TYPE i.

*************************
*Constants Declarations
*************************
CONSTANTS: gc_error VALUE 'E',
	gc_success VALUE 'S',
    gc_information VALUE 'I',
	lc_dest TYPE rfcdes-rfcdest 
	VALUE 'SAPFTPA',
    lc_key TYPE i VALUE 26101957, 
    lc_pasv VALUE 'X', 
    lc_cmd1(20) TYPE c VALUE 'set passive on', 
    lc_cmd2(5) TYPE c VALUE 'put'.
<%}/*END of if(bUseFTP)*/%>

<? if(bgp) { ?> 
************************************************
*Passing Report parameter to internal variables
************************************************
MOVE: iv_deli TO iv_delimiter,
           iv_file TO iv_filename,
           iv_hash TO iv_hashvalue,
           iv_maxc TO iv_max_row_cnt,
           iv_fetc TO iv_fetch_batch_size.

**************************
*Populating Log Variables
**************************
ls_log-extnumber = iv_extid.
ls_log-object = iv_app.
ls_log-aluser = sy-uname.
ls_log-subobject = iv_sub.
ls_log-aldate = sy-datum.

CLEAR et_file_return.

et_file_return-type = 'I'.
et_file_return-number = '000'.
et_file_return-ID = 'CL'.
et_file_return-message = 
'Application Logging Started'.

************************
*Generating Log Handler
************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    LS_LOG               = ls_log
 TABLES
   ET_HANDLE             = lt_return_handle.

READ TABLE lt_return_handle INTO
 wa_return_handle INDEX 1.
IF sy-subrc IS INITIAL.
 i_log_handle = wa_return_handle-message.
ENDIF.

******************************
*Retrieve ODI variable values
******************************
LOOP AT it_cond  .
    lv_new = sy-tabix.
    lv_mod = lv_new MOD 2.
    IF lv_mod EQ 1.
    wa_odi-field = it_cond-low.
    lv_new = lv_new + 1.
    CLEAR it_cond.
    READ TABLE it_cond INDEX lv_new.
    wa_odi-val = it_cond-low.
    APPEND wa_odi TO it_odivar.
    CLEAR : wa_odi,it_cond,lv_new.
    ENDIF.
  ENDLOOP. 
  LOOP AT it_odivar INTO wa_odi.
    lv_dyn_var = wa_odi-field.
    ASSIGN (lv_dyn_var) TO <ps>.
    IF <ps> IS ASSIGNED.
      ASSIGN COMPONENT lv_var 
OF STRUCTURE wa_odi TO <fs>.
      IF <fs> IS ASSIGNED.
        <ps> = wa_odi-val.
      ENDIF.
    ENDIF. 
    UNASSIGN : <fs>,<ps>. 
  ENDLOOP. 
  
************************
*Writing Spool data 
************************
CALL FUNCTION 'SET_PRINT_PARAMETERS'
EXPORTING
LINE_SIZE = 250.
WRITE :'Background Process Started  at'.
NEW-LINE.
WRITE :'Time:',sy-uzeit.
WRITE :'User:',sy-uname. 

*************************************
*end of Retrieve ODI variable values
*************************************
<? } ?>

*********************
*Cursor Declaration
*********************
<% abapGenItr = odiSapRef.getSrcTableIterator();
   while(abapGenItr.hasNext()) {
   curTable = new SourceTable();
   curTable = (SourceTable)abapGenItr.next();
   curTableDetail.setCurTableName(curTable.getAliasName().trim());
   if (curTableDetail.isFirstTable()) { %>
DATA: lv_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>_dbcur  TYPE cursor.
<%}}%>

************************
*Hash value comparison
************************
lv_delimiter = iv_delimiter.
IF  iv_hashvalue NE 'ODI.SAP.HVM'.

CLEAR et_file_return.

et_file_return-id = 'CL'.
et_file_return-type = 'E'.
et_file_return-number = '000'.
et_file_return-message =
'Installed ABAP program does not match interface definition'.
<?if(bgp){?>
NEW-LINE.
CONCATENATE 'MSGTY:' et_file_return-type INTO
    lv_string.
WRITE: lv_string.
clear lv_string.
NEW-LINE.
CONCATENATE 'MESSAGE:' et_file_return-message INTO
    lv_string.
WRITE: lv_string.
clear lv_string.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
	
<?}?>
APPEND et_file_return.
EXIT.
ENDIF.

**#changes_v_38
***************************************
******Creating Path  ******
***************************************
TYPES : BEGIN OF ty_tab,
            dirname TYPE dirname ,
          END OF ty_tab.

  DATA: lv_pathname TYPE text255,
        lv_logpath  TYPE text255,
        lv_len TYPE i,
        lv_path_windows(64),
        lv_path_prog_files(64).

  DATA: lt_tab TYPE STANDARD 
TABLE OF ty_tab,
        ls_tab TYPE ty_tab.


  CONSTANTS : lc_f_slash 
TYPE char1 VALUE '/',
              lc_b_slash 
TYPE char1 VALUE '\'.


<%if(!bUseFTP){%>
lv_pathname = iv_path.
<%}%>
			
<%if(bUseFTP){%>
<? if(bgp) { ?>
lv_pathname = IV_TMDIR.
lv_logpath = IV_LODIR.
<? } else { ?>
lv_pathname = IV_TMP_DIR_PATH.
lv_logpath = IV_LOG_DIR_PATH.
<? } ?>

IF lv_logpath IS INITIAL 
	AND lv_pathname IS INITIAL.			
***********************************
*******Get default directory*******
***********************************
CALL FUNCTION 'RSPO_SAPGPARAM'
  EXPORTING
*   RFCDEST          =
    NAME             = 'DIR_HOME'
IMPORTING
   VALUE            = lv_pathname
*   ONLY_LOCAL       =
 EXCEPTIONS
   ERROR            = 1
   OTHERS           = 2   .
IF SY-SUBRC <> 0.

ENDIF.
* Set default value for lv_logpath.
 lv_logpath = 'DIR_HOME'.
*1.Given logical directory
  ELSEIF NOT  lv_logpath IS INITIAL.
* 1.1 check if its 'DIR_SAPHOSTAGENT' 
    IF lv_logpath = 'DIR_SAPHOSTAGENT'.
* calculate directory for saphostagent
      IF ( sy-opsys(3) = 'WIN' ) 
OR ( sy-opsys(3) = 'Win' ).

 CALL 'C_GETENV' ID 'NAME'  FIELD 'ProgramFiles'
 ID 'VALUE' FIELD lv_path_prog_files.

        IF lv_path_prog_files IS INITIAL.
*     %ProgramFiles% not available. guess from windir
          CALL 'C_GETENV' ID 'NAME'  FIELD 'windir'
                          ID 'VALUE' FIELD lv_path_windows.
*     e.g. S:\WINDOWS ==> S:\Program Files
          CONCATENATE lv_path_windows(3) 'Program Files'
 INTO lv_path_prog_files.
        ENDIF.

        CONCATENATE lv_path_prog_files '\SAP\hostctrl\'
 INTO lv_pathname.
      ELSE.
*   on UNIX, the path is hard coded
        lv_pathname  = '/usr/sap/hostctrl/'.
      ENDIF.
    ELSE.
*   1.2 Else get physical path 
*    from FM RSPO_SAPGPARAM.
      CALL FUNCTION 'RSPO_SAPGPARAM'
        EXPORTING
          name   = lv_logpath
        IMPORTING
          value  = lv_pathname
        EXCEPTIONS
          error  = 1
          OTHERS = 2.
      IF sy-subrc <> 0.
*   1.3 Else get name from table USER_DIR
        SELECT  dirname FROM user_dir 
INTO TABLE lt_tab
          UP TO 1 ROWS
          WHERE aliass = lv_logpath.
        IF  sy-subrc IS NOT INITIAL .
*     1.4 All failed - throw error

          clear et_file_return.
          et_file_return-type = 'E'.
          et_file_return-message =
          'Please enter a valid logical directory path' .
          append et_file_return.
<? if(bgp) { ?>
      CALL FUNCTION 'ZODI_LOGMSG_ADD'
      EXPORTING
        et_file_return = et_file_return
        i_log_handle   = i_log_handle.

          write : / 'MSGID: ', sy-msgid.
          write : / 'MSGTYPE: ', et_file_return-type.
          write : / 'MESSAGE 1: ', et_file_return-message.
<?}?>
          exit.

        ELSE.
          READ TABLE lt_tab INTO ls_tab INDEX 1.
          IF sy-subrc eq 0.
            lv_pathname  = ls_tab-dirname.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.
ENDIF.

*If Directory is 'DIR_HOME' then Append SLASH
IF lv_logpath = 'DIR_HOME'.
*--check OS
*---if WINDOWS then append BackSlash
IF ( sy-opsys(3) = 'WIN' ) 
OR ( sy-opsys(3) = 'Win' ).
  concatenate lv_pathname '\' into 
  lv_pathname.
ELSE.
*---If UNIX then append ForwardSlash
concatenate lv_pathname '/' into 
   lv_pathname.	
ENDIF.
ENDIF.
<%}%>
* lv_pathname is now having physical path
* Check it ends with a slash
  lv_len = strlen( lv_pathname ).
  lv_len = lv_len - 1.
  IF lv_pathname+lv_len(1) = lc_f_slash
     OR lv_pathname+lv_len(1) = lc_b_slash .
* Take this as physical path for further processing.
*Create a file and then write to it.
    CONCATENATE lv_pathname
 iv_filename INTO lv_path.
  ELSE.
* Path is not ending with a slash.Throw error.

    clear et_file_return.
    et_file_return-type = 'E'.
    et_file_return-message =
    'The physical path is not ending with a slash' .
    append et_file_return.

<? if(bgp) { ?>
 CALL FUNCTION 'ZODI_LOGMSG_ADD'
      EXPORTING
        et_file_return = et_file_return
        i_log_handle   = i_log_handle.

    write : / 'MSGID: ', sy-msgid.
    write : / 'MSGTYPE: ', et_file_return-type.
    write : / 'MESSAGE 1: ', et_file_return-message.
<?}?>
    exit.

  ENDIF.
**end of #changes_v_38


<%if(!bUseFTP){/***FSMOUNT*******/%>
*************************
*Open/delete output file
*************************
*CONCATENATE iv_path iv_filename INTO lv_path.
<%}%>

  lv_path_authority = lv_path.
  authority_check 'SAPLSLOG'.
  authority_check 'ZODI*'.
  authority_check 'SAPLZODI*'.
  authority_check 'SAPLSTRF'.
**17-07-2014

<%if(!bUseFTP){/***FSMOUNT*******/%>
*************************
*Open/delete output file
*************************
*CONCATENATE iv_path iv_filename INTO lv_path.

******************************************************
*Check for file existence, if found, delete it
******************************************************

<% /*if SAP R/3 version 4.6c */ %>
<?if(sSapAbapVersion.equalsIgnoreCase("46C")) {?>
OPEN DATASET lv_path FOR INPUT
     IN TEXT MODE.
<% /*ELS if SAP R/3 ver 4.7 & Above */ %>
<?}else {?>

***************************
**Opening a file for input
***************************
OPEN DATASET lv_path FOR INPUT
     IN TEXT MODE
     ENCODING DEFAULT.
<?}?>

IF sy-subrc EQ 0.
*******************************
**Deleting file from file path
*******************************
  DELETE DATASET lv_path.
ENDIF.

***************************
*Open/create output file
***************************
<% /*if SAP R/3 ABAP version 4.6c*/ %>
<?if(sSapAbapVersion.equalsIgnoreCase("46C")) {?>

********************************
**Opening a file in append mode
********************************
OPEN DATASET lv_path FOR APPENDING
     IN TEXT MODE.
<% /*ELS if SAP R/3 ver 4.7 & Above */ %>
<?}else {?>

********************************
**Opening a file in append mode
********************************
OPEN DATASET lv_path FOR APPENDING
     IN TEXT MODE
     ENCODING DEFAULT.
<?}?>
IF sy-subrc NE 0.

**17-07-2014
CLEAR: et_file_return, lv_mesg.
et_file_return-type = 'E'.
CONCATENATE 
'Error occurred when creating dataset ' lv_path 
INTO lv_mesg.
et_file_return-message = lv_mesg.
Append et_file_return.
**17-07-2014

<? if(bgp){ ?>
**17-07-2014
CLEAR et_file_return-message.
et_file_return-TYPE = 'E'.
   et_file_return-message = 'File is not open for given path.'.
   append et_file_return.
     CALL FUNCTION 'ZODI_LOGMSG_ADD'
    EXPORTING
      ET_FILE_RETURN = et_file_return
      I_LOG_HANDLE   = i_log_handle.

    WRITE : / et_file_return-message.
    CLEAR et_file_return-message.

  NUM = STRLEN( lv_path ).

<? if(sSapAbapVersion.equalsIgnoreCase("46C")) {?>
    et_file_return-message = lv_path.
     et_file_return-type   = 'E'.
    append et_file_return.
      CALL FUNCTION 'ZODI_LOGMSG_ADD'
    EXPORTING
      ET_FILE_RETURN = et_file_return
      I_LOG_HANDLE   = i_log_handle.
    WRITE : / et_file_return-message.
    clear et_file_return.
<? } else { ?>
IF NUM > 50.
  DATA ex TYPE REF TO cx_root.
  DATA : lv_trunc TYPE i.
  TRY .
    et_file_return-message    = LV_path+lv_trunc(50).
    lv_trunc = lv_trunc + 50.
    et_file_return-message_v1 = LV_path+lv_trunc(50).
    lv_trunc = lv_trunc + 50.
    et_file_return-message_v2 = LV_path+lv_trunc(50).
    lv_trunc = lv_trunc + 50.
     et_file_return-message_v3 = LV_path+lv_trunc(50).
    lv_trunc = lv_trunc + 50.
    CATCH CX_SY_RANGE_OUT_OF_BOUNDS INTO ex .
    num = num - lv_trunc  .
    et_file_return-MESSAGE_V3 = lv_path+lv_trunc(num).
    append et_file_return.

     CALL FUNCTION 'ZODI_LOGMSG_ADD'
    EXPORTING
      ET_FILE_RETURN = et_file_return
      I_LOG_HANDLE   = i_log_handle.

    WRITE : / et_file_return-message.
    WRITE :  et_file_return-message_v1.
    WRITE :  et_file_return-message_v2.
    WRITE :  et_file_return-message_v3.
    clear et_file_return.

  ENDTRY.

  ELSE.
    et_file_return-message = lv_path.
     et_file_return-type   = 'E'.
    append et_file_return.
      CALL FUNCTION 'ZODI_LOGMSG_ADD'
    EXPORTING
      ET_FILE_RETURN = et_file_return
      I_LOG_HANDLE   = i_log_handle.
    WRITE : / et_file_return-message.
    clear et_file_return.
  ENDIF.
<? } ?>
exit.
*et_file_return-id = 'CL'.
*et_file_return-number = '000'.
************************************************
*Appending the et_file_return to Application log
************************************************
*CALL FUNCTION 'ZODI_LOGMSG_ADD'
*  EXPORTING
*    ET_FILE_RETURN       = et_file_return
*    I_LOG_HANDLE         = i_log_handle.
<?}?>
*Append et_file_return.
ENDIF.
<%}/*END of if(!bUseFTP)*/%>

*****************
*Batch Processing
*****************
<%abapGenItr = odiSapRef.getSrcTableIterator();
boolean flag = false;

while(abapGenItr.hasNext()) {
	curTable = new SourceTable();
	curTable = (SourceTable)abapGenItr.next();
	curTableDetail.setCurTableName(curTable.getAliasName().trim());
	if (curTableDetail.isFirstTable()) { %>

************************************************
*Opening for Database Cursor for Data retrieval
************************************************
OPEN CURSOR WITH HOLD lv_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>_dbcur FOR
SELECT <%=curTableDetail.getColList("", "[COL_NAME]", "\n", "\n", "MAPPED_OR_JOIN")%>
FROM  <%=curTableDetail.getInfo("RES_NAME")%><% if(curTableDetail.getFilter().length() > 1) { %>
WHERE <%=curTableDetail.getFilter()%><% } else { %>.<% } %>
DO.

************************************************
*Check for the counter, only for first batch 
*process new line is required...
************************************************
lv_cnt  = lv_cnt  + 1.

************************************************
**Refreshing the final internal table
************************************************
REFRESH tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
FETCH NEXT CURSOR lv_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>_dbcur 
APPENDING TABLE tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> 

************************************************************
*Extract Data from database cursor based on FETCH_BATCH_SIZE
************************************************************
PACKAGE SIZE IV_FETCH_BATCH_SIZE.

<%if(iHelper.isCalculatedJoinCase()){%> 
SORT tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> BY <%=curTableDetail.getInfo("SORT_COLUMNS")%>.
DELETE ADJACENT DUPLICATES FROM tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> COMPARING <%=curTableDetail.getInfo("SORT_COLUMNS")%>.
<%}%>

<? if(bgp){ ?>

************************************************
*Appending the et_file_return to Application log
************************************************
describe TABLE tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> lines lv_rowCount.
lv_rowCountChar = lv_rowCount.
et_file_return-type = 'S'.
et_file_return-id = 'CL'.
et_file_return-number = '000'.
et_file_return-message = 'Number of records fetched : '.
concatenate et_file_return-message lv_rowCountChar 
INTO et_file_return-message.

**************************************************
*Appending the et_file_return to Application log
**************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?> 
<% } else /*If not first table*/{ 
   curTableDetail.setPrevTableName(curTableDetail.getParentTable());
   prevTable = "tt_"+curTableDetail.getParentTable(); %>  
<%if (!curTableDetail.isLastTable() || iHelper.sSAPTables.size() ==2) { bool = true;%>   
   REFRESH tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
   IF NOT <%=prevTable%> IS INITIAL.
<%}%>
*********************************************
*Read data from child table <%=curTableDetail.getInfo("POP_TAB_ALIAS")%>
*********************************************


**************************************************
*Selecting database table based on mapped columns
**************************************************
<%if(iHelper.isCalculatedJoinCase()){%>
LOOP AT tt_<%=curTableDetail.getPrevTableName()%> 
INTO wa_<%=curTableDetail.getPrevTableName()%>.
<%=curTableDetail.getColList("", "wa_[POP_TAB_ALIAS]-[EX_COLUMN_NAME] = [WA_LEFT_JOIN_EXPRESSION]", ".\n", ".\n", "CALCULATED_JOIN_COLS")%>
MODIFY tt_<%=curTableDetail.getPrevTableName()%>  FROM wa_<%=curTableDetail.getPrevTableName()%>.
ENDLOOP.
<%}%>

SELECT <%=curTableDetail.getColList("", "[COL_NAME]", "\n", "\n", "MAPPED_OR_JOIN")%>
FROM   <%=curTableDetail.getInfo("RES_NAME")%>
INTO TABLE tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>
FOR ALL ENTRIES IN <%=prevTable%>

WHERE <%=curTableDetail.getJoinList("","[RIGHT_COL_NAME] = \ntt_[LEFT_POP_TAB_ALIAS]-[LEFT_CX_COLUMN_NAME]"," AND\n","\n","PREV_JOIN")%>
<% if(curTableDetail.getFilter().length() > 1) { %>
AND   <%=curTableDetail.getFilter()%><% }; %>.
<%if (!curTableDetail.isLastTable()) { %>
*IF NOT tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> IS INITIAL.
<%}/*End of if curTable is not the last table*/
  }/*End of else condition*/
  }/*End of while loop */%>
<%if(odiSapRef.sSrcTables.size() > 1) { 
   abapGenItr = odiSapRef.getSrcTableIterator();
   endifCounter = 1;
   while(abapGenItr.hasNext()) {
     curTable = new SourceTable();
     curTable = (SourceTable)abapGenItr.next();
     curTableDetail.setCurTableName(curTable.getAliasName().trim());
     //for every table except for the very first one, insert an ENDIF
     if (!curTableDetail.isFirstTable() && endifCounter > 2) { %>
<% }endifCounter++;}}%>

<%if (flag) { %>
ELSE.
  EXIT.
  ENDIF.
<%} else {%>
<%
//*below if statement added to generate the (if condition)
//*in case of single table only.
if(iHelper.sSAPTables.size() == 1){%>
IF tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> IS INITIAL.
EXIT.
ENDIF.
<%}%>

<%}%>
<%
//*below if statement added to generate the (if condition)
//*in case of 2 and 3 tables join.
if(iHelper.sSAPTables.size() >= 2){%>
else.
EXIT.
ENDIF.
<%}%>

<%if(odiSapRef.sSrcTables.size() > 1) {
	abapGenItr = odiSapRef.getSrcTableIterator();
	num = 1;
	counterNew = 0;
	curJoinOutput = new SapJoinOutput(iHelper, sapLogger, odiSapRef);
while(abapGenItr.hasNext()) {
  prevTableName = curTable;
  curTable = new SourceTable();
  curTable = (SourceTable)abapGenItr.next();
  curTableDetail.setCurTableName(curTable.getAliasName().trim()); 
  prevTableDetail.setCurTableName(curTable.getAliasName().trim()); 

  if (curTableDetail.isFirstTable()) {
	 curTableDetail.setPrevTableName(curTable.getAliasName().trim());
	 prevTableName = curTable;
	 curJoinOutput.append(prevTableName);
  } else {
if(curTableDetail.isLeftOuterJoin()) { //*** IF LEFT OUTER JOIN
if(counterNew == 0) { %>

******************************
*First Order: LEFT OUTER JOIN
*First & 2nd table
******************************
LOOP AT tt_<%=curTableDetail.getPrevTableName()%> 
INTO wa_<%=curJoinOutput.getInfo("POP_TAB_ALIAS")%>.
<%=curTableDetail.getColList("", "MOVE wa_[POP_TAB_ALIAS]-[CX_COLUMN_NAME]\n TO wa_final-[CX_COLUMN_NAME]", ".\n", ".\n", "PREV_MAPPED_OR_JOIN")%>
APPEND wa_final TO tt_final_tmp1.
CLEAR : wa_<%=curTableDetail.getPrevTableName()%>.
ENDLOOP.
free : tt_<%=curTableDetail.getPrevTableName()%>.
sort tt_final_tmp1 by <%=curTableDetail.getJoinList("","[LEFT_CX_COLUMN_NAME]"," \n",".","PREV_JOIN")%>
sort tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> by <%=curTableDetail.getJoinList("","[RIGHT_CX_COLUMN_NAME]"," \n",".","PREV_JOIN")%>
<%curTableDetail.setPrevTableName(curTableDetail.getParentTable());%>

***********************************
*Populating the table extract into 
*temporary final internal table
***********************************
LOOP AT tt_final_tmp1 INTO wa_final.
lv_FLAG = ''.
read table tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> 

WITH KEY <%=curTableDetail.getJoinList("","[RIGHT_CX_COLUMN_NAME] =\n wa_final-[LEFT_JOIN_EXPR]"," \n","\n","PREV_JOIN_COMPOSITE_KEY")%>
TRANSPORTING NO FIELDS
BINARY SEARCH.
if sy-subrc = 0.
lv_tabix_frm = sy-tabix.

LOOP AT tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> 
INTO wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>
from lv_tabix_frm.

IF <%=curTableDetail.getJoinList("","wa_[RIGHT_POP_TAB_ALIAS]-[RIGHT_CX_COLUMN_NAME] =\n wa_final-[LEFT_JOIN_EXPR]"," AND\n",".\n","PREV_JOIN_COMPOSITE_KEY")%>
<%=curTableDetail.getColList("", "MOVE wa_[POP_TAB_ALIAS]-[CX_COLUMN_NAME]\n TO wa_final-[CX_COLUMN_NAME]", ".\n", ".\n", "CUR_MAPPED_OR_JOIN")%>
APPEND wa_final 
TO tt_<%=curJoinOutput.getInfo("FINAL_TABLE")%>.
CLEAR wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
lv_FLAG = 'X'.
ELSE.
	EXIT.
ENDIF.
ENDLOOP.
ENDIF.
IF lv_FLAG NE 'X'.
*Appending to the final table
APPEND wa_final 
TO tt_<%=curJoinOutput.getInfo("FINAL_TABLE")%>.
ENDIF.
ENDLOOP.
free : tt_final_tmp1, tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
<%curJoinOutput.append(prevTableName);
}//end of if(counterNew == 0) LEFT OUTER JOIN
} else { //else ************* INNER JOIN ******************
	  if(counterNew == 0) { //For 1st & 2nd Table join
	curTableDetail.setPrevTableName(curTableDetail.getParentTable()); %>
	
************************
*First Order: INNER JOIN
*First & 2nd Table
************************
sort tt_<%=curTableDetail.getPrevTableName()%> by <%=curTableDetail.getJoinList("","[LEFT_CX_COLUMN_NAME]"," \n",".","PREV_JOIN")%>
sort tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> by <%=curTableDetail.getJoinList("","[RIGHT_CX_COLUMN_NAME]"," \n",".","PREV_JOIN")%>
CLEAR wa_<%=curJoinOutput.getInfo("POP_TAB_ALIAS")%>.
LOOP AT tt_<%=curTableDetail.getPrevTableName()%> 
INTO wa_<%=curJoinOutput.getInfo("POP_TAB_ALIAS")%>.
<%curTableDetail.setPrevTableName(curTableDetail.getParentTable());%>
CLEAR : wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
READ TABLE tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> 
WITH KEY <%=curTableDetail.getJoinList("","[RIGHT_CX_COLUMN_NAME] =\n wa_[LEFT_POP_TAB_ALIAS]-[LEFT_CX_COLUMN_NAME]"," \n","\n","PREV_JOIN")%>
TRANSPORTING NO FIELDS
BINARY SEARCH.
if sy-subrc = 0.
lv_tabix_frm = sy-tabix.
LOOP AT tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> 
INTO wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>
from lv_tabix_frm.
IF <%=curTableDetail.getJoinList("","wa_[RIGHT_POP_TAB_ALIAS]-[RIGHT_CX_COLUMN_NAME] =\n wa_[LEFT_POP_TAB_ALIAS]-[LEFT_CX_COLUMN_NAME]"," AND\n",".\n","PREV_JOIN")%>
<%=curTableDetail.getColList("", "MOVE wa_[POP_TAB_ALIAS]-[CX_COLUMN_NAME]\n TO wa_final-[CX_COLUMN_NAME]", ".\n", ".\n", "CUR_MAPPED_OR_JOIN")%>
<%=curTableDetail.getColList("", "MOVE wa_[POP_TAB_ALIAS]-[CX_COLUMN_NAME]\n TO wa_final-[CX_COLUMN_NAME]", ".\n", ".\n", "PREV_MAPPED_OR_JOIN")%>
APPEND wa_final 
TO tt_<%=curJoinOutput.getInfo("FINAL_TABLE")%>.
CLEAR : wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
ELSE.
	EXIT.
ENDIF.
ENDLOOP.
ENDIF.
*CLEAR wa_<%=curJoinOutput.getInfo("POP_TAB_ALIAS")%>.
ENDLOOP.
free : tt_<%=curTableDetail.getPrevTableName()%>, tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
<% curJoinOutput.append(prevTableName);
}//end of if(counterNew == 0)
}//end of else **** INNER JOIN ************
//******* END OF FIRST TWO TABLE INNER JOIN ************
// AFTER 2ND Table i.e. 3 or 4 or 5 tables
if(curTableDetail.isLeftOuterJoin()) { //*** IF LEFT OUTER JOIN
if(counterNew > 0) { 
curTableDetail.setPrevTableName(curTableDetail.getParentTable());%>

************************************************
*Join Order <%=counterNew+1%> : LEFT OUTER JOIN
************************************************
sort tt_final<%=counterNew%> by <%=curTableDetail.getJoinList("","[LEFT_CX_COLUMN_NAME]"," \n",".\n","PREV_JOIN")%>
sort tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> by <%=curTableDetail.getJoinList("","[RIGHT_CX_COLUMN_NAME]"," \n",".\n","PREV_JOIN")%>
LOOP AT tt_<%=curJoinOutput.getInfo("POP_TAB_ALIAS")%> 
INTO wa_final.
lv_FLAG = ''.
read table tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> 

WITH KEY <%=curTableDetail.getJoinList("","[RIGHT_CX_COLUMN_NAME] =\n wa_final-[LEFT_CX_COLUMN_NAME]"," \n","\n","PREV_JOIN")%>
TRANSPORTING NO FIELDS
BINARY SEARCH.
if sy-subrc = 0.
lv_tabix_frm = sy-tabix.
LOOP AT tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> 
INTO wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>
from lv_tabix_frm.

IF <%=curTableDetail.getJoinList("","wa_[RIGHT_POP_TAB_ALIAS]-[RIGHT_CX_COLUMN_NAME] =\n wa_final-][LEFT_CX_COLUMN_NAME]","\nAND ",".\n","PREV_JOIN")%>
<%=curTableDetail.getColList("", "MOVE wa_[POP_TAB_ALIAS]-[CX_COLUMN_NAME]\n TO wa_final-[CX_COLUMN_NAME]", ".\n", ".\n", "CUR_MAPPED_OR_JOIN")%>
APPEND wa_final 
TO tt_<%=curJoinOutput.getInfo("FINAL_TABLE")%>.
CLEAR wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
lv_FLAG = 'X'.
ELSE.
	EXIT.
ENDIF.
ENDLOOP.
ENDIF.
IF lv_FLAG NE 'X'.
APPEND wa_final 
TO tt_<%=curJoinOutput.getInfo("FINAL_TABLE")%>.
ENDIF.
*CLEAR wa_final.
ENDLOOP.
free : tt_<%=curJoinOutput.getInfo("POP_TAB_ALIAS")%>, tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
<% prevJoinOutput = curJoinOutput;
curJoinOutput.append(prevTableName);
}//end of if(counterNew > 0) condition
} else { //***** ELSE INNER JOIN from 2nd, 3rd, 4th onward tables...
if(counterNew > 0) { 
	curTableDetail.prevTableName = curTableDetail.getParentTable();%>
	
************************************************
****Join Order <%=counterNew+1%> : INNER JOIN 
************************************************
sort tt_final<%=counterNew%> by <%=curTableDetail.getJoinList("","[LEFT_CX_COLUMN_NAME]"," \n",".\n","PREV_JOIN")%>
sort tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> by <%=curTableDetail.getJoinList("","[RIGHT_CX_COLUMN_NAME]"," \n",".\n","PREV_JOIN")%>
CLEAR wa_final.
LOOP AT tt_<%=curJoinOutput.getInfo("POP_TAB_ALIAS")%> 
INTO wa_final.
CLEAR : wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
read table tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> 

WITH KEY <%=curTableDetail.getJoinList("","[RIGHT_CX_COLUMN_NAME] =\n wa_final-[LEFT_CX_COLUMN_NAME]"," \n","\n","PREV_JOIN")%>
TRANSPORTING NO FIELDS
BINARY SEARCH.
if sy-subrc = 0.
lv_tabix_frm = sy-tabix.
LOOP AT tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> 
INTO wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>
from lv_tabix_frm.
IF <%=curTableDetail.getJoinList("","wa_[RIGHT_POP_TAB_ALIAS]-[RIGHT_CX_COLUMN_NAME]\n = wa_final-][LEFT_CX_COLUMN_NAME]","\nAND ",".\n","PREV_JOIN")%>
<%curJoinOutput.setCurTableName(curTableDetail.getInfo("POP_TAB_ALIAS"));%>
<%=curTableDetail.getColList("", "MOVE wa_[POP_TAB_ALIAS]-[CX_COLUMN_NAME]\n TO wa_final-[CX_COLUMN_NAME]", ".\n", ".\n", "CUR_MAPPED_OR_JOIN")%>
APPEND wa_final 
TO tt_<%=curJoinOutput.getInfo("FINAL_TABLE")%>.
CLEAR : wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>. 
ELSE.
	EXIT.
ENDIF.
ENDLOOP.
ENDIF.
ENDLOOP.
free : tt_<%=curJoinOutput.getInfo("POP_TAB_ALIAS")%>, tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
<% prevJoinOutput = curJoinOutput;
curJoinOutput.append(prevTableName);
}//end of if(counterNew > 0) condition
}//end of ELSE INNER JOIN from 2nd, 3rd, 4th onward tables...
counterNew++;
}/*end of else i.e. this is not the FirstTable*/
}/*end of while(abapGenItr.hasNext())*/%>

****************************************
***** END OF INNER/LEFT OUTER JOIN *****
****************************************
<%}/*end of if(odiSapRef.sSrcTables.size() > 1)*/ %>

<%if(odiSapRef.sSrcTables.size() > 1) { %>
LOOP AT tt_<%=curJoinOutput.getInfo("POP_TAB_ALIAS")%> INTO wa_final.
MOVE-CORRESPONDING wa_final TO wa_final_tmp.
APPEND wa_final_tmp TO tt_final_tmp.
*CLEAR wa_final.
ENDLOOP.
free : tt_<%=curJoinOutput.getInfo("POP_TAB_ALIAS")%>.
<%} else { %>
LOOP AT tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%> INTO wa_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
<%=curTableDetail.getColList("", "MOVE wa_[POP_TAB_ALIAS]-[CX_COLUMN_NAME]\n TO wa_final_tmp-[CX_COLUMN_NAME]", ".\n", ".\n", "CUR_MAPPED_OR_JOIN")%>
APPEND wa_final_tmp TO tt_final_tmp.
ENDLOOP.
free :  tt_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>.
<% }/*End of else condition*/ %>
LOOP AT tt_final_tmp INTO wa_final_tmp.
<%=odiSapRef.getColList("", "MOVE wa_final_tmp-[WA_FINAL_TEMP_SRCOL]\n TO wa_final_target-[CX_COLUMN_NAME]", ".\n", ".\n", "SOURCE_AND_TARGET")%>
Append wa_final_target to tt_final_target.
ENDLOOP.
free : tt_final_tmp.
Clear wa_final_target.

*Default value of MAX_ROW_COUNT
IF iv_max_row_cnt IS INITIAL.
	MOVE 2147483647 to iv_max_row_cnt.
ENDIF.
Loop at tt_final_target into 
wa_final_target TO iv_max_row_cnt.

<%=odiSapRef.getColList("", "MOVE wa_final_target-[CX_COLUMN_NAME]\n TO [CX_COLUMN_NAME]", ".\n", ".", "ALL_MAPPED")%>
<%if( leadingSigns) {/*Check for JDBC approach*/ %>
<%=odiSapRef.getColList("", "SHIFT [CX_COLUMN_NAME] UP TO '-' LEFT CIRCULAR.\n", "", "", "SOURCE_DT_ALLOWS_NEGATIVE")%>
<%}%>
<%if(curTableDetail.getColumnSize() == 1 ) { %>
wa_final_string = <%=odiSapRef.getColList("", "[CX_COLUMN_NAME]", "", ".\n", "")%>
<%}else{%>
CONCATENATE 
<%=odiSapRef.getColList("", "[CX_COLUMN_NAME]", "\n", "", "ALL_MAPPED")%>
INTO wa_final_string
SEPARATED BY lv_delimiter.
<%}%>

*******************************
*For first entry no delimiter is kept
*in the beginning
*******************************
IF sy-tabix EQ 1 AND lv_cnt EQ 1.
CONCATENATE wa_final_string 
lv_delimiter INTO wa_final_string.
ELSE.

**************************************
*For remaining entry delimiter is kept
**************************************
CONCATENATE '<@=""+(char)8@>' lv_delimiter wa_final_string 
lv_delimiter INTO wa_final_string.
ENDIF.
APPEND wa_final_string TO gt_result.
<%=odiSapRef.getColList("CLEAR : ", "[CX_COLUMN_NAME]", ",\n", ".\n", "ALL_MAPPED")%>
ENDLOOP.
free : tt_final_target.
<%if(!bUseFTP) { /***** FSMOUNT ******/%>
IF NOT gt_result IS INITIAL.

*******************************
*Transfer data to a file
*******************************
 CLEAR wa_result.
 LOOP AT gt_result INTO wa_result.
  TRANSFER wa_result TO lv_path.
 ENDLOOP.
ENDIF.

*************************************
*To get the number of records in the 
*final internal table
*************************************
DESCRIBE TABLE gt_result LINES lv_cnt.
WRITE : 'No of records in final table is :',lv_cnt.
REFRESH gt_result.

*******************************
*End of main loop for batching
*******************************
<%}/*END of if(!bUseFTP)*/%>
ENDDO.
<%if(!bUseFTP) { /***** FSMOUNT ******/%>
*****Close dataset
CLOSE DATASET lv_path.

************************************
*Error Handling for closing dataset
************************************
IF SY-SUBRC NE 0.
CLEAR et_file_return.
et_file_return-type = 'E'.
et_file_return-message =
'Error occured in closing the dataset'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
APPEND et_file_return.
ENDIF.
<%}/*END of if(!bUseFTP)*/%>
<%abapGenItr = odiSapRef.getSrcTableIterator();
while(abapGenItr.hasNext()) {
	curTable = new SourceTable();
	curTable = (SourceTable)abapGenItr.next();
	curTableDetail.setCurTableName(curTable.getAliasName().trim());
	if (curTableDetail.isFirstTable()) { %>
CLOSE CURSOR lv_<%=curTableDetail.getInfo("POP_TAB_ALIAS")%>_dbcur.
DESCRIBE TABLE gt_result LINES lv_cnt.
WRITE : 'No of records in final table is :',lv_cnt.

************************************
*Error Handling for closing cursor
************************************
*IF SY-SUBRC NE 0.
*CLEAR et_file_return.
*et_file_return-type = 'E'.
*et_file_return-message =
*'Error occured while close cursor command'.
*APPEND et_file_return.
*ENDIF.
<%}}/*End of while loop*/%>
<%if(bUseFTP){%>
<% /*if SAP R/3 version 4.6c */ %>
<? if(sSapAbapVersion.equalsIgnoreCase("46C")) {?>
	OPEN DATASET lv_path FOR INPUT
     IN TEXT MODE.
<?} else {?>
	OPEN DATASET lv_path FOR INPUT
     IN TEXT MODE
     ENCODING DEFAULT.
<?}?>
IF sy-subrc EQ 0.
  DELETE DATASET lv_path.
ENDIF.

<% /*if SAP R/3 version 4.6c */ %>
<? if(sSapAbapVersion.equalsIgnoreCase("46C")) {?>
	OPEN DATASET lv_path FOR APPENDING
     IN TEXT MODE.
<?} else {?>
	OPEN DATASET lv_path FOR APPENDING
     IN TEXT MODE
     ENCODING DEFAULT.
<?}?>
IF sy-subrc NE 0.
 et_file_return-TYPE = gc_error.
 CONCATENATE 
'Error occurred when creating dataset ' lv_path 
*'File' lv_path ' is not open'
INTO lv_mesg.
et_file_return-message = lv_mesg.

*et_file_return-message =
*'Error occurred when creating dataset'.
Append et_file_return.

<? if(bgp){?>
CLEAR et_file_return-message.
et_file_return-TYPE = gc_error.
   et_file_return-message = 'File is not open for given path.'.
   append et_file_return.
     CALL FUNCTION 'ZODI_LOGMSG_ADD'
    EXPORTING
      ET_FILE_RETURN = et_file_return
      I_LOG_HANDLE   = i_log_handle.

    WRITE : / et_file_return-message.
    CLEAR et_file_return-message.

  NUM = STRLEN( lv_path ).
<? if(sSapAbapVersion.equalsIgnoreCase("46C")) {?>
     et_file_return-message = lv_path.
     et_file_return-type   = 'E'.
    append et_file_return.
      CALL FUNCTION 'ZODI_LOGMSG_ADD'
    EXPORTING
      ET_FILE_RETURN = et_file_return
      I_LOG_HANDLE   = i_log_handle.
    WRITE : / et_file_return-message.
    clear et_file_return.
<? }else{ ?>
IF NUM > 50.
  DATA ex TYPE REF TO cx_root.
  DATA : lv_trunc TYPE i.
  TRY .
    et_file_return-message    = LV_path+lv_trunc(50).
    lv_trunc = lv_trunc + 50.
    et_file_return-message_v1 = LV_path+lv_trunc(50).
    lv_trunc = lv_trunc + 50.
    et_file_return-message_v2 = LV_path+lv_trunc(50).
    lv_trunc = lv_trunc + 50.
     et_file_return-message_v3 = LV_path+lv_trunc(50).
    lv_trunc = lv_trunc + 50.
    CATCH CX_SY_RANGE_OUT_OF_BOUNDS INTO ex .
    num = num - lv_trunc  .
    et_file_return-MESSAGE_V3 = lv_path+lv_trunc(num).
    append et_file_return.

     CALL FUNCTION 'ZODI_LOGMSG_ADD'
    EXPORTING
      ET_FILE_RETURN = et_file_return
      I_LOG_HANDLE   = i_log_handle.

    WRITE : / et_file_return-message.
    WRITE :  et_file_return-message_v1.
    WRITE :  et_file_return-message_v2.
    WRITE :  et_file_return-message_v3.
    clear et_file_return.

  ENDTRY.

  ELSE.
    et_file_return-message = lv_path.
     et_file_return-type   = 'E'.
    append et_file_return.
      CALL FUNCTION 'ZODI_LOGMSG_ADD'
    EXPORTING
      ET_FILE_RETURN = et_file_return
      I_LOG_HANDLE   = i_log_handle.
    WRITE : / et_file_return-message.
    clear et_file_return.
  ENDIF.
<? } ?>
exit.
*  ENDIF.
*NEW-LINE.
*CONCATENATE 'MSGTY:' et_file_return-type INTO
*    lv_string.
*WRITE: lv_string.
*clear lv_string.
*NEW-LINE.
*CONCATENATE 'MESSAGE:' et_file_return-message INTO
*    lv_string.
*WRITE: lv_string.
************************************************
*Appending the et_file_return to Application log
************************************************
*CALL FUNCTION 'ZODI_LOGMSG_ADD'
*  EXPORTING
*    ET_FILE_RETURN       = et_file_return
*    I_LOG_HANDLE         = i_log_handle.
*  EXIT.
<?}?>
ENDIF.
LOOP AT gt_result INTO wa_final_string.
  TRANSFER wa_final_string TO lv_path.
  IF sy-subrc NE 0.
     et_file_return-TYPE = gc_error.
    et_file_return-message = 'Fail to write'.
    Append et_file_return.
   ENDIF.
ENDLOOP.
 CLOSE DATASET lv_path.

 DATA: lv_user TYPE char30,
             lv_pwd TYPE char30,
             lv_host TYPE char64,
             lv_cmd1 TYPE char80,
             lv_cmd2 TYPE char80.

lv_user = iv_user.
lv_pwd = iv_pwd.
lv_host = iv_host.
CONCATENATE lc_cmd2 iv_filename
INTO lv_cmd2 SEPARATED BY ' '.
CONCATENATE 'cd' iv_path into lv_cmd1 SEPARATED BY SPACE.

SELECT SINGLE * FROM cvers INTO t_vers
WHERE component = 'SAP_ABA'.
lv_slen = strlen( iv_pwd ).

***************************************
*Identifing the System
*for SAP Version
***************************************
IF t_vers-release = '46C'.

***************************************
*To Scrammble password for 4.6C
***************************************
CALL 'AB_RFC_X_SCRAMBLE_STRING'
ID 'SOURCE' FIELD iv_pwd ID 'KEY' FIELD lc_key
ID 'SCR' FIELD 'X' ID'DESTINATION' FIELD iv_pwd
ID 'DSTLEN' FIELD lv_slen.
ELSE.

***************************************
*To Scrammble password for ECC 6.0
***************************************
CALL FUNCTION 'HTTP_SCRAMBLE'
EXPORTING
SOURCE    = iv_pwd
sourcelen = lv_slen
key       = lc_key
IMPORTING
destination = iv_pwd.
ENDIF.

***************************************
*Check for the FTP Connection
***************************************
CALL FUNCTION 'FTP_CONNECT'
EXPORTING
user  = iv_user
password  = iv_pwd
host = iv_host
rfc_destination = lc_dest
IMPORTING
handle = lv_hdl
EXCEPTIONS
not_connected   = 1
OTHERS          = 2.

************************
*Exception Handling
************************
IF sy-subrc NE 0.
If sy-subrc = 1.
clear et_file_return.
et_file_return-TYPE = gc_error.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
    WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4 INTO 
    ET_FILE_RETURN-MESSAGE.
    CONCATENATE'Not connected to FTP Server:' 
    ET_FILE_RETURN-MESSAGE INTO ET_FILE_RETURN-MESSAGE 
    SEPARATED BY SPACE.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
else.
clear et_file_return.
et_file_return-TYPE = gc_error.
et_file_return-message = 'Others'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
endif.
et_file_return-TYPE = gc_error.
et_file_return-message =
'Unable to connect FTP Server'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
ELSE.
clear et_file_return.
et_file_return-TYPE = gc_success.
et_file_return-message =
'Connected to FTP Server'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
free : gt_result.
CONCATENATE lc_cmd2 iv_filename
INTO lv_cmd SEPARATED BY ' '.
REFRESH lt_result.
CONCATENATE 'lcd' lv_pathname into path SEPARATED BY SPACE.
CALL FUNCTION 'FTP_COMMAND'
EXPORTING
handle  = lv_hdl
command  = PATH
TABLES
data  = lt_result
EXCEPTIONS
tcpip_error   = 1
command_error = 2
data_error    = 3.
IF sy-subrc <> 0.

***********************************
*****PERFORM error_ftp_COMMAND*****
***********************************
case sy-subrc.
when '1'.
et_file_return-TYPE = gc_error.
et_file_return-message =
'tcpip_error: in the FTP Path'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
clear et_file_return.
when '2'.
et_file_return-TYPE = gc_error.
*et_file_return-message =
*'Command Error: in the FTP Path'.
et_file_return-message =
'Command Error: '.
et_file_return-message_v1 =
' Error in command occured due to Invalid'.
et_file_return-message_v2 =
' FTP command or Invalid FTP file path'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
clear et_file_return.
when '3'.
et_file_return-TYPE = gc_error.
et_file_return-message =
'Data_error: in the FTP Path'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
clear et_file_return.
endcase.
et_file_return-TYPE = gc_error.
et_file_return-message = 
'Error in passing FTP'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
EXIT.
ELSE.
clear et_file_return.
et_file_return-TYPE = gc_success.
et_file_return-message =
'Local Directory identified'.
Append et_file_return.
ENDIF.
CLEAR PATH.

CONCATENATE 'cd' iv_path into path SEPARATED BY SPACE.
CALL FUNCTION 'FTP_COMMAND'
EXPORTING
handle  = lv_hdl
command  = PATH
TABLES
data  = lt_result
EXCEPTIONS
tcpip_error   = 1
command_error = 2
data_error    = 3.
IF sy-subrc NE 0.

******************************
*PERFORM error_ftp_COMMAND.
******************************
case sy-subrc.
when '1'.
et_file_return-TYPE = gc_error.
et_file_return-message =
'tcpip_error: in the FTP Path'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
clear et_file_return.
when '2'.
et_file_return-TYPE = gc_error.
*et_file_return-message =
*'Command Error: in the FTP Path'.
et_file_return-message =
'Command Error: '.
et_file_return-message_v1 =
' Error in command occured due to Invalid'.
et_file_return-message_v2 =
' FTP command or Invalid FTP file path'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
clear et_file_return.
when '3'.
et_file_return-TYPE = gc_error.
et_file_return-message =
'Data_error: in the FTP Path'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
clear et_file_return.
endcase.
et_file_return-TYPE = gc_error.
et_file_return-message =
'Error in passing FTP Path'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
EXIT.
ELSE.
clear et_file_return.
et_file_return-TYPE = gc_success.
et_file_return-message = 
'Data Transfer Successful'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
ENDIF.

CALL FUNCTION 'FTP_COMMAND'
EXPORTING
handle  = lv_hdl
command  = lv_cmd
TABLES
data  = lt_result
EXCEPTIONS
tcpip_error   = 1
command_error = 2
data_error    = 3.
IF sy-subrc NE 0.
************************************************
*PERFORM error_ftp_COMMAND.
************************************************
case sy-subrc.
when '1'.
et_file_return-TYPE = gc_error.
et_file_return-message =
'tcpip_error: in the FTP Path'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
clear et_file_return.
when '2'.
et_file_return-TYPE = gc_error.
*et_file_return-message =
*'Command Error: in the FTP Path'.
et_file_return-message =
'Command Error: '.
et_file_return-message_v1 =
' Error in command occured due to Invalid'.
et_file_return-message_v2 =
' FTP command or Invalid FTP file path'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
clear et_file_return.
when '3'.
et_file_return-TYPE = gc_error.
et_file_return-message =
'Data_error: in the FTP Path'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
clear et_file_return.
endcase.
et_file_return-TYPE = gc_error.
et_file_return-message =
'Error in passing FTP'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
EXIT.
ELSE.
clear et_file_return.
et_file_return-TYPE = gc_success.
et_file_return-message =
'Data Transfer Successful'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
ENDIF.

*******************************************
**deleting FTP files
*******************************************
<% /*if SAP R/3 version 4.6c */ %>
<? if(sSapAbapVersion.equalsIgnoreCase("46C")) {?>
	OPEN DATASET lv_path FOR INPUT
     IN TEXT MODE.
<?} else {?>
	OPEN DATASET lv_path FOR INPUT
     IN TEXT MODE
     ENCODING DEFAULT.
<?}?>
IF sy-subrc EQ 0.
  DELETE DATASET lv_path.
ENDIF.

************************************************
***Calling FTP_DISCONNECT
************************************************
CALL FUNCTION 'FTP_DISCONNECT'
EXPORTING
handle = lv_hdl.

************************************************
***Calling RFC_CONNECTION_CLOSE
************************************************
CALL FUNCTION 'RFC_CONNECTION_CLOSE'
EXPORTING
destination = lc_dest
EXCEPTIONS
OTHERS = 1.
IF sy-subrc <> 0.
clear et_file_return.
et_file_return-TYPE = gc_error.
et_file_return-message =
'Error while closing RFC connection'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
Append et_file_return.
else.
clear et_file_return.
et_file_return-TYPE = gc_success.
et_file_return-message =
'RFC connection closed Successfully'.
<? if(bgp){ ?>
et_file_return-id = 'CL'.
et_file_return-number = '000'.

************************************************
*Appending the et_file_return to Application log
************************************************
CALL FUNCTION 'ZODI_LOGMSG_ADD'
  EXPORTING
    ET_FILE_RETURN       = et_file_return
    I_LOG_HANDLE         = i_log_handle.
<?}?>
WRITE :'FTP download successfull'.
NEW-LINE.
Append et_file_return.
ENDIF.
ENDIF.
<? if(bgp){ ?>
LOOP AT et_file_return WHERE type = 'E'.
NEW-LINE.
CONCATENATE 'MSGTY:' et_file_return-type INTO
    lv_string.
WRITE: lv_string.
clear lv_string.
NEW-LINE.
CONCATENATE 'MESSAGE:' et_file_return-message INTO
    lv_string.
WRITE: lv_string.
clear lv_string.
 CLEAR et_file_return.
ENDLOOP.
WRITE :'Background Process Ended  at'.
NEW-LINE.
WRITE :'Time:',sy-uzeit.
*WAIT UP TO 500 SECONDS.
<?}?>
<% }; /* End of FTP routine */ %>
"]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5614]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ec04411c-3752-4f67-b06f-3a8ba372db21]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[230]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Retrieve data to ODI Agent]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[ec5a0b41-eb03-4271-adf5-07adcd51de16]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5614]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>

<%if(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FTP")) {%>

OdiFtpGet  "-HOST=<%=odiRef.getInfo("SRC_DSERV_NAME")%>"  "-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>"  "-PASSWORD=<@=sFtpPasswordEnc@>" "-REMOTE_DIR=<?=sFtpPath?>"  "-REMOTE_FILE=<%=dataFileName%>"  "-LOCAL_DIR=<%=odiRef.getOption("TEMP_DIR")%>" "-LOCAL_FILE=<%=dataFileName%>"  "-PASSIVE_MODE=<%=odiRef.getOption("FTP_PASSIVE_MODE")%>"  "-TIMEOUT=<%=odiRef.getOption("FILE_TRANSFER_TIMEOUT")%>"

<% } else if(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("SFTP")) { %> 

OdiSftpGet  "-HOST=<%=odiRef.getInfo("SRC_DSERV_NAME")%>"  "-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>"  "-PASSWORD=<@=sFtpPasswordEnc@>" "-REMOTE_DIR=<?=sFtpPath?>"  "-REMOTE_FILE=<%=dataFileName%>"  "-LOCAL_DIR=<%=odiRef.getOption("TEMP_DIR")%>" "-LOCAL_FILE=<%=dataFileName%>" <% if (odiRef.getOption("SSH_IDENTITY_FILE")!=null && odiRef.getOption("SSH_IDENTITY_FILE").length()>0 ) {%> 
"-IDENTITY_FILE=<%=odiRef.getOption("SSH_IDENTITY_FILE")%>" <%}%>  "-TIMEOUT=<%=odiRef.getOption("FILE_TRANSFER_TIMEOUT")%>"


<% } else if(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("SCP")) { %>

OdiScpGet  "-HOST=<%=odiRef.getInfo("SRC_DSERV_NAME")%>"  "-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>"  "-PASSWORD=<@=sFtpPasswordEnc@>" "-REMOTE_DIR=<?=sFtpPath?>"  "-REMOTE_FILE=<%=dataFileName%>"  "-LOCAL_DIR=<%=odiRef.getOption("TEMP_DIR")%>" "-LOCAL_FILE=<%=dataFileName%>"  "-IDENTITY_FILE=<%=odiRef.getOption("SSH_IDENTITY_FILE")%>"  "-TIMEOUT=<%=odiRef.getOption("FILE_TRANSFER_TIMEOUT")%>"


<% } else if(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FSMOUNT")) { %>

OdiFileCopy  "-FILE=<?=sFtpLocalPath?><%=dataFileName%>"  "-TODIR=<%=odiRef.getOption("TEMP_DIR")%>" 

<% } else { /* FTP_TRANSFER_METHOD is NONE or FSMOUNT_DIRECT */ %>

OdiSleep "-DELAY=1"

<%}%>
<?}?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5615]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[e13dafb4-8aca-40df-b0f6-7608093b567b]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3111]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[150]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Alter Session]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[555a6eb1-73c8-4ab3-a857-dff9d573b034]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5615]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if ( odiRef.getInfo("DEST_TECHNO_NAME").equalsIgnoreCase("ORACLE") ) {%>
alter session set nls_length_semantics = 'CHAR'
<% } else { %>
-- Skipped, as staging technology is not Oracle
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5616]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[JYTHON]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[69165e08-20ca-4d9e-be8c-84b90e335883]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3112]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[260]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Report number of rows]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[70b55e61-606f-4353-94bc-4c689057b9d2]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5616]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[#setting number of Rows in the Operator
<?if(performExecute){?>
odiRef.setNbRows(nbIns);
<?}?>
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5617]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[JYTHON]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f87bf66e-7253-4c84-8981-2ebb92320ace]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3113]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[270]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Report number of rows (details)]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[aed60bf3-fd87-449e-9620-8d530d9cca1f]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5617]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>
#Report number of rows in details
# Output summary to log
raise "\nThis message is not an error. It lists the number of rows processed by SQLLoader Utility\nNb Rows Report", strprt
<? } ?>
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5618]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[fa6a9470-ef8a-4fad-8342-8c1c5339cfb2]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3114]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Delete FTP Files]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[b30e2f99-c180-4212-b474-dec790aec14c]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5618]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>
<%if 	(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FTP") ||
	 odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("SFTP") ||
	 odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("SCP") ||
	 odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("NONE")) {

/* For any transfer mode involving SAP pushing the data file via FTP, we need to have SAP delete the via FTP: */ %>

_OdiSAPAbapExecute "-UPLOAD=0" "-EXECUTE=<?=execute.equals("1")?<%=odiRef.getOption("EXECUTE_ABAP_CODE")%>:0?>" "-EXECUTE_BASE_RKM=0" "-ZRFC_RUN_INSTALL=1" "-ABAP_PROGRAM_NAME=ZODI_RFC_DELETE_FTP_FILE" "-SAP_CONNECTION_TYPE=<?=sapcontype?>" "-SAP_CLIENT=<?=client?>" "-SAP_LANGUAGE=<?=lang?>" <? switch(sapcontype){ case oracle.odi.sap.km.OdiSapConnection.SAP_POOL_CONNECTION:{ ?> "-HOST=<%=odiRef.getInfo("SRC_DSERV_NAME")%>" "-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" <?}; break; case oracle.odi.sap.km.OdiSapConnection.SAP_SNC_CONNECTION:{?> "-HOST=<%=odiRef.getInfo("SRC_DSERV_NAME")%>" "-SAP_SYSTEM_NUMBER=<?=systemNo?>" "-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>" "-SAP_SNC_CLIENT=<?=sncClient?>" "-SAP_SNC_PARTNER=<?=sncPartner?>" "-SAP_SNC_LEVEL=<?=sncQOP?>" <?};break;case oracle.odi.sap.km.OdiSapConnection.SAP_MESSAGE_SERVER_CONNECTION: { ?>"-USER=<%=odiRef.getInfo("SRC_USER_NAME")%>" "-SAP_MSG_HOST=<?=msHost?>" "-PASSWORD=<%=odiRef.getInfo("SRC_PASS")%>" "-SAP_SERV_NAME=<?=msService?>" "-SAP_R3NAME=<?=msR3Name?>" "-SAP_LOGON_GROUP=<?=msGroupName?>"<? };break; }?> "-SAP_FUNCTION_GROUP_NAME=<%=odiRef.getOption("SAP_FUNCTION_GROUP")%>" "-CONNECTION_POOL_NAME=<%=odiRef.getOption("SAP_CONNECTION_POOL")%>" "-CONNECTION_POOL_SIZE=<%=odiRef.getOption("SAP_CONNECTION_POOL_SIZE")%>" "-FILE_DELIMITER=<%=odiRef.getOption("FIELD_SEPARATOR")%>" "-FILE_NAME=<%=dataFileName%>" "-FTP_HOST=<?=sFtpServerName?>" "-FTP_USER=<?=sFtpUsername?>" "-FTP_PASSWORD=<@=sFtpPassword@>" "-FTP_PASSIVE_MODE=<%=odiRef.getOption("FTP_PASSIVE_MODE")%>" "-FTP_TRANSFER_TIMEOUT=<%=odiRef.getOption("FILE_TRANSFER_TIMEOUT")%>" "-ABAP_TABLE_PARAMETERS=ET_FILE_RETURN,BAPIRET2;" "-FTP_PATH=<%=(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("NONE")) ? odiRef.getOption("TEMP_DIR") : "<?=sFtpPath?>" %>" "-DEV_CLASS=<%=odiRef.getOption("SAP_PACKAGE_NAME")%>" "-IS10GOR11G=<%=isOdi10gOr11g%>"

<% } else { 

/* FTP_TRANSFER_METHOD is NONE or FSMOUNT_DIRECT */ %>

OdiSleep "-DELAY=1"

<% } %>
<? } ?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5619]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4da4ef6f-1790-40f9-85ad-3d4a175c7120]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3115]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[300]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Release Resources]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f9a341d9-0097-45f3-8d77-8457e9be8f6b]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5619]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[0]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[//de-allocation of objects
sapLogger = null;
iHelper = null;
sTabs = null;
rTabs = null;
odiSAPRef = null;
curTableDetail = null;
prevTableDetail = null;
prevTable = null;;
prevTablejoin = null;
prevJoinOutput = null;
curJoinOutput = null;
firstJoinOutput = null;
counterNew = null;
leftJoinCounter = null;
keyCounter = null;
endifCounter = null;
curTable = null;
prevTableName = null;
num = null;
abapGenItr = null;
odiVariableNames = null;
odiVariableValues = null;
]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5620]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[JYTHON]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[647a88b2-b70b-439a-a0df-6bc35be60c00]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3116]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[290]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Delete Temporary Files]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f1efbf44-f7f9-4ebf-9de2-2a20ded92846]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5620]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>
# tempDir variable not used from build 28
tempDir = r"""<% if (odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("NONE") || odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FSMOUNT_DIRECT")) {%><%=odiRef.getInfo("SRC_SCHEMA")%><%} else {%><%=odiRef.getOption("TEMP_DIR")%><%};%> """.rstrip()

# Delete local control file
try:
  os.remove(r"""<%=ctlFileName%>""" )
finally:
  pass

# Delete local data file
try:
  os.remove(r"""<%=dataFileOnAgent%>""" )
finally:
  pass

<%if(odiRef.getOption("FTP_TRANSFER_METHOD").equalsIgnoreCase("FSMOUNT")) { %>
		
# Delete data file on file server
try:
  os.remove(r"""<%=odiRef.getInfo("SRC_SCHEMA")%><%=dataFileName%>""" )
finally:
  pass
	
<%}/*end of if(FTP_Transfer_Method equals FSMOUNT)*/%>

tempDir = None

<? } ?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5621]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[SUNOPSIS_API]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7cadbe36-a55e-457c-920f-da136e9bea36]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3117]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[240]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Generate Loader Script]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[09c80d9e-9efd-45ac-97be-6dd36749f9e4]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5621]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<?if(performExecute){?>
<%
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class sqlldrColFormat {
    // This HashMap contains search key: <alias>.<col_name> and value: <source data type>
    static HashMap srcColDataTypes = new HashMap();

    public static String quoteReplacement(String s) {
    // quoteReplacement like in Java 1.6
    // This is needed, as BSh version only supports Java 1.5
        if ((s.indexOf((char)92) == -1) && (s.indexOf('$') == -1))
            return s;
        StringBuffer sb = new StringBuffer();
        for (int i=0; i<s.length(); i++) {
            char c = s.charAt(i);
            if (c == (char)92) {
                sb.append((char)92); sb.append((char)92);
            } else if (c == '$') {
                sb.append((char)92); sb.append('$');
            } else {
                sb.append(c);
            }
        }
        return sb.toString();
    }

    public static String getPartiallyQuotedString( String in )  
    // Searches for "<Start Quoted>...<End Quoted>" in order to replace these strings
    // by odiRef.getQuotedString(...) of the string. This is required to pass [METADATA] 
    // from first % iteration to second % iteration. Otherwise invalid Java code is generated.
    { 
        // Compile regular expression
        Pattern pattern = Pattern.compile("<Start Quoted>(?:.)*?<End Quoted>", Pattern.DOTALL);
        Matcher matcher = pattern.matcher(in);

        // Replace all occurrences of pattern in input
        StringBuffer buf = new StringBuffer();
        boolean found = false;
        while ((found = matcher.find())) {
            // Get the match result
            String replaceStr = matcher.group();
            // Remove <?=odiRef.getObjectName ....?>
            replaceStr = replaceStr.replaceAll("<?(?:.)*?\?>","");
            // Insert replacement
            // Don't use appendReplacement, we do not want specail chars to be replaced
            matcher.appendReplacement(buf, "");
            buf.append( odiRef.getQuotedString ( replaceStr  ));
        }
        matcher.appendTail(buf);

        // Get result
        return buf.toString();
    }

    public static void addSrcTableMetadata( String popTabAlias, metadata )  
    // Extract column names and their datatype from metadata
    {
        String[] a = metadata.split("SNP"+(char)92+"$CRDWG_COL");
        int i;
        for (i=0;i<a.length;i++) { 
	String[] colInfo = a[i].split("SNP"+(char)92+"$CR"); 
	if (colInfo.length > 2 && colInfo[1].startsWith("COL_NAME")) { 
	  String colName = colInfo[1].substring(9);
	  String dataType = colInfo[2].substring(10);
	  srcColDataTypes.put( popTabAlias+"."+colName, dataType );
	}; 
        };
    }

    public static String ABAPDataType( String expr) 
    // Returns the ABAP data type of the column used in expr.
    // expr may only contain reference to a source single column
    // If no column is refereenced, an empty string will be returned.
    {
        // Go over all source columns
        Iterator iter = srcColDataTypes.keySet().iterator();
        while (iter.hasNext()) {
          String curCol = (String)iter.next();
          Pattern pattern = Pattern.compile((char)92+"b"+(char)92+"Q"+curCol+(char)92+"E"+(char)92+"b");
          Matcher matcher = pattern.matcher(expr);
          if (matcher.find()) { return srcColDataTypes.get(curCol); };
        };
        return "";
    }

    public static String get( String colName, srcDataType, destDataType, scale, expr) 
    // Returns format description for sqlldr
    {
        if (destDataType.startsWith("TIMESTAMP")) { 
            return  " TIMESTAMP(8)  " + (char)34 + "YYYYMMDD" + (char)34 + " NULLIF " + colName + " = " +(char)34 + "00000000" + (char)34;
        } else if ("DATE".equals(destDataType)) { 
            return  " DATE  "  + (char)34 + "YYYYMMDD" + (char)34 + " NULLIF " + colName + " = " +(char)34 + "00000000" + (char)34;            
        } else if ("NUMBER".equals(destDataType)||"FLOAT".equals(destDataType)||"REAL".equals(destDataType)||"BINARY_DOUBLE".equals(destDataType)||"BINARY_FLOAT".equals(destDataType)) { 
            String fractionFormat = "";
            if (!scale.equals("0") && !scale.equals("")) fractionFormat = "D999999999999999999999999";
            String signFormat = "MI";
            if (ABAPDataType( expr ).equals("NUMC")) signFormat = "";
            if (ABAPDataType( expr ).equals("FLTP")) {
                return  "  " + (char)34 + "TO_NUMBER(:" + colName + ", '9D99999999999999999999999999999999999999EEEE', 'NLS_NUMERIC_CHARACTERS=''.,''') " + (char)34;
            } else {
                return  "  " + (char)34 + "TO_NUMBER(:" + colName + ", '99999999999999999999999999999999999999" + fractionFormat + signFormat + "', 'NLS_NUMERIC_CHARACTERS=''.,''') " + (char)34;
            };
        } else {
            return "";
        }  
    }

}
%><%=sqlldrColFormat.getPartiallyQuotedString(
    odiRef.getSrcTablesList("<"+"%", " sqlldrColFormat.addSrcTableMetadata(\u0022[POP_TAB_ALIAS]\u0022, <Start Quoted>[METADATA]<End Quoted>); ", "", "%"+">")
) %>OdiOutFile "-File=<%=ctlFileName%>"
OPTIONS (
	ERRORS=<%=odiRef.getUserExit("MAX_ALLOWED_ERRORS")%>
)
LOAD DATA
CHARACTERSET <?=sSapCharacterset?>
LENGTH SEMANTICS CHARACTER
INFILE '<%=dataFileOnAgent%>' "str '\n<@=""+(char)8@><%=odiRef.getOption("FIELD_SEPARATOR")%>'"
BADFILE  '<%=badFileName%>' 
DISCARDFILE '<%=dscFileName%>' 
INTO TABLE <%=odiRef.getTable("L", "COLL_NAME", "W")%>
FIELDS TERMINATED BY "<%=odiRef.getOption("FIELD_SEPARATOR")%>"
TRAILING NULLCOLS
(
	<%=iHelper.removeDqsFromSourceColumnReferences(odiRef.getColList("", "[CX_COL_NAME]\t" + "<"+"%=sqlldrColFormat.get(\u0022[CX_COL_NAME]\u0022, \u0022[SOURCE_DT]\u0022, \u0022[DEST_DT]\u0022, \u0022[SCALE]\u0022, \u0022[EXPRESSION]\u0022 ) %"+">" , ",\n\t", "",""))%>
)
<?}?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5622]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f11c5d54-6408-4a47-bb19-e2add17c6c62]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String">null</Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3118]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String">null</Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="KlmIdx" type="java.lang.String">null</Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String"><![CDATA[MC]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[310]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Drop Work Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[7b90df99-3f0a-4f11-bffd-35f55db467f5]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5622]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[drop table <%=odiRef.getTable("L", "COLL_NAME", "W")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5623]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[82c3a39c-379e-4fde-9db1-dbbe689cdf94]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3119]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[130]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Drop Work Table]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[d26ee81e-e621-46ad-acaa-13ea35a68e3a]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5623]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[drop table <%=odiRef.getTable("L", "COLL_NAME", "W")%>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[SAP_ABAP]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5624]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[ORACLE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[f9b10fb5-cc0f-4f28-98dd-b207551e2540]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3120]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[3]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[40]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Set Thread Var]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[de3182d1-2fa8-432b-8329-32022b92fec7]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5624]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<% if (odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")) { 
/* Code for ODI 10g and 11g */
%>
/* Used in calculating unique table names */
<?
String thread="<% try
{%><%=odiRef.getPop("THREAD_NUM").replaceAll("\u0022","")%><%} catch
(Exception e) {}; %>";
if (thread.startsWith("Exception")){
thread="";
} ?>
<% } else { 
/* Code for ODI 12c and later */ 
%>
-- THREAD_NUM is deprecated in ODI 12c. Please use Parallel Target Table Load instead.
<% } %>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5625]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[67c6a19f-e7b4-4a68-b79c-47ae7cd24c1c]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3121]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[30]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Validate]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[13345d23-f387-4fbc-a687-beab877570a7]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5625]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[    <%   
       String ftpTransferMethod=odiRef.getOption("FTP_TRANSFER_METHOD"); 

	if(!(ftpTransferMethod.equalsIgnoreCase("SCP") || ftpTransferMethod.equalsIgnoreCase("FTP") || ftpTransferMethod.equalsIgnoreCase("NONE") || ftpTransferMethod.equalsIgnoreCase("SFTP") || ftpTransferMethod.equalsIgnoreCase("FSMOUNT_DIRECT") || ftpTransferMethod.equalsIgnoreCase("FSMOUNT"))) {
%>

	if(<?=odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")?>){ 
        
		throw new Exception("Invalid FTP_TRANSFER_METHOD Option value, Supported values are NONE, FTP, SFTP, SCP, FSMOUNT_DIRECT and FSMOUNT : " + ftpTransferMethod);
	}else{
		throw new OdiKMException("Invalid FTP_TRANSFER_METHOD Option value, Supported values are NONE, FTP, SFTP, SCP, FSMOUNT_DIRECT and FSMOUNT : " + ftpTransferMethod);
                
      	}
    <%    
    }
%>

//Checking the FTP and FSMOUNT path for trailing [Back]slash
String ftp_fsmount_Path =  <?=odiRef.getQuotedString(odiRef.getInfo("DEST_SCHEMA"))?>;
if(ftp_fsmount_Path.isEmpty()){
	throw new Exception("FTP/FSMOUNT path must not be blank");
}else if(!(ftp_fsmount_Path.endsWith(""+(char)92) || ftp_fsmount_Path.endsWith(""+(char)47))){
  	throw new Exception("FTP/FSMOUNT path("+ftp_fsmount_Path+"), must ends with trailing [back] slash");
}

<%
//Checking the SAP Temp Work Directory Path for trailing [Back]slash
String sap_TempDir ;
String sap_TempLogicalName;
if(odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")){
%>

 sap_TempDir = <?=odiRef.getQuotedString(odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TMP_DIR" ))?>;
 sap_TempLogicalName= <?=odiRef.getQuotedString(odiRef.getFlexFieldValue( odiRef.getInfo("SRC_I_CONNECT"), "1400", "SAP_TMP_LOGICAL_NAME" ))?>;
<%
}
else{
%>
sap_TempDir = <?=odiRef.getQuotedString(odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TMP_DIR" ))?>;
 sap_TempLogicalName= <?=odiRef.getQuotedString(odiRef.getFlexFieldValue( odiRef.getInfo("SRC_CONNECT_GUID"), "1400", "SAP_TMP_LOGICAL_NAME" ))?>;
<%
}
%>
if(!sap_TempDir.isEmpty() && !sap_TempLogicalName.isEmpty())
{
	throw new Exception("Please enter either SAP Temporary Directory path or SAP Temporary Directory Logical Name.");
}
if((!sap_TempDir.isEmpty() && (sap_TempDir.contains("\\") || sap_TempDir.contains("/")) && !(sap_TempDir.endsWith("\\") || sap_TempDir.endsWith("/")))){
	throw new Exception("SAP TEMP Directory Path ("+sap_TempDir+"), must end with trailing [back] slash");
}]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String"><![CDATA[File Server for SAP ABAP]]></Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[FILE]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5626]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4f4a1522-1271-4ca6-893d-913afe6b0030]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String">null</Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[4]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[180]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Get FTP Details]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[85f95a2a-ff52-434c-a9d3-64771905f2c1]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5626]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[102]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[
//get FTP server details
<?
String sFtpServerName = odiRef.getInfo("SRC_DSERV_NAME");
String sFtpPath = odiRef.getInfo("SRC_SCHEMA");
String sFtpLocalPath = odiRef.getInfo("SRC_WORK_SCHEMA");
String sFtpUsername = odiRef.getInfo("SRC_USER_NAME");

?>

<@ String sFtpPasswordEnc = odiRef.getInfo("SRC_ENCODED_PASS"); @> 
<@ String sFtpPassword = odiRef.getInfo("SRC_PASS"); @> ]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrt">
		<Field name="AlwaysExe" type="java.lang.String"><![CDATA[1]]></Field>
	<Field name="BrpId" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ColConnectId" type="java.lang.String">null</Field>
	<Field name="ColContextCode" type="java.lang.String">null</Field>
	<Field name="ColIndCommit" type="java.lang.String">null</Field>
	<Field name="ColIsolLevel" type="java.lang.String">null</Field>
	<Field name="ColITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5627]]></Field>
	<Field name="ColLanguage" type="java.lang.String">null</Field>
	<Field name="ColLschemaName" type="java.lang.String">null</Field>
	<Field name="ColTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="DefConnectId" type="java.lang.String">null</Field>
	<Field name="DefContextCode" type="java.lang.String">null</Field>
	<Field name="DefIndCommit" type="java.lang.String">null</Field>
	<Field name="DefIsolLevel" type="java.lang.String">null</Field>
	<Field name="DefITxt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="DefLanguage" type="java.lang.String">null</Field>
	<Field name="DefLschemaName" type="java.lang.String">null</Field>
	<Field name="DefTechno" type="java.lang.String"><![CDATA[BEANSHELL]]></Field>
	<Field name="ExeChannel" type="java.lang.String">null</Field>
	<Field name="FirstDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="FirstUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[82a8702b-c8f1-4131-aad4-813965ba7482]]></Field>
	<Field name="IndErr" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogFinalCmd" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="IndLogNb" type="java.lang.String">null</Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="IRefLineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IRefTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[280]]></Field>
	<Field name="KcmAk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmCond" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmErrDel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmJoin" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmNull" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KcmPk" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimDrvdSel" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KimJrnPop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmCreate" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmDrop" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmExtend" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmInstall" type="java.lang.String">null</Field>
	<Field name="KjmLock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmPurge" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetInstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSetUninstall" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmSubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmTableOrder" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUninstall" type="java.lang.String">null</Field>
	<Field name="KjmUnlock" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KjmUnsubscribe" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmAfterInt" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmIdx" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="KlmJrn" type="java.lang.String"><![CDATA[0]]></Field>
	<Field name="LastDate" type="java.sql.Timestamp"><![CDATA[2021-08-27 16:47:30.0]]></Field>
	<Field name="LastUser" type="java.lang.String"><![CDATA[SUPERVISOR]]></Field>
	<Field name="LineType" type="java.lang.String">null</Field>
	<Field name="LogLevDet" type="java.lang.String"><![CDATA[5]]></Field>
	<Field name="MapTaskType" type="java.lang.String">null</Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[50]]></Field>
	<Field name="SqlName" type="java.lang.String"><![CDATA[Create Java Classes]]></Field>
	<Field name="SupportedSubtypes" type="java.lang.String">null</Field>
	<Field name="VariableDefs" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpTxtHeader">
		<Field name="Enc" type="java.lang.String">null</Field>
	<Field name="EncKey" type="java.lang.String">null</Field>
 <Field name="EncKeyVect" type="java.lang.String">null</Field>
	<Field name="GlobalId" type="java.lang.String"><![CDATA[4505d551-6274-4dad-be58-9e53658e0a15]]></Field>
	<Field name="ITxt" type="com.sunopsis.sql.DbInt"><![CDATA[5627]]></Field>
	<Field name="ITxtOrig" type="com.sunopsis.sql.DbInt"><![CDATA[103]]></Field>
	<Field name="SqlIndGrp" type="java.lang.String"><![CDATA[2]]></Field>
 <Field name="Txt" type="java.lang.String"><![CDATA[<%

//////////////////////////////////////////////////////////////////////////////////////
// (c) Copyright 2008, Oracle	         		                            //
// ALL RIGHTS RESERVED.                                                             //
// This UNPUBLISHED PROPRIETARY software is  subject to the full copyright          //
// notice in the COPYRIGHT file in this directory.                                  //
//////////////////////////////////////////////////////////////////////////////////////
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;

/**
 * @(#)OdiSapLogger.java  1.00 11/24/2008
 * Application : ODI SAP Knowledge Modules
 * Module      : SAP Logger
 * Author(s)   : Oracle,
 * About       :
 * Dependencies: JDK 1.4.2 API (with standard extensions),
 *
 *
 * Update History (Please make entries here in case you make a change.)
 * ____________________________________________________________________
 * Date       Author                       Comments about the change
 * ____________________________________________________________________
 *August 2012	  							Changed due to ODI 12c 
 *											logging framework
 **/

/**
 * This class is a common class for handling all the error/exception messages of
 * the SAP ERP/BW RKM/LKM modules. This class writes the messages either to ODI
 * console or a default log file name written to Systems Temporary folder
 *
 */
public class OdiSapLogger {

	private Logger mLogger = null;
	private PrintStream mLogPs = null;
	// private Logger mLogPsNew = null;
	// static private FileHandler fileTxt;
	// static private SimpleFormatter formatterTxt;
	private String resourceMessage = "";
	private String baseResourceName = null;
	private ResourceBundle messages = null;
	private LogRecord record = null;
	private String logFile = "";

	private ResourceBundle resourceBundle = null;

	/**
	 * For backwards compatibility: The OT should use file based logging as long
	 * as the "LOG_FILE" parameter is provided. Even in 12c! The KM will
	 * suppress this parameter, as soon as gen'ed in 12c.
	 * 
	 * @throws OpenToolExecutionException
	 */
	public OdiSapLogger(String logFile, ResourceBundle rBundle) {
		this.logFile = logFile;
		this.resourceBundle = rBundle;
		initLogger();
	}

	/**
	 * Initialize logger
	 */
	private void initLogger() {
		try {
			// Do we have a logger?
			if (mLogger == null && mLogPs == null) {
				// Has the LOG_FILE_NAME parameter been passed to this OT?
				// If so we assume that the OT is used in a 10g or 11g version
				// of ODI
				// and we use file based logging
				if (logFile != null) {
					// Empty file name provided? => use 12c logging
					if (logFile.equals("")) {
						// This OT executes in ODI 12c or later and we can use
						// ODI's logger
						mLogger = Logger.getLogger("oracle.odi.km");
					} else {
						// Otherwise use given log file name for ODI 10g and 11g
						mLogPs = new PrintStream(new FileOutputStream(logFile));
					}
				} else {
					// This OT executes in ODI 12c or later and we can use ODI's
					// logger
					mLogger = Logger.getLogger("oracle.odi.km");
				}
			}
		} catch (FileNotFoundException ex) {
			// Chanpreet
			if (odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")) {
				throw new RuntimeException("Exception during Logger initialization: " + ex.getMessage());
			} else {
				throw new OdiKMException("Exception during Logger initialization: " + ex.getMessage());
			}
		}

	}// end of initLogger() method

	private void log(Level level, String messageId, String message, Object[] args) {
		//record.setResourceBundle(new OdiSapOTLoggerResourceBundle(messageId, message));
		//baseResourceName = "sap_lkm_erp";
		//messages = ResourceBundle.getBundle("oracle/odi/sap/km/"+baseResourceName, Locale.getDefault(), this.getClass().getClassLoader());
		record = new LogRecord(level, messageId);
		record.setResourceBundle(resourceBundle);
		record.setParameters(args);
		// record.setMessage(message);
		// Are we using a logger?
		if (mLogger != null) {
			mLogger.log(record);
		};
		// Are we using a log file?
		if (mLogPs != null) {
			String result = record.getLevel() + ": " + record.getResourceBundle().getString(messageId) + ": ";

			Object[] objParams = record.getParameters();
			if (objParams == null)
				result += "<null>\n";
			else {
				for (int i = 0; i < objParams.length; i++)
					result += objParams[i].toString() + " : ";
			}
			// result += record.getSequenceNumber();
			mLogPs.println(result);
			// mLogPs.println(record.toString());
		}
	}// end of log() method

	/**
	 * Return resource string
	 * 
	 * @param messageId
	 * @return
	 */
	private String getResourceString(String messageId) {
		// existing code to retrieve string from property file
		if (resourceMessage.equalsIgnoreCase("!!! BUNDLE " + baseResourceName + " !!!")) {
			return resourceMessage;
		} else {
			try {
				return messages.getString(messageId);
			} catch (Exception e) {
				//sapLogger.log(sapLogger.INFO, "Exception in getResourceString() -----: "+e);
				return "### KEY " + baseResourceName + " / " + messageId + "###"; //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$
			}
		}
	}// end of method

	public void setMessages(String resourceMsg) {
		this.resourceMessage = resourceMsg;
	}

	public void severe(String messageId, Object[] args) {
		// message text must be retrieved from resource file
		log(Level.SEVERE, messageId, getResourceString(messageId), args);
	}// end of method

	public void warn(String messageId, Object[] args) {
		// message text must be retrieved from resource file
		log(Level.WARNING, messageId, getResourceString(messageId), args);
	}// end of method

	public void fine(String messageId, String message, Object[] args) {
		// message text for trace messages is not externalized
		log(Level.FINE, messageId, message, args);
	}// end of method

}// end of OdiSapLogger class


/**
 * This class to store SAP table or application component information to display
 * in the tree browser.
 */
// NOT in use
class SAPField {
	public String colName;
	public String colAlias;
	public String tableName;
	public String dataType;
	public String id;

	public void SAPField(String id, String tabName, String colName, String colAlias, String dataType) {
		this.tableName = tabName;
		this.colName = colName;
		this.id = id;
		this.colAlias = colAlias;
		this.dataType = dataType;
	}
}

/////////////////////////////////////////////////////////////////////////////
// (c) Copyright 2008, Oracle Corp			   //
// ALL RIGHTS RESERVED.                                                    //
// This UNPUBLISHED PROPRIETARY software is  subject to the full copyright //
// notice in the COPYRIGHT file in this directory.                         //
////////////////////////////////////////////////////////////////////////////

import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.StringTokenizer;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

/**
 * @(#)OdiInterfaceMetadataHelper.java  1.00 11/24/2008
 *
 * Application : ODI SAP Knowledge Modules
 * Module      : SAP ERP Adapter
 * Author(s)   : Oracle.
 * About       :
 * Dependencies: JDK 1.4.2 API (with standard extensions),
 *
 * Update History (Please make entries here in case you make a change.)
 * ____________________________________________________________________
 * Date       Author                       Comments about the change
 * ____________________________________________________________________
 *
 *
 **/

/**
 * <b>OdiInterfaceMetadataHelper</b> class is a data structure for storing the
 * ODI interface metadata information of the selected tables, joins, columns,
 * filter conditions and transformations. This information is used to construct
 * ABAP OPEN SQL select syntax.
 */
public class OdiInterfaceMetadataHelper {

	// Contains list of selected source tables in
	// interface design (SapTable objects)
	public ArrayList sSAPTables = null;

	// contains list of Source columns of all the tables-- SAPField
	// Objects
	private static OdiInterfaceMetadataHelper inst = null;
	public ArrayList sSAPFields = null;

	// List of all the mapped columns in the interface
	// including aggregate function expressions
	public ArrayList sSAPMappedCols = null;

	// List of table joins with expressions indicating which
	// cols are joined
	public ArrayList sSAPJoins = null;

	// List of all filters defined in interface design
	public ArrayList sSAPFilters = null;

	// From Expression of the interface design
	String sFromExpr = null;

	// List of Group by columns
	ArrayList sGrpByList = null;

	// Logger Instance..
	private OdiSapLogger sapLogger = null;

	// Build search expression for all source columns
	String replacePattern = odiRef.getSrcTablesList("(",
			"" + (char) 92 + (char) 92 + "Q[POP_TAB_ALIAS]" + (char) 92 + (char) 92 + "E", "|", ")")
			+ odiRef.getSrcColList("" + (char) 92 + (char) 92 + "." + (char) 34 + "(",
					"" + (char) 92 + (char) 92 + "Q[COL_NAME]" + (char) 92 + (char) 92 + "E",
					"" + (char) 92 + (char) 92 + "Q[COL_NAME]" + (char) 92 + (char) 92 + "E", "|", ")" + (char) 34);

	/* Map of calculated values and types */
	public Map calculatedValueMap = new LinkedHashMap();

	public Map getCalculatedValueMap() {
		return calculatedValueMap;
	}

	public void setCalculatedValueMap(Map calculatedValueMap) {
		this.calculatedValueMap = calculatedValueMap;
	}

	// Check for calculated join case
	boolean calculatedJoinCase = false;

	public boolean isCalculatedJoinCase() {
		return calculatedJoinCase;
	}

	public void setCalculatedJoinCase(boolean calculatedJoinCase) {
		this.calculatedJoinCase = calculatedJoinCase;
	}

	/**
	 * This is a boolean variable to check whether the join condition is a
	 * composite key or normal calculated join.
	 */
	public boolean compositeKey = false;

	public boolean isCompositeKey() {
		return compositeKey;
	}

	public void setCompositKey(boolean compositeKey) {
		this.compositeKey = compositeKey;
	}

	// boolean variable to check whether the temporary column is added or not.
	public boolean isDuplicateColumnAdded = false;

	public boolean isDuplicateColumnAdded() {
		return isDuplicateColumnAdded;
	}

	public void setDuplicateColumnAdded(boolean isDuplicateColumnAdded) {
		this.isDuplicateColumnAdded = isDuplicateColumnAdded;
	}

	/**
	 * Whether the new column(temporary column) is looped, it is being used to
	 * copy all the data from original column to the temporary column
	 */
	public boolean isLoopedAtDuplicateColumn = false;

	public boolean isLoopedAtDuplicateColumn() {
		return isLoopedAtDuplicateColumn;
	}

	public void setLoopedAtDuplicateColumn(boolean isLoopedAtDuplicateColumn) {
		this.isLoopedAtDuplicateColumn = isLoopedAtDuplicateColumn;
	}

	// Boolean Variable to be used in extract data step to check for calculated join.
	public boolean isCalculatedJoin = false;
        String bs = ""+(char)92;   // backslash
	//public final String REGEX_ONLY_COLUMN_REFERENCE = bs+"s*("+bs+"w*"+bs+"."+bs+"w*)"+bs+"s*"; //\s*(\w*\.\w*)\s*
        public final String REGEX_ONLY_COLUMN_REFERENCE = bs+"s*("+"[a-zA-Z0-9_/]*"+bs+"."+"[a-zA-Z0-9_/]*)"+bs+"s*";
	public final String REGEX_REMOVE_CAL_PART = bs+"+"+bs+"s*"+bs+"d*"+bs+"s*"+bs+"("+bs+"s*"+bs+"d*"+bs+"s*"+bs+")"; //\+\s*\d*\s*\(\s*\d*\s*\)

	// Remove double quotes from any source column names
	public String removeDqsFromSourceColumnReferences(String input) {
		String cleaned = input.replaceAll(replacePattern, "$1.$2");
		return cleaned;
	}

	public static OdiInterfaceMetadataHelper getInstance(OdiSapLogger logger) {
		if (inst == null) {
			inst = new OdiInterfaceMetadataHelper(logger);
		}
		return inst;
	}

	// Constructor
	public OdiInterfaceMetadataHelper(OdiSapLogger logger) {
		this.sapLogger = logger;
	}

	/**
	 * This method parses the selected tables pattern passed from the ODI api's.
	 * It creates arraylist of SapTable objects.
	 *
	 * @pPattern selected tables pattern string
	 */
	public void setSelectedTables(String pPattern) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "++++++OdiInterfaceMetadataHelper.setSelectedTables()++++++++" });
		sSAPTables = new ArrayList();
		// odiRef.getSrcTablesList("",
		// "[I_TABLE]~~[RES_NAME]~~[POP_TAB_ALIAS]~~[METADATA]", "^^^^", "") );
		if (pPattern != "") {
			StringTokenizer sTabsTokens = new StringTokenizer(pPattern, "^^^^");
			String tabExpr = null;
			SapTable sTable = null;
			while (sTabsTokens.hasMoreTokens()) {
				sTable = new SapTable();
				tabExpr = sTabsTokens.nextToken();
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "tabExpr: " + tabExpr });
				String[] tabProps = tabExpr.split("~~");
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "tabProps.length: " + tabProps.length });
				// sapLogger.log(sapLogger.INFO, "Table Name : " +tabProps[2]);
				String[] resource_name = tabProps[1].trim().split(",");// <?=snpRef.getObjectShortName("L", "MARA", "SAP_10.30.0.17_ECC6.0", "D") ?>

				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
						new Object[] { "resource_name.length: " + resource_name.length });
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "resource_name: " + resource_name[0] });
				String tableName = resource_name[1].replaceAll("" + (char) 34, ""); // (char)34 = double qoutes
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
						new Object[] { "OdiInterfaceMetaDataHelper.tableName" + tableName });
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
						new Object[] { "OdiInterfaceMetaDataHelper.AliasName" + tabProps[2].trim() });
				// sTable = new
				// SapTable(tabProps[0].trim(),tableName.trim(),tabProps[2].trim(),"",tabProps[3].trim());
				// sTable = new
				// SapTable(tabProps[0].trim(),tableName.trim(),tabProps[2].trim(),"",tabProps[3].trim());
				sTable.setId(tabProps[0].trim());
				sTable.setName(tableName.trim());
				sTable.setAlias(tabProps[2].trim());
				sTable.setMetadata(tabProps[3].trim());
				sSAPTables.add(sTable);
			}
		}
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "OdiInterfaceMetadataHelper: No of Selected tables pattern :" + sSAPTables.size() });
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "-------OdiInterfaceMetadataHelper.setSelectedTables()---------" });
	}// end setSelectedTables method..

	/**
	 * Returns list of source table in the Interface
	 * 
	 * @return ArrayList
	 */
	public ArrayList getSelectedTables() {
		return sSAPTables;
	}

	/**
	 * This method parses the selected columns pattern for all the selected
	 * tables in the interface design, creates a arraylist of SAPField objects.
	 *
	 * @pPattern selected columns pattern string
	 */
	public void setSelectedColumns(String pPattern) {

		// sapLogger.log(sapLogger.INFO, "Selected Columns pattern :" + pPattern);

	}// end of setSelectedColumns method ..

	/**
	 * This method parses the complete metadata of the interface design..created
	 * the list of SAP Tables and List of SAPFields filling up all the metadata
	 * of the tables and columns
	 *
	 * @pPattern complete interface metadata pattern string
	 */
	public void setInterfaceMetadata(String pPattern) {

		// sapLogger.log(sapLogger.INFO, "Interface Metadata pattern :" + pPattern);

	}// end of setInterfaceMetadata method..

	/**
	 * Initial parser for all the mapped columns along with aggregate functions
	 * applied on the columns in the interface design
	 * 
	 * @pPattern mapped columns pattern string
	 * @return void
	 */
	public void setMappedColumns(String pPattern) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "+++++++*****************IN M1++++++++" });
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "+++++++OdiInterfaceMetadataHelper.setMappedColumns()++++++++" });
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "Interface Mapped Columns :" + pPattern });
		// clean the pPattern variable
		pPattern = removeDqsFromSourceColumnReferences(pPattern);
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "Cleaned Interface Mapped Columns :" + pPattern });
		sSAPMappedCols = new ArrayList();
		if (pPattern != "") {
			StringTokenizer mColsTokens = new StringTokenizer(pPattern, "~~");
			String mColExpr = null;
			while (mColsTokens.hasMoreTokens()) {
				mColExpr = mColsTokens.nextToken();
				sSAPMappedCols.add(mColExpr);
			}
		}
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {
				"OdiInterfaceMetadataHelper: No of Interface Mapped Columns :" + sSAPMappedCols.size() });
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "+++++++IN END M1++++++++" + pPattern });
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "--------OdiInterfaceMetadataHelper.setMappedColumns()---------" });
	}// end of setMappedColumns() method..

	/**
	 * Returns list of mapped source columns
	 * 
	 * @return ArrayList
	 */
	public ArrayList getMappedColumns() {
		return sSAPMappedCols;
	}

	/**
	 * This method checks for join conditions and returns whether it is a normal
	 * join or calculated join.
	 * 
	 * @param tempString
	 * @return
	 */
	public boolean checkForCalculatedJoin(String tempString) {
		String[] multipleJoinStrings = null;
		String[] splitonOperator = null;

		if (tempString.contains("~~")) {
			multipleJoinStrings = tempString.split("~~");
		} else if (tempString.contains(" AND ")) {
			multipleJoinStrings = tempString.split(" AND ");
		} else {
			multipleJoinStrings = new String[1];
			multipleJoinStrings[0] = tempString;
		}
		for (int i = 0; i < multipleJoinStrings.length; i++) {
			splitonOperator = multipleJoinStrings[i].split("=");
			for (int j = 0; j < splitonOperator.length; j++) {
				tempString = splitonOperator[j];
              			Pattern pattern = Pattern.compile(REGEX_ONLY_COLUMN_REFERENCE);
				Matcher matcher = pattern.matcher(tempString);
                                if (!matcher.matches()) {
					return true;
				}
			}
		}
		return false;
	}

	/**
	 * /** Checks If the calculated join is on the left means whether the
	 * calculated join condition is correct or not.
	 * 
	 * @param tempString
	 * @return
	 */
	public boolean checkCorrectCalculatedJoin(String tempString) {
		tempString = tempString.substring(0, tempString.indexOf("="));
		Pattern pattern = Pattern.compile(REGEX_ONLY_COLUMN_REFERENCE);
		Matcher matcher = pattern.matcher(tempString);
		if (!matcher.matches()) {
			return true;
		}
		return false;
	}

	/**
	 * This method removes calculated part from the join expression and convert
	 * it to the normal join for further processing.
	 * 
	 * @param tempString
	 * @return Normal Join Expression
	 */
	public String removeCalculatedPart(String tempString) {
                Pattern ptn = Pattern.compile(REGEX_REMOVE_CAL_PART);
		Matcher mtch = ptn.matcher(tempString);
		tempString = mtch.replaceAll("");
		return tempString;
	}

	/**
	 * This method gets the calculated join value from the join expression and
	 * Sets the calculatedValueMap map with CalculatedValue and
	 * CalculatedValueType.
	 * 
	 * @param tempString
	 */
	public void getCalculatedJoinValue(String tempString) {

		Map mapCalculatedValueWithType = new LinkedHashMap();
		String[] multipleJoinPatterns = tempString.split("AND");
		for (int i = 0; i < multipleJoinPatterns.length; i++) {
			String calculatedValue = multipleJoinPatterns[i].substring(multipleJoinPatterns[i].indexOf("+"),
					multipleJoinPatterns[i].indexOf("="));
			String calculatedKey = multipleJoinPatterns[i].substring(multipleJoinPatterns[i].indexOf("=") + 1,
					multipleJoinPatterns[i].length());
			mapCalculatedValueWithType.put(calculatedKey.trim(), calculatedValue.trim());
		}
		setCalculatedValueMap(mapCalculatedValueWithType);
	}

	/**
	 * This method checks the join condition, whether it is a composite key or
	 * just the simple calculated join.
	 * 
	 * @patterns joins pattern string.
	 */
	public boolean checkCompositeKey(String patterns) {
		String[] multipleJoinStrings = null;
		String[] splitonOperator = null;
		Boolean compositeKey = false;
		if (patterns.contains(" AND ")) {
			multipleJoinStrings = patterns.split(" AND ");
			for (int i = 0; i < multipleJoinStrings.length; i++) {
				splitonOperator = multipleJoinStrings[i].split("=");
				for (int j = 0; j < splitonOperator.length; j++) {
					patterns = splitonOperator[j];
					Pattern pattern = Pattern.compile(REGEX_ONLY_COLUMN_REFERENCE);
					Matcher matcher = pattern.matcher(patterns);
					if (!matcher.matches()) {
						compositeKey = true;
					}
				}
			}

		} else {
			compositeKey = false;
		}
		return compositeKey;
	}

	/**
	 * This method parses all the join conditions defined in the interface
	 * design..
	 * 
	 * @pPattern joins pattern string.
	 */
		public void setJoinConditions(String pPattern) throws Exception {
		if (pPattern.length() > 0) {
			String[] multJoinPatterns = pPattern.split("~~");
			StringBuffer joinPattern = new StringBuffer();
			for (int i = 0; i < multJoinPatterns.length; i++) {
				if (checkForCalculatedJoin(multJoinPatterns[i])) {
					if (checkCorrectCalculatedJoin(multJoinPatterns[i])) {
						compositeKey = checkCompositeKey(multJoinPatterns[i]);
						setCompositKey(compositeKey);
						getCalculatedJoinValue(multJoinPatterns[i]);
						multJoinPatterns[i] = removeCalculatedPart(multJoinPatterns[i]);
						setDuplicateColumnAdded(true);
						setLoopedAtDuplicateColumn(true);
						setCalculatedJoinCase(true);
						multJoinPatterns[i] = multJoinPatterns[i].replace(" AND ", " ~~ ");
					} else {
						oracle.odi.sap.km.CommonResourceBundle odiSapErpResourceBundle = new oracle.odi.sap.km.CommonResourceBundle();
						odiSapErpResourceBundle.initializeResource("sap_lkm_erp");
						throw new Exception(odiSapErpResourceBundle.getResourceString("ODIKM-SAPERP-LKM-10003"));
					}
				}
				if (i > 0)
					joinPattern.append(" ~~ ");

				joinPattern.append(multJoinPatterns[i]);
			}
			pPattern = joinPattern.toString();
		}
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "OdiInterfaceMetadataHelper: Interface Joins :" + pPattern });
		// clean the pPattern variable
		pPattern = removeDqsFromSourceColumnReferences(pPattern);
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "Cleaned OdiInterfaceMetadataHelper: Interface Joins :" + pPattern });
		sSAPJoins = new ArrayList();

		if (pPattern.length() != 0) {
			StringTokenizer joinTokens = new StringTokenizer(pPattern, "~~");
			String joinExpr = null;
			while (joinTokens.hasMoreTokens()) {
				joinExpr = joinTokens.nextToken();
				sSAPJoins.add(joinExpr);
			}
		} else {
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "Coming in setting empty Join" });
			String jExp = "";
			sSAPJoins.add(jExp);
		}

		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "OdiInterfaceMetadataHelper: No of Interface Joins :" + sSAPJoins.size() });
	}// end of setJoinConditions method..

	/**
	 * Returns list of join conditions
	 * 
	 * @return ArrayList
	 */
	public ArrayList getJoinConditions() {
		return sSAPJoins;
	}

	/**
	 * This method parses all the filter expression defined in the interface
	 * design..
	 *
	 * @pPattern filter conditions pattern string
	 */
	public void setFilterConditions(String pPattern) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "OdiInterfaceMetadataHelper: Interface Filters :" + pPattern });
		// clean the pPattern variable
		pPattern = removeDqsFromSourceColumnReferences(pPattern);
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "Cleaned OdiInterfaceMetadataHelper: Interface Filters :" + pPattern });
		sSAPFilters = new ArrayList();
		if (pPattern != "") {
			StringTokenizer filTokens = new StringTokenizer(pPattern, "~~");
			String filtrExpr = null;
			while (filTokens.hasMoreTokens()) {
				filtrExpr = filTokens.nextToken();
				sSAPFilters.add(filtrExpr);
			}
		}
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "OdiInterfaceMetadataHelper: No Interface Filters :" + sSAPFilters.size() });
	}

	/**
	 * Returns list of filter conditions
	 * 
	 * @return ArrayList
	 */
	public ArrayList getFilterConditions() {
		return sSAPFilters;
	}

	/**
	 * This method gets the complete from expression of interface design.
	 */
	public void setFromCondition(String pPattern) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "OdiInterfaceMetadataHelper: Interface From Condition :" + pPattern });
		if (pPattern != "") {
			sFromExpr = pPattern;
		}
	}// end of setFromCondition() method

	/**
	 * Returns type of join (inner)
	 * 
	 * @return String
	 */
	public String getFromCondtion() {
		return sFromExpr;
	}

	/**
	 * This method gets the complete list of columns which goes under group by
	 * condition. Each columns is separated by ~~
	 */
	public void setGroupByList(String pPattern) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "OdiInterfaceMetadataHelper: Interface Group By Expression :" + pPattern });
		// clean the pPattern variable
		pPattern = removeDqsFromSourceColumnReferences(pPattern);
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "Cleaned OdiInterfaceMetadataHelper: Interface Group By Expression :" + pPattern });
		sGrpByList = new ArrayList();
		if (pPattern.length() != 0) {
			StringTokenizer sGrpTokens = new StringTokenizer(pPattern, "~~");
			String grpExpr = null;
			while (sGrpTokens.hasMoreTokens()) {
				grpExpr = sGrpTokens.nextToken();
				sGrpByList.add(grpExpr);
			}
		} else {
			String gEx = "";
			sGrpByList.add(gEx);
		}
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "OdiInterfaceMetadataHelper: No Group by Columns :" + sGrpByList.size() });
	}

	/**
	 * Returns complete list of group by columns
	 * 
	 * @return ArrayList
	 */
	public ArrayList getGroupByList() {
		return sGrpByList;
	}

}// End of OdiInterfaceMetadataHelper class

////////////////////////////////////////////////////////////////////////////////////////////////
//(c) Copyright 2008, Oracle	         		                   							 //
//ALL RIGHTS RESERVED.                                                                       //
//This UNPUBLISHED PROPRIETARY software is  subject to the full copyright 					//
//notice in the COPYRIGHT file in this directory.                                           //
/////////////////////////////////////////////////////////////////////////////////////////////

/**
* @(#)OdiSapRef.java  1.00 11/24/2008
*
* Application : ODI SAP Knowledge Modules
*
* Module      : ABAP Program generation API
*
* Author(s)   : Oracle,
*
* About       :
*
* Dependencies: JDK 1.5.0 API (with standard extensions),
*
*
* Update History (Please make entries here in case you make a change.)
* ____________________________________________________________________
* Date       Author                       Comments about the change
* ____________________________________________________________________
*August 2012							  Change made for ODI 12c in 
*										  logging and constructor parameter
**/
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import java.util.StringTokenizer;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
* This class is a API class which supports methods to constructs SAP ABAP 
* syntax expressions for constructing OPEN SQL ABAP Select Statement
*
* This class uses ODI interface definition information using their API to 
* build selected columns, selected tables, joins, filter conditions and 
* transformations information ABAP expressions.
*
* The api's provided in this class are used as substitution api's to 
* dynamically generate ABAP programs for an interface design.
*
* So all the api's provided are generic and will apply to any ABAP program
* generation.
* 
*/
public class OdiSapRef {

	//Interface metadata helper class
	private OdiInterfaceMetadataHelper iHelper = null;
	
	
	//Instance for OdiSapRef
	private static OdiSapRef ins = null;
	
	//logger class
	private OdiSapLogger sapLogger = null;	
	
	//List of all selected source tables
	//defined in interface design --
	//ArrayList will have objects of SapTable class
	public ArrayList sSrcTables = null;
	
	//List of all the mapped columns -- 
	//ArrayList will have objects of SapMappedField class
	public ArrayList sMappedCols = null;
	
	//list of all joins conditions -- list of
	//SapJoin objects.
	public ArrayList sJoinsExpr = null;
	
	//list of all filter strings
	private ArrayList sFiltersExpr = null;
	
	//list of all grp by columns
	private ArrayList sGrpByExpr = null;
	
	//Name of the last table
	public String lastTable = null;
	
	//from expression of the interface design
	private String sFromExpr = null;
	
	//Join Col HashMap for comparison purposes
	public HashMap joinColList = null;
	
	//Source Column Metadata list
	public HashMap srcColsMetadata = null;
	
	public boolean CROSS_INTERFACE = false;
	
	//public LinkedHashSet hsMoveCol = new LinkedHashSet();
	
	//ResourceBundle class object
	private oracle.odi.sap.km.CommonResourceBundle odiSapERPResourceBundle = null;
	
	/**
	* NewLine char "\n" i.e. (char)10 gets changed to (char)92 and (char)110 i.e. character 'n'
	* by the Java bean shell Put an extra "\" to escape "\"
	*/
	final String bsNewLine = ""+ (char)92 + (char)92+ (char)110;// \\n
	
	/**
	* Note: only "\n" i.e. (char)10 doesn't work. To over sure put '\r' i.e. (char)13
	*/
	final String jvNewLine = ""+ (char)13+ (char)10;// \r\n
        /*
        * used to remove extra separator(pipe) in a varible  list
        */
        public String removeSeparator = "";
	
	/**
	* Constructor to instantiate the class
	*/
	public OdiSapRef(OdiInterfaceMetadataHelper iHelper, OdiSapLogger sLogger, oracle.odi.sap.km.CommonResourceBundle odiSapErpResourceBundle) {
		this.iHelper = iHelper;
		this.sapLogger = sLogger;
		this.odiSapERPResourceBundle = odiSapErpResourceBundle;
		//initialize the interface metadata first
		//which will be used in generating the API
		initializeMetaData();
	
	}//End of Default Constructor
	
	
	/*public static OdiSapRef getInstance(OdiInterfaceMetadataHelper iHelper, OdiSapLogger sLogger) {
		if(ins == null) {
			ins = new OdiSapRef(iHelper, sLogger);
		}
		return ins;
	}*/
	
	
	/**
	* This stores the metadata of the selected tables, columns,
	* joins, filter expressions and transformations. This metadata
	* information of the interface design will be used to constructs the
	* list of tables, columns and all the required expressions for
	* generating ABAP program.
	*/ 
	private void initializeMetaData() {
	
		//get the list of all source tables used in
		//interface design
		sSrcTables = iHelper.getSelectedTables();
		
		//Parse & store Source Metadata List
		srcColsMetadata = parseSourceMetadata();
		
		//get the list of mapped columns from the 
		//metadata helper and parse each of the mapped columns
		//to build as ArrayList of SapMappedField class objects
		if(iHelper.getMappedColumns() != null) {
		sMappedCols = parseRawMappedCols(iHelper.getMappedColumns());
		}
		
		//initialize joins list as passed from ODI
		if(iHelper.getJoinConditions() != null) {
		sJoinsExpr = parseRawJoinsExpr(iHelper.getJoinConditions());
		//creating join column list for comparison purpose with mapped column
		joinColList = storeJoinColList();
		}	
		
		//Initialize filters list as passed from ODI
		sFiltersExpr = iHelper.getFilterConditions();
		
		//Initialize Group By list as passed from ODI
		sGrpByExpr = iHelper.getGroupByList();
		
		//Initialize from expression
		this.sFromExpr = iHelper.getFromCondtion();
		
		//check the interface type.
		/*for(int i=0; i < sSrcTables.size(); i++) {
			SapTable sT = (SapTable)sSrcTables.get(i);
			if((sT.type).equalsIgnoreCase("Clustered") || (sT.type).equalsIgnoreCase("POOL")) {
				if(sSrcTables.size() > 1) {
					CROSS_INTERFACE = true;
				}
				break;
			}
		}*/	
	
	}//end of initializeMetaData method.
	
	
	/**
	* Returns filter variable name for Open Tool parameters
	* @param pStart
	* @param pPattern
	* @param pSeparator
	* @param pEnd
	* @return String
	* @since ODI SAP ERP 30th build
	*/
	public String getInterfaceVarList(String pStart, String pPattern, String pSeparator, String pEnd) {
		// below Set stores the Names of Variables used in ODI and remove duplicate name entries
		HashSet varSet = new HashSet();
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"++++++++++ OdiSapRef.getInterfaceVarList() ++++++++++"} );
		///
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"pPattern : "+pPattern} );		
		String parsedPattern = parseAttributes(pPattern);
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"pPattern : "+pPattern} );
		///
		StringBuffer filtrExpSubStr = new StringBuffer();
                Map filtrVarMap = new HashMap();
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getInterfaceVarList() - sFiltersExpr: "+sFiltersExpr.toString()} );
		int counter = 1;
		for(int i=0; i<sFiltersExpr.size(); i++) {
			if (i>0) {
				counter = 1;
                                if(!(filtrExpSubStr.toString().endsWith("|")))
				filtrExpSubStr.append(pSeparator);
			}
			String []fSplit = sFiltersExpr.get(i).toString().split(" (AND|OR|and|or|And|Or) ");
			if(counter > 1 && !(filtrExpSubStr.toString().endsWith("|")))
				filtrExpSubStr.append(pSeparator);

			for(int j = 0; j < fSplit.length; j++) {
				
				Pattern pattern = Pattern.compile("#(("+(char)92+"w+[.])?"+(char)92+"w+)+");
				Matcher matcher = pattern.matcher(fSplit[j]);
				while (matcher.find()) {
					String match = fSplit[j].substring(matcher.start(), matcher.end());
					varSet.add(match);
				} 
			}//end of for loop
	// Iterate over all detected ODI variable names for building result
			// string
			for (Object fltrString : varSet) {
				String matchedString = (String)fltrString;
				if(matchedString.contains("#")) {
					String optr = getOperator(matchedString.trim());
					String []fSubSplit = matchedString.split(optr);
					String varName = null;
					varName = fSubSplit[0].trim().substring(fSubSplit[0].trim().indexOf("#")+1);//
					varName = varName.replace((""+(char)39),"").trim();//(char)39 stands for single quote
					String p = parsedPattern.replace("VAR_NAME", varName);
					if( ! varName.isEmpty()){
							if(null == filtrVarMap.get(p)){
							filtrVarMap.put(p, 1);
                                                        filtrExpSubStr.append(p);
						}
					}
                                        
					//Adding separator
					if(counter < fSplit.length && !(filtrExpSubStr.toString().endsWith("|")))
						filtrExpSubStr.append(pSeparator);
					counter++;
				}//end of if(fSplit[j].contains("#"))
			}// end of for each loop 


		}//END of for(int i=0; i<sFiltersExpr.size(); i++)
		if(filtrExpSubStr.toString().startsWith("|") && filtrExpSubStr.toString().endsWith("|") && filtrExpSubStr.toString().length()>1) {
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getInterfaceVarList() - Final String: "+filtrExpSubStr.substring(0, filtrExpSubStr.lastIndexOf("|")).toString()} );
			String VarValue = filtrExpSubStr.substring(1, filtrExpSubStr.lastIndexOf("|")).toString(); 
			return (VarValue);
		}else if(filtrExpSubStr.toString().endsWith("|")) {
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getInterfaceVarList() - Final String: "+filtrExpSubStr.substring(0, filtrExpSubStr.lastIndexOf("|")).toString()} );
			String VarValue = filtrExpSubStr.substring(0, filtrExpSubStr.lastIndexOf("|")).toString();                        
			return (VarValue);
		}else if(filtrExpSubStr.toString().startsWith("|")){ 
			String VarValue = filtrExpSubStr.substring(1).toString();                        
			return (VarValue);
		}else { 
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getInterfaceVarList() - Final String: "+filtrExpSubStr.toString()} );
			String VarValue = filtrExpSubStr.toString();                        
			return (VarValue);
		}
	}//END of getInterfaceVarList() method

            		
	/**
	* Returns total length, of mapped columns in the interface 
	* for ABAP data buffering in SAP
	* @return integer value as row length
	* @since 26th ERP LKM Build
	*/
	public int getABAPRecordBufferLength() throws MissingMetadataException {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"+++++++++ OdiSAPRef.getABAPRecordBufferLength() called ++++++++"} );
		List mappedColList = new LinkedList();
		if(iHelper.sSAPMappedCols != null)
			mappedColList = iHelper.sSAPMappedCols;
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"Size of mapped col list: " + sMappedCols.size()} );
		//Calculate total length of row by iterating
		//over all source columns and see whether they 
		//are used in any expression.
		int rowLength = 0;
		Iterator mColItr = mappedColList.iterator();
		while(mColItr.hasNext()){
			String mappedCol = mColItr.next().toString();
			//String []sMappedCol = mappedCol.split("~~");
			Iterator iter = srcColsMetadata.keySet().iterator();
			//Iterate over all source columns
			int cntr = 1;
			while( iter.hasNext() ) {
				String curSrcColName = iter.next().toString();
				HashMap curSrcCol = (HashMap)srcColsMetadata.get( curSrcColName );
				String colSrcColType = curSrcCol.get( "TYPE_NAME" ).toString().trim();
				//iterate over concatenated expressions
				//if current source col is referenced by any remaining reference...
				if(mappedCol.equalsIgnoreCase(curSrcColName)) {
				//sapLogger.log(sapLogger.INFO, "**************************** MATCHED");
				//sapLogger.log(sapLogger.INFO, ">>>>11curSrcColName: " + curSrcColName);
				//sapLogger.log(sapLogger.INFO, ">>>>2222sMappedCol[0]: " + mappedCol);
				int colLen = 0;
				String colLenStr = (String) ((HashMap)srcColsMetadata.get( curSrcColName )).get("PRECISION");
				String colScale = (String) ((HashMap)srcColsMetadata.get( curSrcColName )).get("SCALE");
				if (colLenStr != null) {
					colLen = Integer.valueOf( colLenStr );
				} else {
					throw new MissingMetadataException("Undefined length for column: " + curSrcColName);
				}
				if(colSrcColType.equalsIgnoreCase("ACCP")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("CHAR")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("CLNT")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("CUKY")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("CURR")) {
					colLen = Integer.valueOf( colLenStr )+1;
				}else if(colSrcColType.equalsIgnoreCase("DATS")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("DEC")) {
					colLen = Integer.valueOf(colLenStr)+Integer.valueOf(colScale)+1;
				}else if(colSrcColType.equalsIgnoreCase("FLTP")) {
					colLen = 22 + Integer.valueOf(colScale);
				}else if(colSrcColType.equalsIgnoreCase("INT1")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("INT2")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("INT4")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("LANG")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("LCHR")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("LRAW")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("NUMC")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("PREC")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("QUAN")) {
					colLen = Integer.valueOf(colLenStr)+Integer.valueOf(colScale)+1;
				}else if(colSrcColType.equalsIgnoreCase("RAW")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("RAWSTRING")) {
					colLen = 60;
				}else if(colSrcColType.equalsIgnoreCase("STRING")) {
					colLen = 60;
				}else if(colSrcColType.equalsIgnoreCase("TIMS")) {
					colLen = Integer.valueOf( colLenStr );
				}else if(colSrcColType.equalsIgnoreCase("UNIT")) {
					colLen = Integer.valueOf( colLenStr );
				}
				rowLength += colLen;//add source col length to record length
				break;
				}//end of main if(mappedColList.contains(curSrcColName)) 
				cntr++;
			}//end of outer while
		}//end of while(mColItr.hasNext())
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"rowLength for all mapped columns: "+rowLength} );
		rowLength += (sMappedCols.size()*3)+10;//add - number of cols x col separator (iv_delimeter) + newline char, to the record length
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"rowLength After adding col separator & end of line into mapped col length: "+rowLength} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"----------- OdiSAPRef.getABAPRecordBufferLength() ---------------"} );
		return rowLength; 
	}//end of method getABAPRecordBufferLength()
	
	
	/**
	* Parse Source Metadata. List contains Source Alias Name,
	* column Name, Source Data type, Column Precision (length) 
	* and Scale
	* @return HashMap
	*/
	private HashMap parseSourceMetadata() {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"++++++++ OdiSapRef.parseSourceMetadata() +++++++"} );
		HashMap srcCols = new HashMap();
		//Iterate over all tables
		SapTable sapTable = null;
		for(int i = 0; i < sSrcTables.size(); i++ ) {
		sapTable = (SapTable) sSrcTables.get(i);
		String aliasName = sapTable.getAlias();
		String tableMetadata = sapTable.getMetadata();
		String tableName = tableMetadata.replaceFirst(".*?SNP.CRTABLE_NAME=(.*?)SNP.CR.*","$1");
		HashMap curTableHM = new HashMap();
		//srcTables.put( aliasName, curTableHM );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"TableName: " + tableName} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"AliasName: " + aliasName} );
		String []colList = tableMetadata.split("SNP.CRDWG_COLSNP.CR");
		
		//Iterate over all columns
		for (int c = 1; c < colList.length; c++) {
			String colMD = colList[c];
			String colName = colMD.replaceFirst("COL_NAME=(.*?)SNP.CR.*","$1");
			HashMap curColHM = new HashMap();
			curTableHM.put( colName, curColHM );
			srcCols.put( aliasName + "." + colName, curColHM );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"ColName: " + colName} );
			//String []propList = colMD.split("\\QSNP$CR\\E");test it later
			String []propList = colMD.split("SNP.CR");
			// Iterate over all parameters
			for (int p = 1; p < propList.length; p++) {
				String propMD = propList[p];
				// property name/ value pair left?
				if (propMD.matches(".*?=.*")) {
				String []str = propMD.split("=");
				String propName = str[0];
				//String propValue = str[1];
				String propValue = (str.length>1)?str[1]:null;
				//To handle CDHDR
			/*	if(colName.equals("OBJECTID")&& propName.equals("PRECISION")){
					propValue = "18";
				}*/
				curColHM.put(propName, propValue);
				//sapLogger.log(sapLogger.INFO, "    " + propName + " = " + propValue );
				}//end of if condition
			}//end of inner for loop
			//sapLogger.log(sapLogger.INFO, "=======================================");
		}//end of sub-inner for loop
		}//end of outer for loop
		//Check the parse Metadata in log file
		/*Iterator iter = srcCols.keySet().iterator();
		while( iter.hasNext() ) {
		String curSrcColName = iter.next().toString();
		String aliasName = curSrcColName.substring(0, curSrcColName.indexOf("."));
		String colName = curSrcColName.substring(curSrcColName.indexOf(".")+1);
		
		HashMap curSrcCol = (HashMap)srcCols.get( curSrcColName );
		String colSrcColType = curSrcCol.get("TYPE_NAME").toString();
		String colOrder = curSrcCol.get("ORDER").toString();
		String colScale = curSrcCol.get("SCALE").toString();
		String colPrecision = curSrcCol.get("PRECISION").toString();
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {123, new Date(), "-----------------------------------"} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {123, new Date(), "aliasName: "+aliasName} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {123, new Date(), "colName: "+colName} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {123, new Date(), "colSrcColType: "+colSrcColType} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {123, new Date(), "colOrder: "+colOrder} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {123, new Date(), "colScale: "+colScale} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {123, new Date(), "colPrecision/Length: "+colPrecision"} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {123, new Date(), "-----------------------------------"} );
		
		//  sapLogger.log(sapLogger.INFO, "-----------------------------------");
		//  sapLogger.log(sapLogger.INFO, "aliasName: "+aliasName);
		//  sapLogger.log(sapLogger.INFO, "colName: "+colName);
		//  sapLogger.log(sapLogger.INFO, "colSrcColType: "+colSrcColType);
		//  sapLogger.log(sapLogger.INFO, "colOrder: "+colOrder);
		//  sapLogger.log(sapLogger.INFO, "colScale: "+colScale);
		//  sapLogger.log(sapLogger.INFO, "colPrecision/Length: "+colPrecision);
		//  sapLogger.log(sapLogger.INFO, "-----------------------------------");
		}*///end of while loop
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.parseSourceMetadata() Number of Column in Soruce: "+srcCols.size()} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"-------------- OdiSapRef.parseSourceMetadata() ---------------"} );
		return srcCols;
	}//END of parseMetadata() method
	
	
	/**
	* This method iterate on source table ArrayList and 
	* return an iterator
	* @return Iterator
	*/
	public Iterator getSrcTableIterator() {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"+++++++++++ OdiSapRef.getSrcTableIterator() +++++++++++"} );
		ArrayList joinTableList = new ArrayList();
		//String fromExp = iHelper.sFromExpr;
		String fromExp = iHelper.getFromCondtion();
		//SAP ABAP Technology supports only order join, check whether is it order join or not
		if((fromExp.indexOf("JOIN") == -1) && (sSrcTables.size() > 1)) {
			sapLogger.severe("ODIKM-SAPERP-LKM-10000", new Object[] {odiSapERPResourceBundle.getResourceString("SAP_LKM_ERP_Order_Join_Error")} );
			throwCodeGenException(odiSapERPResourceBundle.getResourceString("SAP_LKM_ERP_Order_Join_Error"));
			//throw new RuntimeException(odiSapERPResourceBundle.getResourceString("SAP_LKM_ERP_Order_Join_Error"));
		}
		Iterator selectedTableItr = sSrcTables.iterator();
		int tabOrder = 1;
		SourceTable sourceTable = null;
		while(selectedTableItr.hasNext()) {
			sourceTable = new SourceTable();
			SapTable sTable = (SapTable)selectedTableItr.next();
			sourceTable.setResourceName(sTable.getName());
			//sourceTable.resourceName = sTable.name;
			sourceTable.setAliasName(sTable.getAlias());
			//sourceTable.aliasName = sTable.alias;
			sourceTable.setTableOrderNo(new Integer(tabOrder).toString());
			//sourceTable.tableOrderNo = new Integer(tabOrder).toString();
			//lastTable = sourceTable.aliasName.trim();
			setLastTable(sTable.getAlias());
			joinTableList.add(sourceTable);
			tabOrder++;
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"sourceTable.getResourceName(): "+sourceTable.getResourceName()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"sourceTable.getAliasName(): "+sourceTable.getAliasName()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"sourceTable.getTableOrderNo(): "+sourceTable.getTableOrderNo()} );
		}//end of while(selectedTableItr.hasNext())
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"--------------- OdiSapRef.getSrcTableIterator() -------------"} );
		return joinTableList.iterator();
	}//END of getSrcTableIterator() method
	
	/**
	* Set the last table name from the table list
	* @param lastTable
	*/
	public void setLastTable(String lastTable) {
		this.lastTable = lastTable;
	}
	
	/**
	* Get the last table name from the table list
	*/
	public String getLastTable() {
		return lastTable;
	}
	
	/**
	* 
	* @param resKey
	*/
	public void throwCodeGenException( String resKey ) {
		//String msg = odiSapERPResourceBundle.getResourceString( resKey );
		out.print("<"+"? throw new Exception("+(char)34+resKey+(char)34+"); ?"+">");// (char)34 stand for Quotation Mark
		//throw new Exception( msg );
	}
	
	/**
	* 
	* @return Iterator
	*/
	public Iterator getRevSrcTableIterator() {
	sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"+++++++OdiSapRef.getRevSrcTableIterator()++++++"} );
	//	sapLogger.log(sapLogger.INFO, "OdiSapRef.getRevSrcTableIterator() method called");
	Iterator itr = getSrcTableIterator();
	ReverseIterator reverseItr = new ReverseIterator(itr);
	while(reverseItr.hasNext()) {
		SourceTable objSourceTable = (SourceTable)reverseItr.next();
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"Reverse: "+objSourceTable.getResourceName() + "     "+objSourceTable.getAliasName()} );
	}
	sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"--------OdiSapRef.getRevSrcTableIterator()--------"} );
	return reverseItr;
	}//end of getRevSrcTableIterator() method
	
	
	/**
	* This method returns the mapped and join column list as per pattern provided
	* @param pStart
	* @param pPattern
	* @param pSeparator
	* @param pEnd
	* @param pSelector
	* @return String representing list of columns
	*/
	public String getColList(String pStart, String pPattern, String pSeparator, String pEnd, String pSelector) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"+++++++OdiSapRef.getColList()++++++++++"} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"OdiSapRef.getColList() pStart: "+pStart} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"OdiSapRef.getColList() pPattern: "+pPattern} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"OdiSapRef.getColList() pSeparator: "+pSeparator} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"OdiSapRef.getColList() pEnd: "+pEnd} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"OdiSapRef.getColList() pSelector: "+pSelector} );
		
		//Assigning mapped column
		ArrayList mappedColList = sMappedCols;
		//First append the start string to the buffer//sMappedCol
		StringBuffer strExp = new StringBuffer();
		
		pStart = pStart.replaceAll(bsNewLine, jvNewLine);
		pPattern = pPattern.replaceAll(bsNewLine, jvNewLine);
		pSeparator = pSeparator.replaceAll(bsNewLine, jvNewLine);
		pEnd = pEnd.replaceAll(bsNewLine, jvNewLine);
		if(pStart != "") 
			strExp.append(pStart);
		
		if(pPattern.trim().length() == 0)
			return "";//No pattern defined
		
		//The expressions we require for SAP ABAP program generation are
		//[CX_COLUMN_NAME] TYPE [RES_NAME]-[COL_NAME] == for internal structure
		//[RES_NAME]~[COL_NAME] == for select statement
		//<internal table name>-[COL_NAME] == for output to file
		//for all the mapped columns replace the pPattern passed
		//with [xxx] appropriate parameters and use pSeperator to
		//separate each of the expression generated for the mapped
		//columns
		//String p = "";
		ArrayList mapJoinColList = new ArrayList();
		ArrayList uniqueColList = new ArrayList();
		if(mappedColList != null) {
			//****** Taking Join Columns *********
			if((sSrcTables.size() > 1) && (pSelector.contains("MAPPED_OR_JOIN"))) {
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getColList() - sJoinsExpr.size : " + sJoinsExpr.size()});
				//taking column from join condition	
				Iterator joinItr = sJoinsExpr.iterator();
				///StringBuffer tabJoinCondition = new StringBuffer();
				SapJoin sapJoin = null;
				while(joinItr.hasNext()) {
					sapJoin = new SapJoin();
					sapJoin = (SapJoin) joinItr.next();
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getColList() inside MAPPED_OR_JOIN Before IF COND leftResName~leftColName: " + sapJoin.getLeftResName()+"~"+sapJoin.getLeftColName()} );
					if(!uniqueColList.contains(sapJoin.getLeftPopTabAlias()+"~"+sapJoin.getLeftColName())) {
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getColList() inside MAPPED_OR_JOIN After IF COND leftResName~leftColName: " + sapJoin.getLeftResName()+"~"+sapJoin.getLeftColName()} );
						//Adding join resource Name and column name to check uniqueness for mapped & join combination column
						uniqueColList.add(sapJoin.getLeftPopTabAlias()+"~"+sapJoin.getLeftColName());
						//Prepare list of unique join list
						mapJoinColList.add(sapJoin.getLeftResName()+"~"+sapJoin.getLeftPopTabAlias()+"~"+sapJoin.getLeftColName()+"~"+sapJoin.getLeftCxColName()+"~"+sapJoin.getLeftCxColName());
					}
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getColList() inside MAPPED_OR_JOIN Before IF cond rightResName~rightColName: " + sapJoin.getRightResName()+"~"+sapJoin.getRightColName()} );
					if(!uniqueColList.contains(sapJoin.getRightPopTabAlias()+"~"+sapJoin.getRightColName())) {
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getColList() inside MAPPED_OR_JOIN After IF cond rightResName~rightColName: " + sapJoin.getRightResName()+"~"+sapJoin.getRightColName()} );
						//Adding join resource Name and column name to check uniqueness for mapped & join combination column
						uniqueColList.add(sapJoin.getRightPopTabAlias()+"~"+sapJoin.getRightColName());
						//Prepare list of unique join list
						mapJoinColList.add(sapJoin.getRightResName()+"~"+sapJoin.getRightPopTabAlias()+"~"+sapJoin.getRightColName()+"~"+sapJoin.getRightCxColName()+"~"+sapJoin.getRightCxColName());
					}
					sapJoin = null;
				}//end of while(joinItr.hasNext())
				joinItr = null;
			}//end of if(sSrcTables.size() > 1 && pPattern.contains("MAPPED_OR_JOIN"))
			//******Taking mapped columns ********/
			if(pSelector.equalsIgnoreCase("ALL_MAPPED")) {//for ALL_MAPPED Column
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getColList() inside if ALL_MAPPED"} );
				//	sapLogger.log(sapLogger.INFO, "OdiSapRef.getColList() inside if ALL_MAPPED ");
				Iterator colItr = mappedColList.iterator();
				SapMappedField sMappedCol = null;
				while(colItr.hasNext()) {
				sMappedCol = new SapMappedField();
				sMappedCol = (SapMappedField) colItr.next();
				mapJoinColList.add(sMappedCol.getResName()+"~"+sMappedCol.getPopTabAlias()+"~"+sMappedCol.getColName()+"~"+sMappedCol.getCxColName()+"~"+sMappedCol.getCxColName());
				sMappedCol = null;
				}//end of while loop
				colItr = null;
			}else if(pSelector.equalsIgnoreCase("SOURCE_DT_ALLOWS_NEGATIVE")) {//for JDBC approach - numbers must have leading signs
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSAPRef.getColList() inside if SOURCE_DT_ALLOWS_NEGATIVE "} );
				//	sapLogger.log(sapLogger.INFO, "OdiSAPRef.getColList() inside if SOURCE_DT_ALLOWS_NEGATIVE ");
				Iterator colItr = mappedColList.iterator();
				SapMappedField sMappedCol = null;
				while(colItr.hasNext()) {
					sMappedCol = new SapMappedField();
					sMappedCol = (SapMappedField) colItr.next();
					if(sMappedCol.getSourceDataType().equalsIgnoreCase("CURR") ||
					sMappedCol.getSourceDataType().equalsIgnoreCase("DEC") || 
					sMappedCol.getSourceDataType().equalsIgnoreCase("FLTP") ||
					sMappedCol.getSourceDataType().equalsIgnoreCase("QUAN") ||
					sMappedCol.getSourceDataType().equalsIgnoreCase("INT4") ||
					sMappedCol.getSourceDataType().equalsIgnoreCase("INT2")) {
					
					mapJoinColList.add(sMappedCol.getResName()+"~"+sMappedCol.getPopTabAlias()+"~"+sMappedCol.getColName()+"~"+sMappedCol.getCxColName()+"~"+sMappedCol.getCxColName());
					}//end of if condition
					sMappedCol = null;
				}//end of while loop
				colItr = null;
			}else if(pSelector.equalsIgnoreCase("SOURCE_AND_TARGET")) {//for data moving from final temp table to final Target table
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getColList() inside SOURCE_AND_TARGET"} );
			Iterator mColItr = mappedColList.iterator();
			SapMappedField mappedField = null;
			Map mapColList = new LinkedHashMap();
			while(mColItr.hasNext()) {
				mappedField = new SapMappedField();
				mappedField = (SapMappedField) mColItr.next();
				//if(!uniqueColList.contains(mappedField.resName.trim()+"~"+mappedField.colName.trim())) {
				//uniqueColList.add(mappedField.resName.trim()+"~"+mappedField.colName.trim());
				//String cxTempSourceColName = "";
				if(joinColList.containsKey(mappedField.getPopTabAlias().trim()+"~"+mappedField.getColName().trim())) {
					String joinColDetail = (String) joinColList.get(mappedField.getPopTabAlias().trim()+"~"+mappedField.getColName().trim());
					String []jSplit = joinColDetail.split("~");
					/*jSplit[0] = ResName
					*jSplit[1] = PopTabAliasName
					*jSplit[2] = ColName 
					*jSplit[3] = CxColName
					*jSplit[4] = CX_WA_FINAL_TEMP_SOURCE_COL -  DxColname, if join column mapped, too.
					*/
					String cxTempSourceColName = jSplit[3].toString();
					mapJoinColList.add(mappedField.getResName()+"~"+mappedField.getPopTabAlias()+"~"+mappedField.getColName()+"~"+mappedField.getCxColName()+"~"+cxTempSourceColName);
				}else {
					//Map mapColList = new LinkedHashMap();
					String cxTempSourceColName = mappedField.getCxColName();//for in case same col mapped multiple times without join
					//sapLogger.log(sapLogger.INFO, "OdiSapRef.getColList() 111111mappedField.resName.trim()~mappedField.colName.trim(): "+mappedField.resName.trim()+"~"+mappedField.colName.trim());
					if(mapColList.containsKey(mappedField.getPopTabAlias().trim()+"~"+mappedField.getColName().trim())) {
					//sapLogger.log(sapLogger.INFO, "OdiSapRef.getColList() 22222 ");
					String colMetadata = mapColList.get(mappedField.getPopTabAlias().trim()+"~"+mappedField.getColName().trim()).toString();
					//sapLogger.log(sapLogger.INFO, "OdiSapRef.getColList() 33333 colMetadata: "+colMetadata);
					if((colMetadata != null) || (!colMetadata.equals(""))) {
					String []colMetadataArray = colMetadata.split("~");
					/*colMetadataArray[0] = Resource Name
					*colMetadataArray[1] = Pop Tab Alias Name 
					*colMetadataArray[2] = Column Name
					*colMetadataArray[3] = Cx Column Name 
					*/
					cxTempSourceColName = colMetadataArray[3];
					//sapLogger.log(sapLogger.INFO, "OdiSapRef.getColList() 444444 cxTempSourceColName: "+cxTempSourceColName);
					}//end of if((colMetadata != null) || (!colMetadata.equals("")))
					}//end of if(mapColList.containsKey(mappedField.resName.trim()+"~"+mappedField.colName.trim()))
					//Add Table name and Col name in Map to check whether same column is mapped multiple times
					//sapLogger.log(sapLogger.INFO, "OdiSapRef.getColList() AAAAAAAA Key to be stored: "+mappedField.resName.trim()+"~"+mappedField.colName.trim());
					if(!mapColList.containsKey(mappedField.getPopTabAlias().trim()+"~"+mappedField.getColName().trim()))
					mapColList.put(mappedField.getPopTabAlias().trim()+"~"+mappedField.getColName().trim(), mappedField.getResName()+"~"+mappedField.getPopTabAlias()+"~"+mappedField.getColName()+"~"+mappedField.getCxColName());
					//sapLogger.log(sapLogger.INFO, "OdiSapRef.getColList() 555555555 cxTempSourceColName: "+cxTempSourceColName);
					mapJoinColList.add(mappedField.getResName()+"~"+mappedField.getPopTabAlias()+"~"+mappedField.getColName()+"~"+mappedField.getCxColName()+"~"+cxTempSourceColName);
				}
				mappedField = null;
			}//end of while(mapColItr.hasNext())
			mColItr = null;
			
			}else { //else condition - getting mapped and join column, if join column also mapped 
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getColList() inside blank pSelector "} );
				//	sapLogger.log(sapLogger.INFO, "OdiSapRef.getColList() inside blank pSelector ");
				Iterator mapColItr = mappedColList.iterator();
				SapMappedField sapMappedCol = null;
				while(mapColItr.hasNext()) {
					sapMappedCol = new SapMappedField();
					sapMappedCol = (SapMappedField) mapColItr.next();
					if(!uniqueColList.contains(sapMappedCol.getPopTabAlias().trim()+"~"+sapMappedCol.getColName().trim())) {
						uniqueColList.add(sapMappedCol.getPopTabAlias().trim()+"~"+sapMappedCol.getColName().trim());
						String cxMapJoinColName = "";
						if(joinColList.containsKey(sapMappedCol.getPopTabAlias().trim()+"~"+sapMappedCol.getColName().trim())) {
							String joinColDetail = (String) joinColList.get(sapMappedCol.getPopTabAlias().trim()+"~"+sapMappedCol.getColName().trim());
							String []jSplit = joinColDetail.split("~");
							/*jSplit[0] = ResName
							*jSplit[1] = PopTabAliasName
							*jSplit[2] = ColName
							*jSplit[3] = CxColName
							*jSplit[4] = CxColName - 4th array is added due to resolve if same column mapped multiple times
							*/
							cxMapJoinColName = jSplit[3].toString();
							mapJoinColList.add(sapMappedCol.getResName()+"~"+sapMappedCol.getPopTabAlias()+"~"+sapMappedCol.getColName()+"~"+cxMapJoinColName+"~"+cxMapJoinColName);
						}else
							mapJoinColList.add(sapMappedCol.getResName()+"~"+sapMappedCol.getPopTabAlias()+"~"+sapMappedCol.getColName()+"~"+sapMappedCol.getCxColName()+"~"+sapMappedCol.getCxColName());
					}
					//sapMappedCol.cxColName = null;
					sapMappedCol = null;
				}//end of while(mapColItr.hasNext())
				mapColItr = null;
			}//end of else condition
			//****** Create pattern *********
			String parsedPattern = parseAttributes(pPattern);
			Iterator pItr = mapJoinColList.iterator();
			
			while(pItr.hasNext()) {
				String []tabMetadata = pItr.next().toString().split("~");
				/* tabMetadata[0] = RES_NAME
				* tabMetadata[1] = POP_TAB_ALIAS
				* tabMetadata[2] = COL_NAME
				* tabMetadata[3] = CX_COLUMN_NAME
				* tabMetadata[3] = CX_WA_FINAL_TEMP_SOURCE_COL - in case of same column mapped multiple times
				*/
				//replace [RES_NAME] pattern
				String p = parsedPattern.replaceAll("RES_NAME", tabMetadata[0]);
				
				//replace [POP_TAB_ALIAS] pattern
				p = p.replaceAll("POP_TAB_ALIAS", tabMetadata[1]);
				
				//replace [COL_NAME] from pattern
				p = p.replaceAll("COL_NAME", tabMetadata[2]);
				
				//replace [WA_FINAL_TEMP_SRCOL] from pattern - for same column mapped multiple times
				//p = p.replace("WA_FINAL_TEMP_SRCOL", tabMetadata[2]);
				
				//replace [CX_COLUMN_NAME] from pattern
				p = p.replaceAll("CX_COLUMN_NAME", tabMetadata[3]);
				
				//replace [WA_FINAL_TEMP_SRCOL] from pattern  - for same column mapped multiple times
				p = p.replace("WA_FINAL_TEMP_SRCOL", tabMetadata[4]);
				
				strExp.append(p);
				//Add separator at the end of each row
				if(pItr.hasNext())
				strExp.append( pSeparator );
				//tabMetadata = null;
				p = null;
			}//end of while(pItr.hasNext())
			pItr = null;
		}//end of if(mappedColList != null)
		//append end character at the end of string
		strExp.append(pEnd);
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getColList() - ABAP Syntax String : " + strExp.toString()} );
		if(mapJoinColList != null) {
			mapJoinColList.clear();
			mapJoinColList = null;
		}
		if(uniqueColList != null) {
			uniqueColList.clear();
			uniqueColList = null;
		}
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"------------ OdiSapRef.getColList() End --------------"} );
		return strExp.toString();
	}//end of getColList(String pStart, String pPattern, String pSeparator, String pEnd, String pSelector) method
	
	
	/**
	* Returns list of join columns to compare with mapped column list
	* @return HashMap representing list of Join Columns
	*/
	public HashMap storeJoinColList() {
		joinColList = new HashMap();
		Iterator jColItr = sJoinsExpr.iterator();
		SapJoin sapJoin = new SapJoin();
		while(jColItr.hasNext()) {
			sapJoin = (SapJoin) jColItr.next();
			joinColList.put(sapJoin.getLeftPopTabAlias()+"~"+sapJoin.getLeftColName(),  sapJoin.getLeftResName()+"~"+sapJoin.getLeftPopTabAlias()+"~"+sapJoin.getLeftColName()+"~"+sapJoin.getLeftCxColName());
			joinColList.put(sapJoin.getRightPopTabAlias()+"~"+sapJoin.getRightColName(),  sapJoin.getRightResName()+"~"+sapJoin.getRightPopTabAlias()+"~"+sapJoin.getRightColName()+"~"+sapJoin.getRightCxColName());
			sapJoin = null;
		}
		return joinColList;
	}//end of storeJoinColList() method
	
	
	/**
	* This method parses the raw mapped cols expression
	* and constructs list of SapMappedField objects
	*/
	private ArrayList parseRawMappedCols(ArrayList mappedRawColsList) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"+++++++++ OdiSAPRef.parseRawMappedCols()+++++++++"} );
		ArrayList sMCols = new ArrayList();
		String tabName = null;
		String colName = null;
		String expr = null;
		String mColExpr = null;
		SapMappedField smField = null;
		int cxCounter = 1;
		for(int i=0; i < mappedRawColsList.size(); i++) {
			mColExpr = (String)mappedRawColsList.get(i);
			String checkExpr = "";
			if(mColExpr.indexOf("(") != -1)
				checkExpr = mColExpr.substring(mColExpr.indexOf("(") + 1, mColExpr.indexOf(")"));
			else
				checkExpr = mColExpr;
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"Mapped Column without Expression"} );
			smField = new SapMappedField();
			tabName = checkExpr.substring(0, checkExpr.indexOf("."));
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"Mapped Column without Expression:"} );
			/*****Iterate over all tables available in the source side of Interface
			* and set the resource name and alias name */
			Iterator tableItr = getSrcTableIterator();
			SourceTable srcTab;
			while(tableItr.hasNext()) {
				srcTab = new SourceTable();
				srcTab = (SourceTable)tableItr.next();
				if(tabName.equalsIgnoreCase(srcTab.getAliasName())) {
					smField.setResName(srcTab.getResourceName());
					smField.setPopTabAlias(srcTab.getAliasName());
					break;
				}
				if(tabName.equalsIgnoreCase(srcTab.getResourceName())) {
					smField.setResName(tabName);
					smField.setPopTabAlias(srcTab.getAliasName());
					break;
				}
				srcTab = null;
			}//end of while loop
			tableItr = null;
			/*****END of - Iterate over all tables available in the source side of Interface *****/
			colName = checkExpr.substring(checkExpr.indexOf(".") + 1, checkExpr.length()).trim();
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"XXXXXXXXXXXcolName: "+colName} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"srcColsMetadata.size(): "+srcColsMetadata.size()} );
			/*****Get the source metadata list and set the Column Data Type (SOURCE_DT) */
			Iterator srcColIter = srcColsMetadata.keySet().iterator();
			while(srcColIter.hasNext()) {
				//sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"EEEEEEEEEEEEEEEEEE"} );
				String curSrcColName = srcColIter.next().toString();
				String srcAliasName = curSrcColName.substring(0, curSrcColName.indexOf(".")).trim();
				String srcColName = curSrcColName.substring(curSrcColName.indexOf(".")+1).trim();
				//sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"<><><UUUUUUUUUUUU><<><: "+curSrcColName} );
				if((srcAliasName.equalsIgnoreCase(smField.getPopTabAlias())) && (srcColName.equalsIgnoreCase(colName))  ) {
					HashMap curSrcCol = (HashMap)srcColsMetadata.get( curSrcColName );
					//String colSrcColType = curSrcCol.get("TYPE_NAME").toString();
					//String colOrder = curSrcCol.get("ORDER").toString();
					//String colPrecision = curSrcCol.get("PRECISION").toString();
					//String colScale = curSrcCol.get("SCALE").toString();
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"<><><TYPE_NAME><<><: "+curSrcCol.get("TYPE_NAME")} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"<><><ORDER><<><: "+curSrcCol.get("ORDER")} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"<><><PRECISION><<><: "+curSrcCol.get("PRECISION")} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"<><><SCALE><<><: "+curSrcCol.get("SCALE")} );
					//smField.setSourceDataType(curSrcCol.get("TYPE_NAME").toString().trim());
					//smField.setOrder(curSrcCol.get("ORDER").toString().trim());
					//smField.setColLength(curSrcCol.get("PRECISION").toString().trim());
					//smField.setColScale(curSrcCol.get("SCALE").toString().trim());
					if(curSrcCol.get("TYPE_NAME") != null)
						smField.setSourceDataType(curSrcCol.get("TYPE_NAME").toString().trim());
					if(curSrcCol.get("ORDER") != null)
						smField.setOrder(curSrcCol.get("ORDER").toString().trim());
					if(curSrcCol.get("PRECISION") != null)
						smField.setColLength(curSrcCol.get("PRECISION").toString().trim());
					if(curSrcCol.get("SCALE") != null)
					smField.setColScale(curSrcCol.get("SCALE").toString().trim());
					break;
				}
			}//end of while loop
			srcColIter = null;
			//sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"FFFFFFFFFFFFFFFFFFFFFFFFFF"} );
			/*****END of - getting source metadata list and set the Column Data Type (SOURCE_DT)*/
			expr = mColExpr.replace('.', '~');
			smField.setTableName(tabName);
			smField.setColName(colName);
			smField.setExp(expr);
			//sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"GGGGGGGGGGGGGGGG: "+cxCounter} );
			smField.setColPos("C"+new Integer(cxCounter).toString()+"_");
			//sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"hhhhhhhhhhhhhhhhh"} );
			smField.setCxColName("C"+new Integer(cxCounter).toString()+"_"+colName);
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"------------------------------------------------------------------------"} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawMappedCols() - Mapped Res Name: " + smField.getResName()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawMappedCols() - Mapped popTabAlias Name: " + smField.getPopTabAlias()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawMappedCols() - Mapped Column Name: " + smField.getColName()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawMappedCols() - Mapped Cx_Column Name: " + smField.getCxColName()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawMappedCols() - Mapped Source Data Type: " + smField.getSourceDataType()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawMappedCols() - Mapped Source Col Order: " + smField.getOrder()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawMappedCols() - Mapped Source Col Length: " + smField.getColLength()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawMappedCols() - Mapped Source Col Scale: " + smField.getColScale()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawMappedCols() - Mapped Source Expression: " + smField.getExp()} );
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"------------------------------------------------------------------------"} );
			sMCols.add(smField);
			cxCounter++;
			smField = null;
		}
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"------------ OdiSAPRef.parseRawMappedCols() ---------"} );
		return sMCols;
	}//END of parseRawMappedCols() method.
	
	
	/**
	* This method constructs the list of SapJoin class objects 
	* for each of the joins defined in the interface design.
	*/
	private ArrayList parseRawJoinsExpr(ArrayList joinsExpr) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"+++++++++++ OdiSapRef.parseRawJoinsExpr() ++++++++++++"} );
		//ArrayList joinedList = new ArrayList();	
		ArrayList newJoinList = new ArrayList();
		ArrayList tempJoinList = new ArrayList();
		SapJoin sJoin = null;
		String jExp = null;
		String opr = "";
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"parseRawJoinsExpr() joinsExpr : " + joinsExpr} );
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"parseRawJoinsExpr() joinsExpr.size : " + joinsExpr.size()} );
		int joinCxCounter = 1;
		for(int i = 0; i < joinsExpr.size(); i++) {
			jExp = (String)joinsExpr.get(i);
			//sJoin = new SapJoin();
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"jExp before removing bracket: " + jExp} );
			//	sapLogger.log(sapLogger.INFO, "jExp before removing bracket: " + jExp);
			if(jExp.length() != 0) {
				//String pTable = null;
				//String jTable = null;
				//String joinDef = null;
				//ArrayList conds = new ArrayList();
				jExp = jExp.replace(""+(char)40, "").replace(""+(char)41, "");//removing small bracket
				jExp = jExp.replace(""+(char)91, "").replace(""+(char)93, "");//removing big bracket
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"parseRawJoinsExpr() jExp after removing bracket: "+jExp} );
				if(jExp.indexOf(" AND ") != -1) {//if join on more than one column
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"parseRawJoinsExpr() inside AND condition"} );
					String [] je = jExp.split(" AND ");
					for(int k = 0; k<je.length; k++) {
						sJoin = new SapJoin();
						opr = getOperator(je[k]);
						String [] jTabs = je[k].split(opr);//split join cond on the basis of operator
						
						String leftTable = jTabs[0].substring(0, jTabs[0].indexOf(".")).trim();
						String rightTable = jTabs[1].substring(0, jTabs[1].indexOf(".")).trim();
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"parseRawJoinsExpr() multi col join - leftTable : " + leftTable} );
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"parseRawJoinsExpr() multi col join - rightTable : " + rightTable} );
				
						Iterator srcTabItr = getSrcTableIterator();
						SourceTable srcTable = null;
						while(srcTabItr.hasNext()) {
							srcTable = new SourceTable();
							srcTable = (SourceTable)srcTabItr.next();
							
							if(leftTable.equalsIgnoreCase(srcTable.getAliasName())) {
								sJoin.setLeftResName(srcTable.getResourceName());
								//sJoin.leftResName = srcTable.resourceName;
								sJoin.setLeftPopTabAlias(leftTable);
								//sJoin.leftPopTabAlias = leftAliasTable;
								//break;
							}else if(leftTable.equalsIgnoreCase(srcTable.getResourceName())) {
								sJoin.setLeftPopTabAlias(srcTable.getAliasName());
								//sJoin.leftPopTabAlias = srcTable.aliasName;
								sJoin.setLeftResName(leftTable);
								//sJoin.leftResName = leftTable;
								//break;
							}
							if(rightTable.equalsIgnoreCase(srcTable.getAliasName())) {
								sJoin.setRightResName(srcTable.getResourceName());
								//sJoin.rightResName = srcTable.resourceName;
								sJoin.setRightPopTabAlias(rightTable);
								//sJoin.rightPopTabAlias = rightTable;
								//break;
							}else if(rightTable.equalsIgnoreCase(srcTable.getResourceName())) {
								sJoin.setRightPopTabAlias(srcTable.getAliasName());
								//sJoin.rightPopTabAlias = srcTable.aliasName;
								sJoin.setRightResName(rightTable);
								//sJoin.rightResName = rightTable;
								//break;
							}
						}//end of while(srcTabItr.hasNext())
						sJoin.setLeftColName(jTabs[0].substring(jTabs[0].indexOf(".")+1, jTabs[0].length()).trim());
						//sJoin.leftColName = jTabs[0].substring(jTabs[0].indexOf(".")+1, jTabs[0].length()).trim();//taking right part from dot
						
						sJoin.setRightColName(jTabs[1].substring(jTabs[1].indexOf(".")+1, jTabs[1].length()).trim());
						//sJoin.rightColName = jTabs[1].substring(jTabs[1].indexOf(".")+1, jTabs[1].length()).trim();//taking right part from dot
						
						/*Check whether DX for same column is already generated
						* for left side join column, if yes, use existing one
						*/
						if(tempJoinList.contains(sJoin.getLeftPopTabAlias()+"~"+sJoin.getLeftColName())) {
							Iterator itr = newJoinList.iterator();
							SapJoin existingSapJoin = null;
							while(itr.hasNext()) {
								existingSapJoin = new SapJoin();
								existingSapJoin = (SapJoin)itr.next();
								if(existingSapJoin.getLeftPopTabAlias().equalsIgnoreCase(sJoin.getLeftPopTabAlias()) && existingSapJoin.getLeftColName().equalsIgnoreCase(sJoin.getLeftColName())) {
									//sJoin.leftCxColName = existingSapJoin.leftCxColName;
									sJoin.setLeftCxColName(existingSapJoin.getLeftCxColName());
									//joinCxCounter--;
								}
								if(existingSapJoin.getRightPopTabAlias().equalsIgnoreCase(sJoin.getLeftPopTabAlias()) && existingSapJoin.getRightColName().equalsIgnoreCase(sJoin.getLeftColName())) {
									//sJoin.leftCxColName = existingSapJoin.rightCxColName;
									sJoin.setLeftCxColName(existingSapJoin.getRightCxColName());
									//joinCxCounter--;
								}
							}
						}else {//if same join column not exist
							//sJoin.leftCxColName = "D"+joinCxCounter+"_"+jTabs[0].substring(jTabs[0].indexOf(".")+1, jTabs[0].length()).trim();
							sJoin.setLeftCxColName("D"+joinCxCounter+"_"+jTabs[0].substring(jTabs[0].indexOf(".")+1, jTabs[0].length()).trim());
							joinCxCounter++;
							sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"aaaaaa>>>>>>multi joinCxCounter : " + joinCxCounter} );
						}
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"BBBinside multiple condition sJoin.leftCxColName: " + sJoin.getLeftCxColName()} );
						/*Check whether DX for same column is already generated
						* for right side join column, if yes, use existing one
						*/
						if((tempJoinList.contains(sJoin.getRightPopTabAlias()+"~"+sJoin.getRightColName()))) {	
							Iterator itr = newJoinList.iterator();
							SapJoin existingSapJoin = null;
							while(itr.hasNext()) {
								existingSapJoin = new SapJoin();
								existingSapJoin = (SapJoin)itr.next();
								if(existingSapJoin.getRightPopTabAlias().equalsIgnoreCase(sJoin.getRightResName()) && existingSapJoin.getRightColName().equalsIgnoreCase(sJoin.getRightColName())) {
									//sJoin.rightCxColName = existingSapJoin.rightCxColName;
									sJoin.setRightCxColName(existingSapJoin.getRightCxColName());
									//joinCxCounter--;
								}
								if(existingSapJoin.getLeftPopTabAlias().equalsIgnoreCase(sJoin.getRightResName()) && existingSapJoin.getLeftColName().equalsIgnoreCase(sJoin.getRightColName())) {
									//sJoin.rightCxColName = existingSapJoin.leftCxColName;
									sJoin.setRightCxColName(existingSapJoin.getLeftCxColName());
									//joinCxCounter--;
								}
							}//end of while loop
						}else {//if same join column not exist
							//sJoin.rightCxColName = "D"+joinCxCounter+"_"+jTabs[1].substring(jTabs[1].indexOf(".")+1, jTabs[1].length()).trim();
							sJoin.setRightCxColName("D"+joinCxCounter+"_"+jTabs[1].substring(jTabs[1].indexOf(".")+1, jTabs[1].length()).trim());
							joinCxCounter++;
							sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"bbbbbbbb>>>>>>>multi joinCxCounter : " + joinCxCounter} );
						}
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"BBBinside multiple condition sJoin.getRightCxColName(): " + sJoin.getRightCxColName()} );
			
						tempJoinList.add(sJoin.getLeftPopTabAlias()+"~"+sJoin.getLeftColName());//MARC~MATNR
						tempJoinList.add(sJoin.getRightPopTabAlias()+"~"+sJoin.getRightColName());//MARD~MATNR
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"--------------------------------------------------------------------------------"} );
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Multiple Join - sJoin.getLeftResName(): " + sJoin.getLeftResName()} );
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Multiple Join - sJoin.getLeftPopTabAlias(): " + sJoin.getLeftPopTabAlias()} );
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Multiple Join - sJoin.getLeftColName(): " + sJoin.getLeftColName()} );
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Multiple Join - sJoin.getLeftCxColName(): " + sJoin.getLeftCxColName()} );
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Multiple Join - sJoin.getRightResName(): " + sJoin.getRightResName()} );
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Multiple Join - sJoin.getRightPopTabAlias(): " + sJoin.getRightPopTabAlias()} );
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Multiple Join - sJoin.getRightColName(): " + sJoin.getRightColName()} );
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Multiple Join - sJoin.getRightCxColName(): " + sJoin.getRightCxColName()} );
						sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"--------------------------------------------------------------------------------"} );
						newJoinList.add(sJoin);//Adding final object to join col list
						sJoin = null;
					}//end of for loop if join on more than one column
				}else {//else join on single column
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() inside single col join condition: "+jExp} );
					sJoin = new SapJoin();
					opr = getOperator(jExp);
					String [] jTabs = jExp.split(opr);//split join cond on the basis of operator
					
					String leftTable = jTabs[0].substring(0, jTabs[0].indexOf(".")).trim();
					String rightTable = jTabs[1].substring(0, jTabs[1].indexOf(".")).trim();
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() single col join - leftTable : " + leftTable} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() single col join - rightTable : " + rightTable} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() 11single col join - joinCxCounter : " + joinCxCounter} );
					Iterator srcTabItr = getSrcTableIterator();
					SourceTable srcTable = null;
					while(srcTabItr.hasNext()) {
						srcTable = new SourceTable();
						srcTable = (SourceTable)srcTabItr.next();
						
						if(leftTable.equalsIgnoreCase(srcTable.getAliasName())) {
							//sJoin.leftResName = srcTable.resourceName;
							sJoin.setLeftResName(srcTable.getResourceName());
							//sJoin.leftPopTabAlias = leftTable;
							sJoin.setLeftPopTabAlias(leftTable);
							//break;
						}else if(leftTable.equalsIgnoreCase(srcTable.getResourceName())) {
							//sJoin.leftPopTabAlias = srcTable.aliasName;
							sJoin.setLeftPopTabAlias(srcTable.getAliasName());
							//sJoin.leftResName = leftTable;
							sJoin.setLeftResName(leftTable);
							//break;
						}
						if(rightTable.equalsIgnoreCase(srcTable.getAliasName())) {
							//sJoin.rightResName = srcTable.resourceName;
							sJoin.setRightResName(srcTable.getResourceName());
							//sJoin.rightPopTabAlias = rightTable;
							sJoin.setRightPopTabAlias(rightTable);
							//break;
						}else if(rightTable.equalsIgnoreCase(srcTable.getResourceName())) {
							//sJoin.rightPopTabAlias = srcTable.aliasName;
							sJoin.setRightPopTabAlias(srcTable.getAliasName());
							//sJoin.rightResName = rightTable;
							sJoin.setRightResName(rightTable);
							//break;
						}
					}//end of while(srcTabItr.hasNext())
					//sJoin.leftColName = jTabs[0].substring(jTabs[0].indexOf(".")+1, jTabs[0].length()).trim();//taking right part from dot
					sJoin.setLeftColName(jTabs[0].substring(jTabs[0].indexOf(".")+1, jTabs[0].length()).trim());
					//sJoin.rightColName = jTabs[1].substring(jTabs[1].indexOf(".")+1, jTabs[1].length()).trim();//taking right part from dot
					sJoin.setRightColName(jTabs[1].substring(jTabs[1].indexOf(".")+1, jTabs[1].length()).trim());
					/*Check whether DX for same column is already generated
					* for left side join column, if yes, use existing one
					*/
					if((tempJoinList.contains(sJoin.getLeftPopTabAlias()+"~"+sJoin.getLeftColName()))) {
						Iterator itr = newJoinList.iterator();
						SapJoin existingSapJoin = null;
						while(itr.hasNext()) {
							existingSapJoin = new SapJoin();
							existingSapJoin = (SapJoin)itr.next();
							if(existingSapJoin.getLeftPopTabAlias().equalsIgnoreCase(sJoin.getLeftPopTabAlias()) && existingSapJoin.getLeftColName().equalsIgnoreCase(sJoin.getLeftColName())) {
								//sJoin.leftCxColName = existingSapJoin.leftCxColName;
								sJoin.setLeftCxColName(existingSapJoin.getLeftCxColName());
								//joinCxCounter--;
								sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"joinCxCounter: " + joinCxCounter} );
							}
							if(existingSapJoin.getRightPopTabAlias().equalsIgnoreCase(sJoin.getLeftPopTabAlias()) && existingSapJoin.getRightColName().equalsIgnoreCase(sJoin.getLeftColName())) {
								//sJoin.leftCxColName = existingSapJoin.rightCxColName;
								sJoin.setLeftCxColName(existingSapJoin.getRightCxColName());
								//joinCxCounter--;
								sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"joinCxCounter: " + joinCxCounter} );
							}
						}
					}else {
						//sJoin.leftCxColName = "D"+joinCxCounter+"_"+jTabs[0].substring(jTabs[0].indexOf(".")+1, jTabs[0].length()).trim();
						sJoin.setLeftCxColName("D"+joinCxCounter+"_"+jTabs[0].substring(jTabs[0].indexOf(".")+1, jTabs[0].length()).trim());
						joinCxCounter++;
					}
					/*Check whether DX for same column is already generated
					* for right side join column, if yes, use existing one
					*/
					if((tempJoinList.contains(sJoin.getRightPopTabAlias()+"~"+sJoin.getRightColName()))) {	
						Iterator itr = newJoinList.iterator();
						SapJoin existingSapJoin = null;
						while(itr.hasNext()) {
							existingSapJoin = new SapJoin();
							existingSapJoin = (SapJoin)itr.next();
							if(existingSapJoin.getRightPopTabAlias().equalsIgnoreCase(sJoin.getRightPopTabAlias()) && existingSapJoin.getRightColName().equalsIgnoreCase(sJoin.getRightColName())) {
								//sJoin.rightCxColName = existingSapJoin.rightCxColName;
								sJoin.setRightCxColName(existingSapJoin.getRightCxColName());
								//joinCxCounter--;
								//sapLogger.log(sapLogger.INFO, "33333333333 joinCxCounter: " + joinCxCounter);
							}
							if(existingSapJoin.getLeftPopTabAlias().equalsIgnoreCase(sJoin.getRightPopTabAlias()) && existingSapJoin.getLeftColName().equalsIgnoreCase(sJoin.getRightColName())) {
								//sJoin.rightCxColName = existingSapJoin.leftCxColName;
								sJoin.setRightCxColName(existingSapJoin.getLeftCxColName());
								//joinCxCounter--;
								//sapLogger.log(sapLogger.INFO, "44444444444 joinCxCounter: " + joinCxCounter);
							}
						}//end of while loop
					}else {
						//sJoin.rightCxColName = "D"+joinCxCounter+"_"+jTabs[1].substring(jTabs[1].indexOf(".")+1, jTabs[1].length()).trim();
						sJoin.setRightCxColName("D"+joinCxCounter+"_"+jTabs[1].substring(jTabs[1].indexOf(".")+1, jTabs[1].length()).trim());
						joinCxCounter++;
					}
					tempJoinList.add(sJoin.getLeftPopTabAlias()+"~"+sJoin.getLeftColName());//MARA~MATNR
					tempJoinList.add(sJoin.getRightPopTabAlias()+"~"+sJoin.getRightColName());//MARC~MATNR
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"--------------------------------------------------------------------------------"} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Single Join - sJoin.getLeftResName(): " + sJoin.getLeftResName()} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Single Join - sJoin.getLeftPopTabAlias(): " + sJoin.getLeftPopTabAlias()} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Single Join - sJoin.getLeftColName(): " + sJoin.getLeftColName()} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Single Join - sJoin.getLeftCxColName(): " + sJoin.getLeftCxColName()} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Single Join - sJoin.getRightResName(): " + sJoin.getRightResName()} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Single Join - sJoin.getRightPopTabAlias(): " + sJoin.getRightPopTabAlias()} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Single Join - sJoin.getRightColName(): " + sJoin.getRightColName()} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"parseRawJoinsExpr() - Single Join - sJoin.getRightCxColName(): " + sJoin.getRightCxColName()} );
					sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"--------------------------------------------------------------------------------"} );
					newJoinList.add(sJoin);//Adding final object to join col list
					sJoin = null;
				}
			}else {
				//sapLogger.log(sapLogger.INFO, "Single table adding : ");
				sJoin = new SapJoin();
				//sJoin.leftResName = ((SapTable)sSrcTables.get(0)).getAlias();
				sJoin.setLeftPopTabAlias(((SapTable)sSrcTables.get(0)).getAlias());
				//sJoin.leftResName = ((SapTable)sSrcTables.get(0)).getName();
				sJoin.setLeftResName(((SapTable)sSrcTables.get(0)).getName());
				newJoinList.add(sJoin);
				sJoin = null;
			}
			//joinCxCounter++;
		}//end of outer loop
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[]{"--------------------- OdiSapRef.parseRawJoinsExpr() -------------------"} );
		return newJoinList;
	}//END of parseRawJoinsExpr method.
	
	
	/**
	* This method return number of Join column
	* in the current ODI interface
	* @return integer representing number of unique joins
	*/
	public int getNumberOfJoins() {
		ArrayList joinList = sJoinsExpr;
		HashSet uniqJoinList = new HashSet();
		Iterator jItr = joinList.iterator();
		SapJoin sJoin = new SapJoin();
		while(jItr.hasNext()) {
			sJoin = (SapJoin)jItr.next();
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getNumberOfJoins() sJoin.conditions------> : " + sJoin.getConditions()} );
			//	sapLogger.log(sapLogger.INFO, "OdiSapRef.getNumberOfJoins() sJoin.conditions------> : " + sJoin.getConditions());
			
			ArrayList jCond = sJoin.getConditions();
			Iterator tJoinItr = jCond.iterator();
			while(tJoinItr.hasNext()) {
				String cond = (String)tJoinItr.next();
				if(cond.contains(""+(char)91) || cond.contains(""+(char)93))
					cond = cond.replace(""+(char)91, "").replace(""+(char)93, "");//replace left & right big bracket
				if(cond.contains(""+(char)40) || cond.contains(""+(char)41))
					cond = cond.replace(""+(char)40, "").replace(""+(char)41, "");//replace left & right small bracket
				if(cond.indexOf(",") != -1) {//if more than one Join condition between two tables
					String []str = cond.split(",");//MARC~MATNR=MARD~MATNR), MARC~WERKS=MARD~WERKS
					for(int i = 0; i<str.length; i++) {
						String []mSplit = str[i].split("=");
						uniqJoinList.add(mSplit[0].trim());
						uniqJoinList.add(mSplit[1].trim());
					}
				}else {//else single join condition
					String []sSplit =  cond.split("=");//MARA~MATNR=MARC~MATNR
					uniqJoinList.add(sSplit[0].trim());
					uniqJoinList.add(sSplit[1].trim());
				}
				
			}//end of while(tJoinItr.hasNext())
			jCond = null;
			sJoin = null;
		}//end of while(jItr.hasNext())
		jItr = null;
		joinList = null;
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {"OdiSapRef.getNumberOfJoins() - uniqJoinList.size(): " + uniqJoinList.size()} );
		
		return uniqJoinList.size();
	}//end of getNumberOfJoins() method
	
	
	/**
	* This method parse attributes i.e [xxx] Strings
	* @param String
	* @return String
	*/
	protected String parseAttributes(String s) {
		StringBuffer cb  = new StringBuffer() ;
		int pos ;
		int i = 0;
		while (( pos = s.indexOf("[", i)) != -1){
			if (i != pos) {
				cb.append(s.substring(i, pos ));
			}	  	
			int pos2 = s.indexOf("]", pos + 1);
			if (pos2 != -1) {
				String t = s.substring(pos + 1, pos2) ;
				cb.append(t);
				i = pos2 + 1 ;
			}else{
				i = pos ;
			}
		}
		if (i != s.length()) {
			cb.append(s.substring(i, s.length())) ;
		}
		return cb.toString();
	}//end of parseAttributes method 
	
	
	/**
	* Returns Operator for filter condition which is
	* supported by SAP ERP system
	* @param Exp - operator used by user in ODI interface
	* @return String as compiled operator for SAP ABAP
	*/
	private String getOperator(String Exp) {
		String opr = "";
		//System.out.println(Exp.indexOf('>'));
		if(Exp.indexOf((char)60+""+(char)62)!= -1){// <> (Not Equal)
			opr = ""+(char)60+""+(char)62;
			return opr;
		}else if(Exp.indexOf((char)62+""+(char)61)!= -1){// >= (Greater than or Equal)
			opr = ""+(char)62+""+(char)61;
			return opr;
		}else if(Exp.indexOf((char)60+""+(char)61)!= -1){// <= (Less than or Equal)
			opr = ""+(char)60+""+(char)61;
			return opr;
		}else if(Exp.indexOf((char)62)!= -1){// > (Greater than)
			opr = ""+(char)62;
			return opr;
		}else if(Exp.indexOf((char)60)!= -1){// < (Less than)
			opr = ""+(char)60;
			return opr;
		}else if(Exp.indexOf((char)33+""+(char)61)!= -1){// != (Not Equal)
			opr = ""+(char)60+""+(char)62; //!= Changed to <> for SAP ERP
			return opr;
		}
		opr = ""+(char)61; // = (equal)
		return opr;
	} //end of getOperator() method
	
	
	}// End of OdiSapRef class

import java.util.Iterator;
import java.util.Stack;

class ReverseIterator implements Iterator {

	Stack stack;

	public ReverseIterator(Iterator iterator) {
		stack = new Stack();
		while (iterator.hasNext()) {
			stack.push(iterator.next());
		}
	}

	public boolean hasNext() {
		return !stack.isEmpty();
	}

	public Object next() {
		return stack.pop();
	}

	public void remove() {
		stack.pop();
	}
}// end of class - ReverseIterator


/**
 * 
 * @author Oracle
 *
 */
public class MissingMetadataException extends Exception {

	public MissingMetadataException(String msg) {
		super(msg);
	}

}// end of MissingMetadataException class

//////////////////////////////////////////////////////////////////////////////
// (c) Copyright 2008, Oracle	         		                            //
// ALL RIGHTS RESERVED.                                                     //
// This UNPUBLISHED PROPRIETARY software is  subject to the full copyright //
// notice in the COPYRIGHT file in this directory.                        //
///////////////////////////////////////////////////////////////////////////

/**
 * @(#)SapTableDetail.java  1.00 04/10/2009
 *
 * Application : ODI SAP Knowledge Modules
 *
 * Module      : ABAP Program genaration api
 *
 * Author(s)   : Oracle,
 *
 * About       :
 *
 * Dependencies: JDK 1.4.2 API (with standard extensions),
 *
 *
 * Update History (Please make entries here in case you make a change.)
 * ____________________________________________________________________
 * Date       Author                       Comments about the change
 * ____________________________________________________________________
 *
 *
 **/

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class SapTableDetail {

	private OdiSapLogger sapLogger = null;
	private OdiInterfaceMetadataHelper iHelper = null;
	private OdiSapRef odiSAPRef = null;
	private static SapTableDetail instance = null;

	private String curTableName = "";
	private String prevTableName = "";

	private ArrayList sMappedCols = null;
	private ArrayList sSAPTablesInfoList = null;
	// list of all filter strings
	private ArrayList sFiltersExpr = null;
	// list of all joins conditions -- list of SapJoin objects.
	private ArrayList sJoinsExpr = null;
	// from expression of the interface design
	private String sFromExpr = null;
	// Join Col HashMap for comparison purposes with mapped col
	private HashMap jColList = null;

	public int Counter = 1;
	private oracle.odi.sap.km.CommonResourceBundle odiSapErpResourceBundle = null;

	/**
	 * NewLine char "\n" i.e. (char)10 gets changed to (char)92 and (char)110
	 * i.e. character 'n' by the Java bean shell Put an extra "\" to escape "\"
	 */
	final String bsNewLine = "" + (char) 92 + (char) 92 + (char) 110;// \\n

	/**
	 * Note: only "\n" i.e. (char)10 doesn't work. To over sure put '\r' i.e.
	 * (char)13
	 */
	final String jvNewLine = "" + (char) 13 + (char) 10;// \r\n

	
	public SapTableDetail(OdiInterfaceMetadataHelper iHelper, OdiSapLogger sapLogger, OdiSapRef odiSAPRef, oracle.odi.sap.km.CommonResourceBundle odiSapErpResourceBundle) {
		this.iHelper = iHelper;
		this.sapLogger = sapLogger;
		this.odiSAPRef = odiSAPRef;
		this.odiSapErpResourceBundle = odiSapErpResourceBundle;

		initializeMetaData();
	}

	/**
	 * 
	 * @param iHelper
	 * @param sapLogger
	 * @param odiSAPRef
	 * @param odiSapErpResourceBundle
	 * @return
	 */
	/*public static SapTableDetail getInstance(OdiInterfaceMetadataHelper iHelper, OdiSapLogger sapLogger, OdiSapRef odiSAPRef, oracle.odi.sap.km.CommonResourceBundle odiSapErpResourceBundle) {				
		if(instance == null) {
			instance = new SapTableDetail(iHelper,sapLogger,odiSAPRef, odiSapErpResourceBundle);// Added for Singleton
		}
		return instance;
	}*/

	private void initializeMetaData() {

		if(iHelper.sSAPMappedCols != null) {
			//sMappedCols = odiSAPRef.parseRawMappedCols(iHelper.sSAPMappedCols);
			sMappedCols = odiSAPRef.sMappedCols;
		}
		// Initialize filters list as passed from ODI
		sFiltersExpr = iHelper.sSAPFilters;

		if (iHelper.sSAPJoins != null) {
			// sJoinsExpr = odiSAPRef.parseRawJoinsExpr(iHelper.sSAPJoins);
			sJoinsExpr = odiSAPRef.sJoinsExpr;
			// Taking join column list for comparison purpose with mapped column
			jColList = odiSAPRef.joinColList;
		}
		// Initialize from expression
		this.sFromExpr = iHelper.sFromExpr;
	}

	/**
	 * Returns a string with 2*n blanks, where n is the number of the source
	 * table in the current interface
	 * 
	 * @tableOrder - order of table in an interface
	 */
	public String indent() {
		Iterator tableItr = odiSAPRef.getSrcTableIterator();
		StringBuffer space = new StringBuffer();
		space.append("  ");
		SourceTable sourceTab = null;
		while (tableItr.hasNext()) {
			sourceTab = new SourceTable();
			sourceTab = (SourceTable) tableItr.next();
			if (((sourceTab.getAliasName()).trim()).equalsIgnoreCase(getCurTableName())) {
				for (int i = 0; i < new Integer(sourceTab.getTableOrderNo()).intValue(); i++) {
					space.append(" ");
				}
			}
		}
		return space.toString();
	}// end of method indent()

	/**
	 * Get the current Table Name
	 * 
	 * @return
	 */
	public String getCurTableName() {
		return curTableName;
	}

	/**
	 * Set the current Table Name
	 * 
	 * @param curTableName
	 */
	public void setCurTableName(String curTableName) {
		this.curTableName = curTableName;
	}

	/**
	 * Get the previous Table Name
	 * 
	 * @return
	 */
	public String getPrevTableName() {
		return prevTableName;
	}

	/**
	 * Set the previous table name
	 * 
	 * @param prevTableName
	 */
	public void setPrevTableName(String prevTableName) {
		this.prevTableName = prevTableName;
	}

	/**
	 * This method returns order number of the current table
	 * 
	 * @return String as table order number
	 */
	public String getTableOrder() {

		String tableOrder = "0";
		Iterator tableItr = odiSAPRef.getSrcTableIterator();
		SourceTable sourceTab = null;
		while (tableItr.hasNext()) {
			sourceTab = new SourceTable();
			sourceTab = (SourceTable) tableItr.next();
			if (((sourceTab.getAliasName()).trim()).equalsIgnoreCase(getCurTableName()))
				tableOrder = sourceTab.getTableOrderNo();
		} // end of while(tableItr.hasNext())
		return tableOrder;
	}// end of method getTableOrder()

	/**
	 * This method checks whether the current table is the last table in the
	 * table list
	 * 
	 * @return boolean
	 */
	public boolean isLastTable() {

		boolean flag = false;
		if (getCurTableName().equalsIgnoreCase(odiSAPRef.getLastTable())) {
			flag = true;
		}
		return flag;
	}// end of method - isLastTable()

	/**
	 * This method checks whether the current table is first table in the table
	 * list
	 * 
	 * @return boolean
	 */
	public boolean isFirstTable() {
		boolean flag = false;
		Iterator tableItr = odiSAPRef.getSrcTableIterator();
		SourceTable sourceTab = null;
		while (tableItr.hasNext()) {
			sourceTab = new SourceTable();
			sourceTab = (SourceTable) tableItr.next();
			if (sourceTab.getAliasName().trim().equalsIgnoreCase(getCurTableName())) {
				if (sourceTab.getTableOrderNo().trim().equalsIgnoreCase("1"))
					flag = true;
			}
		} // end of while
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "aSapTableDetail.isFirstTable() - flag: " + flag });
		return flag;
	}// end of isFirstTable() method

	/**
	 * This method returns Table name,Descriptive table name,Table Alias
	 * 
	 * @pPattern selected tables pattern string
	 */
	public String getInfo(String pPattern) {
		// returns the property of current source sap tables
		// TABLE_NAME => returns (descriptive) name of source table
		// RES_NAME => returns resource name of source table (this corresponds
		// to the SAP table name)
		// POP_TAB_ALIAS => returns the alias of source table in interface
		String resName = "";
		if (sSAPTablesInfoList != null || sSAPTablesInfoList.size() != 0) {

			Iterator tableInfoItr = sSAPTablesInfoList.iterator();
			SapTableInfo sTableInfo = null;
			while (tableInfoItr.hasNext()) {
				sTableInfo = new SapTableInfo();
				sTableInfo = (SapTableInfo) tableInfoItr.next();
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {
						"SapTableDetail.getInfo() -- sTableInfo.getResourseName(): " + sTableInfo.getResourseName() });
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] {
						"SapTableDetail.getInfo() -- sTableInfo.getPopTabAlias(): " + sTableInfo.getPopTabAlias() });
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
						new Object[] { "SapTableDetail.getInfo() -- getCurTableName(): " + getCurTableName() });
				if ((sTableInfo.getPopTabAlias().trim()).equalsIgnoreCase(getCurTableName())) {
					if (pPattern.equalsIgnoreCase("POP_TAB_ALIAS")) {
						resName = sTableInfo.getPopTabAlias().trim();
					} else if (pPattern.equalsIgnoreCase("RES_NAME")) {
						resName = sTableInfo.getResourseName().trim();
					} else if (pPattern.equalsIgnoreCase("TABLE_NAME")) {
						resName = sTableInfo.getTableName().trim();
					}else if (pPattern.equalsIgnoreCase("SORT_COLUMNS")) {
						resName =tableKey;
					}
					break;
				}
			} // end of while(tableInfoItr.hasNext())
		} // end of outer if condition
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "SapTableDetail.getInfo(" + pPattern + "): " + resName });
		return resName;
	}// end getInfo() method

	/**
	 * 
	 * @param pPattern
	 */
	public void setInfo(String pPattern) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "SapTableDetail.setTableInfo() -- Selected tables pattern :" + pPattern });
		// String tableInfo = odiRef.getSrcTablesList("",
		// "[TABLE_NAME]#[RES_NAME]#[POP_TAB_ALIAS]", "~~", "");
		sSAPTablesInfoList = new ArrayList();
		// sets property of all source sap tables
		// TABLE_NAME => returns (descriptive) name of source table
		// RES_NAME => returns resource name of source table (this corresponds
		// to the SAP table name)
		// POP_TAB_ALIAS => returns the alias of source table in interface
		if (pPattern != "") {
			StringTokenizer sTabsTokens = new StringTokenizer(pPattern, "~~");
			String tabExpr = null;
			SapTableInfo sTableInfo = null;
			while (sTabsTokens.hasMoreTokens()) {
				sTableInfo = new SapTableInfo();
				tabExpr = sTabsTokens.nextToken();
				String[] tabProps = tabExpr.split("#");
				String[] resource_name = tabProps[1].trim().split(",");
				String tableName = resource_name[1].replaceAll("" + (char) 34, "");
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
						new Object[] { "SapTableDetail.SetInfo.tableName<<<<<>>>>>>>" + tableName });
				// sTableInfo = new
				// SapTableInfo(tabProps[0].trim(),tableName.trim(),tabProps[2].trim());
				sTableInfo.setTableName(tabProps[0].trim());
				sTableInfo.setResourceName(tableName.trim());
				sTableInfo.setPopTabAlias(tabProps[2].trim());
				sSAPTablesInfoList.add(sTableInfo);
			}
		}
	}// end of setTableInfo() method

	/**
	 * This method returns the mapped and join column list as per pattern
	 * provided
	 * 
	 * @param pStart
	 * @param pPattern
	 * @param pSeparator
	 * @param pEnd
	 * @param pSelector
	 * @return String representing list of columns
	 */
	public String getColList(String pStart, String pPattern, String pSeparator, String pEnd, String pSelector) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "++++++++++++ SapTableDetail.getColList() Called +++++++++++++" });

		// First append the start string to the buffer
		StringBuffer strExp = new StringBuffer();

		pStart = pStart.replaceAll(bsNewLine, jvNewLine);
		pPattern = pPattern.replaceAll(bsNewLine, jvNewLine);
		pSeparator = pSeparator.replaceAll(bsNewLine, jvNewLine);
		pEnd = pEnd.replaceAll(bsNewLine, jvNewLine);
		if (pStart != "")
			strExp.append(pStart);

		if (pPattern.trim().length() == 0)
			return "";// No pattern defined

		// The expressions we require for SAP ABAP program generation are
		// [CX_COLUMN_NAME] TYPE [RES_NAME]-[COL_NAME] == for internal structure
		// [RES_NAME]~[COL_NAME] == for select statement
		// <internal table name>-[COL_NAME] == for output to file
		// for all the mapped columns replace the pPattern passed
		// with [xxx] appropriate parameters and use pSeperator to
		// separate each of the expression generated for the mapped
		// columns
		String p = "";
		ArrayList mapJoinColList = new ArrayList();
		ArrayList uniqueColList = new ArrayList();
		// duplicate field added with new datatype and have exact same data
		// length
		String duplicateField = "";
		if (sMappedCols != null) {
			// ****** Taking Join Columns *********
			if ((odiSAPRef.sSrcTables.size() > 1) && ((pSelector.contains("MAPPED_OR_JOIN"))
					|| (pSelector.contains("CUR_MAPPED_OR_JOIN")) || (pSelector.contains("PREV_MAPPED_OR_JOIN"))
					|| (pSelector.contains("CALCULATED_JOIN_COLS")))) {
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
						new Object[] { "SapTableDetail.getColList() - sJoinsExpr.size : " + sJoinsExpr.size() });
				// taking column from join condition
				Iterator joinItr = sJoinsExpr.iterator();
				SapJoin sapJoin = null;
				while (joinItr.hasNext()) {
					sapJoin = new SapJoin();
					sapJoin = (SapJoin) joinItr.next();
					// ****** Start of taking current table's join column
					// ************
					if (pSelector.contains("CUR_MAPPED_OR_JOIN")) {
						if (sapJoin.getLeftPopTabAlias().equalsIgnoreCase(getCurTableName())) {
							if (!uniqueColList
									.contains(sapJoin.getLeftPopTabAlias() + "~" + sapJoin.getLeftColName())) {
								// Adding join resource Name and column name to
								// check uniqueness for mapped & join
								// combination column
								uniqueColList.add(sapJoin.getLeftPopTabAlias() + "~" + sapJoin.getLeftColName());
								duplicateField = sapJoin.getLeftCxColName();
								// Prepare list of unique join list
								mapJoinColList.add(sapJoin.getLeftResName() + "~" + sapJoin.getLeftPopTabAlias() + "~"
										+ sapJoin.getLeftColName() + "~" + sapJoin.getLeftCxColName());
							}
						}
						if (sapJoin.getRightPopTabAlias().equalsIgnoreCase(getCurTableName())) {
							if (!uniqueColList
									.contains(sapJoin.getRightPopTabAlias() + "~" + sapJoin.getRightColName())) {
								// Adding join resource Name and column name to
								// check uniqueness for mapped & join
								// combination column
								uniqueColList.add(sapJoin.getRightPopTabAlias() + "~" + sapJoin.getRightColName());
								// Prepare list of unique join list
								mapJoinColList.add(sapJoin.getRightResName() + "~" + sapJoin.getRightPopTabAlias() + "~"
										+ sapJoin.getRightColName() + "~" + sapJoin.getRightCxColName());
							}
						} // end of
						// if(sapJoin.leftResName.equalsIgnoreCase(curTableName)
					} // if(pSelector.contains("CUR_MAPPED_OR_JOIN"))
					// ****** End of taking current table's join column
					// ************

					// ****** Start of taking previous table's join column
					// ************
					else if (pSelector.contains("PREV_MAPPED_OR_JOIN")) {
						if (sapJoin.getLeftPopTabAlias().equalsIgnoreCase(getPrevTableName())) {
							if (!uniqueColList
									.contains(sapJoin.getLeftPopTabAlias() + "~" + sapJoin.getLeftColName())) {
								// Adding join resource Name and column name to
								// check uniqueness for mapped & join
								// combination column
								uniqueColList.add(sapJoin.getLeftPopTabAlias() + "~" + sapJoin.getLeftColName());
								duplicateField = sapJoin.getLeftCxColName();
								// Prepare list of unique join list
								mapJoinColList.add(sapJoin.getLeftResName() + "~" + sapJoin.getLeftPopTabAlias() + "~"
										+ sapJoin.getLeftColName() + "~" + sapJoin.getLeftCxColName());
							}
						}
						if (sapJoin.getRightPopTabAlias().equalsIgnoreCase(getPrevTableName())) {
							if (!uniqueColList
									.contains(sapJoin.getRightPopTabAlias() + "~" + sapJoin.getRightColName())) {
								// Adding join resource Name and column name to
								// check uniqueness for mapped & join
								// combination column
								uniqueColList.add(sapJoin.getRightPopTabAlias() + "~" + sapJoin.getRightColName());
								// Prepare list of unique join list
								mapJoinColList.add(sapJoin.getRightResName() + "~" + sapJoin.getRightPopTabAlias() + "~"
										+ sapJoin.getRightColName() + "~" + sapJoin.getRightCxColName());
							}
						} // end of
						// if(sapJoin.leftResName.equalsIgnoreCase(curTableName)
					} // end of else
					// if(pSelector.contains("PREV_MAPPED_OR_JOIN"))

					// Support for Calculated Join, "CALCULATED_JOIN_COLS" an
					// extra identifier added in Extract Data Step
					else if (pSelector.contains("CALCULATED_JOIN_COLS")) {
						if (sapJoin.getLeftPopTabAlias().equalsIgnoreCase(getPrevTableName())) {
							if (!uniqueColList
									.contains(sapJoin.getLeftPopTabAlias() + "~" + sapJoin.getLeftColName())) {
								// Adding join resource Name and column name to
								// check uniqueness for mapped & join
								// combination column
								uniqueColList.add(sapJoin.getLeftPopTabAlias() + "~" + sapJoin.getLeftColName());
								duplicateField = sapJoin.getLeftCxColName();
								// Prepare list of unique join list
								// mapJoinColList.add(sapJoin.getLeftResName()+"~"+sapJoin.getLeftPopTabAlias()+"~"+sapJoin.getLeftColName()+"~"+sapJoin.getLeftCxColName()+"+"+iHelper.getStartOffset()+iHelper.getEndOffset());
								mapJoinColList.add(sapJoin.getLeftResName() + "~" + sapJoin.getLeftPopTabAlias() + "~"
										+ sapJoin.getLeftColName() + "~" + sapJoin.getLeftCxColName());
							}
						}
						if (sapJoin.getRightPopTabAlias().equalsIgnoreCase(getPrevTableName())) {
							if (!uniqueColList
									.contains(sapJoin.getRightPopTabAlias() + "~" + sapJoin.getRightColName())) {
								// Adding join resource Name and column name to
								// check uniqueness for mapped & join
								// combination column
								uniqueColList.add(sapJoin.getRightPopTabAlias() + "~" + sapJoin.getRightColName());
								// Prepare list of unique join list
								mapJoinColList.add(sapJoin.getRightResName() + "~" + sapJoin.getRightPopTabAlias() + "~"
										+ sapJoin.getRightColName() + "~" + sapJoin.getRightCxColName());
							}
						}
					}

					// ****** End of taking previous table's join column ************
					else { // if there pSelector is not provided, take join column of current table
						if (sapJoin.getLeftPopTabAlias().equalsIgnoreCase(getCurTableName())) {
							if (!uniqueColList
									.contains(sapJoin.getLeftPopTabAlias() + "~" + sapJoin.getLeftColName())) {
								// Adding join resource Name and column name to
								// check uniqueness for mapped & join
								// combination column
								uniqueColList.add(sapJoin.getLeftPopTabAlias() + "~" + sapJoin.getLeftColName());
								duplicateField = sapJoin.getLeftCxColName();
								// Prepare list of unique join list
								mapJoinColList.add(sapJoin.getLeftResName() + "~" + sapJoin.getLeftPopTabAlias() + "~"
										+ sapJoin.getLeftColName() + "~" + sapJoin.getLeftCxColName());
							}
						}
						if (sapJoin.getRightPopTabAlias().equalsIgnoreCase(getCurTableName())) {
							if (!uniqueColList
									.contains(sapJoin.getRightPopTabAlias() + "~" + sapJoin.getRightColName())) {
								// Adding join resource Name and column name to
								// check uniqueness for mapped & join
								// combination column
								uniqueColList.add(sapJoin.getRightPopTabAlias() + "~" + sapJoin.getRightColName());
								// Prepare list of unique join list
								mapJoinColList.add(sapJoin.getRightResName() + "~" + sapJoin.getRightPopTabAlias() + "~"
										+ sapJoin.getRightColName() + "~" + sapJoin.getRightCxColName());
							}
						} // end of
						// if(sapJoin.leftResName.equalsIgnoreCase(curTableName)
					}
					sapJoin = null;
				} // end of while(joinItr.hasNext())
			} // end of if(sSrcTables.size() > 1 &&
			// pPattern.contains("JOIN_COL_NAME"))
			// ******Taking mapped columns ********/
			Iterator mapColItr = sMappedCols.iterator();
			SapMappedField sapMappedCol = new SapMappedField();
			while (mapColItr.hasNext()) {
				sapMappedCol = (SapMappedField) mapColItr.next();
				// ******** Start of taking mapped column from current table
				// ****************
				if (pSelector.contains("CUR_MAPPED_OR_JOIN")) {
					if (sapMappedCol.getPopTabAlias().trim().equalsIgnoreCase(getCurTableName())) {
						if (!uniqueColList.contains(
								sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim())) {
							uniqueColList
							.add(sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim());
							String cxColName = sapMappedCol.getCxColName().trim();
							if (jColList.containsKey(
									sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim())) {
								String joinColDetail = (String) jColList.get(
										sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim());
								String[] jSplit = joinColDetail.split("~");
								
								/* jSplit[0] = ResName
								*jSplit[1] = PopTabAliasName
								*jSplit[2] = ColName
								*jSplit[3] = CxColName
								*/
								cxColName = jSplit[3].trim();
							}
							mapJoinColList.add(sapMappedCol.getResName() + "~" + sapMappedCol.getPopTabAlias() + "~"
									+ sapMappedCol.getColName() + "~" + cxColName);
						}
					}
				} // end of if(pSelector.contains("CUR_MAPPED_OR_JOIN"))
				// ******** End of taking mapped column from current table
				// ****************

				// ******** Start of taking mapped column from previous table
				// ****************
				else if (pSelector.contains("PREV_MAPPED_OR_JOIN")) {
					if (sapMappedCol.getPopTabAlias().trim().equalsIgnoreCase(getPrevTableName())) {
						if (!uniqueColList.contains(
								sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim())) {
							uniqueColList
							.add(sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim());
							String cxColName = sapMappedCol.getCxColName().trim();
							if (jColList.containsKey(
									sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim())) {
								String joinColDetail = (String) jColList.get(
										sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim());
								String[] jSplit = joinColDetail.split("~");
								
								/* jSplit[0] = ResName
								*jSplit[1] = PopTabAliasName
								*jSplit[2] = ColName
								*jSplit[3] = CxColName
								*/
								cxColName = jSplit[3].trim();
							}
							mapJoinColList.add(sapMappedCol.getResName() + "~" + sapMappedCol.getPopTabAlias() + "~"
									+ sapMappedCol.getColName() + "~" + cxColName);
						}
					}
				} // end of else if(pSelector.contains("PREV_MAPPED_OR_JOIN"))

				else if (pSelector.contains("CALCULATED_JOIN_COLS")) {
					// No Operation required when calculated join is not on the
					// left side
				} // end of else if(pSelector.contains("PREV_MAPPED_OR_JOIN"))

				// ******** End of taking mapped column from previous table
				// ****************
				else {// if there is no pSelector, take current table column
					if (sapMappedCol.getPopTabAlias().trim().equalsIgnoreCase(getCurTableName())) {
						if (!uniqueColList.contains(
								sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim())) {
							uniqueColList
							.add(sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim());
							String cxColName = sapMappedCol.getCxColName().trim();
							if (jColList.containsKey(
									sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim())) {
								String joinColDetail = (String) jColList.get(
										sapMappedCol.getPopTabAlias().trim() + "~" + sapMappedCol.getColName().trim());
								String[] jSplit = joinColDetail.split("~");
								/*
								* jSplit[0] = ResName
								*jSplit[1] = PopTabAliasName
								*jSplit[2] = ColName
								*jSplit[3] = CxColName
								*/
								cxColName = jSplit[3].trim();
							}
							mapJoinColList.add(sapMappedCol.getResName() + "~" + sapMappedCol.getPopTabAlias() + "~"
									+ sapMappedCol.getColName() + "~" + cxColName);
						}
					}
				} // end of else
				sapMappedCol = null;
			} // end of while(mapColItr.hasNext())
			// ****** Create pattern *********
			String parsedPattern = odiSAPRef.parseAttributes(pPattern);

			Iterator pItr = mapJoinColList.iterator();
			String temp = "";
			while (pItr.hasNext()) {
				String[] tabMetadata = pItr.next().toString().split("~");
				/*
				 * tabMetadata[0] = RES_NAME tabMetadata[1] = POP_TAB_ALIAS
				 * tabMetadata[2] = COL_NAME tabMetadata[3] = CX_COLUMN_NAME
				 */

				/*
				 * [WA_LEFT_JOIN_EXPRESSION] and [EX_COLUMN_NAME]is the new
				 * expression, it will get replaced only in the case of
				 * calculated join.
				 */
				if (pPattern.contains("WA_LEFT_JOIN_EXPRESSION") || pPattern.contains("EX_COLUMN_NAME")) {
					Collection calculatedValues = iHelper.getCalculatedValueMap().values();
					List listCalcedCols = new ArrayList(calculatedValues);
					if (!calculatedValues.isEmpty()) {
						String tempParsedPattern = new String(parsedPattern);
						for (int j = 0; j < listCalcedCols.size(); j++) {
							if (pPattern.contains("WA_LEFT_JOIN_EXPRESSION")) {
								tempParsedPattern = tempParsedPattern.toString().replace("WA_LEFT_JOIN_EXPRESSION",
										"WA_" + tabMetadata[1] + "-" + tabMetadata[3] + listCalcedCols.get(j));
							}
							if (pPattern.contains("EX_COLUMN_NAME")) {
								if (duplicateFieldsList.isEmpty()) {
									tempParsedPattern = tempParsedPattern.toString().replace("EX_COLUMN_NAME",
											addDuplicateField(tabMetadata[3]));
								} else {
									tempParsedPattern = tempParsedPattern.toString().replace("EX_COLUMN_NAME",
											duplicateFieldsList.get(j));
								}
							}
							if ((j + 1) < calculatedValues.size()) {
								tempParsedPattern += "." + jvNewLine + parsedPattern;

							}
						}
						parsedPattern = tempParsedPattern.toString();
					}
				}

				// replace [RES_NAME] pattern
				p = parsedPattern.replaceAll("RES_NAME", tabMetadata[0]);

				// replace [POP_TAB_ALIAS] pattern
				p = p.replaceAll("POP_TAB_ALIAS", tabMetadata[1]);

				// replace [COL_NAME] from pattern
				p = p.replaceAll("COL_NAME", tabMetadata[2]);

				// replace [CX_COLUMN_NAME] from pattern
				p = p.replaceAll("CX_COLUMN_NAME", tabMetadata[3]);

				strExp.append(p);

				// Add separator at the end of each row
				if (pItr.hasNext())
					strExp.append(pSeparator);

			} // end of while(pItr.hasNext())
		} // end of if(sMappedCols != null)
		// append end character at the end of string
		strExp.append(pEnd);

		// To add duplicate column for supporting Calculated Join
		if ((iHelper.isDuplicateColumnAdded() == true)
				&& ((pPattern.contains("CX_COLUMN_NAME")) && (pSelector.equals("MAPPED_OR_JOIN")))) {
			Set dataTypes = iHelper.getCalculatedValueMap().keySet();
			if (!dataTypes.isEmpty()) {
				for (String dataType : dataTypes) {
					strExp.append(jvNewLine + addDuplicateField(duplicateField) + " TYPE");
					dataType = dataType.replace(".", "-");
					if (dataType.contains("~~")) {
						String[] temp = dataType.split("~~");
						dataType = temp[0];
					}

					strExp.append(jvNewLine + dataType + ",");
					iHelper.setDuplicateColumnAdded(false);
				}
			}
		}
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "SapTableDetail.getColList() - ABAP Syntax String : " + strExp.toString() });
		return strExp.toString();
	}// end of getColList(String pStart, String pPattern, String pSeparator,
	// String pEnd, String pSelector) method

	List duplicateFieldsList = new ArrayList();
	int duplicateFieldNumber;
	boolean isInitialize = false;
	String tableKey = null;

	/**
	 * It Changes the identifier D or C with the new character E
	 * 
	 * @param ss
	 */
	public String addDuplicateField(String tempString) {
		if (isInitialize == false) {
			duplicateFieldNumber = getDuplicateFieldNumber(tempString);
		}
		String tempTableKey = tempString;
		tempString = tempString.replaceFirst(tempString.substring(0, tempString.indexOf("_") - 1), "E");
		String oldValue = tempString.substring(0, tempString.indexOf("_"));
		if (duplicateFieldsList.isEmpty()) {
			String newValue = "E" + duplicateFieldNumber;
			tableKey = tempTableKey;

			tempString = tempString.replace(oldValue, newValue);
			duplicateFieldsList.add(tempString);
		} else {
			for (String string : duplicateFieldsList) {
				if (string.contains(tempString)) {
					duplicateFieldNumber = ++duplicateFieldNumber;
					String newValue = "E" + duplicateFieldNumber;
					tempString = tempString.replace(oldValue, newValue);
					duplicateFieldsList.add(tempString);
					break;
				} else {
					String newValue = "E" + duplicateFieldNumber;
					tempString = tempString.replace(oldValue, newValue);
					duplicateFieldsList.add(tempString);
				}
			}
		}
		return tempString;
	}

	/**
	 * This Method get the Duplicate Field Number for next Identifier.
	 * 
	 * @param tempString
	 * @return
	 */
	public int getDuplicateFieldNumber(String tempString) {
		String abc = tempString.substring(0, tempString.indexOf("_"));
		int score = Integer.parseInt(abc.trim().substring(1));
		isInitialize = true;
		return score;
	}

	/**
	 * This table returns the name of primary table in case of more than one
	 * table in the Interface
	 * 
	 * @return String representing primary table name
	 * @throws Exception
	 */
	public String getParentTable() throws Exception {
		String parentTable = "";
		ArrayList joinTableList = sJoinsExpr;
		Iterator joinItr = joinTableList.iterator();
		SapJoin sapJoin = new SapJoin();
		while (joinItr.hasNext()) {
			sapJoin = new SapJoin();
			sapJoin = (SapJoin) joinItr.next();
			// String primaryTable = sapJoin.primaryTable.trim();
			String primaryTable = sapJoin.getLeftPopTabAlias().trim();
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "primaryTable: " + primaryTable });
			String joinTable = sapJoin.getRightPopTabAlias().trim();
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "joinTable: " + joinTable });
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "curTableName: " + getCurTableName() });
			// ArrayList joinCond = sapJoin.conditions;
			if (getCurTableName().equalsIgnoreCase(joinTable)) {
				parentTable = primaryTable;
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "parentTable: " + parentTable });
			}
		} // end of while(joinItr.hasNext())
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "SapTableDetail.getParentTable(): " + parentTable });
		if (parentTable.equals("") || parentTable.equals(null)) {
			sapLogger.severe("ODIKM-SAPERP-LKM-10000", new Object[] { "parentTable is empty: " + parentTable });
			sapLogger.severe("ODIKM-SAPERP-LKM-10000",
					new Object[] { odiSapErpResourceBundle.getResourceString("SAP_LKM_ERP_Join_Condition_Error") });
			odiSAPRef.throwCodeGenException(
					odiSapErpResourceBundle.getResourceString("SAP_LKM_ERP_Join_Condition_Error"));
			
			
		}
		return parentTable;
	}// end of method getParentTable()

	/**
	 * This methods returns true, if condition is Left outer join
	 * 
	 * @return boolean
	 */
	public boolean isLeftOuterJoin() {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "+++++++++++++ SapTableDetail.isLeftOuterJoin +++++++++++++++++" });
		boolean flag = false;
		StringTokenizer tokenFromExp = new StringTokenizer(sFromExpr.replaceAll(" AS ", " AS ||"), "||");
		int x = 0;
		while (tokenFromExp.hasMoreTokens()) {
			String token = tokenFromExp.nextToken().trim();
			if (x != 0) {
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "isLeftOuterJoin - token: " + token });
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
						new Object[] { "isLeftOuterJoin - getPrevTableName(): " + getPrevTableName() });
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
						new Object[] { "isLeftOuterJoin - getCurTableName(): " + getCurTableName() + (char) 34 });
				if (token.indexOf(getCurTableName() + (char) 34) != -1) {
					if (token.indexOf("LEFT OUTER JOIN") != -1)
						flag = true;
				}
			} // end of if(x != 0)
			x++;
		} // end of while(tokenFromExp.hasMoreTokens())
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "isLeftOuterJoin - flag: " + flag });
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "-------------- SapTableDetail.isLeftOuterJoin -----------" });
		return flag;
	}// END of method isLeftOuterJoin()

	/**
	 * Retrieves SAP join column string
	 * 
	 * @param pStart
	 * @param pPattern
	 * @param pSeparator
	 * @param pEnd
	 * @param pSelector
	 * @return String representing join list
	 */
	public String getJoinList(String pStart, String pPattern, String pSeparator, String pEnd, String pSelector) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "+++++++++++++++ SapTableDetail.getJoinList() +++++++++++++++++++++++" });
		StringBuffer joinExp = new StringBuffer();
		if (sJoinsExpr == null)
			return "";

		pStart = pStart.replaceAll(bsNewLine, jvNewLine);
		pPattern = pPattern.replaceAll(bsNewLine, jvNewLine);
		pPattern = pPattern.replace("" + (char) 91, "").replace("" + (char) 93, "");
		pSeparator = pSeparator.replaceAll(bsNewLine, jvNewLine);
		pEnd = pEnd.replaceAll(bsNewLine, jvNewLine);
		if (pStart != "")
			joinExp.append(pStart);

		Iterator joinItr = sJoinsExpr.iterator();
		SapJoin sapJoin = null;
		String Opr = "";
		String p = "";
		int numOfJoinCol = 1;
		Collection calculatedValues = iHelper.getCalculatedValueMap().values();
		List calculatedValuesList = new ArrayList(calculatedValues);
		for (int i = 0; i < sJoinsExpr.size(); i++) {
			// while(joinItr.hasNext()) {
			sapJoin = new SapJoin();
			sapJoin = (SapJoin) joinItr.next();
			String pTable = sapJoin.getLeftPopTabAlias().trim();
			String jTable = sapJoin.getRightPopTabAlias().trim();
			if (pSelector.contains("PREV_JOIN")) {
				if ((pTable.equalsIgnoreCase(getPrevTableName())) && (jTable.equalsIgnoreCase(getCurTableName()))) {
					if (numOfJoinCol > 1)
						joinExp.append(pSeparator);

					p = pPattern.replaceAll("LEFT_RES_NAME", sapJoin.getLeftResName());
					p = p.replaceAll("LEFT_POP_TAB_ALIAS", sapJoin.getLeftPopTabAlias());
					p = p.replaceAll("LEFT_COL_NAME", sapJoin.getLeftColName());

					if (iHelper.isCalculatedJoinCase()) {
						if (duplicateFieldsList.isEmpty()) {
							p = p.replaceAll("LEFT_CX_COLUMN_NAME", addDuplicateField(sapJoin.getLeftCxColName()));
						} else {
							p = p.replaceAll("LEFT_CX_COLUMN_NAME", duplicateFieldsList.get(i));
						}
					} else {
						p = p.replaceAll("LEFT_CX_COLUMN_NAME", sapJoin.getLeftCxColName());
					}
					if (pSelector.equals("PREV_JOIN_COMPOSITE_KEY")) {
						if (!calculatedValuesList.isEmpty()) {
							String columnWithCalculatedValue = sapJoin.getLeftCxColName() + calculatedValuesList.get(i);
							p = p.replaceAll("LEFT_JOIN_EXPR", columnWithCalculatedValue);
						} else {
							p = p.replaceAll("LEFT_JOIN_EXPR", sapJoin.getLeftCxColName());
						}
					}
					p = p.replaceAll("RIGHT_RES_NAME", sapJoin.getRightResName());
					p = p.replaceAll("RIGHT_POP_TAB_ALIAS", sapJoin.getRightPopTabAlias());
					p = p.replaceAll("RIGHT_RES_NAME", sapJoin.getRightResName());
					p = p.replaceAll("RIGHT_COL_NAME", sapJoin.getRightColName());
					p = p.replaceAll("RIGHT_CX_COLUMN_NAME", sapJoin.getRightCxColName());
					joinExp.append(p);
					numOfJoinCol++;
				} // end of if((pTable.equalsIgnoreCase(prevTableName)) &&
				// (jTable.equalsIgnoreCase(curTableName)))

			} // end of if(pSelector.contains("PREV_JOIN"))
			// Get the values from the duplicate column created instead of the original one.
			sapJoin = null;
		} // end of while(joinItr.hasNext())
		joinExp.append(pEnd);
		iHelper.setCalculatedJoinCase(false);
		
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "SapTableDetail.getJoinList() - ABAP Syntax: " + joinExp.toString() });
		return joinExp.toString();
	}// end of String getJoinList() method

	/**
	 * This method returns all the filter conditions expression defined in the
	 * interface design for CURRENT table.
	 * 
	 * @return String - filter condition
	 */
	public String getFilter() {

		StringBuffer filtrExpSubStr = new StringBuffer();
		String bsNewLine = "" + (char) 10;// \n
		String tableName = "";
		if (sFiltersExpr != null) {

			Iterator filterItr = sFiltersExpr.iterator();
			int condCount = 0;
			int fieldFilterCount = 0;
			while (filterItr.hasNext()) {
				String filterStr = filterItr.next().toString().replaceAll(bsNewLine, " ").trim();
				// MARD.PSTAT = 'XYZ', MARA.ERNAM = 'XYZ' AND MARA.VPSTA = 'ABC', MARC.PSTAT = 'YYYY'
				
				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "filterStr------> : " + filterStr });
				if (filterStr.contains("#")) {
					filterStr = parseOdiFilter(filterStr);// replace single quote - added in  28_01 build
					filterStr = filterStr.replaceAll("#", "IV_");
				}
				Iterator itr = odiSAPRef.getSrcTableIterator();
				SourceTable srcTab;

				sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
						new Object[] { "SapTableDetail.getFilter() - Filter String: " + filterStr });
				if (filterStr.indexOf("" + (char) 40) != -1) {// if left bracket "(" is there in string
					tableName = filterStr.substring(filterStr.indexOf("" + (char) 40) + 1, filterStr.indexOf(".")).trim();// (char)40 is ASCII code of "("
				} else {
					tableName = filterStr.substring(0, filterStr.indexOf(".")).trim();
					// sapLogger.log(sapLogger.INFO, "Does not Contains Bracket - tableName: "+tableName);
				}
				if (getCurTableName().equalsIgnoreCase(tableName.trim())) {
					if (filterStr.indexOf(" AND ") != -1) {//FAGL_011QT-SPRAS = 'EN' AND FAGL_011QT-TXTYP = 'A' AND FAGL_011QT-ZEILE = '1'

						String[] fSplit = filterStr.split(" AND ");
						for (int j = 0; j < fSplit.length; j++) {
							if (j > 0 || fieldFilterCount > 0) {
								filtrExpSubStr.append("" + (char) 10);
								filtrExpSubStr.append(" AND ");
							}
							if (fSplit[j].indexOf(" OR ") != -1) {
								String[] ORSplit = fSplit[j].split(" OR ");
								for (int m = 0; m < ORSplit.length; m++) {
									if (m > 0) {
										filtrExpSubStr.append("" + (char) 10);
										filtrExpSubStr.append(" OR ");
									}
									if (ORSplit[m].indexOf("" + (char) 40) != -1) { // Left "(" is present in string
										
										filtrExpSubStr.append("" + (char) 40);
									}
								
									filtrExpSubStr.append(ORSplit[m].substring(ORSplit[m].indexOf(".") + 1, ORSplit[m].length()));
								}
							} else {
								if (fSplit[j].indexOf("" + (char) 40) != -1) {
									filtrExpSubStr.append("" + (char) 40);
								}
							
								filtrExpSubStr.append(fSplit[j].substring(fSplit[j].indexOf(".") + 1, fSplit[j].length()));
							}
						} // end of inner for loop
					} else {// end of -- if(filterExpr.indexOf("AND"))
						if (condCount > 0 || fieldFilterCount > 0) {
							filtrExpSubStr.append("" + (char) 10);
							filtrExpSubStr.append(" AND ");
						}
						if (filterStr.indexOf(" OR ") != -1) {
							String[] ORSplit = filterStr.split(" OR ");
							for (int m = 0; m < ORSplit.length; m++) {
								if (m > 0) {
									filtrExpSubStr.append("" + (char) 10);
									filtrExpSubStr.append(" OR ");
								}
								if (ORSplit[m].indexOf("" + (char) 40) != -1) {
									filtrExpSubStr.append("" + (char) 40);
								}
								filtrExpSubStr
								.append(ORSplit[m].substring(ORSplit[m].indexOf(".") + 1, ORSplit[m].length()));
							}
						} else {
							if (filterStr.indexOf("" + (char) 40) != -1) { 
								// left bracket is present  in string
								
								filtrExpSubStr.append("" + (char) 40);
							}
							filtrExpSubStr.append(filterStr.substring(filterStr.indexOf(".") + 1, filterStr.length()));
						}
						condCount++;
					} // end of else
					fieldFilterCount++;
				} // end of -- if(curTableName.equalsIgnoreCase(tableName))
			} // end of -- while(filterItr.hasNext())
		} // end of -- if(sFiltersExpr != null)
		// append the End character

		/*
		 * if(filtrExpSubStr.toString().length() != 0) filtrExpSubStr.append("."
		 * + ""+(char)10); else filtrExpSubStr.append("");
		 */
		String filterString = filtrExpSubStr.toString();
		if (filterString.length() != 0) {
			filterString = filterString.toString().replaceAll("" + (char) 92 + (char) 46, "" + (char) 95);
			sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
					new Object[] { "----curTableDetail.getFilter() - Interface Filters are: " + filterString });
			filterString += ("." + "" + (char) 10);
		} else {
			filterString += "";
		}
		if (filterString.indexOf("" + (char) 40) != -1) {
			filterString = filterString.replaceAll("\" + (char) 40, "\" + (char) 40 + " ");
			filterString = filterString.replaceAll("\" + (char) 41, " \" + (char) 41);
		}
		/**
		 * Temporary fix to replace != operator in <>. The getFilter() method
		 * need to be re-factored. Permanent fix will be provided in next build
		 */
		if (filterString.indexOf(" " + (char) 33 + "" + (char) 61 + " ") != -1)
			filterString = filterString.replace(" " + (char) 33 + "" + (char) 61 + " ",
					" " + (char) 60 + "" + (char) 62 + " ");

		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "----curTableDetail.getFilter() - Interface Filters are: " + filterString });

		return filterString;
	}// end of getFilter method.

	/**
	 * Return Number of Mapped Columns
	 * 
	 * @return
	 */
	public int getColumnSize() {
		if (sMappedCols != null)
			return sMappedCols.size();
		else
			return 0;
	}

	/**
	 * Returns parsed filter condition, if ODI variable and other filter
	 * condition combined in one filter condition Method is added to fix : Bug
	 * 13494900 - LKM SAP ERP: all single quotes removed from filter containing
	 * an ODI variable
	 * 
	 * @param filter
	 *            String
	 * @return parsed filter String
	 */
	private String parseOdiFilter(String filterStr) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "+++++++++ parsedOdiFilter() +++++++++ " });
		String mFilterString = filterStr.replace("" + (char) 32, "~~");// replacing blank space with double tilde (~~)

		String BS = "" + (char) 92;
		String SQ = "" + (char) 39;
		String HASH = "" + (char) 35;
		String patternIn = BS + SQ + BS + HASH + "[0-9|A-Za-z|_|-|$|&]*" + BS + SQ;

		String[] sExprList = mFilterString.split("~~");
		StringBuffer parsedFilterStr = new StringBuffer();
		for (int i = 0; i < sExprList.length; i++) {
			StringBuffer token = new StringBuffer(sExprList[i]);
			Pattern pattern = Pattern.compile(patternIn);
			Matcher matcher = pattern.matcher(token);
			boolean success = matcher.find();
			while (success) {
				int startPosition = matcher.start();
				int endPosition = matcher.end();
				token = token.replace(startPosition, startPosition + 1, "");
				token = token.replace(endPosition - 2, endPosition - 1, "");
				try {
					success = matcher.find();
				} catch (Exception e) {

					sapLogger.severe("ODIKM-SAPERP-LKM-10000",
							new Object[] { new Date(), "parseOdiFilter() - Exception:  " + e.getMessage() });
				} // end of catch
			} // end of while loop*/
			parsedFilterStr.append(token);
			if (i < sExprList.length - 1)
				parsedFilterStr.append("" + (char) 32);// adding blank space after each token
		} // end of for loop
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "Final parsedFilterStr: " + parsedFilterStr.toString() });
		return parsedFilterStr.toString();
	}// END of parseOdiFilter() method

}// end of class SAPTableDetail

////////////////////////////////////////////////////////////////////////////////////
// (c) Copyright 2008, Oracle	         		                   			     //
// ALL RIGHTS RESERVED.                                                         //
// This UNPUBLISHED PROPRIETARY software is  subject to the full copyright     //
// notice in the COPYRIGHT file in this directory.                            //
///////////////////////////////////////////////////////////////////////////////

/**
 * @(#)SapJoinOutput.java  1.00 04/13/2009
 *
 * Application : ODI SAP Knowledge Modules
 *
 * Module      : ABAP Program generation API
 *
 * Author(s)   : Oracle,
 *
 * About       :
 *
 * Dependencies: JDK 1.4.2 API (with standard extensions),
 *
 * Update History (Please make entries here in case you make a change.)
 * ____________________________________________________________________
 * Date       Author                       Comments about the change
 * ____________________________________________________________________
 *
 *
 **/

import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

public class SapJoinOutput {

	private OdiSapLogger sapLogger = null;
	private OdiInterfaceMetadataHelper iHelper = null;
	private OdiSapRef odiSAPRef = null;
	private static SapJoinOutput instance = null;// For Singleton

	private String curTableName = "";
	private String prevTableName = "";

	private ArrayList sMappedCols = null;
	// private ArrayList sSAPTablesInfoList = null;

	private List joinTableList = new ArrayList();
	// list of all filter strings
	private ArrayList sFiltersExpr = null;

	public SapJoinOutput(OdiInterfaceMetadataHelper iHelper, OdiSapLogger sapLogger, OdiSapRef odiSAPRef) {
		this.iHelper = iHelper;
		this.sapLogger = sapLogger;
		this.odiSAPRef = odiSAPRef;

		initializeMetaData();
	}

	public static SapJoinOutput getInstance(OdiInterfaceMetadataHelper iHelper, OdiSapLogger sapLogger,OdiSapRef odiSAPRef) {
		if (instance == null) {
			instance = new SapJoinOutput(iHelper, sapLogger, odiSAPRef);// Added for Singleton
		}
		return instance;
	}

	private void initializeMetaData() {

		if (iHelper.sSAPMappedCols != null) {
			sMappedCols = odiSAPRef.sMappedCols;
		}
		// Initialize filters list as passed from odi
		sFiltersExpr = iHelper.sSAPFilters;

	}// end of initializeMetaData();

	/**
	 * Return current table name
	 * 
	 * @return the curTableName
	 */
	public String getCurTableName() {
		return curTableName;
	}

	/**
	 * Set current table name
	 * 
	 * @param curTableName
	 *            the curTableName to set
	 */
	public void setCurTableName(String curTableName) {
		this.curTableName = curTableName;
	}

	/**
	 * Return previous table name
	 * 
	 * @return String as prevTableName
	 */
	public String getPrevTableName() {
		return prevTableName;
	}

	/**
	 * Set previous table name
	 * 
	 * @param prevTableName
	 *            the prevTableName to set
	 */
	public void setPrevTableName(String prevTableName) {
		this.prevTableName = prevTableName;
	}

	/**
	 * This method appends prevTable to the end of the JoinOutput. This happens,
	 * when a new table has been successfully been added.
	 * 
	 * @param prevTable
	 */
	public void append(SourceTable prevTable) {

		if (prevTable != null) {
			joinTableList.add(prevTable);
		}

	}// end of append() method

	/**
	 * This method returns the no. of table in the JoinOutput
	 * 
	 * @return int - number of table
	 */
	public int size() {
		if (joinTableList != null) {
			return joinTableList.size();
		} else {
			return 0;
		}
	}

	/**
	 * This method returns Table name,Descriptive table name,Table Alias
	 * 
	 * @pPattern selected tables pattern string
	 */
	public String getInfo(String pPattern) {
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "+++++++++++ SapJoinOutput.getInfo() ++++++++++++++" });
		// - returns "final<no>", if SapJoinOutput holds more than one table;
		// <no> is the number of tables in SapJoinOutput
		// - returns table.getInfo("RES_NAME") or
		// table.getInfo("POP_TAB_ALIAS"), if SapJoinOutput holds just one table
		String info = "";
		int noOftable = size();
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "SapJoinOutput getInfo - noOftable: " + noOftable });
		Iterator itr = joinTableList.iterator();
		SourceTable sourceTable = null;
		while (itr.hasNext()) {
			sourceTable = new SourceTable();
			sourceTable = (SourceTable) itr.next();
			if (pPattern.equalsIgnoreCase("RES_NAME") && noOftable == 1) {
				info = sourceTable.getResourceName();
			} else if (pPattern.equalsIgnoreCase("POP_TAB_ALIAS") && noOftable == 1) {
				info = sourceTable.getAliasName();
			} else if ((pPattern.equalsIgnoreCase("RES_NAME") || pPattern.equalsIgnoreCase("POP_TAB_ALIAS"))
					&& noOftable > 1) {
				info = "final" + (noOftable - 1);
			} else if (pPattern.equalsIgnoreCase("FINAL_TABLE")) {
				info = "final" + noOftable;
			}
		}
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "",
				new Object[] { "----------- SapJoinOutput.getInfo(): " + info + " --------------" });
		return info;
	}// end getInfo method

	/**
	 * 
	 * @return
	 */
	public String getPreviousTable() {
		String prevTab = "";
		// lklist.getLast();
		if (joinTableList != null) {
			LinkedList tableList = (LinkedList) joinTableList;
			SourceTable sourceTable = (SourceTable) tableList.getLast();
			prevTab = sourceTable.getAliasName().trim();
			/*
			 * Iterator itr = joinTableList.iterator(); SourceTable sourceTable
			 * = null; while(itr.hasNext()) { sourceTable = new SourceTable();
			 * sourceTable = (SourceTable)itr.next(); prevTab =
			 * sourceTable.getAliasName().trim(); }
			 */
		}
		sapLogger.fine("ODIKM-SAPERP-LKM-10000", "", new Object[] { "SapJoinOutput.getPreviousTable(): " + prevTab });
		return prevTab;
	}// end of method getPreviousTable()

}// END of class SapJoinOutput

//Start of SapTable class
/**
 * This class to store SAP table or application component information to display
 * in the tree browser.
 */
public class SapTable {

	private String name;
	private String alias;
	private String type;
	private String id;
	private String metadata;

	/**
	 * Default Constructor
	 */
	public SapTable() {
		// TO DO ...
	}

	public SapTable(String id, String name, String alias, String type, String metadata) {
		this.name = name;
		this.alias = alias;
		this.type = type;
		this.id = id;
		this.metadata = metadata;
	}

	/**
	 * @return the name
	 */
	public String getName() {
		return name;
	}

	/**
	 * @param name
	 *            the name to set
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * @return the alias
	 */
	public String getAlias() {
		return alias;
	}

	/**
	 * @param alias
	 *            the alias to set
	 */
	public void setAlias(String alias) {
		this.alias = alias;
	}

	/**
	 * @return the type
	 */
	public String getType() {
		return type;
	}

	/**
	 * @param type
	 *            the type to set
	 */
	public void setType(String type) {
		this.type = type;
	}

	/**
	 * @return the id
	 */
	public String getId() {
		return id;
	}

	/**
	 * @param id
	 *            the id to set
	 */
	public void setId(String id) {
		this.id = id;
	}

	/**
	 * @return the metadata
	 */
	public String getMetadata() {
		return metadata;
	}

	/**
	 * @param metadata
	 *            the metadata to set
	 */
	public void setMetadata(String metadata) {
		this.metadata = metadata;
	}
}// end of SapTable class

// Start of SapJoin class

import java.util.ArrayList;

/**
 * This class to store SAP join.
 */
public class SapJoin {
	private String primaryTable = null;
	private String joinedTable = null;
	private ArrayList conditions = null;
	private String leftResName = null;
	private String leftPopTabAlias = null;
	private String leftColName = null;
	private String leftCxColName = null;
	private String rightResName = null;
	private String rightPopTabAlias = null;
	private String rightColName = null;
	private String rightCxColName = null;

	/**
	 * @return the primaryTable
	 */
	public String getPrimaryTable() {
		return primaryTable;
	}

	/**
	 * @param primaryTable
	 *            the primaryTable to set
	 */
	public void setPrimaryTable(String primaryTable) {
		this.primaryTable = primaryTable;
	}

	/**
	 * @return the joinedTable
	 */
	public String getJoinedTable() {
		return joinedTable;
	}

	/**
	 * @param joinedTable
	 *            the joinedTable to set
	 */
	public void setJoinedTable(String joinedTable) {
		this.joinedTable = joinedTable;
	}

	/**
	 * @return the conditions
	 */
	public ArrayList getConditions() {
		return conditions;
	}

	/**
	 * @param conditions
	 *            the conditions to set
	 */
	public void setConditions(ArrayList conditions) {
		this.conditions = conditions;
	}

	/**
	 * @return the leftResName
	 */
	public String getLeftResName() {
		return leftResName;
	}

	/**
	 * @param leftResName
	 *            the leftResName to set
	 */
	public void setLeftResName(String leftResName) {
		this.leftResName = leftResName;
	}

	/**
	 * @return the leftPopTabAlias
	 */
	public String getLeftPopTabAlias() {
		return leftPopTabAlias;
	}

	/**
	 * @param leftPopTabAlias
	 *            the leftPopTabAlias to set
	 */
	public void setLeftPopTabAlias(String leftPopTabAlias) {
		this.leftPopTabAlias = leftPopTabAlias;
	}

	/**
	 * @return the leftColName
	 */
	public String getLeftColName() {
		return leftColName;
	}

	/**
	 * @param leftColName
	 *            the leftColName to set
	 */
	public void setLeftColName(String leftColName) {
		this.leftColName = leftColName;
	}

	/**
	 * @return the leftCxColName
	 */
	public String getLeftCxColName() {
		return leftCxColName;
	}

	/**
	 * @param leftCxColName
	 *            the leftCxColName to set
	 */
	public void setLeftCxColName(String leftCxColName) {
		this.leftCxColName = leftCxColName;
	}

	/**
	 * @return the rightResName
	 */
	public String getRightResName() {
		return rightResName;
	}

	/**
	 * @param rightResName
	 *            the rightResName to set
	 */
	public void setRightResName(String rightResName) {
		this.rightResName = rightResName;
	}

	/**
	 * @return the rightPopTabAlias
	 */
	public String getRightPopTabAlias() {
		return rightPopTabAlias;
	}

	/**
	 * @param rightPopTabAlias
	 *            the rightPopTabAlias to set
	 */
	public void setRightPopTabAlias(String rightPopTabAlias) {
		this.rightPopTabAlias = rightPopTabAlias;
	}

	/**
	 * @return the rightColName
	 */
	public String getRightColName() {
		return rightColName;
	}

	/**
	 * @param rightColName
	 *            the rightColName to set
	 */
	public void setRightColName(String rightColName) {
		this.rightColName = rightColName;
	}

	/**
	 * @return the rightCxColName
	 */
	public String getRightCxColName() {
		return rightCxColName;
	}

	/**
	 * @param rightCxColName
	 *            the rightCxColName to set
	 */
	public void setRightCxColName(String rightCxColName) {
		this.rightCxColName = rightCxColName;
	}

}// End of SapJoin class....


//Start of SapMappedField class
/**
 * This class to store SAP Mapped Columns obtained from interface design
 */
public class SapMappedField {
	private String tableName;
	private String resName;// New variable since 27th build
	private String popTabAlias;// New variable since 27th build
	private String colName;
	private String cxColName;// New variable since 27th build
	private String sourceDataType; // New variable since 30th build
	private String exp;
	private String colPos;
	private String order;
	private String colLength;
	private String colScale;

	/**
	 * @return the tableName
	 */
	public String getTableName() {
		return tableName;
	}

	/**
	 * @param tableName
	 *            the tableName to set
	 */
	public void setTableName(String tableName) {
		this.tableName = tableName;
	}

	/**
	 * @return the resName
	 */
	public String getResName() {
		return resName;
	}

	/**
	 * @param resName
	 *            the resName to set
	 */
	public void setResName(String resName) {
		this.resName = resName;
	}

	/**
	 * @return the popTabAlias
	 */
	public String getPopTabAlias() {
		return popTabAlias;
	}

	/**
	 * @param popTabAlias
	 *            the popTabAlias to set
	 */
	public void setPopTabAlias(String popTabAlias) {
		this.popTabAlias = popTabAlias;
	}

	/**
	 * @return the colName
	 */
	public String getColName() {
		return colName;
	}

	/**
	 * @param colName
	 *            the colName to set
	 */
	public void setColName(String colName) {
		this.colName = colName;
	}

	/**
	 * @return the cxColName
	 */
	public String getCxColName() {
		return cxColName;
	}

	/**
	 * @param cxColName
	 *            the cxColName to set
	 */
	public void setCxColName(String cxColName) {
		this.cxColName = cxColName;
	}

	/**
	 * @return the sourceDataType
	 */
	public String getSourceDataType() {
		return sourceDataType;
	}

	/**
	 * @param sourceDataType
	 *            the sourceDataType to set
	 */
	public void setSourceDataType(String sourceDataType) {
		this.sourceDataType = sourceDataType;
	}

	/**
	 * @return the exp
	 */
	public String getExp() {
		return exp;
	}

	/**
	 * @param exp
	 *            the exp to set
	 */
	public void setExp(String exp) {
		this.exp = exp;
	}

	/**
	 * @return the colPos
	 */
	public String getColPos() {
		return colPos;
	}

	/**
	 * @param colPos
	 *            the colPos to set
	 */
	public void setColPos(String colPos) {
		this.colPos = colPos;
	}

	/**
	 * @return the order
	 */
	public String getOrder() {
		return order;
	}

	/**
	 * @param order
	 *            the source column order to set
	 */
	public void setOrder(String order) {
		this.order = order;
	}

	/**
	 * @return the source column length
	 */
	public String getColLength() {
		return colLength;
	}

	/**
	 * @param colLength
	 *            the source column length to set
	 */
	public void setColLength(String colLength) {
		this.colLength = colLength;
	}

	/**
	 * @return the source colScale
	 */
	public String getColScale() {
		return colScale;
	}

	/**
	 * @param colScale
	 *            the source column scale to set
	 */
	public void setColScale(String colScale) {
		this.colScale = colScale;
	}

}// END of SAPMappedField class..


//Start of SourceTable class
/**
 * This class is used to store SAP selected source tables obtained from
 * interface design
 */
public class SourceTable {

	private static SourceTable instance = null;
	private String resourceName = null;
	private String aliasName = null;
	private String tableOrderNo = null;

	public static SourceTable getInstance() {
		if (instance == null) {
			instance = new SourceTable();
		}
		return instance;
	}

	/**
	 * @return the resourceName
	 */
	public String getResourceName() {
		return resourceName;
	}

	/**
	 * @param resourceName
	 *            the resourceName to set
	 */
	public void setResourceName(String resourceName) {
		this.resourceName = resourceName;
	}

	/**
	 * @return the aliasName
	 */
	public String getAliasName() {
		return aliasName;
	}

	/**
	 * @param aliasName
	 *            the aliasName to set
	 */
	public void setAliasName(String aliasName) {
		this.aliasName = aliasName;
	}

	/**
	 * @return the tableOrderNo
	 */
	public String getTableOrderNo() {
		return tableOrderNo;
	}

	/**
	 * @param tableOrderNo
	 *            the tableOrderNo to set
	 */
	public void setTableOrderNo(String tableOrderNo) {
		this.tableOrderNo = tableOrderNo;
	}

	/**
	 * @param instance
	 *            the instance to set
	 */
	public static void setInstance(SourceTable instance) {
		SourceTable.instance = instance;
	}

}// END of class SourceTable


//Start of SapTableInfo
/**
 * Stores SAP Table basic Information
 * 
 * @author
 *
 */
public class SapTableInfo {

	private String tableName;
	private String resourceName;
	private String popTabAlias;

	/**
	 * Default constructor
	 */
	public SapTableInfo() {

	}

	public SapTableInfo(String tableName, String resName, String alias) {
		this.tableName = tableName;
		this.resourceName = resName;
		this.popTabAlias = alias;
	}

	/**
	 * @return the table_name
	 */
	public String getTableName() {
		return tableName;
	}

	/**
	 * @param table_name
	 *            the table_name to set
	 */
	public void setTableName(String tableName) {
		this.tableName = tableName;
	}

	/**
	 * @return the res_name
	 */
	public String getResourseName() {
		return resourceName;
	}

	/**
	 * @param res_name
	 *            the res_name to set
	 */
	public void setResourceName(String resourceName) {
		this.resourceName = resourceName;
	}

	/**
	 * @return the pop_tab_alias
	 */
	public String getPopTabAlias() {
		return popTabAlias;
	}

	/**
	 * @param popTabAlias
	 *            the popTabAlias to set
	 */
	public void setPopTabAlias(String popTabAlias) {
		this.popTabAlias = popTabAlias;
	}

}// END of class SapTableInfo
%>
<?
//**** Start of OdiSapUtil class *********//
/**
 * @(#)OdiSapUtil.java  1.00 10/30/2013
 *
 * Application : ODI SAP Knowledge Modules
 * Module      : SAP ERP Adapter
 * Author(s)   : 
 **/

/**
 * <b>OdiSapUtil</b> class is a data structure of all utilities to be used in
 * RKM
 */
public class OdiSapUtil {

	RuntimeException=null;
	// Check the ODI Release
	public static boolean isOdi10gOr11g(){
		return <%=odiRef.getInfo("ODI_MAJOR_VERSION").contains("ODI_MAJOR_VERSION")%>;
	}

	public static void throwODIException(String message) {
		if (isOdi10gOr11g()) {
			throw new RuntimeException(message);
		} else {
			throw new OdiKMException(message);
		}
	}
}
// end of main class -- OdiSapUtil
?>]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[219396a1-3d40-42c1-a705-003952653faa]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1612]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c38170f0-bce5-42e6-a440-71a8d07ae262]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1590]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d9eafd00-231b-4abe-8a45-f1f042b228b1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1607]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[8d1f8668-e667-49b9-929d-80290bf19a6f]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1595]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ee36ee28-badb-4745-af8c-18248a1edaaa]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1591]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c0d56b1c-99bc-463e-9cdb-ddd9cfeedb75]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1614]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d9525214-f299-4ca8-badf-b28ba1068b04]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1592]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[34ba21ba-fc02-4a3c-a9b3-811232a6b50e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1593]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[cec76a6f-5daf-461a-a1bd-e311ffd74e74]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1608]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[49ddc284-92c4-4338-b87c-9e00e75e0b55]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3103]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1599]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[018ea3aa-1645-4b21-a510-2387dd034911]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1595]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2adde96f-681e-4524-aa16-c40cddec6192]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1599]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6c1ae32d-e3ff-4c82-9161-ea1563f56984]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1590]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d54cbac2-8f7f-4229-b912-83857ecb1eeb]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1607]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[54fbbf55-6aa6-4ca5-a81f-5cfe88c06c32]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1612]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c7a082d9-e7bc-40aa-960a-2fb609e21b05]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1591]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[7c6396c6-a5bb-4e2c-8ea5-b587790a9e27]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1608]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a2164e32-75fd-4146-bdd1-4b241e181f21]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1592]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[580b323e-a016-493f-8374-c85a0a4fd17c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1614]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d5b46423-b012-4cce-9791-fda83a279ab9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3104]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1593]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ecd9993b-ea15-44c5-8756-d51da4188828]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1591]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e77033ff-9f83-4fa9-93df-911214e299c2]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1599]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[89616111-8046-4673-ba0d-826462a6bf5e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1612]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[5f17e998-0e2f-4053-800b-9dc46cc15d4e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1607]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[52ca0658-5450-4158-a207-16c6a640b631]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1590]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[83137fe9-d4b5-48e6-a646-ce026990800b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1593]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[48c5162a-b405-4da2-b9ea-ca9a6e0cb8ee]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1592]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[fb9e080d-ae86-41c4-8f38-12ad707dd353]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1595]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[498ae131-872e-420c-ad02-6cd357a3ff47]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1608]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[0f915fb6-9d77-40ab-8654-cecda43ee2e0]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3107]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1614]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b96d449c-32f9-411e-8af6-909cba15f7e9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1607]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[dadee613-8646-4881-8642-adfabdc05417]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1592]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3821a3b6-e1d5-49d3-88de-e0993a6e003b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1590]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a0d5c4c2-535f-4ada-9dda-114c3c357500]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1599]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9e812881-16c2-4a0c-810c-28873708b190]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1593]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[15f41a5e-0080-45fe-bc49-e7828fc6f170]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1595]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[b8316bb4-0c25-4d3e-8ea7-bad948f6a753]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1612]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a261d002-937c-4f36-8fb9-c87ffc2922d9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1591]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[0571994d-6789-4ee3-abbb-29142c569e41]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1608]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[20fd21d8-96d2-4d68-be12-6f5361e9bb2c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3109]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1614]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[eb66d51b-9613-4014-a99c-e8b545c8123d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1595]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[01414fc1-86ca-4bdc-bc9a-f40baaf9428b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1592]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[dcbabec1-a7c2-41d2-a86b-2afc3b8cafac]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1608]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[7d37ca51-848b-40f6-8055-b2b2e05a726e]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1593]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[e87c88be-14e1-4027-913e-852c64cf3b5c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1591]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[d28c2ae8-1192-43ce-b8f7-319adfff0293]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1599]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[52389cc4-cd1c-4001-a0b4-f8eeb982150c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1607]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[75ff25a8-47d8-4d64-8d45-3f5449da712c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1590]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c6ef2066-24c0-45ef-b3ca-6787b2e513c9]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1614]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ee464a66-cec2-4e4b-8046-dec085bd6afc]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3110]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1612]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[fd4a060e-cf83-4b45-8001-5fcc4987ccc4]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3114]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1593]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[aad98d8a-a173-4a6d-91f9-b908d48fc64c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3116]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1599]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[eb4ed5b2-288c-461d-acdd-e103ef092083]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3118]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1599]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[678fcad4-7462-4df0-a1d4-38c057587550]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3121]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1590]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c83f194a-50c4-4ccb-bdce-750fe35b50c0]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1599]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[6e51ecc9-ddfd-475b-888d-e432ab5a6798]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1595]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[75184d73-11ea-47ed-92f6-6bb20e7dd2ed]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1607]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[2495d8f2-cd94-4c2d-9cdc-34ffb8c4d13c]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1614]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[a84f4540-42bf-4a13-8c46-995df7987256]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1612]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[75c93772-b575-4e83-bc9f-bf8b4f281015]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1591]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[cf3ea6c7-fe6e-430e-b87d-efd905986ab1]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1593]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[8542769f-1c66-415f-85dd-11059cb63942]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1592]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[5b5ff7a5-8ef7-4cea-9721-509863393e50]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1590]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[c4ebe0a7-d63c-4cae-8e6d-b93806e8cb83]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3122]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1608]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[31dc4664-55cd-41ce-ade7-e3c552e3b905]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1593]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[68269923-d33e-42a9-9db3-06c501ecd631]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1612]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[ddca06a1-455b-4b08-b8e6-c3ee541c5400]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1590]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[5511636c-6c5a-4d1f-9ad4-ddea612f3826]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1607]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[bab32048-c68a-427e-b48e-ea70244da54d]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1595]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[30a50a4d-08ff-4f4e-9e3a-22daab69d45a]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1591]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[0374bcda-bda2-486f-858a-b21aee63abf0]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1614]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[3ad3ccc4-65bd-4365-a0b3-edde2eacbd7b]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1592]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[71cb85ca-d4bc-48e4-a4dd-515a7387de83]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1608]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpLineTrtUe">
		<Field name="GlobalId" type="java.lang.String"><![CDATA[9dd943de-b4d0-4737-9cea-f91943348a96]]></Field>
	<Field name="ILineTrt" type="com.sunopsis.sql.DbInt"><![CDATA[3123]]></Field>
	<Field name="ITrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
	<Field name="IUserExit" type="com.sunopsis.sql.DbInt"><![CDATA[1599]]></Field>
	<Field name="OrdTrt" type="com.sunopsis.sql.DbInt"><![CDATA[null]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_PROJECT.1]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[236fd394-6f34-48ff-9081-6e4dd9bea0f8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5575]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4c4d0438-3c6e-4e73-85c7-9d8871e77a04]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TRT.280]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[95a44a78-4131-4216-835f-33e9813af5f4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR)]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5576]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1d1d18bd-0431-421d-90eb-93e79239dfaf]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5577]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[402f3974-7e4e-49ec-b546-401a4fd68bf6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.111]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5578]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0996b578-8dca-4b75-a19e-910d0b380de8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5579]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[24c40c2f-c0d3-4982-988c-7b63f8ef2e74]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5580]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0018bdde-0f9f-411e-96b4-0a9476378ff8]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5581]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[df183060-fa95-4d96-9f4b-04ba200d521a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5582]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[da475985-06d1-4715-abcc-aab437652654]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5583]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e2b4cfdb-32ba-44f9-8010-cad2a52bd96f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5584]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1d8539b4-8328-412f-8dfc-03cdb6be38c2]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5585]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5029b5bd-7acd-4aa7-bdd9-97d5ffce1935]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5586]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[de52299a-ee05-4fb2-a16a-6296dc7eb35e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5587]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e7e2a322-9ae7-45b6-b7a7-0783c28daebd]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5588]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[91fd6b7b-a23e-4bf3-a0b1-ff7cef215983]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5589]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[679213bf-a81c-4b40-9545-31dcd6e75685]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5590]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[9b65213d-db73-4997-90a7-0b9c1cc36f11]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5591]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[82f0fbdb-0779-47d9-b487-fc39c6296286]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5592]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[723fcbd2-36df-4c5a-8467-f557f99d5b0a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5593]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[39c500a3-9e6b-46e2-9d5e-63eb5b53c7fa]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5594]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[dcbf42f3-e242-45b9-9ad3-fe6a1d1fb1e5]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5595]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[31ac6c34-3695-4027-89be-7c039fa04c06]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5596]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ac15c45b-6005-4a1c-8580-f7d3d8f791d3]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5597]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d99ce268-7a88-4dfe-b5f4-04d3d686d3c0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5598]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[77b6ff32-9374-4330-b735-95042c193302]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5600]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[358ba9ab-3e4d-4cf9-a3f7-bd855b00f8da]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5599]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e7c0a2ba-3d7d-49b9-af6c-9417b5aec833]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5601]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8009813b-78b4-4542-a55c-015fb1991e7d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5602]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c5b71831-b9fc-4896-92a7-d61fa71472b0]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5603]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4368dcc7-c113-4d60-9473-c34883b24e07]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5604]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[c56c4151-3d92-4bdb-9a7f-7b893f2cf10d]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5605]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1fca687c-a685-40ff-b387-2d61f63a0e19]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5606]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[47fd9018-3d6d-42d1-94b4-fcb5ed45a27e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5607]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d7d5b6e3-03f8-4020-b4ca-8600e9ee477a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5608]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[159611ea-2883-4802-b7c3-c31af542cf0b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.103]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5609]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[bd30730a-48bc-4860-954d-8c44db072e39]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5610]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[96571c77-b574-49ac-9079-eb830f02fb3b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_ORIGTXT.102]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String">null</Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5611]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[0caa494d-d889-4038-816b-ca7d2b3cc0a6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5612]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[da66bf74-f1e8-4b20-bab4-e106988596e9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5613]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fc39a699-33e3-4c89-8d5b-a0ac5361ca31]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5614]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ec5a0b41-eb03-4271-adf5-07adcd51de16]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5615]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[555a6eb1-73c8-4ab3-a857-dff9d573b034]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5616]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[70b55e61-606f-4353-94bc-4c689057b9d2]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5617]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[aed60bf3-fd87-449e-9620-8d530d9cca1f]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5618]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[b30e2f99-c180-4212-b474-dec790aec14c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5619]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f9a341d9-0097-45f3-8d77-8457e9be8f6b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5620]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f1efbf44-f7f9-4ebf-9de2-2a20ded92846]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5621]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[09c80d9e-9efd-45ac-97be-6dd36749f9e4]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5622]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[7b90df99-3f0a-4f11-bffd-35f55db467f5]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5623]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d26ee81e-e621-46ad-acaa-13ea35a68e3a]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5624]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[de3182d1-2fa8-432b-8329-32022b92fec7]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5625]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[13345d23-f387-4fbc-a687-beab877570a7]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5626]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[85f95a2a-ff52-434c-a9d3-64771905f2c1]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_TXTHEADER.5627]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4505d551-6274-4dad-be58-9e53658e0a15]]></Field>
 <Field name="RefObjFQName" type="java.lang.String">null</Field>
 <Field name="RefObjFQType" type="java.lang.String">null</Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String">null</Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1612]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[a65f5f60-9ff9-4884-8268-f7e6e51d8e5e]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).FTP_PASSIVE_MODE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3103]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[58c8f394-20bb-4028-bb1b-7efda7579d29]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Initialize]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.10]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1590]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[8514c953-3a53-4337-9037-71500fa2e1f7]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).VALIDATE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.8]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1607]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[1450105f-6da3-4ff5-9420-cb17894364e3]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).DATAFILE_PER_SESSION]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1595]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[d8f4fe01-b6c6-4751-ba74-6cbd4e51e0c6]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).BACKGROUND_PROCESSING]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.21]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1591]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f21af99d-e3f5-4e71-ac39-2adff8fcd386]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).UPLOAD_ABAP_CODE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1614]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f166034d-8cb5-4ae0-82ff-2a4cf10d0ae9]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).SSH_COMPRESSION]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.15]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1592]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[bef7fdd7-b7c6-408d-b8d6-fd901790f53b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).MANUAL_ABAP_CODE_UPLOAD]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.23]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1593]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[5e1c4a02-13dd-4802-98a8-a86e4f674174]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).EXECUTE_ABAP_CODE]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.17]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1608]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[beaf6e7d-622e-451e-830e-c73739bf65fa]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).CHECK_DATA_FOR_DELIMITERS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.25]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_USEREXIT.1599]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[669e205f-1f72-4f11-af27-1d10c4b89d8b]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).DELETE_TEMPORARY_OBJECTS]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_USEREXIT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.24]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3104]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[821f3fe8-7623-488e-be6e-e0758a6f9838]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Initialize (KM specific)]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.24]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3107]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[e580f157-a3f6-47dc-862e-d25c39ac8dbe]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Load Data to Staging]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.20]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3109]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[55fe2347-302e-40e2-81e0-f841be09be89]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Extract Data]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.12]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3110]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[ec04411c-3752-4f67-b06f-3a8ba372db21]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Retrieve data to ODI Agent]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.26]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3114]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[fa6a9470-ef8a-4fad-8342-8c1c5339cfb2]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Delete FTP Files]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.16]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3116]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[647a88b2-b70b-439a-a0df-6bc35be60c00]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Delete Temporary Files]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.22]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3118]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[f11c5d54-6408-4a47-bb19-e2add17c6c62]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Drop Work Table]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.15]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3121]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[67c6a19f-e7b4-4a68-b79c-47ae7cd24c1c]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Validate]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.8]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3122]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[4f4a1522-1271-4ca6-893d-913afe6b0030]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Get FTP Details]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.15]]></Field>
</Object>
<Object class="com.sunopsis.dwg.dbobj.SnpFKXRef">
		<Field name="RefKey" type="java.lang.String"><![CDATA[SNP_LINETRT.3123]]></Field>
	<Field name="RefObjGlobalId" type="java.lang.String"><![CDATA[82a8702b-c8f1-4131-aad4-813965ba7482]]></Field>
 <Field name="RefObjFQName" type="java.lang.String"><![CDATA[DEMO.LKM SAP ERP to Oracle (SQLLDR).Create Java Classes]]></Field>
 <Field name="RefObjFQType" type="java.lang.String"><![CDATA[SNP_PROJECT.SNP_TRT.SNP_LINETRT]]></Field>
 <Field name="RefObjFQNameLengths" type="java.lang.String"><![CDATA[4.30.19]]></Field>
</Object>
<Object class="com.sunopsis.dwg.DwgExportSummary">
		<Field name="ExpTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="InstObjNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="JoinNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyColNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="KeyNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="LinkDiagNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MorigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="MtxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OrigTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[53]]></Field>
	<Field name="OtherObjectsNb" type="com.sunopsis.sql.DbInt"><![CDATA[126]]></Field>
	<Field name="PlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="StepNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="TxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[53]]></Field>
	<Field name="UeOrigNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="UeUsedNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="VarPlanAgentNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="ScenTxtNb" type="com.sunopsis.sql.DbInt"><![CDATA[0]]></Field>
	<Field name="OdiVersion" type="java.lang.String"><![CDATA[12.2.1]]></Field>
	<Field name="OriginRepositoryID" type="com.sunopsis.sql.DbInt"><![CDATA[11]]></Field>
	<Field name="RepositoryVersion" type="java.lang.String"><![CDATA[05.02.02.09]]></Field>
</Object>
</SunopsisExport>
